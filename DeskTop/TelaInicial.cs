using Classes;
using DynamicFilter;
using GridScheduleSample;
using Negocio;
using Suportte.Cadastros;
using Syncfusion.GridHelperClasses;
using Syncfusion.Grouping;
using Syncfusion.Schedule;
using Syncfusion.Windows.Forms;
using Syncfusion.Windows.Forms.Chart;
using Syncfusion.Windows.Forms.Grid;
using Syncfusion.Windows.Forms.Grid.Grouping;
using Syncfusion.Windows.Forms.Schedule;
using Syncfusion.Windows.Forms.Tools;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Xml;
using System.Xml.Serialization;
using Excel = Microsoft.Office.Interop.Excel;

namespace Suportte
{
    public partial class TelaInicial : Form
    {
        public TelaInicial()
        {
            InitializeComponent();

            if (Environment.MachineName.ToUpper().Contains("CORPTS") || Environment.MachineName.ToUpper().Contains("CORPRDP"))
            {
                if (!Directory.Exists(Path.GetDirectoryName(Application.ExecutablePath) + @"\xml"))
                    Directory.CreateDirectory(Path.GetDirectoryName(Application.ExecutablePath) + @"\xml");
            }
            else
            {
                if (!Directory.Exists(Publicas._caminhoPortal))
                    Directory.CreateDirectory(Publicas._caminhoPortal);
            }

            _dataTemas = DateTime.Now.Date; //new DateTime(2020, 05, 9);// DateTime.Now.Date;
            string linha = "";
            string linhaConexao = "";
            _temasComemorativos = true;
            Publicas._TemaBlack = false;
            backGroundOriginal = ApostasBolaoGrid.BackColor;

            #region temas

            try
            {
                string Arquivo = "";
                string ArquivoConexao = "PortalNiffConexao" + ".ini";
                StreamReader writer ;

                if (Environment.MachineName.ToUpper().Contains("CORPTS") || Environment.MachineName.ToUpper().Contains("CORPRDP"))
                {
                    Arquivo = "PortalNiff_" + Environment.UserName + ".ini";
                    //MessageBox.Show("busca do local " + Path.GetDirectoryName(Application.ExecutablePath) + @"\" + Arquivo);
                    writer = new StreamReader(Path.GetDirectoryName(Application.ExecutablePath) + @"\" + Arquivo);
                }
                else
                {
                    Arquivo = "PortalNiff.ini";
                    writer = new StreamReader(Publicas._caminhoPortal + Arquivo);
                }

                linha = writer.ReadLine();
                linhaImagem = writer.ReadLine();
                writer.Close();


                if (Environment.MachineName.ToUpper().Contains("CORPTS") || Environment.MachineName.ToUpper().Contains("CORPRDP"))                    
                    writer = new StreamReader(Path.GetDirectoryName(Application.ExecutablePath) + ArquivoConexao);
                else
                {
                    if (Path.GetDirectoryName(Application.ExecutablePath).ToUpper().StartsWith("G:"))
                        writer = new StreamReader(Path.GetDirectoryName(Application.ExecutablePath) + ArquivoConexao);
                    else
                        writer = new StreamReader(Publicas._caminhoPortal + ArquivoConexao);
                }
                    linhaConexao = writer.ReadLine();
                writer.Close();

                //MessageBox.Show(Path.GetDirectoryName(Application.ExecutablePath) + ArquivoConexao);
                if (linhaConexao != "")
                    Publicas._conexaoString = linhaConexao;

            }
            catch
            {
                Publicas._TemaBlack = false;
                _temasComemorativos = true;
                linhaImagem = "";
            }

            pos = new Random().Next(0, 3);

            checkBoxAdv5.Visible = false;
            checkBoxAdv5.Checked = false;
            
            if (Publicas.Encrypta("Tema EscuroCom Temas Comemorativos", Publicas.CryptProvider.DES) == linha)
            {
                checkBoxAdv5.Visible = true;
                checkBoxAdv5.Checked = false;
                Publicas._TemaBlack = true;
                _temasComemorativos = true;
                Publicas._fonte = Publicas.padraoEscuroPreto_FonteEscura;
                Publicas._fundo = Publicas.padraoEscuroPreto_Fundo; ;
                Publicas._bordaSaida = Publicas.padraoEscuroPreto_BordaSaida;
                Publicas._bordaEntrada = Publicas.padraoEscuroPreto_BordaEntrada;
                Publicas._tabPageAtiva = Publicas.padraoEscuroPreto_BordaEntrada;
                Publicas._botaoFocado = Publicas.padraoEscuroPreto_BotaoFocado;
                Publicas._botao = Publicas.padraoEscuroPreto_Botao;
                Publicas._fonteBotao = Publicas.padraoEscuroPreto_FonteBotao;
                Publicas._fonteBotaoFocado = Publicas.padraoEscuroPreto_FonteBotaoFocado;
                Publicas._panelTitulo = Publicas.padraoEscuroPreto_PanelTitulo;
                Publicas._panelTituloFoco = Publicas.padraoEscuroPreto_PanelTituloFoco;
                Publicas._fonteMenuSelecionado = Publicas.padraoEscuroPreto_FonteMenuSelecionado;
                Publicas._alterouSkin = true;
                _imagemUsada = @"Imagens\" + _fundoBlackNome[pos];
                FundoPictureBox.ImageLocation = _imagemUsada;
                _corFundoMenu = Publicas._panelTitulo;
                _corFundoDivisao = Publicas._botaoFocado;
                TemaClaroSelecionadoLabel.Visible = false;
                TemaBlackSelecionadoLabel.Visible = true;
            }
            else
            if (Publicas.Encrypta("Tema EscuroSem Temas Comemorativos", Publicas.CryptProvider.DES) == linha)
            {
                checkBoxAdv5.Visible = true;
                checkBoxAdv5.Checked = false;
                Publicas._TemaBlack = true;
                Publicas._fonte = Publicas.padraoEscuroPreto_FonteEscura;
                Publicas._fundo = Publicas.padraoEscuroPreto_Fundo; ;
                Publicas._bordaSaida = Publicas.padraoEscuroPreto_BordaSaida;
                Publicas._bordaEntrada = Publicas.padraoEscuroPreto_BordaEntrada;
                Publicas._tabPageAtiva = Publicas.padraoEscuroPreto_BordaEntrada;
                Publicas._botaoFocado = Publicas.padraoEscuroPreto_BotaoFocado;
                Publicas._botao = Publicas.padraoEscuroPreto_Botao;
                Publicas._fonteBotao = Publicas.padraoEscuroPreto_FonteBotao;
                Publicas._fonteBotaoFocado = Publicas.padraoEscuroPreto_FonteBotaoFocado;
                Publicas._panelTitulo = Publicas.padraoEscuroPreto_PanelTitulo;
                Publicas._panelTituloFoco = Publicas.padraoEscuroPreto_PanelTituloFoco;
                Publicas._fonteMenuSelecionado = Publicas.padraoEscuroPreto_FonteMenuSelecionado;
                Publicas._alterouSkin = true;
                _imagemUsada = @"Imagens\" + _fundoBlackNome[pos]; //@"Imagens\FundoBlackComeia.png";
                FundoPictureBox.ImageLocation = _imagemUsada;
                _temasComemorativos = false;
                _corFundoMenu = Publicas._panelTitulo;
                _corFundoDivisao = Publicas._botaoFocado;
                TemaClaroSelecionadoLabel.Visible = false;
                TemaBlackSelecionadoLabel.Visible = true;
            }
            else
            if (Publicas.Encrypta("Tema ClaroSem Temas Comemorativos", Publicas.CryptProvider.DES) == linha)
            {
                checkBoxAdv5.Visible = false;
                checkBoxAdv5.Checked = false;
                Publicas._TemaBlack = false;
                _temasComemorativos = false;
                Publicas._fonte = Publicas.padraoNIFFClaro_FonteEscura;
                Publicas._fundo = Publicas.padraoNiffClaro_Fundo;
                Publicas._bordaSaida = Publicas.padraoNIFFClaro_BordaSaida;
                Publicas._bordaEntrada = Publicas.padraoNIFFClaro_BordaEntrada;
                Publicas._tabPageAtiva = Publicas.padraoNIFFClaro_BordaEntrada;
                Publicas._botaoFocado = Publicas.padraoNIFFClaro_BotaoFocado;
                Publicas._botao = Publicas.padraoNIFFClaro_Botao;
                Publicas._fonteBotao = Publicas.padraoNIFFClaro_FonteBotao;
                Publicas._fonteBotaoFocado = Publicas.padraoNIFFClaro_FonteBotaoFocado;
                Publicas._panelTitulo = Publicas.padraoNIFFClaro_PanelTitulo;
                Publicas._panelTituloFoco = Publicas.padraoNIFFClaro_PanelTituloFoco;
                Publicas._alterouSkin = false; 
                _imagemUsada = _imagemUsada = @"Imagens\FundoAzul.png";
                FundoPictureBox.ImageLocation = _imagemUsada;
                _corFundoMenu = System.Drawing.Color.FromArgb(2, 91, 149); //System.Drawing.Color.FromArgb(128, 131, 143);
                _corFundoDivisao = System.Drawing.Color.FromArgb(100,151,178);// era Color.Silver;
                _corMenuSelecionado = _corFundoDivisao;
                TemaClaroSelecionadoLabel.Visible = true;
                TemaBlackSelecionadoLabel.Visible = false;
            }
            else
            if (Publicas.Encrypta("Tema ClaroCom Temas Comemorativos", Publicas.CryptProvider.DES) == linha)
            {
                checkBoxAdv5.Visible = false;
                checkBoxAdv5.Checked = false;
                Publicas._TemaBlack = false;
                _temasComemorativos = true;
                Publicas._fonte = Publicas.padraoNIFFClaro_FonteEscura;
                Publicas._fundo = Publicas.padraoNiffClaro_Fundo;
                Publicas._bordaSaida = Publicas.padraoNIFFClaro_BordaSaida;
                Publicas._bordaEntrada = Publicas.padraoNIFFClaro_BordaEntrada;
                Publicas._tabPageAtiva = Publicas.padraoNIFFClaro_BordaEntrada;
                Publicas._botaoFocado = Publicas.padraoNIFFClaro_BotaoFocado;
                Publicas._botao = Publicas.padraoNIFFClaro_Botao;
                Publicas._fonteBotao = Publicas.padraoNIFFClaro_FonteBotao;
                Publicas._fonteBotaoFocado = Publicas.padraoNIFFClaro_FonteBotaoFocado;
                Publicas._panelTitulo = Publicas.padraoNIFFClaro_PanelTitulo;
                Publicas._panelTituloFoco = Publicas.padraoNIFFClaro_PanelTituloFoco;
                Publicas._alterouSkin = false;
                _corFundoMenu = System.Drawing.Color.FromArgb(2, 91, 149); //System.Drawing.Color.FromArgb(128, 131, 143);
                _corFundoDivisao = System.Drawing.Color.FromArgb(100, 151, 178);// era Color.Silver;
                _corMenuSelecionado = _corFundoDivisao;
                _imagemUsada = @"Imagens\FundoAzul.png";
                FundoPictureBox.ImageLocation = _imagemUsada;
                TemaClaroSelecionadoLabel.Visible = true;
                TemaBlackSelecionadoLabel.Visible = false;
            }

            checkBoxAdv5.ForeColor = Publicas._fonte;

            if (!Publicas._TemaBlack && _temasComemorativos)
            {
                if (_dataTemas >= Publicas._dataInicioTeste &&
                    _dataTemas <= Publicas._dataFimTeste)
                {
                    Publicas._fonte = Publicas.padraoNatal_FonteEscura;
                    Publicas._fundo = Publicas.padraoNatal_Fundo;
                    Publicas._bordaSaida = Publicas.padraoNatal_BordaSaida;
                    Publicas._bordaEntrada = Publicas.padraoNatal_BordaEntrada;
                    Publicas._botaoFocado = Publicas.padraoNatal_BotaoFocado;
                    Publicas._botao = Publicas.padraoNatalo_Botao;
                    Publicas._fonteBotao = Publicas.padraoNatal_FonteBotao;
                    Publicas._fonteBotaoFocado = Publicas.padraoNatal_FonteBotaoFocado;
                    Publicas._tabPageAtiva = Publicas.padraoNatal_BordaEntrada;
                    Publicas._panelTitulo = Publicas.padraoNatal_PanelTitulo;
                    Publicas._panelTituloFoco = Publicas.padraoNatal_PanelTituloFoco;
                    _corFundoMenu = Publicas._panelTitulo;
                    _corFundoDivisao = Publicas._botaoFocado;
                    //_corMenuSelecionado = _corFundoDivisao;

                    Publicas._alterouSkin = true;
                    Publicas.AplicarSkin(this);
                }
                else
                {
                    Publicas._alterouSkin = false;

                    Publicas._fonte = Publicas.padraoNIFFClaro_FonteEscura;
                    Publicas._fundo = Publicas.padraoNiffClaro_Fundo;
                    Publicas._bordaSaida = Publicas.padraoNIFFClaro_BordaSaida;
                    Publicas._bordaEntrada = Publicas.padraoNIFFClaro_BordaEntrada;
                    Publicas._tabPageAtiva = Publicas.padraoNIFFClaro_BordaEntrada;
                    Publicas._botaoFocado = Publicas.padraoNIFFClaro_BotaoFocado;
                    Publicas._botao = Publicas.padraoNIFFClaro_Botao;
                    Publicas._fonteBotao = Publicas.padraoNIFFClaro_FonteBotao;
                    Publicas._fonteBotaoFocado = Publicas.padraoNIFFClaro_FonteBotaoFocado;
                    Publicas._panelTitulo = Publicas.padraoNIFFClaro_PanelTitulo;
                    Publicas._panelTituloFoco = Publicas.padraoNIFFClaro_PanelTituloFoco;

                    _corFundoMenu = System.Drawing.Color.FromArgb(2, 91, 149); //System.Drawing.Color.FromArgb(128, 131, 143);
                    _corFundoDivisao = System.Drawing.Color.FromArgb(100, 151, 178);// era Color.Silver;
                    _corMenuSelecionado = _corFundoDivisao;

                    _imagemUsada = @"Imagens\FundoAzul.png";
                    FundoPictureBox.ImageLocation = _imagemUsada; 

                    if (_dataTemas >= Publicas._dataInicioPeriodoNatal &&
                        _dataTemas <= Publicas._dataFimPeriodoNatal)
                    {
                        _imagemUsada = @"Imagens\FundoAzulNatal.png";
                        FundoPictureBox.ImageLocation = _imagemUsada;
                    }
                    else
                    {
                        if (_dataTemas >= Publicas._dataInicioPeriodoHalloween &&
                        _dataTemas <= Publicas._dataFimPeriodoHalloween)
                        {
                            _imagemUsada = @"Imagens\FundoAzulHalloween.png";
                            FundoPictureBox.ImageLocation = _imagemUsada;
                        }
                        else
                        {
                            if ((_dataTemas >= Publicas._dataInicioCopa &&
                                 _dataTemas <= Publicas._dataFimCopa))
                            {
                                _imagemUsada = @"Imagens\FundoAzul.png";
                                FundoPictureBox.ImageLocation = _imagemUsada;
                            }
                            else
                            {
                                if ((_dataTemas >= Publicas._dataInicioCarnaval &&
                                     _dataTemas <= Publicas._dataFimCarnaval))
                                {
                                    _imagemUsada = @"Imagens\FundoAzulCarnaval.png";
                                    FundoPictureBox.ImageLocation = _imagemUsada;
                                }
                                else
                                {
                                    if ((_dataTemas >= Publicas._dataInicioPascoa &&
                                         _dataTemas <= Publicas._dataFimPascoa))
                                    {
                                        _imagemUsada = @"Imagens\FundoAzulPascoa.png";
                                        FundoPictureBox.ImageLocation = _imagemUsada;
                                    }
                                    else
                                    if ((_dataTemas >= Publicas._dataInicioCrianca &&
                                         _dataTemas <= Publicas._dataFimCrianca))
                                    {
                                        _imagemUsada = @"Imagens\FundoAzulCriancas.png";
                                        FundoPictureBox.ImageLocation = _imagemUsada;
                                    }
                                    else
                                    if ((_dataTemas >= Publicas._dataInicioAnoNovo &&
                                     _dataTemas <= Publicas._dataFimAnoNovo))
                                    {
                                        _imagemUsada = @"Imagens\FundoAzulAnoNovo.png";
                                        FundoPictureBox.ImageLocation = _imagemUsada;
                                    }
                                    else
                                    if ((_dataTemas >= Publicas._dataInicioMaes &&
                                     _dataTemas <= Publicas._dataFimMaes))
                                    {
                                        _imagemUsada = @"Imagens\FundoAzulMaes.png";
                                        FundoPictureBox.ImageLocation = _imagemUsada;
                                    }
                                    else
                                    if ((_dataTemas >= Publicas._dataInicioPais &&
                                     _dataTemas <= Publicas._dataFimPais))
                                    {
                                        _imagemUsada = @"Imagens\FundoAzulPais.png";
                                        FundoPictureBox.ImageLocation = _imagemUsada;
                                    }
                                }
                            }
                        }
                    }
                }
            }
            else
            {
                if (linhaImagem != "" && linhaImagem != null)
                    _imagemUsada = linhaImagem;

                FundoPictureBox.ImageLocation = _imagemUsada;

                if (_temasComemorativos)
                {
                    if (_dataTemas >= Publicas._dataInicioPeriodoNatal &&
                        _dataTemas <= Publicas._dataFimPeriodoNatal)
                    {
                        _imagemUsada = _imagemUsada.Replace(".jpg", "") + "Natal.png";
                        FundoPictureBox.ImageLocation = _imagemUsada;
                    }
                    else
                    {
                        if (_dataTemas >= Publicas._dataInicioPeriodoHalloween &&
                        _dataTemas <= Publicas._dataFimPeriodoHalloween)
                        {
                            _imagemUsada = _imagemUsada.Replace(".jpg", "") + "Halloween.png";
                            FundoPictureBox.ImageLocation = _imagemUsada;
                        }
                        else
                        {
                            if ((_dataTemas >= Publicas._dataInicioCopa &&
                                 _dataTemas <= Publicas._dataFimCopa))
                            {
                                _imagemUsada = @"Imagens\" + _fundoBlackNome[pos];
                                FundoPictureBox.ImageLocation = _imagemUsada;
                            }
                            else
                            {
                                if ((_dataTemas >= Publicas._dataInicioCarnaval &&
                                     _dataTemas <= Publicas._dataFimCarnaval))
                                {
                                    _imagemUsada = _imagemUsada.Replace(".jpg", "") + "Carnaval.png";
                                    FundoPictureBox.ImageLocation = _imagemUsada;
                                }
                                else
                                {
                                    if ((_dataTemas >= Publicas._dataInicioPascoa &&
                                         _dataTemas <= Publicas._dataFimPascoa))
                                    {
                                        _imagemUsada = _imagemUsada.Replace(".jpg", "") + "Pascoa.png";
                                        FundoPictureBox.ImageLocation = _imagemUsada;
                                    }
                                    else
                                    if ((_dataTemas >= Publicas._dataInicioCrianca &&
                                         _dataTemas <= Publicas._dataFimCrianca))
                                    {
                                        _imagemUsada = _imagemUsada.Replace(".jpg", "") + "Criancas.png";
                                        FundoPictureBox.ImageLocation = _imagemUsada;
                                    }
                                    else
                                    if ((_dataTemas >= Publicas._dataInicioAnoNovo &&
                                         _dataTemas <= Publicas._dataFimAnoNovo))
                                    {
                                        _imagemUsada = _imagemUsada.Replace(".jpg", "") + "AnoNovo.png";
                                        FundoPictureBox.ImageLocation = _imagemUsada;
                                    }
                                    else
                                    if ((_dataTemas >= Publicas._dataInicioMaes &&
                                         _dataTemas <= Publicas._dataFimMaes))
                                    {
                                        _imagemUsada = _imagemUsada.Replace(".jpg", "") + "Maes.png";
                                        FundoPictureBox.ImageLocation = _imagemUsada;
                                    }
                                    else
                                    if ((_dataTemas >= Publicas._dataInicioPais &&
                                         _dataTemas <= Publicas._dataFimPais))
                                    {
                                        _imagemUsada = _imagemUsada.Replace(".jpg", "") + "Pais.png";
                                        FundoPictureBox.ImageLocation = _imagemUsada;
                                    }
                                }
                            }
                        }
                    }
                }
            }

            if (Publicas._alterouSkin)
            {
                foreach (Control componenteDaTela in this.Controls)
                {
                    Publicas.AplicarSkin(componenteDaTela);
                }
                if (Publicas._TemaBlack)
                {
                    pictureBox129.BackColor = System.Drawing.Color.FromArgb(115, 117, 128);
                    pictureBox2.BackColor = System.Drawing.Color.FromArgb(115, 117, 128);
                    pictureBox4.BackColor = System.Drawing.Color.FromArgb(115, 117, 128);

                    LivrosResenhaGrid.GridOfficeScrollBars = OfficeScrollBars.Office2010;
                    LivrosResenhaGrid.ColorStyles = ColorStyles.Office2010Black;
                    LivrosResenhaGrid.GridVisualStyles = GridVisualStyles.Office2016Black;
                    LivrosResenhaGrid.BackColor = Publicas._panelTitulo;
                    ApostasBolaoGrid.GridOfficeScrollBars = OfficeScrollBars.Office2010;
                    ApostasBolaoGrid.ColorStyles = ColorStyles.Office2010Black;
                    ApostasBolaoGrid.GridVisualStyles = GridVisualStyles.Office2016Black;
                    ApostasBolaoGrid.BackColor = Publicas._panelTitulo;
                    FinalistasGrid.GridOfficeScrollBars = OfficeScrollBars.Office2010;
                    FinalistasGrid.ColorStyles = ColorStyles.Office2010Black;
                    FinalistasGrid.GridVisualStyles = GridVisualStyles.Office2016Black;
                    FinalistasGrid.BackColor = Publicas._panelTitulo;

                    RamaisGrid.GridOfficeScrollBars = OfficeScrollBars.Office2010;
                    RamaisGrid.ColorStyles = ColorStyles.Office2010Black;
                    RamaisGrid.GridVisualStyles = GridVisualStyles.Office2016Black;
                    RamaisGrid.BackColor = Publicas._panelTitulo;

                    AvaliacaoEmAndamentoGrid.GridOfficeScrollBars = OfficeScrollBars.Office2010;
                    AvaliacaoEmAndamentoGrid.ColorStyles = ColorStyles.Office2010Black;
                    AvaliacaoEmAndamentoGrid.GridVisualStyles = GridVisualStyles.Office2016Black;
                    AvaliacaoEmAndamentoGrid.BackColor = Publicas._panelTitulo;
                    AvaliacaoFinalizadasGrid.GridOfficeScrollBars = OfficeScrollBars.Office2010;
                    AvaliacaoFinalizadasGrid.ColorStyles = ColorStyles.Office2010Black;
                    AvaliacaoFinalizadasGrid.GridVisualStyles = GridVisualStyles.Office2016Black;
                    AvaliacaoFinalizadasGrid.BackColor = Publicas._panelTitulo;
                    AvaliacaoNaoIniciadaGrid.GridOfficeScrollBars = OfficeScrollBars.Office2010;
                    AvaliacaoNaoIniciadaGrid.ColorStyles = ColorStyles.Office2010Black;
                    AvaliacaoNaoIniciadaGrid.GridVisualStyles = GridVisualStyles.Office2016Black;
                    AvaliacaoNaoIniciadaGrid.BackColor = Publicas._panelTitulo;
                    rankingGridGroupingControl.GridOfficeScrollBars = OfficeScrollBars.Office2010;
                    rankingGridGroupingControl.ColorStyles = ColorStyles.Office2010Black;
                    rankingGridGroupingControl.GridVisualStyles = GridVisualStyles.Office2016Black;
                    rankingGridGroupingControl.BackColor = Publicas._panelTitulo;
                    TipoAvaliacaoLabel.ForeColor = Publicas._fonte;
                    ImagemTipoAvaliacaoLabel.ForeColor = Publicas._fonte;
                    ImagemReferenciaAvaliacaoLabel.ForeColor = Publicas._fonte;
                    ReferenciaAvaliacaoLabel.ForeColor = Publicas._fonte;
                    TipoAvaliacaoComboBox.FlatBorderColor = (Publicas._TemaBlack ? Publicas._bordaEntrada : Publicas._panelTitulo);
                    ReferenciaAvaliacaoComboBox.FlatBorderColor = (Publicas._TemaBlack ? Publicas._bordaEntrada : Publicas._panelTitulo);

                    botoesPanel.BackColor = Publicas._fundo;
                    DashBordTabControl.BackColor = Publicas._fundo;
                    DashBordTabControl.ActiveTabColor = Publicas._botao;
                    DashBordTabControl.InactiveTabColor = Publicas._fundo;
                    DashBordTabControl.ActiveTabForeColor = Publicas._fonte;
                    DashBordTabControl.InActiveTabForeColor = Publicas._fonteBotaoFocado;
                    DashBordTabControl.TabPanelBackColor = Publicas._fundo;

                    MostrarAnivervariosCheckBox.ForeColor = Publicas._fonte;
                }
            }
            #endregion
        }

        #region Atributos
        private class ArquivosEmpresaArquivei
        {
            public int IdEmpresa { get; set; }
            public string Empresa { get; set; }
            public string NomeArquivo { get; set; }
            public string Acao { get; set; }
        }

        string _dataCompilacao;
        string _versaoAplicativo;
        string tipoAvaliacao;
                
        int idSuperior;
        int _quantidadeGraficos = 0;
        int _widthMenuPadrao = 240;
        int _heidthMenuPadrao = 48;
        int _heidthMenuSistema = 52;
        int _widthLabelMenu = 185;
        int _widthLabelMenuSistema = 140;
        int _rowIndexComunicado = 0;
        int _quantidadeNotificacoesNaoLidas = 0;
        int _quantidadeNotificacoesLidas = 0;
        int contadorTempoEncerrarSistema = 0;
        int quantidadeBiblioteca = 0;
        int _paginaLivros = 0;
        int _heightTela = 0;
        string linhaImagem = "";
        string _anoSAC = DateTime.Now.Year.ToString();
        string _statusSAC = "T";
        string _statusChamados = "A";
        string _anoChamados = DateTime.Now.Year.ToString();
        string _imagemUsada;
        string[] _fundoBlackNome = new string[] { "FundoBlackTecido.jpg", "FundoBlackMapa.jpg", "FundoBlackRiscos.jpg"};
        List<string> _xml = new List<string>();
        DateTime _dataTemas = DateTime.Now;

        bool _comunicadosEmPesquisa = false;
        bool _notificacaoEmPesquisa = false;
        bool _notificacaoBolaoEmPesquisa = false;
        bool _fixaDashBoard = false;
        bool _andamentoAvaliacaoEmPesquisa = false;
        bool _mudouVisualizacaoAndamento = false;
        
        bool _bibliotecaEmPesquisa = false;
        bool _sacEmPesquisa = false;
        
        bool _chamadosEmPesquisa = false;
        bool _feriasEmPesquisa = false;
        bool _agendaEmPesquisa = false;

        bool _avaliarMaisTarde = false;
        bool _atrasadosMaisTarde = false;
        bool _autorizarFeriasMaisTarde = false;
        bool _verLembretesMaisTarde = false;
        bool _verAutorizadosMaisTarde = false;
        bool _integrarFeriasMaisTarde = false;
        bool _verMaisTardeReaberto = false;
        bool _feriasGozadas = false;
        bool _temasComemorativos = true;
        bool _entrouNaPesquisaChamados = false;
        
        bool _pesquisouChamados = false;

        int[] _fundoBlack = new int[] { 0, 1, 2, 3 };
        int pos;

        int _timeAvaliarMaisTarde = 10800;
        int _timeAtrasadosMaisTarde = 10800;
        int _timeAutorizarFeriasMaisTarde = 7200;
        int _timelembrarMaisTarde = 7200;
        int _timeAutorizadosMaisTarde = 3600;
        int _timeReabertoMaisTarde = 7200;

        DateTime _timeInicioAvaliarMaisTarde;
        DateTime _timeInicioAtrasadosMaisTarde;
        DateTime _timeInicioAutorizarFeriasMaisTarde;
        DateTime _timeIniciolembrarMaisTarde;
        DateTime _timeInicioAutorizadosMaisTarde;
        DateTime _timeInicioReabertoMaisTarde;

        Color _corFundoMenu;
        Color _corFundoDivisao;
        Color _corMenuSelecionado;

        SimpleScheduleDataProvider dataSchedule = new SimpleScheduleDataProvider();
        Publicas.StatusComunicado _statusComunicadoSelecionado;

        Classes.Empresa _empresa;
        Classes.Colaboradores _colaboradores;
        Classes.Colaboradores supervisor;
        Classes.Cargos _cargo;
        Classes.FeriadoEmenda _feriado;
        Classes.ParticipanteCorrida _participante;
        Classes.NotificacaoDoSistema _notificacao;
        Classes.ResenhaLivros _livro;
        Classes.Leitura _leitura;
        Classes.Parametro _parametro;

        List<Classes.Agenda> _listaAgenda;
        List<Classes.Comunicado> _listaComunicados = new List<Comunicado>();
        List<Classes.NotificacaoComunicado> _listaComunicadosNotificacao = new List<NotificacaoComunicado>();
        List<Classes.Usuario> _listaAniversariantes;
        List<Classes.BancoDeHoras> _bancoDeHoras = new List<BancoDeHoras>();
        List<Classes.Corridas> _listaCorrida = new List<Classes.Corridas>();
        List<Classes.BolaoJogos> _listaJogosEncerrados = new List<BolaoJogos>();
        List<Classes.BolaoJogos> _listaJogosDos3Dias = new List<BolaoJogos>();
        List<Classes.AutoAvaliacao> _listaAvaliacoes = new List<AutoAvaliacao>();
        List<Classes.AutoAvaliacao> _listaAvaliacoesNotas = new List<AutoAvaliacao>();
        List<Classes.ParametrosArquivei> _listaParametrosArquivei = new List<ParametrosArquivei>();
        List<Classes.Arquivei> _listaArquivei = new List<Arquivei>();
        List<Classes.Arquivei> _listaArquiveiImportados = new List<Arquivei>();
        List<Classes.ItensArquivei> _listaItensArquivei = new List<ItensArquivei>();
        List<Classes.ItensParametrosArquivei> _listaItensParametros = new List<ItensParametrosArquivei>();
        List<Classes.EmprestimoLivros> _listaEmprestimos = new List<EmprestimoLivros>();
        List<Classes.EmprestimoLivros> _listaDownLoad = new List<EmprestimoLivros>();
        List<Classes.ReservaLivros> _listaReservas = new List<ReservaLivros>();
        List<Classes.ResenhaLivros> _listaResenhas = new List<ResenhaLivros>();
        List<Classes.ResenhaLivros> _listaResenhasNaoCadastradas = new List<ResenhaLivros>();
        List<Classes.ResenhaLivros> _listaLivrosComResenha;
        List<Classes.RespostasLivros> _livrosComRespostas;
        List<Classes.DepartamentosGerenciadosPeloColaborador> _listaDepartamentos;
        List<Classes.LocalizaRamais> _ramais;
        List<Classes.Atendimento> _listaAtendimentosSAC = new List<Atendimento>();
        
        List<Classes.Favoritos> _listaMenusFavoritos;
        List<Classes.Chamado> _listaChamados;
        List<Classes.Chamado> _listaChamadosFinalizados;
        List<Classes.Chamado> _listaChamadosCancelados;
        List<Classes.Chamado> _listaChamadosNotificacao;

        List<Classes.Chamado> _listaChamadosPesquisas = new List<Chamado>();

        List<Classes.ProgramacaoFerias> _listaProgramacao;
        List<Classes.ProgramacaoFerias> _listaProgramacaoGestorDP;
        List<Classes.ProgramacaoFerias> _listaProgramacaoAprovadas;
        List<Classes.Agenda> _listaLembrete;

        List<ArquivosEmpresaArquivei> _arquivosPorEmpresa = new List<ArquivosEmpresaArquivei>();
        List<EmpresaDoUsuario> _listaEmpresasDoUsuario = new List<EmpresaDoUsuario>();

        GridDynamicFilter filter = new GridDynamicFilter();
        GridMetroColors metroColor = new GridMetroColors();
        GridColumnDescriptor colunaGrid = new GridColumnDescriptor();

        GridCurrentCell cc;
        GridComboBoxCellRenderer cr;
        int indexComboBox ;
        StringCollection Adiar;

        Color backGroundOriginal = Color.WhiteSmoke;
        Record _recordSelecionado;

        #region Componentes de criação de menu
        Panel MenuUsuarioPanel;
        Panel MenuSistemaPanel;

        #region menu usuario
        Panel TrocaSenhaPanel;
        PictureBox DivisoriaTrocaSenhaImagem;
        Label TrocaSenhaLabel;

        Panel EditaPerfilPanel;
        PictureBox DivisoriaEditaPerfilImagem;
        Label EditaPerfilLabel;

        Panel SairPanel;
        PictureBox DivisoriaSairImagem;
        Label SairLabel;

        Panel TrocaUsuarioPanel;
        PictureBox DivisoriaTrocaUsuarioImagem;
        Label TrocaUsuarioLabel;
        #endregion

        #region MenuSistema
        Panel FavoritosPanel;
        PictureBox DivisoriaFavoritosImagem;
        PictureBox Divisoria2FavoritosImagem;
        Label FavoritosLabel;
        Label FavoritosSetaLabel;

        Panel RecursosHumanosPanel;
        PictureBox DivisoriaRecursosHumanosImagem;
        PictureBox Divisoria2RecursosHumanosImagem;
        Label RecursosHumanosLabel;
        Label RecursosHumanosSetaLabel;

        Panel JuridicoPanel;
        PictureBox DivisoriaJuridicoImagem;
        PictureBox Divisoria2JuridicoImagem;
        Label JuridicoLabel;
        Label JuridicoSetaLabel;

        Panel ContabilidadePanel;
        PictureBox DivisoriaContabilidadeImagem;
        PictureBox Divisoria2ContabilidadeImagem;
        Label ContabilidadeLabel;
        Label ContabilidadeSetaLabel;

        Panel EscrituracaoFiscalPanel;
        PictureBox DivisoriaEscrituracaoFiscalImagem;
        PictureBox Divisoria2EscrituracaoFiscalImagem;
        Label EscrituracaoFiscalLabel;
        Label EscrituracaoFiscalSetaLabel;
        
        Panel ControladoriaPanel;
        PictureBox DivisoriaControladoriaImagem;
        PictureBox Divisoria2ControladoriaImagem;
        Label ControladoriaLabel;
        Label ControladoriaSetaLabel;

        Panel AtendimentoPanel;
        PictureBox DivisoriaAtendimentoImagem;
        PictureBox Divisoria2AtendimentoImagem;
        Label AtendimentoLabel;
        Label AtendimentoSetaLabel;

        Panel TIPanel;
        PictureBox DivisoriaTIImagem;
        PictureBox Divisoria2TIImagem;
        Label TILabel;
        Label TISetaLabel;

        Panel BSCPanel;
        PictureBox DivisoriaBSCImagem;
        PictureBox Divisoria2BSCImagem;
        Label BSCLabel;
        Label BSCSetaLabel;

        Panel OperacionalPanel;
        PictureBox DivisoriaOperacionalImagem;
        PictureBox Divisoria2OperacionalImagem;
        Label OperacionalLabel;
        Label OperacionalSetaLabel;

        Panel RecebedoriaPanel;
        PictureBox DivisoriaRecebedoriaImagem;
        PictureBox Divisoria2RecebedoriaImagem;
        Label RecebedoriaLabel;
        Label RecebedoriaSetaLabel;

        Panel FinanceiroPanel;
        PictureBox DivisoriaFinanceiroImagem;
        PictureBox Divisoria2FinanceiroImagem;
        Label FinanceiroLabel;
        Label FinanceiroSetaLabel;

        Panel DepartamentoPessoalPanel;
        PictureBox DivisoriaDepartamentoPessoalImagem;
        PictureBox Divisoria2DepartamentoPessoalImagem;
        Label DepartamentoPessoalLabel;
        Label DepartamentoPessoalSetaLabel;

        Panel SuprimentosPanel;
        PictureBox DivisoriaSuprimentosImagem;
        PictureBox Divisoria2SuprimentosImagem;
        Label SuprimentosLabel;
        Label SuprimentosSetaLabel;

        #endregion

        #region Menu RecursosHumanos
        Panel SubMenuRecursosHumanos;
        Panel SubMenuAvaliacaoDesempenho;
        Panel SubMenuADPlanejamento;
        Panel SubMenuADColaborador;
        Panel SubMenuADGestor;
        Panel SubMenuADRecursosHumanos;
        Panel SubMenuCadastrosRH;
        Panel SubMenuNineBox;
        Panel SubMenuFavoritos;

        Panel AvaliacaoDesempenhoPanel;
        PictureBox DivisoriaAvaliacaoDesempenhoImagem;
        PictureBox Divisoria2AvaliacaoDesempenhoImagem;
        Label AvaliacaoDesempenhoLabel;
        Label AvaliacaoDesempenhoSetaLabel;

        Panel BibliotecaPanel;
        PictureBox DivisoriaBibliotecaImagem;
        PictureBox Divisoria2BibliotecaImagem;
        Label BibliotecaLabel;
        Label BibliotecaSetaLabel;

        Panel CurriculoPanel;
        PictureBox DivisoriaCurriculoImagem;
        PictureBox Divisoria2CurriculoImagem;
        Label CurriculoLabel;
        Label CurriculoSetaLabel;

        Panel CorridasPanel;
        PictureBox DivisoriaCorridasImagem;
        PictureBox Divisoria2CorridasImagem;
        Label CorridasLabel;
        Label CorridasSetaLabel;

        Panel PeriodoBancoHorasPanel;
        PictureBox DivisoriaPeriodoBancoHorasImagem;
        Label PeriodoBancoHorasLabel;

        Panel FeriasPanel;
        PictureBox DivisoriaFeriasImagem;
        PictureBox Divisoria2FeriasImagem;
        Label FeriasLabel;
        Label FeriasSetaLabel;

        Panel TorneiosPanel;
        PictureBox DivisoriaTorneiosImagem;
        PictureBox Divisoria2TorneiosImagem;
        Label TorneiosLabel;
        Label TorneiosSetaLabel;

        #region SubMenu Avaliação Desempenho
        Panel AD_PlanejamentoPanel;
        PictureBox DivisoriaAD_PlanejamentoImagem;
        PictureBox Divisoria2AD_PlanejamentoImagem;
        Label AD_PlanejamentoLabel;
        Label AD_PlanejamentoSetaLabel;

        Panel AD_RecursosHumanosPanel;
        PictureBox DivisoriaAD_RecursosHumanosImagem;
        PictureBox Divisoria2AD_RecursosHumanosImagem;
        Label AD_RecursosHumanosLabel;
        Label AD_RecursosHumanosSetaLabel;

        Panel AD_ColaboradorPanel;
        PictureBox DivisoriaAD_ColaboradorImagem;
        PictureBox Divisoria2AD_ColaboradorImagem;
        Label AD_ColaboradorLabel;
        Label AD_ColaboradorSetaLabel;

        Panel AD_GestorPanel;
        PictureBox DivisoriaAD_GestorImagem;
        PictureBox Divisoria2AD_GestorImagem;
        Label AD_GestorLabel;
        Label AD_GestorSetaLabel;

        #region SubMenu Planejamento

        Panel MetasPanel;
        PictureBox DivisoriaMetasImagem;
        PictureBox FavoritoMetasImagem;
        Label MetasLabel;

        Panel DefinicaoMetasPanel;
        PictureBox DivisoriaDefinicaoMetasImagem;
        PictureBox FavoritoDefinicaoMetasImagem;
        Label DefinicaoMetasLabel;

        #endregion

        #region SubMenu Colaborador/Gestor

        Panel RadarPanel;
        PictureBox DivisoriaRadarImagem;
        PictureBox FavoritoRadarImagem;
        Label RadarLabel;

        Panel FeedbackPanel;
        PictureBox DivisoriaFeedbackImagem;
        PictureBox FavoritoFeedbackImagem;
        Label FeedbackLabel;

        Panel AutoAvaliacaoPanel;
        PictureBox DivisoriaAutoAvaliacaoImagem;
        PictureBox FavoritoAutoAvaliacaoImagem;
        Label AutoAvaliacaoLabel;

        Panel MetasNumericasPanel;
        PictureBox DivisoriaMetasNumericasImagem;
        PictureBox FavoritoMetasNumericasImagem;
        Label MetasNumericasLabel;
        #endregion

        #region SubMenu RecursosHumanos

        Panel CadastrosRHPanel;
        PictureBox DivisoriaCadastrosRHImagem;
        PictureBox Divisoria2CadastrosRHImagem;
        Label CadastrosRHLabel;
        Label CadastrosRHSetaLabel;

        Panel NotasPanel;
        PictureBox DivisoriaNotasImagem;
        PictureBox FavoritoNotasImagem;
        Label NotasLabel;

        Panel CompararAvaliacaoPanel;
        PictureBox DivisoriaCompararAvaliacaoImagem;
        PictureBox FavoritoCompararAvaliacaoImagem;
        Label CompararAvaliacaoLabel;

        #region CadastrosRH
        Panel NineBoxPanel;
        PictureBox DivisoriaNineBoxImagem;
        PictureBox Divisoria2NineBoxImagem;
        Label NineBoxLabel;
        Label NineBoxSetaLabel;

        Panel ColaboradoresPanel;
        PictureBox DivisoriaColaboradoresImagem;
        PictureBox FavoritoColaboradorImagem;
        Label ColaboradoresLabel;

        Panel PrazosPanel;
        PictureBox DivisoriaPrazosImagem;
        PictureBox FavoritoPrazosImagem;
        Label PrazosLabel;

        Panel CargosPanel;
        PictureBox DivisoriaCargosImagem;
        PictureBox FavoritoCargosImagem;
        Label CargosLabel;

        Panel EscolaridadePanel;
        PictureBox DivisoriaEscolaridadeImagem;
        PictureBox FavoritoEscolaridadeImagem;
        Label EscolaridadeLabel;

        Panel CompetenciasPanel;
        PictureBox DivisoriaCompetenciasImagem;
        PictureBox FavoritoCompetenciasImagem;
        Label CompetenciasLabel;

        Panel DepartamentoPanel;
        PictureBox DivisoriaDepartamentoImagem;
        PictureBox FavoritoDepartamentoImagem;
        Label DepartamentoLabel;

        Panel PontuacaoPanel;
        PictureBox DivisoriaPontuacaoImagem;
        PictureBox FavoritoPontuacaoImagem;
        Label PontuacaoLabel;

        #region NineBox
        Panel CargosNineBoxPanel;
        PictureBox DivisoriaCargosNineBoxImagem;
        Label CargosNineBoxLabel;

        Panel ColaboradoresNineBoxPanel;
        PictureBox DivisoriaColaboradoresNineBoxImagem;
        Label ColaboradoresNineBoxLabel;

        #endregion

        #endregion

        #endregion

        #endregion

        #endregion

        #region SubMenu Ferias
        Panel SubMenuFerias;

        Panel CadastroFeriasPanel;
        PictureBox DivisoriaCadastroFeriasImagem;
        PictureBox FavoritoCadastroFeriasImagem;
        Label CadastroFeriasLabel;

        Panel ProgramacaoFeriasPanel;
        PictureBox DivisoriaProgramacaoFeriasImagem;
        PictureBox FavoritoProgramacaoFeriasImagem;
        Label ProgramacaoFeriasLabel;

        Panel PeriodoAquisitivoFeriasPanel;
        PictureBox DivisoriaPeriodoAquisitivoFeriasImagem;
        PictureBox FavoritoPeriodoAquisitivoFeriasImagem;
        Label PeriodoAquisitivoFeriasLabel;

        #endregion

        #region Processo Seletivo
        Panel SubMenuCurriculo;
        Panel SubMenuCadastroCurriculo;

        Panel CadastroCurriculoPanel;
        PictureBox DivisoriaCadastroCurriculoImagem;
        PictureBox Divisoria2CadastroCurriculoImagem;
        Label CadastroCurriculoLabel;
        Label CadastroCurriculoSetaLabel;

        Panel AgendaCurriculoPanel;
        PictureBox DivisoriaAgendaCurriculoImagem;
        PictureBox FavoritoAgendaCurriculoImagem;
        Label AgendaCurriculoLabel;

        #region Cadastros
        Panel CandidatosPanel;
        PictureBox DivisoriaCandidatosImagem;
        PictureBox FavoritoCandidatosImagem;
        Label CandidatosLabel;

        Panel VagasPanel;
        PictureBox DivisoriaVagasImagem;
        PictureBox FavoritoVagasImagem;
        Label VagasLabel;
        #endregion
        #endregion

        #region SubMenu Biblioteca
        Panel SubMenuBiblioteca;
        Panel SubMenuCadastroBiblioteca;

        Panel CadastroBibliotecaPanel;
        PictureBox DivisoriaCadastroBibliotecaImagem;
        PictureBox Divisoria2CadastroBibliotecaImagem;
        Label CadastroBibliotecaLabel;
        Label CadastroBibliotecaSetaLabel;

        Panel EmprestimoPanel;
        PictureBox DivisoriaEmprestimoImagem;
        PictureBox FavoritoEmprestimoImagem;
        Label EmprestimoLabel;

        Panel ReservaPanel;
        PictureBox DivisoriaReservaImagem;
        PictureBox FavoritoReservaImagem;
        Label ReservaLabel;

        Panel DevolucaoPanel;
        PictureBox DivisoriaDevolucaoImagem;
        PictureBox FavoritoDevolucaoImagem;
        Label DevolucaoLabel;

        Panel PerguntasPanel;
        PictureBox DivisoriaPerguntasImagem;
        PictureBox FavoritoPerguntasImagem;
        Label PerguntasLabel;

        Panel RespostasPanel;
        PictureBox DivisoriaRespostasImagem;
        PictureBox FavoritoRespostasImagem;
        Label RespostasLabel;

        Panel PontuacaoLivrosPanel;
        PictureBox DivisoriaPontuacaoLivrosImagem;
        PictureBox FavoritoPontuacaoLivrosImagem;
        Label PontuacaoLivrosLabel;

        Panel AcompanhamentoPanel;
        PictureBox DivisoriaAcompanhamentoImagem;
        PictureBox FavoritoAcompanhamentoImagem;
        Label AcompanhamentoLabel;

        #region Cadastros
        Panel CategoriasPanel;
        PictureBox DivisoriaCategoriasImagem;
        PictureBox FavoritoCategoriaLivrosImagem;
        Label CategoriasLabel;

        Panel LivrosPanel;
        PictureBox DivisoriaLivrosImagem;
        PictureBox FavoritoLivrosImagem;
        Label LivrosLabel;
        #endregion

        #endregion

        #region SubMenu Corridas
        Panel SubMenuCorridas;

        Panel CadastroCorridasPanel;
        PictureBox DivisoriaCadastroCorridasImagem;
        Label CadastroCorridasLabel;

        Panel ParticipantesPanel;
        PictureBox DivisoriaParticipantesImagem;
        Label ParticipantesLabel;

        Panel ResultadoPanel;
        PictureBox DivisoriaResultadoImagem;
        Label ResultadoLabel;
        #endregion

        #region SubMenu Torneios
        Panel SubMenuTorneios;
                
        Panel CadastroTorneiosPanel;
        PictureBox DivisoriaCadastroTorneiosImagem;
        Label CadastroTorneiosLabel;

        Panel ParticipantesTorneioPanel;
        PictureBox DivisoriaParticipantesTorneioImagem;
        Label ParticipantesTorneioLabel;

        //Panel ResultadoPanel;
        //PictureBox DivisoriaResultadoImagem;
        //Label ResultadoLabel;
        #endregion

        #region Menu Juridico
        Panel SubMenuJuridico;
        Panel SubMenuCadastroJuridico;

        Panel CadastroJuridicoPanel;
        PictureBox DivisoriaCadastroJuridicoImagem;
        PictureBox Divisoria2CadastroJuridicoImagem;
        Label CadastroJuridicoLabel;
        Label CadastroJuridicoSetaLabel;

        Panel AbrirComunicadoPanel;
        PictureBox DivisoriaAbrirComunicadoImagem;
        PictureBox FavoritoAbrirComunicadoImagem;
        Label AbrirComunicadoLabel;

        Panel TiposPagamentoPanel;
        PictureBox DivisoriaTiposPagamentoImagem;
        PictureBox FavoritoTiposPagamentoImagem;
        Label TiposPagamentoLabel;

        Panel VaraPanel;
        PictureBox DivisoriaVaraImagem;
        PictureBox FavoritoVaraImagem;
        Label VaraLabel;

        #endregion

        #region Menu Escrituracao
        Panel SubMenuEscrituracaoFiscal;
        Panel SubMenuESFArquivei;
        Panel SubMenuESFArquiveiSaida;
        Panel SubMenuESFCadastro;

        Panel NotaFiscalServicoESFPanel;
        PictureBox DivisoriaNotaFiscalServicoESFImagem;
        PictureBox Divisoria2NotaFiscalServicoESFImagem;
        Label NotaFiscalServicoESFLabel;
        Label NotaFiscalServicoESFSetaLabel;

        Panel CadastrosNfServicosPanel;
        PictureBox DivisoriaCadastrosNfServicosImagem;
        PictureBox Divisoria2CadastrosNfServicosImagem;
        Label CadastrosNfServicosLabel;
        Label CadastrosNfServicosSetaLabel;

        Panel ParametroCodServicoPanel;
        PictureBox DivisoriaParametroCodServicoImagem;
        PictureBox FavoritoParametroCodServicoImagem;
        Label ParametroCodServicoLabel;

        Panel IntegraNFSPanel;
        PictureBox DivisoriaIntegraNFSImagem;
        PictureBox FavoritoIntegraNFSImagem;
        Label IntegraNFSLabel;

        Panel DiferencialAliquotaPanel;
        PictureBox DivisoriaDiferencialAliquotaImagem;
        PictureBox FavoritoDiferencialAliquotaImagem;
        Label DiferencialAliquotaLabel;

        Panel ArquiveiPanel;
        PictureBox DivisoriaArquiveiImagem;
        PictureBox Divisoria2ArquiveiImagem;
        Label ArquiveiLabel;
        Label ArquiveiSetaLabel;

        Panel ArquiveiSaidaPanel;
        PictureBox DivisoriaArquiveiSaidaImagem;
        PictureBox Divisoria2ArquiveiSaidaImagem;
        Label ArquiveiSaidaLabel;
        Label ArquiveiSaidaSetaLabel;

        Panel ParametroArquiveiPanel;
        PictureBox DivisoriaParametroArquiveiImagem;
        PictureBox FavoritoParametroArquiveiImagem;
        Label ParametroArquiveiLabel;

        Panel CFOPArquiveiPanel;
        PictureBox DivisoriaCFOPArquiveiImagem;
        PictureBox FavoritoCFOPArquiveiImagem;
        Label CFOPArquiveiLabel;

        Panel CFOPSaidaArquiveiPanel;
        PictureBox DivisoriaCFOPSaidaArquiveiImagem;
        PictureBox FavoritoCFOPSaidaArquiveiImagem;
        Label CFOPSaidaArquiveiLabel;

        Panel ValidacaoArquiveiPanel;
        PictureBox DivisoriaValidacaoArquiveiImagem;
        PictureBox FavoritoValidacaoArquiveiImagem;
        Label ValidacaoArquiveiLabel;
        
        Panel ValidacaoXmlSaidaPanel;
        PictureBox DivisoriaValidacaoXmlSaidaImagem;
        PictureBox FavoritoValidacaoXmlSaidaImagem;
        Label ValidacaoXmlSaidaLabel;

        Panel ExclusaoArquiveiPanel;
        PictureBox DivisoriaExclusaoArquiveiImagem;
        Label ExclusaoArquiveiLabel;

        Panel ResumoArquiveiPanel;
        PictureBox DivisoriaResumoArquiveiImagem;
        PictureBox FavoritoResumoArquiveiImagem;
        Label ResumoArquiveiLabel;

        Panel ResumoSaidaArquiveiPanel;
        PictureBox DivisoriaResumoSaidaArquiveiImagem;
        PictureBox FavoritoResumoSaidaArquiveiImagem;
        Label ResumoSaidaArquiveiLabel;

        #endregion

        #region Menu Contabilidade
        Panel SubMenuContabilidade;
        Panel SubMenuRateioCTB;
        Panel SubMenuBeneficioCTB;
        Panel SubMenuCadastrosCTB;
        Panel SubMenuCigam;
        Panel SubMenuNotasFiscais;
        Panel SubMenuConciliacao;
        Panel SubMenuConciliacaoAtivoFolha;


        Panel ConciliacaoPanel;
        PictureBox DivisoriaConciliacaoImagem;
        PictureBox Divisoria2ConciliacaoImagem;
        Label ConciliacaoLabel;
        Label ConciliacaoSetaLabel;

        Panel NotasFiscaisPanel;
        PictureBox DivisoriaNotasFiscaisImagem;
        PictureBox Divisoria2NotasFiscaisImagem;
        Label NotasFiscaisLabel;
        Label NotasFiscaisSetaLabel;

        Panel CigamPanel;
        PictureBox DivisoriaCigamImagem;
        PictureBox Divisoria2CigamImagem;
        Label CigamLabel;
        Label CigamSetaLabel;

        Panel RateioCTBPanel;
        PictureBox DivisoriaRateioCTBImagem;
        PictureBox Divisoria2RateioCTBImagem;
        Label RateioCTBLabel;
        Label RateioCTBSetaLabel;

        Panel DRECTBPanel;
        PictureBox DivisoriaDRECTBImagem;
        PictureBox Divisoria2DRECTBImagem;
        Label DRECTBLabel;
        Label DRECTBSetaLabel;

        Panel LalurCTBPanel;
        PictureBox DivisoriaLalurCTBImagem;
        PictureBox Divisoria2LalurCTBImagem;
        Label LalurCTBLabel;
        Label LalurCTBSetaLabel;

        Panel EndividamentoCTBPanel;
        PictureBox DivisoriaEndividamentoCTBImagem;
        PictureBox Divisoria2EndividamentoCTBImagem;
        Label EndividamentoCTBLabel;
        Label EndividamentoCTBSetaLabel;

        Panel ParcelamentoCTBPanel;
        PictureBox DivisoriaParcelamentoCTBImagem;
        PictureBox Divisoria2ParcelamentoCTBImagem;
        Label ParcelamentoCTBLabel;
        Label ParcelamentoCTBSetaLabel;

        #region Menu Rateio

        Panel BeneficiosCTBPanel;
        PictureBox DivisoriaBeneficiosCTBImagem;
        PictureBox Divisoria2BeneficiosCTBImagem;
        Label BeneficiosCTBLabel;
        Label BeneficiosCTBSetaLabel;

        #region Menu Beneficios
        Panel CadastrosBeneficiosPanel;
        PictureBox DivisoriaCadastrosBeneficiosImagem;
        PictureBox Divisoria2CadastrosBeneficiosImagem;
        Label CadastrosBeneficiosLabel;
        Label CadastrosBeneficiosSetaLabel;

        Panel CalculoRateioBeneficioPanel;
        PictureBox DivisoriaCalculoRateioBeneficioImagem;
        PictureBox FavoritoCalculoRateioBeneficioImagem;
        Label CalculoRateioBeneficioLabel;

        #region Menu Cadastros
        Panel ParametrosBeneficiosCTBPanel;
        PictureBox DivisoriaParametrosBeneficiosCTBImagem;
        PictureBox FavoritoParametrosBeneficiosCTBImagem;
        Label ParametrosBeneficiosCTBLabel;

        Panel AssociaCustosSetorPanel;
        PictureBox DivisoriaAssociaCustosSetorImagem;
        PictureBox FavoritoAssociaCustosSetorImagem;
        Label AssociaCustosSetorLabel;

        #endregion

        #endregion

        #endregion

        #region Menu DRE

        Panel MetasDREPanel;
        PictureBox DivisoriaMetasDREImagem;
        PictureBox FavoritoMetasDREImagem;
        Label MetasDRELabel;

        Panel DREPanel;
        PictureBox DivisoriaDREImagem;
        PictureBox FavoritoDREImagem;
        Label DRELabel;

        #endregion

        #region Lalur
        Panel CadastrosLalurPanel;
        PictureBox DivisoriaCadastrosLalurImagem;
        PictureBox Divisoria2CadastrosLalurImagem;
        Label CadastrosLalurLabel;
        Label CadastrosLalurSetaLabel;

        Panel FormulasLalurPanel;
        PictureBox DivisoriaFormulasLalurImagem;
        PictureBox FavoritoFormulasLalurImagem;
        Label FormulasLalurLabel;

        Panel ParametrosLalurPanel;
        PictureBox DivisoriaParametrosLalurImagem;
        PictureBox FavoritoParametrosLalurImagem;
        Label ParametrosLalurLabel;

        Panel LalurPanel;
        PictureBox DivisoriaLalurImagem;
        PictureBox FavoritoLalurImagem;
        Label LalurLabel;

        #endregion

        #region Endividamento
        Panel CadastrosEndividamentoPanel;
        PictureBox DivisoriaCadastrosEndividamentoImagem;
        PictureBox Divisoria2CadastrosEndividamentoImagem;
        Label CadastrosEndividamentoLabel;
        Label CadastrosEndividamentoSetaLabel;

        Panel ValoresEndividamentoPanel;
        PictureBox DivisoriaValoresEndividamentoImagem;
        PictureBox FavoritoValoresEndividamentoImagem;
        Label ValoresEndividamentoLabel;

        Panel ParametrosEndividamentoPanel;
        PictureBox DivisoriaParametrosEndividamentoImagem;
        PictureBox FavoritoParametrosEndividamentoImagem;
        Label ParametrosEndividamentoLabel;

        //Panel LalurPanel;
        //PictureBox DivisoriaLalurImagem;
        //PictureBox FavoritoLalurImagem;
        //Label LalurLabel;

        #endregion

        #region Parcelamento
        Panel CadastrosParcelamentoPanel;
        PictureBox DivisoriaCadastrosParcelamentoImagem;
        PictureBox Divisoria2CadastrosParcelamentoImagem;
        Label CadastrosParcelamentoLabel;
        Label CadastrosParcelamentoSetaLabel;

        Panel SelicPanel;
        PictureBox DivisoriaSelicImagem;
        PictureBox FavoritoSelicImagem;
        Label SelicLabel;

        Panel CalculoParcelamentoPanel;
        PictureBox DivisoriaCalculoParcelamentoImagem;
        PictureBox FavoritoCalculoParcelamentoImagem;
        Label CalculoParcelamentoLabel;

        Panel ConciliacaoParcelamentoPanel;
        PictureBox DivisoriaConciliacaoParcelamentoImagem;
        PictureBox FavoritoConciliacaoParcelamentoImagem;
        Label ConciliacaoParcelamentoLabel;

        #endregion

        #region Cigam
        Panel ImportacaoCigamPanel;
        PictureBox DivisoriaImportacaoCigamImagem;
        PictureBox FavoritoImportacaoCigamImagem;
        Label ImportacaoCigamLabel;

        Panel LimparCigamPanel;
        PictureBox DivisoriaLimparCigamImagem;
        PictureBox FavoritoLimparCigamImagem;
        Label LimparCigamLabel;

        #endregion

        #region NotasFiscais
        Panel CadastrosNotasFiscaisPanel;
        PictureBox DivisoriaCadastrosNotasFiscaisImagem;
        PictureBox Divisoria2CadastrosNotasFiscaisImagem;
        Label CadastrosNotasFiscaisLabel;
        Label CadastrosNotasFiscaisSetaLabel;

        Panel ParametrosNotasFiscaisPanel;
        PictureBox DivisoriaParametrosNotasFiscaisImagem;
        PictureBox FavoritoParametrosNotasFiscaisImagem;
        Label ParametrosNotasFiscaisLabel;

        Panel ConciliacaoNotasFiscaisPanel;
        PictureBox DivisoriaConciliacaoNotasFiscaisImagem;
        PictureBox FavoritoConciliacaoNotasFiscaisImagem;
        Label ConciliacaoNotasFiscaisLabel;

        #endregion

        #region Conciliação
        Panel ConciliacaoBancariaPanel;
        PictureBox DivisoriaConciliacaoBancariaImagem;
        PictureBox FavoritoConciliacaoBancaria;
        Label ConciliacaoBancariaLabel;

        Panel ConciliacaoClientesPanel;
        PictureBox DivisoriaConciliacaoClientesImagem;
        PictureBox FavoritoConciliacaoCliente;
        Label ConciliacaoClientesLabel;

        Panel ConciliacaoFornecedoresPanel;
        PictureBox DivisoriaConciliacaoFornecedoresImagem;
        PictureBox FavoritoConciliacaoFornecedores;
        Label ConciliacaoFornecedoresLabel;

        Panel ConciliacaoAtivoPanel;
        PictureBox DivisoriaConciliacaoAtivoImagem;
        PictureBox Divisoria2ConciliacaoAtivoImagem;
        Label ConciliacaoAtivoLabel;
        Label ConciliacaoAtivoSetaLabel;
        
        Panel ConciliacaoAtivoParametrosPanel;
        PictureBox DivisoriaConciliacaoAtivoParametrosImagem;
        PictureBox FavoritoConciliacaoAtivoParametros;
        Label ConciliacaoAtivoParametrosLabel;

        Panel ConciliacaoAtivoTelaPanel;
        PictureBox DivisoriaConciliacaoAtivoTelaImagem;
        PictureBox FavoritoConciliacaoAtivoTela;
        Label ConciliacaoAtivoTelaLabel;

        Panel ConciliacaoFolhaPanel;
        PictureBox DivisoriaConciliacaoFolhaImagem;
        PictureBox Divisoria2ConciliacaoFolhaImagem;
        Label ConciliacaoFolhaLabel;
        Label ConciliacaoFolhaSetaLabel;

        #endregion

        #endregion

        #region Menu Atendimento
        Panel SubMenuAtendimento;

        Panel SACPanel;
        PictureBox DivisoriaSACImagem;
        PictureBox Divisoria2SACImagem;
        Label SACLabel;
        Label SACSetaLabel;

        Panel ChamadosPanel;
        PictureBox DivisoriaChamadosImagem;
        PictureBox Divisoria2ChamadosImagem;
        Label ChamadosLabel;
        Label ChamadosSetaLabel;

        #region SubMenu SAC
        Panel SubMenuSACPanel;
        Panel SubMenuCadastroSACPanel;

        Panel CadastroSACPanel;
        PictureBox DivisoriaCadastroSACImagem;
        PictureBox Divisoria2CadastroSACImagem;
        Label CadastroSACLabel;
        Label CadastroSACSetaLabel;

        Panel AtendimentoSACPanel;
        PictureBox DivisoriaAtendimentoSACImagem;
        PictureBox FavoritoAtendimentoSACImagem;
        Label AtendimentoSACLabel;

        Panel RetornarLigacoesPanel;
        PictureBox DivisoriaRetornarLigacoesImagem;
        PictureBox FavoritoRetornarLigacoesImagem;
        Label RetornarLigacoesLabel;

        Panel ResponderAtendimentoPanel;
        PictureBox DivisoriaResponderAtendimentoImagem;
        PictureBox FavoritoResponderAtendimentoImagem;
        Label ResponderAtendimentoLabel;

        Panel FinalizarAtendimentoPanel;
        PictureBox DivisoriaFinalizarAtendimentoImagem;
        PictureBox FavoritoFinalizarAtendimentoImagem;
        Label FinalizarAtendimentoLabel;

        Panel SatisfacaoPanel;
        PictureBox DivisoriaSatisfacaoImagem;
        PictureBox FavoritoSatisfacaoImagem;
        Label SatisfacaoLabel;

        #region CadastroSAC
        Panel TiposAtendimentoPanel;
        PictureBox DivisoriaTiposAtendimentoImagem;
        PictureBox FavoritoTiposAtendimentoImagem;
        Label TiposAtendimentoLabel;

        Panel TiposAtendimentoEMTUPanel;
        PictureBox DivisoriaTiposAtendimentoEMTUImagem;
        PictureBox FavoritoTiposAtendimentoEMTUImagem;
        Label TiposAtendimentoEMTULabel;
        #endregion
        #endregion

        #region SubMenu Chamados
        Panel SubMenuChamadosPanel;

        Panel AbrirChamadoPanel;
        PictureBox DivisoriaAbrirChamadoImagem;
        Label AbrirChamadoLabel;
        #endregion

        #endregion

        #region Menu Controladoria
        Panel SubMenuControladoria;

        //Panel RadarBIPanel;
        //PictureBox DivisoriaRadarBIImagem;
        //PictureBox FavoritoRadarBIImagem;
        //Label RadarBILabel;

        //Panel VisoesBIPanel;
        //PictureBox DivisoriaVisoesBIImagem;
        //PictureBox FavoritoVisoesBIImagem;
        //Label VisoesBILabel;

        //Panel DeMetasBIPanel;
        //PictureBox DivisoriaDeMetasBIImagem;
        //PictureBox FavoritoDeMetasBIImagem;
        //Label DeMetasBILabel;

        #endregion

        #region Menu TI
        Panel MenuTIPanel;
        Panel SubMenuCadastroTIPanel;
        Panel SubMenuSistemasTIPanel;
        Panel SubMenuPowerBIPanel;

        Panel CadastroTIPanel;
        PictureBox DivisoriaCadastroTIImagem;
        PictureBox Divisoria2CadastroTIImagem;
        Label CadastroTILabel;
        Label CadastroTISetaLabel;

        Panel SistemasTIPanel;
        PictureBox DivisoriaSistemasTIImagem;
        PictureBox Divisoria2SistemasTIImagem;
        Label SistemasTILabel;
        Label SistemasTISetaLabel;

        Panel UsuariosPanel;
        PictureBox DivisoriaUsuariosImagem;
        PictureBox FavoritoUsuariosImagem;
        Label UsuariosLabel;

        Panel ParametrosPanel;
        PictureBox DivisoriaParametrosImagem;
        PictureBox FavoritoParametrosImagem;
        Label ParametrosLabel;

        Panel EmpresasPanel;
        PictureBox DivisoriaEmpresasImagem;
        PictureBox FavoritoEmpresasImagem;
        Label EmpresasLabel;

        Panel SalaReuniaoPanel;
        PictureBox DivisoriaSalaReuniaoImagem;
        PictureBox FavoritoSalaReuniaoImagem;
        Label SalaReuniaoLabel;

        Panel NotificacoesPanel;
        PictureBox DivisoriaNotificacoesImagem;
        PictureBox FavoritoNotificacoesImagem;
        Label NotificacoesLabel;

        Panel MenuRamaisPanel;
        PictureBox DivisoriaMenuRamaisImagem;
        PictureBox FavoritoMenuRamaisImagem;
        Label MenuRamaisLabel;

        Panel PowerBIPanel;
        PictureBox DivisoriaPowerBIImagem;
        PictureBox Divisoria2PowerBIImagem;
        Label PowerBILabel;
        Label PowerBISetaLabel;

        Panel AgendaReuniaoPanel;
        PictureBox DivisoriaAgendaReuniaoImagem;
        PictureBox FavoritoAgendaReuniaoImagem;
        Label AgendaReuniaoLabel;


        #region PowerBI
        Panel EmailAcessoBITIPanel;
        PictureBox DivisoriaEmailAcessoBITIImagem;
        PictureBox FavoritoEmailAcessoBITIImagem;
        Label EmailAcessoBITILabel;

        Panel AcessoEmpresaBITIPanel;
        PictureBox DivisoriaAcessoEmpresaBITIImagem;
        PictureBox FavoritoAcessoEmpresaBITIImagem;
        Label AcessoEmpresaBITILabel;

        Panel UsuariosPorEmailTIPanel;
        PictureBox DivisoriaUsuariosPorEmailTIImagem;
        PictureBox FavoritoUsuariosPorEmailTIImagem;
        Label UsuariosPorEmailTILabel;

        Panel RelatoriosBIPanel;
        PictureBox DivisoriaRelatoriosBIImagem;
        PictureBox FavoritoRelatoriosBIImagem;
        Label RelatoriosBILabel;

        Panel AcessosBIPanel;
        PictureBox DivisoriaAcessosBIImagem;
        PictureBox FavoritoAcessosBIImagem;
        Label AcessosBILabel;

        Panel ResumoBIPanel;
        PictureBox DivisoriaResumoBIImagem;
        PictureBox FavoritoResumoBIImagem;
        Label ResumoBILabel;
        #endregion

        #region Sistemas
        Panel CategoriasTIPanel;
        PictureBox DivisoriaCategoriasTIImagem;
        PictureBox FavoritoCategoriasTIImagem;
        Label CategoriasTILabel;

        Panel ModulosTIPanel;
        PictureBox DivisoriaModulosTIImagem;
        PictureBox FavoritoModulosTIImagem;
        Label ModulosTILabel;

        Panel TelasTIPanel;
        PictureBox DivisoriaTelasTIImagem;
        PictureBox FavoritoTelasTIImagem;
        Label TelasTILabel;

        #endregion

        #endregion

        #region Balanced Scoredcard
        Panel MenuBSCPanel;

        Panel GestaoDeMetasPanel;
        PictureBox DivisoriaGestaoDeMetasImagem;
        Label GestaoDeMetasLabel;
        PictureBox FavoritoGestaoDeMetasImagem;
        #endregion

        #region Operacional
        Panel MenuOperacionalPanel;
        Panel SubMenuCadastroOperacionalPanel;

        Panel CadastrosOperacionaisPanel;
        PictureBox DivisoriaCadastrosOperacionaisImagem;
        PictureBox Divisoria2CadastrosOperacionaisImagem;
        Label CadastrosOperacionaisLabel;
        Label CadastrosOperacionaisSetaLabel;

        Panel IndicadoresPanel;
        PictureBox DivisoriaIndicadoresImagem;
        PictureBox FavoritoIndicadoresImagem;
        Label IndicadoresLabel;

        Panel SetoresDaLinhaPanel;
        PictureBox DivisoriaSetoresDaLinhaImagem;
        PictureBox FavoritoSetoresDaLinhaImagem;
        Label SetoresDaLinhaLabel;

        Panel MetasDosIndicadoresPanel;
        PictureBox DivisoriaMetasDosIndicadoresImagem;
        PictureBox FavoritoMetasDosIndicadoresImagem;
        Label MetasDosIndicadoresLabel;

        Panel ValoresDosIndicadoresPanel;
        PictureBox DivisoriaValoresDosIndicadoresImagem;
        PictureBox FavoritoValoresDosIndicadoresImagem;
        Label ValoresDosIndicadoresLabel;

        Panel AgrupaLinhasPanel;
        PictureBox DivisoriaAgrupaLinhasImagem;
        PictureBox FavoritoAgrupaLinhasImagem;
        Label AgrupaLinhasLabel;

        Panel DemonstrativoPanel;
        PictureBox DivisoriaDemonstrativoImagem;
        PictureBox FavoritoDemonstrativoImagem;
        Label DemonstrativoLabel;

        Panel IQOPanel;
        PictureBox DivisoriaIQOImagem;
        PictureBox FavoritoIQOImagem;
        Label IQOLabel;
               
        Panel PontuacaoOperacionalPanel;
        PictureBox DivisoriaPontuacaoOperacionalImagem;
        PictureBox FavoritoPontuacaoOperacionalImagem;
        Label PontuacaoOperacionalLabel;

        Panel FeriadosPanel;
        PictureBox DivisoriaFeriadosImagem;
        PictureBox FavoritoFeriadosImagem;
        Label FeriadosLabel;

        #endregion

        #region Recebedoria
        Panel MenuRecebedoriaPanel;

        Panel ResumoGlobusSigomPanel;
        PictureBox DivisoriaResumoGlobusSigomImagem;
        PictureBox FavoritoResumoGlobusSigomImagem;
        Label ResumoGlobusSigomLabel;

        Panel ResumoGlobusProdataPanel;
        PictureBox DivisoriaResumoGlobusProdataImagem;
        PictureBox FavoritoResumoGlobusProdataImagem;
        Label ResumoGlobusProdataLabel;

        #endregion

        #region Financeiro
        Panel MenuFinanceiroPanel;
        Panel SubMenuFluxoDeCaixaPanel;
        Panel SubMenuCadastroFinanceiroPanel;

        Panel FluxoDeCaixaPanel;
        PictureBox DivisoriaFluxoDeCaixaImagem;
        PictureBox Divisoria2FluxoDeCaixaImagem;
        Label FluxoDeCaixaLabel;
        Label FluxoDeCaixaSetaLabel;

        Panel CadastrosFluxoPanel;
        PictureBox DivisoriaCadastrosFluxoImagem;
        PictureBox Divisoria2CadastrosFluxoImagem;
        Label CadastrosFluxoLabel;
        Label CadastrosFluxoSetaLabel;

        Panel ColunasFluxoPanel;
        PictureBox DivisoriaColunasFluxoImagem;
        PictureBox FavoritoColunasFluxoImagem;
        Label ColunasFluxoLabel;

        Panel BancosFluxoPanel;
        PictureBox DivisoriaBancosFluxoImagem;
        PictureBox FavoritoBancosFluxoImagem;
        Label BancosFluxoLabel;

        Panel VariaveisFluxoPanel;
        PictureBox DivisoriaVariaveisFluxoImagem;
        PictureBox FavoritoVariaveisFluxoImagem;
        Label VariaveisFluxoLabel;

        Panel DemonstrativoFluxoPanel;
        PictureBox DivisoriaDemonstrativoFluxoImagem;
        PictureBox FavoritoDemonstrativoFluxoImagem;
        Label DemonstrativoFluxoLabel;

        Panel ResumoFluxoPanel;
        PictureBox DivisoriaResumoFluxoImagem;
        PictureBox FavoritoResumoFluxoImagem;
        Label ResumoFluxoLabel;

        #endregion

        #region Suprimentos
        Panel SubMenuSuprimentos1Panel;
        Panel SubMenuSuprimentos2Panel;

        Panel MetasSuprimentoPanel;
        PictureBox DivisoriaMetasSuprimentoImagem;
        PictureBox Divisoria2MetasSuprimentoImagem;
        Label MetasSuprimentoLabel;
        Label MetasSuprimentoSetaLabel;

        Panel MetasDeGastoPanel;
        PictureBox DivisoriaMetasDeGastoImagem;
        Label MetasDeGastoLabel;
        PictureBox FavoritoMetasDeGastoImagem;

        Panel TiposDePedidosPanel;
        PictureBox DivisoriaTiposDePedidosImagem;
        Label TiposDePedidosLabel;
        PictureBox FavoritoTiposDePedidosImagem;

        #endregion

        #endregion

        
        #region Componentes Criação Notificações
        Panel ExibeNotificacaoPanel;
        Panel TituloNotificacaoPanel;
        Label TituloNotificacaoLabel;
        Label Texto1Label;
        Label Texto2Label;
        Label Texto3Label;
        Label Texto4Label;
        Label Texto5Label;
        Label Texto6Label;
        Label Texto1Label_Chamados;
        PictureBox Imagem1Picture;
        PictureBox Imagem2Picture;
        GridGroupingControl NotificacaoGrid;

        #region Componentes Criação Bolão
        Panel MenuBolaoPanel;
        Panel SelecaoPanel;
        Panel JogosPanel;
        Panel ResultadoBolaoPanel;
        Panel PalpitesFinalistasPanel;
        Panel PalpitesPlacarPanel;
        Panel RankingBolaoPanel;
        Panel ValorArrecadadoPanel;

        Label SelecaoLabel;
        Label JogosLabel;
        Label ResultadoBolaoLabel;
        Label PalpitesFinalistasLabel;
        Label PalpitesPlacarLabel;
        Label RankingBolaoLabel;
        Label ValorArrecadadoLabel;

        PictureBox DivisoriaSelecaoImagem;
        PictureBox DivisoriaJogosImagem;
        PictureBox DivisoriaResultadoBolaoImagem;
        PictureBox DivisoriaPalpitesFinalistasImagem;
        PictureBox DivisoriaPalpitesPlacarImagem;
        PictureBox DivisoriaRankingBolaoImagem;
        PictureBox DivisoriaValorArrecadadoImagem;
        #endregion


        #endregion

        #endregion

        #region Move tela
        bool clicouNoPanel;
        int posIniX;
        int posIniY;

        private void panel1_MouseDown(object sender, MouseEventArgs e)
        {
            clicouNoPanel = true;
            posIniX = e.X;
            posIniY = e.Y;
        }

        private void panel1_MouseUp(object sender, MouseEventArgs e)
        {
            clicouNoPanel = false;
        }

        private void panel1_MouseMove(object sender, MouseEventArgs e)
        {
            if (clicouNoPanel)
            {
                this.SetDesktopLocation(MousePosition.X - posIniX, MousePosition.Y - posIniY);
            }
        }
        #endregion

        #region Controles principais
        private void MinimizarLabel_Click(object sender, EventArgs e)
        {
            this.WindowState = FormWindowState.Minimized;
        }

        private void tituloMinimizarLabel_MouseHover(object sender, EventArgs e)
        {
            tituloMinimizarLabel.Cursor = Cursors.Hand;
            tituloMinimizarLabel.BackColor = Publicas._panelTituloFoco;
        }

        private void tituloMinimizarLabel_MouseLeave(object sender, EventArgs e)
        {
            tituloMinimizarLabel.Cursor = Cursors.Default;
            tituloMinimizarLabel.BackColor = Publicas._panelTitulo;
        }

        private void MensagemSistema()
        {
            if (Publicas._alterouSkin)
            {
                Publicas._mensagemSistema = (Publicas._alterouSkin ? "Aguarde, aplicando o tema." : string.Empty);
                dataHoraTimer_Tick(this, new EventArgs());
                Refresh();
            }
        }

        private void dataHoraTimer_Tick(object sender, EventArgs e)
        {

            dataHoraLabel.Text = "| Maquina " + Environment.MachineName + "     | Versão " + _versaoAplicativo + " |       " +
                DateTime.Now.ToLongDateString() + " " + DateTime.Now.ToLongTimeString();
            mensagemLabel.Text = Publicas._mensagemSistema;

            _quantidadeNotificacoesNaoLidas = 0;

            if (_feriado != null && _feriado.Existe && _feriado.Tipo == "F")
                _quantidadeNotificacoesNaoLidas = 1;

            if (_participante != null && _listaAniversariantes != null)
                _quantidadeNotificacoesNaoLidas = _quantidadeNotificacoesNaoLidas + _listaAniversariantes.Count() +
                                             (_participante != null && !_participante.Visualizado ? _listaCorrida.Count() : 0);

            if (_listaComunicadosNotificacao != null)
                _quantidadeNotificacoesNaoLidas = _quantidadeNotificacoesNaoLidas + _listaComunicadosNotificacao.Count();

            if (_listaArquiveiImportados != null)
                _quantidadeNotificacoesNaoLidas = _quantidadeNotificacoesNaoLidas + _listaArquiveiImportados.Count();

            if (_listaEmprestimos != null && _listaReservas != null && _listaResenhas != null && _listaResenhasNaoCadastradas != null && _listaDownLoad != null && _livrosComRespostas != null)
            {
                quantidadeBiblioteca = _listaEmprestimos.Count + _listaReservas.Count + _listaResenhas.Count + _listaResenhasNaoCadastradas.Count() + _listaDownLoad.Count() + _livrosComRespostas.Count();
                _quantidadeNotificacoesNaoLidas = _quantidadeNotificacoesNaoLidas + quantidadeBiblioteca;
            }

            if (_listaChamadosNotificacao != null)
                _quantidadeNotificacoesNaoLidas = _quantidadeNotificacoesNaoLidas + _listaChamadosNotificacao.Count;

            if (_listaProgramacaoAprovadas != null)
                _quantidadeNotificacoesNaoLidas = _quantidadeNotificacoesNaoLidas + _listaProgramacaoAprovadas.Count;
            
            if ((DateTime.Now.Date >= Publicas._dataInicioCopa.AddDays(-14) && DateTime.Now.Date <= Publicas._dataFimCopa.AddDays(3)))
            {
                int qtdDias = 1;

                if (DateTime.Now.DayOfWeek == DayOfWeek.Friday)
                    qtdDias = 3;

                if (_listaJogosEncerrados != null)
                    _quantidadeNotificacoesNaoLidas = _quantidadeNotificacoesNaoLidas + _listaJogosEncerrados.Where(w => w.Data.Date >= DateTime.Now.Date.AddDays(-qtdDias)).Count();

                qtdDias = 1;

                if (DateTime.Now.DayOfWeek == DayOfWeek.Friday)
                    qtdDias = 3;

                if (_listaJogosDos3Dias != null)
                    _quantidadeNotificacoesNaoLidas = _quantidadeNotificacoesNaoLidas + _listaJogosDos3Dias.Where(w => w.Data.Date >= DateTime.Now && w.Data.Date <= DateTime.Now.Date.AddDays(qtdDias)).Count();
            }

            _quantidadeNotificacoesNaoLidas = _quantidadeNotificacoesNaoLidas - _quantidadeNotificacoesLidas;

            if (_quantidadeNotificacoesNaoLidas < 0)
                _quantidadeNotificacoesNaoLidas = 0;

            QuantidadeNotificacaoLabel.Text = _quantidadeNotificacoesNaoLidas.ToString();

            if (_quantidadeNotificacoesNaoLidas != 0)
            {
                if (QuantidadeNotificacaoLabel.ForeColor == System.Drawing.Color.FromArgb(2, 91, 149))
                    QuantidadeNotificacaoLabel.ForeColor = BotaoDashboardLabel.ForeColor;
                else
                    QuantidadeNotificacaoLabel.ForeColor = System.Drawing.Color.FromArgb(2,91,149); 
            }
            else
                QuantidadeNotificacaoLabel.ForeColor = BotaoDashboardLabel.ForeColor;

            _notificacao = new NotificacaoDoSistemaBO().Consultar();
            
            if (_notificacao.DataDaAcao <= DateTime.Now && _notificacao.DataFimDaAcao >= DateTime.Now)
            //if (Convert.ToDateTime("27/08/2019 13:15") <= DateTime.Now && Convert.ToDateTime("27/08/2019 14:00") >= DateTime.Now)
            {
                if ((_notificacao.TipoAtualizacao == "P" &&
                    !Environment.MachineName.ToUpper().Contains("CORPTS") && !Environment.MachineName.ToUpper().Contains("CORPRDP")) ||
                    _notificacao.TipoAtualizacao == "G")
                {
                    if (contadorTempoEncerrarSistema == 0)
                    {
                        FecharDashBoard();
                        notificacaoSistemaPanel.Dock = DockStyle.Right;
                        notificacaoSistemaPanel.BringToFront();
                        notificacaoSistemaPanel.Visible = true;
                        dataNotificacaoLabel.Text = _notificacao.DataDoAviso.ToShortDateString();
                        textoLabel.Text = _notificacao.Motivo.Replace("#datainicio", _notificacao.DataDaAcao.Date.ToShortDateString())
                                                             .Replace("#horainicio", _notificacao.DataDaAcao.ToShortTimeString())
                                                             .Replace("#tempo", _notificacao.DataFimDaAcao.Subtract(_notificacao.DataDaAcao).TotalMinutes.ToString() + " minutos");
                    }


                    contagemLabel.Text = (30 - contadorTempoEncerrarSistema).ToString();

                    contadorTempoEncerrarSistema++;

                    if (contadorTempoEncerrarSistema >= 30)
                    {

                        Log _log = new Log();
                        if (Publicas._usuario != null)
                        {
                            _log.IdUsuario = Publicas._usuario.Id;
                            _log.Descricao = "Encerrou o sistema após notificar o usuário. " + Environment.MachineName.ToUpper();
                            _log.Tela = "Principal";

                            try
                            {
                                new LogBO().Gravar(_log);
                            }
                            catch { }
                        }
                        try
                        {
                            Application.Exit();
                        }
                        catch { }

                        try
                        {
                            Close();
                        }
                        catch { }
                    }
                    return;
                }
            }
            
            if (_listaProgramacaoAprovadas != null && 
                _listaProgramacaoAprovadas.Where(w => w.DataFim.Date < DateTime.Now.Date && w.Status != "R").Count() != 0 && !_feriasGozadas)
            {
                foreach (var item in _listaProgramacaoAprovadas.Where(w => w.DataFim.Date < DateTime.Now.Date && !w.Gozadas && w.Status != "R"))
                {
                    _feriasGozadas = true;
                    if (new Notificacoes.Mensagem("Você está retornando deste Período de Férias " + item.DataInicio.ToShortDateString() +
                        " até " + item.DataFim.ToShortDateString() + "?", Publicas.TipoMensagem.Confirmacao).ShowDialog() == DialogResult.Yes)
                    {
                        item.Gozadas = true;
                        new ProgramacaoFeriasBO().GravarFeriasGozadas(item.Id);
                        _feriasGozadas = false;
                    }                       
                }
            }

            if (!string.IsNullOrEmpty(Publicas._mensagemSistema))
                this.Cursor = Cursors.WaitCursor;
            else
            {
                if (this.Cursor != Cursors.Default)
                    this.Cursor = Cursors.Default;
            }

            if (_chamadosEmPesquisa && MensagemChamadosDashBoardLabel != null)
                MensagemChamadosDashBoardLabel.Text = "Aguarde... Pesquisando os chamados.";

            /*
            if (Publicas._usuario != null && Publicas._usuario.SempreMostrarListaDeChamados && !_pesquisouChamados)
            {
                if (_listaChamados != null )
                {
                    ChamadosDashBoardGrid.DataSource = _listaChamados.Where(w => w.Exibir)
                                                              //     .OrderBy(o => o.Data)
                                                                 .OrderBy(o => o.Ordem).ToList();

                    try
                    {
                        if (ChamadosTabPage.TabVisible && !_entrouNaPesquisaChamados)
                        {
                            if (_recordSelecionado != null)
                                ChamadosDashBoardGrid.Table.CurrentRecord = _recordSelecionado;
                            ChamadosDashBoardGrid.Focus();
                        }
                    }
                    catch { }
                }
            }*/

            if (_timeInicioAtrasadosMaisTarde != DateTime.MinValue && 
                DateTime.Now.Subtract(_timeInicioAtrasadosMaisTarde).TotalMinutes > _timeAtrasadosMaisTarde)
                _atrasadosMaisTarde = false;

            if (_timeInicioAutorizadosMaisTarde != DateTime.MinValue &&
                DateTime.Now.Subtract(_timeInicioAutorizadosMaisTarde).TotalMinutes > _timeAutorizadosMaisTarde)
                _verAutorizadosMaisTarde = false;

            if (_timeIniciolembrarMaisTarde != DateTime.MinValue &&
                DateTime.Now.Subtract(_timeIniciolembrarMaisTarde).TotalMinutes > _timelembrarMaisTarde)
                _verLembretesMaisTarde = false;

            if (_timeInicioAvaliarMaisTarde != DateTime.MinValue &&
                DateTime.Now.Subtract(_timeInicioAvaliarMaisTarde).TotalMinutes > _timeAvaliarMaisTarde)
                _avaliarMaisTarde = false;

            if (_timeInicioAutorizarFeriasMaisTarde != DateTime.MinValue &&
                DateTime.Now.Subtract(_timeInicioAutorizarFeriasMaisTarde).TotalMinutes > _timeAutorizarFeriasMaisTarde )
                _autorizarFeriasMaisTarde = false;


            if (_timeInicioReabertoMaisTarde != DateTime.MinValue &&
                DateTime.Now.Subtract(_timeInicioReabertoMaisTarde).TotalMinutes > _timeReabertoMaisTarde)
                _verMaisTardeReaberto = false;

        }

        private void TelaInicial_Shown(object sender, EventArgs e)
        {
            Publicas._encerrarSemLogar = false;
            _versaoAplicativo = Application.ProductVersion;
            _dataCompilacao = System.IO.File.GetLastWriteTime(System.Reflection.Assembly.GetExecutingAssembly().Location).ToString();
            NomePadrao();
            DashBoardPanel.Width = 25;

            _anoSAC = DateTime.Today.Year.ToString();
            _parametro = new ParametrosBO().Consultar();

            if (Environment.MachineName.ToUpper().Contains("CORPTS") || Environment.MachineName.ToUpper().Contains("CORPRDP"))
            {
                Publicas._caminhoAnexosChamado = @"d:\portalNiff\Anexos\";
                Publicas._caminhoPortal = @"d:\portalNiff\";
            }

            if (!Directory.Exists(Publicas._caminhoAnexosChamado))
                Directory.CreateDirectory(Publicas._caminhoAnexosChamado);

            #region Chama tela de login
            _heightTela = (Screen.PrimaryScreen.WorkingArea.Size.Height - tituloPanel.Height - panel2.Height);
            TelaLogin loginPanel = new TelaLogin();

            loginPanel.Location = new Point(loginPanel.Left + 100, (_heightTela - loginPanel.Height) / 2);

            loginPanel.ShowDialog();
            #endregion

            if (Publicas._encerrarSemLogar)
            {
                Publicas._usuario = null;
                Close();
            }

            if (Publicas._usuario != null)
            {
                // abre para o usuário AVSOUZA o servicoExcel.
                if (Publicas._usuario.AbreServicoExcel &&
                   (!Environment.MachineName.ToUpper().Contains("CORPTS") && !Environment.MachineName.ToUpper().Contains("CORPRDP")))
                {

                    try
                    {
                        System.Diagnostics.Process snippingToolProcess = new System.Diagnostics.Process();
                        snippingToolProcess.EnableRaisingEvents = true;
                        snippingToolProcess.StartInfo.FileName = "g:\\PortalNIFF\\Servico\\Servico_Suportte.exe";
                        snippingToolProcess.Start();
                    }
                    catch
                    {
                    }
                }


                _listaEmpresasDoUsuario = new UsuarioBO().ConsultaEmpresasAutorizadasDoUsuario(Publicas._usuario.Id);

                #region Aniversario de Empresa
                Usuario _usuarioEmpresa = new UsuarioBO().ListaAniversariantesDaEmpresa();

                if (_usuarioEmpresa.Existe)
                {
                    Notificacoes.AniversarioEmpresa _tela = new Notificacoes.AniversarioEmpresa();
                    string[] nome = _usuarioEmpresa.Nome.Split(' ');
                    _tela.tituloLabel.Text = nome[0] + " " + nome[nome.Length - 1] + " parabéns pelos " + _usuarioEmpresa.QuantidadeDeAnos.ToString() + " anos de empresa.";
                    _tela.Show();
                }
                #endregion

                #region Verificação de senha padrão
                if (Publicas._usuario.CPF != "")
                {
                    if (Publicas._senhaLogin == Publicas._usuario.CPF.ToString().Substring(0, 6))
                    {
                        new Notificacoes.Mensagem("Identificamos que está usando a senha padrão." +
                            Environment.NewLine + "Por gentileza troque sua senha.", Publicas.TipoMensagem.Informacao).ShowDialog();
                        new TrocaDeSenha().ShowDialog();
                    }
                }
                #endregion

                #region atualização de status do usuário e colaborador
                new LoginBO().AlterarStatusUsuario(Publicas._idUsuario, Publicas.StatusUsuario.OnLine, Publicas._conexaoString);
                _listaMenusFavoritos = new FavoritosBO().Listar();

                if (Publicas._usuario.Administrador)
                {
                    // chamados não avaliados a + de 10 dias ou com solicitante desligado
                    new ChamadoBO().AvaliacaoAutomatica();
                    // inclui os Usuários do Globus, quando o mesmo está associado a um funcionário
                    new UsuarioBO().IncluirUsuariosCriadoNoGlobus();
                    // Irá verificar se o funcionario associado ao Usuário esta desligado, se estiver irá inativar o usuário.
                    new UsuarioBO().DesativaUsuarios();
                    new ColaboradoresBO().AtualizaStatus();
                }
                #endregion

                #region  Identificação do usuário na tela inicial
                usuarioLogadoLabel.Text = "Olá," + Environment.NewLine + Publicas._usuariologado;

                #region imagem/foto usuario

                try
                {
                    if (!Directory.Exists(Publicas._caminhoPortal))
                    {
                        Directory.CreateDirectory(Publicas._caminhoPortal);
                    }

                    FileStream FS;

                    string _imagem = Publicas._caminhoPortal + "imagePerfil" + Publicas._usuario.Id + ".jpg";

                    if (!File.Exists(_imagem))
                    {
                        FS = new FileStream(_imagem, FileMode.CreateNew);
                        FS.Write(Publicas._usuario.Foto, 0, Publicas._usuario.Foto.Length);
                        FS.Close();
                        FS = null;
                        fotoUsuarioPictureBox.Image = Image.FromFile(_imagem);
                    }

                    fotoUsuarioPictureBox.Image = Image.FromFile(_imagem);

                    fotoUsuarioPictureBox.SizeMode = PictureBoxSizeMode.StretchImage;
                    fotoUsuarioPictureBox.Refresh();
                }
                catch
                {
                    fotoUsuarioPictureBox.Image = Properties.Resources.UserLogin;
                    fotoUsuarioPictureBox.SizeMode = PictureBoxSizeMode.CenterImage;
                }

                #endregion
                #endregion

                #region Consultas de empresa e colaboradores
                _empresa = new EmpresaBO().Consultar(Publicas._usuario.IdEmpresa);
                _colaboradores = new ColaboradoresBO().Consultar(_empresa.CodigoEmpresaGlobus, Publicas._usuario.RegistroFuncionario, true);

                try
                {
                    Publicas._idColaborador = _colaboradores.Id;
                    _cargo = new CargosBO().Consultar(_colaboradores.IdCargo);

                    supervisor = new ColaboradoresBO().ConsultaSeEhSupervisor(_colaboradores.Id);
                }
                catch { }
                #endregion

                _listaDepartamentos = new DepartamentoBO().Listar(Publicas._idColaborador);

                AcessoAoMenuPanel.Visible = true;

                TorneioPictureBox.Visible = Publicas._usuario.Desenvolvedor;

                BolaoCopaPanel.Visible = false;// Publicas._usuario.AdministraBolaoCopa || Publicas._usuario.Administrador;// ||
                //    ((DateTime.Now.Date >= Publicas._dataInicioCopa.AddDays(-14) && DateTime.Now.Date <= Publicas._dataFimCopa.AddDays(3))) &&
                //    Publicas._usuario.ParticipaBolaoCopa && (Publicas._usuario.IdEmpresa == 1  || Publicas._usuario.IdEmpresa == 19 || Publicas._usuario.UsuarioAcesso == "ELSILVA" || Publicas._usuario.UsuarioAcesso == "VBSANTOS" || Publicas._usuario.UsuarioAcesso == "ADRIANA");

                //AbrirLivros.Visible = Publicas._usuario.IdEmpresa == 1 || Publicas._usuario.IdEmpresa == 19 || Publicas._usuario.UsuarioAcesso == "ELSILVA" || Publicas._usuario.UsuarioAcesso == "VBSANTOS";
                BolaoPictureBox.Visible = BolaoCopaPanel.Visible;

                ControleDeHorarioPictureBox.Visible = (Publicas._usuario.IdEmpresa == 1 || Publicas._usuario.IdEmpresa == 19); 

                #region Torneios
                //List<PartidasDoTorneio> _listaPartidas = new TorneioBO().ListarPartidas(Publicas._idColaborador);

                //foreach (var item in _listaPartidas.Where(w => w.Data == DateTime.Now.Date))
                //{
                //    if (_colaboradores.Sexo == "F" && item.IdTorneio == 3)
                //        FundoPictureBox.ImageLocation = @"Imagens\FundoArmsMeninas.png";
                //    else
                //    {
                //        if (_colaboradores.Sexo == "M" && item.IdTorneio == 3)
                //            FundoPictureBox.ImageLocation = @"Imagens\FundoArmsMisango.png";
                //        else
                //            FundoPictureBox.ImageLocation = @"Imagens\FundoComMarioKart.png";
                //    }
                //}
                #endregion

                int qtdDias = 1;
                int qtdDiasAntes = 0;

                if (DateTime.Now.DayOfWeek == DayOfWeek.Friday)
                    qtdDias = 3;

                if (DateTime.Now.DayOfWeek == DayOfWeek.Monday)
                    qtdDiasAntes = 3;

                if (Publicas._usuario.AniversariantesApenasDaEmpresa)
                    _listaAniversariantes = new UsuarioBO().ListarAniversariantesDaSemana(Publicas._usuario.IdEmpresa, qtdDias, qtdDiasAntes).OrderBy(o => o.DataNascimento).ToList();
                else
                    _listaAniversariantes = new UsuarioBO().ListarAniversariantesDaSemana(0, qtdDias, qtdDiasAntes).OrderBy(o => o.DataNascimento).ToList();

                DateTime _dataNiver = DateTime.Now.Date;

                if (_dataNiver.DayOfWeek == DayOfWeek.Monday)
                {
                    FeriadoEmenda _feriado = new FeriadoBO().Consultar(DateTime.Now.Date.AddDays(-3), Publicas._usuario.IdEmpresa);

                    if (_feriado.Existe)
                        _dataNiver = _dataNiver.AddDays(-3);
                    else
                        _dataNiver = _dataNiver.AddDays(-2);
                }
                else
                {
                    FeriadoEmenda _feriado = new FeriadoBO().Consultar(DateTime.Now.Date.AddDays(-1), Publicas._usuario.IdEmpresa);

                    if (_feriado.Existe)
                        _dataNiver = _dataNiver.AddDays(-1);
                }

                foreach (var item in _listaAniversariantes.Where(w => w.DataNascimento == DateTime.Now.Date && w.Id == Publicas._idUsuario))
                {
                    if (Publicas._TemaBlack)
                        _imagemUsada = @"Imagens\" + _fundoBlackNome[pos];
                    else
                        _imagemUsada = @"Imagens\FundoAzul.jpg"; 

                    _imagemUsada = _imagemUsada.Replace(".jpg", "") + "Parabens.png";
                    FundoPictureBox.ImageLocation = _imagemUsada;
                }

                foreach (var item in _listaAniversariantes.Where(w => w.DataNascimento.Date >= _dataNiver && w.DataNascimento <= DateTime.Now.Date))
                {
                    if (item.Id == Publicas._idUsuario && item.DataNascimento >= _dataNiver && item.DataNascimento <= DateTime.Now.Date)
                    {
                        Publicas._aniversario = new AniversarioBO().Consulta();

                        if (!Publicas._aniversario.Existe ||
                            (Publicas._aniversario.Existe && Publicas._aniversario.MostrarMensagem))
                        {
                            Publicas._fecharAniversarios = false;
                            Notificacoes.Aniversario _tela = new Notificacoes.Aniversario();
                            _tela.TopMost = true;

                            if (_dataNiver.Date != DateTime.Now.Date)
                                _tela.tituloLabel.Text = "Parabéns pelo seu Aniversário do dia " + item.DataNascimento.ToShortDateString();

                            _tela.Show();
                        }
                    }
                }

                _feriado = new FeriadoBO().Consultar(DateTime.Now.Date.AddDays(1), Publicas._usuario.IdEmpresa);

                if (Publicas._usuario != null && !Publicas._usuario.NaoNotificaCorridas)
                {
                    _listaCorrida = new CorridasBO().Listar(true, Publicas._usuario.Id);
                    _participante = new ParticipanteCorridaBO().Consultar(Publicas._idUsuario, 0);
                }

                AvaliacaoDesempenhoTabPage.TabVisible = (Publicas._usuario.AcessoDeRH || Publicas._usuario.AcessoDeControladoria || (Publicas._usuario.AcessoDeGestor && supervisor.Existe)) && Publicas._usuario.AcessaAvaliacaoDesempenho;
                ComunicadosTabPage.TabVisible = Publicas._usuario.AcessaJuridico;
                SACTabPage.TabVisible = Publicas._usuario.AcessaSac || Publicas._usuario.Administrador;
                ChamadosTabPage.TabVisible = true;// Publicas._usuario.Administrador || Publicas._usuario.IdEmpresa == 1  || Publicas._usuario.IdEmpresa == 19|| Publicas._usuario.IdEmpresa == 2 || Publicas._usuario.IdEmpresa == 10;

                DashBoardPanel.BringToFront();
                DashBoardPanel.Visible = true;

                BotaoDashboardLabel.Enabled = AvaliacaoDesempenhoTabPage.TabVisible || ComunicadosTabPage.TabVisible || SACTabPage.TabVisible || ChamadosTabPage.TabVisible;

                atendimentoToolStripMenuItem.Visible = (Publicas._usuario.TipoSac == Publicas.TipoUsuarioSAC.Atendente) ||
                          (Publicas._usuario.TipoSac == Publicas.TipoUsuarioSAC.Administrador);

                retornarToolStripMenuItem.Visible = (Publicas._usuario.TipoSac == Publicas.TipoUsuarioSAC.Atendente) ||
                                               (Publicas._usuario.TipoSac == Publicas.TipoUsuarioSAC.Administrador) ||
                                               (Publicas._usuario.TipoSac == Publicas.TipoUsuarioSAC.Mediador);

                responderToolStripMenuItem.Visible = (Publicas._usuario.TipoSac == Publicas.TipoUsuarioSAC.UsuarioComum) ||
                                               (Publicas._usuario.TipoSac == Publicas.TipoUsuarioSAC.Administrador) ||
                                               (Publicas._usuario.TipoSac == Publicas.TipoUsuarioSAC.Mediador);

                finalizarToolStripMenuItem.Visible = (Publicas._usuario.TipoSac == Publicas.TipoUsuarioSAC.Finalizador) ||
                                               (Publicas._usuario.TipoSac == Publicas.TipoUsuarioSAC.Administrador) ||
                                               (Publicas._usuario.TipoSac == Publicas.TipoUsuarioSAC.Mediador);

                AgendaTabPage.TabVisible = false;//  Publicas._usuario != null && Publicas._usuario.Desenvolvedor;
                AgendaScheduleControl.Visible = false;// Publicas._usuario != null && Publicas._usuario.Desenvolvedor;

                sacTimer.Start();
                notificacaoTimer.Start();
                notificacaoBolaoTimer.Start();
                ArquiveiTimer.Start();
                comunicadoTimer.Start();
                NotificacaoBibliotecaTimer.Start();
                //AgendaTimer.Start();
                FeriasTimer.Start();

                #region Cor Grids
                metroColor.GroupDropAreaColor.BackColor = Publicas._bordaEntrada;
                metroColor.HeaderBottomBorderColor = Publicas._bordaEntrada;
                metroColor.HeaderColor.HoverColor = Publicas._bordaEntrada;
                metroColor.HeaderColor.PressedColor = Publicas._bordaEntrada;

                if (Publicas._TemaBlack)
                    metroColor.HeaderColor.NormalColor = Publicas._bordaEntrada;

                metroColor.CheckBoxColor.BorderColor = Publicas._bordaEntrada;
                metroColor.PushButtonColor.PushedBackColor = Publicas._bordaEntrada;
                metroColor.PushButtonColor.HoverBackColor = Publicas._bordaEntrada;
                metroColor.PushButtonColor.NormalBackColor = Color.WhiteSmoke;
                metroColor.ComboboxColor.NormalBorderColor = Publicas._bordaEntrada;
                metroColor.ComboboxColor.HoverBorderColor = Publicas._bordaEntrada;
                metroColor.ComboboxColor.HoverBackColor = Publicas._bordaEntrada;
                metroColor.ComboboxColor.PressedBackColor = Publicas._bordaEntrada;
                if (Publicas._TemaBlack)
                    metroColor.ComboboxColor.NormalBackColor = Publicas._fundo;
                else
                    metroColor.ComboboxColor.NormalBackColor = Color.WhiteSmoke;
                #endregion

                #region Cria grid para o avaliação de desempenho


                #region Campo para o filtro

                List<Classes.Prazos> _prazos = new PrazosBO().Listar(true, true);

                TipoAvaliacaoComboBox.Items.AddRange(new object[] { "Auto Avaliação", "Feedback do Gestor", "Metas numéricas", "Avaliação do Gestor", "Avaliação do RH", "Feedback do Avaliado", "Plano de Desenvolvimento individual" });

                foreach (var item in _prazos)
                {
                    ReferenciaAvaliacaoComboBox.Items.Add(item.Referencia);
                }

                ReferenciaAvaliacaoComboBox.SelectedIndex = 0;
                TipoAvaliacaoComboBox.SelectedIndex = 0;

                #endregion


                #endregion

                if (Publicas._usuario.SempreMostrarListaDeChamados)
                {
                    chamadosBackgroundWorker.RunWorkerAsync();
                    LiberarDashBoardPictureBox_Click(sender, new EventArgs());
                    BotaoDashboardLabel_Click(sender, new EventArgs());

                    if (_listaChamados != null)
                    {
                        ChamadosDashBoardGrid.DataSource = _listaChamados.Where(w => w.Exibir)
                                                                     //  .OrderBy(o => o.Data)
                                                                     .OrderBy(o => o.Ordem).ToList();
                        
                        DashBordTabControl.SelectedTab = ChamadosTabPage;
                        try
                        {
                            if (ChamadosTabPage.TabVisible)
                            {
                                if (_recordSelecionado != null)
                                    ChamadosDashBoardGrid.Table.CurrentRecord = _recordSelecionado;
                                ChamadosDashBoardGrid.Focus();
                            }
                        }
                        catch { }
                    }
                }

                chamadoTimer_Tick(sender, e);
                chamadoTimer.Start();
            }

            Publicas._heigthTelaInicial = this.Height;
            Publicas._widthTelaInicial = this.Width;
            Publicas._heigthTituloTelaInicial = tituloPanel.Height;
            Publicas._heigthBarraTelaInicial = panel2.Height;

            #region Agenda
            /*
            AgendaScheduleControl.Appearance.PrimeTimeEnd = 19;
            AgendaScheduleControl.Appearance.PrimeTimeStart = 8;
            AgendaScheduleControl.Appearance.DivisionsPerHour = 4;

            try
            {
                AgendaScheduleControl.ScheduleType = Syncfusion.Windows.Forms.Schedule.ScheduleViewType.Month;
                AgendaScheduleControl.Culture = CultureInfo.CreateSpecificCulture("pt-BR");
            }
            catch { }

            ScheduleGrid.DisplayStrings[2] = "Inicio de semana";
            ScheduleGrid.DisplayStrings[4] = "Duplo clique para adicionar um novo evento";
            ScheduleGrid.DisplayStrings[5] = "Para";
            ScheduleGrid.DisplayStrings[6] = "De";
            ScheduleGrid.DisplayStrings[7] = "Excluir está agenda?";
            ScheduleGrid.DisplayStrings[8] = "Exclui agenda";
            ScheduleGrid.DisplayStrings[9] = "Novo Horário";
            ScheduleGrid.DisplayStrings[10] = "Novo Horário de dia todo";
            ScheduleGrid.DisplayStrings[11] = "Alterar Agenda";
            ScheduleGrid.DisplayStrings[12] = "Exclui Agenda";
            ScheduleGrid.DisplayStrings[13] = "Visualizar por Dias";
            ScheduleGrid.DisplayStrings[14] = "Visualizar por Semana de Trabalho";
            ScheduleGrid.DisplayStrings[15] = "Visualizar por Semana";
            ScheduleGrid.DisplayStrings[16] = "Visualizar por Mês";
            
            */
            #endregion

        }

        private void TelaInicial_Load(object sender, EventArgs e)
        {
            LocalizationProvider.Provider = new Localizer();

            Localizer loc = new Localizer();
            loc.getstring("True");
            LocalizationProvider.Provider = loc;

            dataSchedule.MasterList = new SimpleScheduleAppointmentList();
            Publicas.stringConexao = Publicas._conexaoString;
            Publicas.stringConexaoSigom = Publicas._conexaoStringSigom;
            Publicas.stringConexaoProdata = Publicas._conexaoStringProdataABC;

            Publicas._idSuperior = 0;

            TipoAgendaComboBox.Items.Add(Publicas.GetDescription(Publicas.TipoAgenda.SalaDeReuniao, "")); //0
            TipoAgendaComboBox.Items.Add(Publicas.GetDescription(Publicas.TipoAgenda.Carro, "")); //1
            TipoAgendaComboBox.Items.Add(Publicas.GetDescription(Publicas.TipoAgenda.Visita, "")); //2
            TipoAgendaComboBox.Items.Add(Publicas.GetDescription(Publicas.TipoAgenda.TreinamentoExterno, "")); //3
            TipoAgendaComboBox.Items.Add(Publicas.GetDescription(Publicas.TipoAgenda.TreinamentoInterno, "")); //4
            TipoAgendaComboBox.Items.Add(Publicas.GetDescription(Publicas.TipoAgenda.Particular, "")); //5
            TipoAgendaComboBox.Items.Add("Todos"); //6
            TipoAgendaComboBox.SelectedIndex = 6;

            #region Ajusta menu principal para não sobrepor a barra de ferramentas
            this.Left = 0;
            this.Width = 0;
            this.Top = 0;

            //obter o tamanho real de work do usuario
            this.Size = Screen.PrimaryScreen.WorkingArea.Size;

            #endregion
        }

        private void FecharDashBoard()
        {
            DashBoardPanel.Size = new Size(25, 0);
            BotaoDashboardLabel.Text = "7";
            DashBordTabControl.Visible = false;

        }

        private void NomePadrao()
        {
            tituloSistemaLabel.Text = Publicas._nomeDoSistema;

            if (_fixaDashBoard)
            {
                DashBoardPanel.Size = new Size(this.Width - 5, 0);
                BotaoDashboardLabel.Text = "8";
                DashBordTabControl.Visible = true;

                try
                {
                    if (ChamadosTabPage.TabVisible)
                    {
                        if (_recordSelecionado != null)
                            ChamadosDashBoardGrid.Table.CurrentRecord = _recordSelecionado;
                        ChamadosDashBoardGrid.Focus();
                    }
                }
                catch { }
            }
        }
        #endregion

        #region Menu Usuário
        private void usuarioLogadoLabel_MouseHover(object sender, EventArgs e)
        {
            usuarioLogadoPanel.Cursor = Cursors.Hand;
            //usuarioLogadoPanel.BackColor = Publicas._panelTituloFoco;
        }

        private void usuarioLogadoLabel_Click(object sender, EventArgs e)
        {
            TemaPanel.Visible = false;
            FechaMenuSistema();
            FechaSubMenuBolao();
            ConsultaRamaisPanel.Visible = false;
            LeituraResenhaLivro.Visible = false;
            MostraNotificacoesPanel.Visible = false;

            if (MenuUsuarioPanel != null)
            {
                FechaMenuUsuario();
                MenuUsuarioPanel = null;
                return;
            }

            #region Cria estrutura do menu do usuario

            // Menu de fundo (onde agrupa os demais itens)
            MenuUsuarioPanel = new Panel();
            MenuUsuarioPanel.Size = new Size(usuarioLogadoPanel.Width, _heidthMenuPadrao * (Publicas._usuario != null ? 4 : 2));
            MenuUsuarioPanel.Location = new Point(usuarioLogadoPanel.Left, usuarioLogadoPanel.Height);
            MenuUsuarioPanel.BackColor = _corFundoDivisao;

            #region Trocar Usuário
            TrocaUsuarioPanel = new Panel();
            TrocaUsuarioPanel.Size = new Size(_widthMenuPadrao, _heidthMenuPadrao);
            TrocaUsuarioPanel.Dock = DockStyle.Top;
            TrocaUsuarioPanel.BackColor = _corFundoMenu;
            TrocaUsuarioPanel.Name = "TrocaUsuarioPanel";

            DivisoriaTrocaUsuarioImagem = new PictureBox();
            DivisoriaTrocaUsuarioImagem.Size = new Size(0, 2);
            DivisoriaTrocaUsuarioImagem.Dock = DockStyle.Bottom;
            DivisoriaTrocaUsuarioImagem.BackColor = _corFundoDivisao;

            TrocaUsuarioLabel = new Label();
            TrocaUsuarioLabel.AutoSize = false;
            TrocaUsuarioLabel.Size = new Size(_widthLabelMenu, 0);
            TrocaUsuarioLabel.Dock = DockStyle.Fill;
            TrocaUsuarioLabel.Text = "Trocar de Usuário";
            TrocaUsuarioLabel.Font = new Font(dataHoraLabel.Font.FontFamily, (float)12, dataHoraLabel.Font.Style);
            TrocaUsuarioLabel.ForeColor = Color.WhiteSmoke;
            TrocaUsuarioLabel.TextAlign = ContentAlignment.MiddleLeft;
            TrocaUsuarioLabel.Click += new System.EventHandler(this.TrocarUsuarioPanel_Click);
            TrocaUsuarioLabel.MouseHover += new EventHandler(this.TrocaSenhaPanel_MouseHover);
            TrocaUsuarioLabel.Name = "TrocaUsuarioLabel";

            TrocaUsuarioPanel.Controls.Add(TrocaUsuarioLabel);
            TrocaUsuarioPanel.Controls.Add(DivisoriaTrocaUsuarioImagem);
            MenuUsuarioPanel.Controls.Add(TrocaUsuarioPanel);
            #endregion

            #region Sair
            SairPanel = new Panel();
            SairPanel.Size = new Size(_widthMenuPadrao, _heidthMenuPadrao);
            SairPanel.Dock = DockStyle.Top;
            SairPanel.BackColor = _corFundoMenu;
            SairPanel.Name = "SairPanel";

            DivisoriaSairImagem = new PictureBox();
            DivisoriaSairImagem.Size = new Size(0, 2);
            DivisoriaSairImagem.Dock = DockStyle.Bottom;
            DivisoriaSairImagem.BackColor = _corFundoDivisao;

            SairLabel = new Label();
            SairLabel.AutoSize = false;
            SairLabel.Size = new Size(_widthLabelMenu, 0);
            SairLabel.Dock = DockStyle.Fill;
            SairLabel.Text = "Sair";
            SairLabel.Font = new Font(dataHoraLabel.Font.FontFamily, (float)12, dataHoraLabel.Font.Style);
            SairLabel.ForeColor = Color.WhiteSmoke;
            SairLabel.TextAlign = ContentAlignment.MiddleLeft;
            SairLabel.Click += new System.EventHandler(this.SairPanel_Click);
            SairLabel.MouseHover += new EventHandler(this.TrocaSenhaPanel_MouseHover);
            SairLabel.Name = "SairLabel";

            SairPanel.Controls.Add(SairLabel);
            SairPanel.Controls.Add(DivisoriaSairImagem);

            MenuUsuarioPanel.Controls.Add(SairPanel);
            #endregion

            if (Publicas._usuario != null)
            {
                #region Editar perfil
                EditaPerfilPanel = new Panel();
                EditaPerfilPanel.Size = new Size(_widthMenuPadrao, _heidthMenuPadrao);
                EditaPerfilPanel.Dock = DockStyle.Top;
                EditaPerfilPanel.BackColor = _corFundoMenu;
                EditaPerfilPanel.Name = "EditaPerfilPanel";

                DivisoriaEditaPerfilImagem = new PictureBox();
                DivisoriaEditaPerfilImagem.Size = new Size(0, 2);
                DivisoriaEditaPerfilImagem.Dock = DockStyle.Bottom;
                DivisoriaEditaPerfilImagem.BackColor = _corFundoDivisao;

                EditaPerfilLabel = new Label();
                EditaPerfilLabel.AutoSize = false;
                EditaPerfilLabel.Size = new Size(_widthLabelMenu, 0);
                EditaPerfilLabel.Dock = DockStyle.Fill;
                EditaPerfilLabel.Text = "Editar Perfil";
                EditaPerfilLabel.Font = new Font(dataHoraLabel.Font.FontFamily, (float)12, dataHoraLabel.Font.Style);
                EditaPerfilLabel.ForeColor = Color.WhiteSmoke;
                EditaPerfilLabel.TextAlign = ContentAlignment.MiddleLeft;
                EditaPerfilLabel.Click += new System.EventHandler(this.EditarPerfilPanel_Click);
                EditaPerfilLabel.MouseHover += new EventHandler(this.TrocaSenhaPanel_MouseHover);
                EditaPerfilLabel.Name = "EditaPerfilLabel";

                #region Adiciona campos ao menu trocasenha e ao grupo principal
                EditaPerfilPanel.Controls.Add(EditaPerfilLabel);
                //EditaPerfilPanel.Controls.Add(EditaPerfilImagem);
                EditaPerfilPanel.Controls.Add(DivisoriaEditaPerfilImagem);
                //EditaPerfilImagem.SendToBack();

                MenuUsuarioPanel.Controls.Add(EditaPerfilPanel);
                #endregion
                #endregion

                #region Trocar Senha
                TrocaSenhaPanel = new Panel();
                TrocaSenhaPanel.Size = new Size(_widthMenuPadrao, _heidthMenuPadrao);
                TrocaSenhaPanel.Dock = DockStyle.Top;
                TrocaSenhaPanel.BackColor = _corFundoMenu;
                TrocaSenhaPanel.Name = "TrocaSenhaPanel";

                DivisoriaTrocaSenhaImagem = new PictureBox();
                DivisoriaTrocaSenhaImagem.Size = new Size(0, 2);
                DivisoriaTrocaSenhaImagem.Dock = DockStyle.Bottom;
                DivisoriaTrocaSenhaImagem.BackColor = _corFundoDivisao;

                TrocaSenhaLabel = new Label();
                TrocaSenhaLabel.AutoSize = false;
                TrocaSenhaLabel.Size = new Size(_widthLabelMenu, 0);
                TrocaSenhaLabel.Dock = DockStyle.Fill;
                TrocaSenhaLabel.Text = "Trocar senha";
                TrocaSenhaLabel.Font = new Font(dataHoraLabel.Font.FontFamily, (float)12, dataHoraLabel.Font.Style);
                TrocaSenhaLabel.TextAlign = ContentAlignment.MiddleLeft;
                TrocaSenhaLabel.ForeColor = Color.WhiteSmoke;

                TrocaSenhaLabel.Click += new System.EventHandler(this.TrocaSenhaPanel_Click);
                TrocaSenhaLabel.MouseHover += new EventHandler(this.TrocaSenhaPanel_MouseHover);
                TrocaSenhaLabel.Name = "TrocaSenhaLabel";

                #region Adiciona campos ao menu trocasenha e ao grupo principal
                TrocaSenhaPanel.Controls.Add(TrocaSenhaLabel);
                TrocaSenhaPanel.Controls.Add(DivisoriaTrocaSenhaImagem);

                MenuUsuarioPanel.Controls.Add(TrocaSenhaPanel);
                #endregion
                #endregion
            }

            this.Controls.Add(MenuUsuarioPanel);
            MenuUsuarioPanel.BringToFront();
            MenuUsuarioPanel.Visible = true;

            #endregion
        }

        private void TrocaSenhaPanel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresMenuUsuario();

            #region subMenu usuario
            if (((Control)sender).Name.Contains("TrocaSenha"))
            {
                TrocaSenhaLabel.Font = new Font(TrocaSenhaLabel.Font, FontStyle.Bold);
                TrocaSenhaLabel.ForeColor = Publicas._fonteBotaoFocado;
                TrocaSenhaLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("EditaPerfil"))
            {
                EditaPerfilLabel.Font = new Font(EditaPerfilLabel.Font, FontStyle.Bold);
                EditaPerfilLabel.ForeColor = Publicas._fonteBotaoFocado;
                EditaPerfilLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Sair"))
            {
                SairLabel.Font = new Font(SairLabel.Font, FontStyle.Bold);
                SairLabel.ForeColor = Publicas._fonteBotaoFocado;
                SairLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("TrocaUsuario"))
            {
                TrocaUsuarioLabel.Font = new Font(TrocaUsuarioLabel.Font, FontStyle.Bold);
                TrocaUsuarioLabel.ForeColor = Publicas._fonteBotaoFocado;
                TrocaUsuarioLabel.BackColor = _corMenuSelecionado;
                return;
            }

            #endregion
        }

        private void FechaMenuUsuario()
        {
            FecharDashBoard();

            if (MenuUsuarioPanel != null)
            {
                MenuUsuarioPanel.Visible = false;
                this.Controls.Remove(MenuUsuarioPanel);
                MenuUsuarioPanel.Dispose();
                MenuUsuarioPanel = null;
            }
        }

        private void TrocaSenhaPanel_Click(object sender, EventArgs e)
        {
            tituloSistemaLabel.Text = Publicas._nomeDoSistema;
            FechaMenuUsuario();
            MensagemSistema();
            new Cadastros.TrocaDeSenha().ShowDialog();
            NomePadrao();
        }

        private void EditarPerfilPanel_Click(object sender, EventArgs e)
        {
            tituloSistemaLabel.Text = Publicas._nomeDoSistema;
            FechaMenuUsuario();
            MensagemSistema();
            new Cadastros.EditarPerfil().ShowDialog();
            NomePadrao();

            usuarioLogadoLabel.Text = "Olá," + Environment.NewLine + Publicas._usuariologado;

            try
            {
                //FileStream FS = new FileStream("image.jpg", FileMode.OpenOrCreate);
                //FS.Write(Publicas._usuario.Foto, 0, Publicas._usuario.Foto.Length);
                //FS.Close();
                //FS = null;

                using (MemoryStream mStream = new MemoryStream())
                {
                    mStream.Write(Publicas._usuario.Foto, 0, Publicas._usuario.Foto.Length);
                    mStream.Seek(0, SeekOrigin.Begin);

                    fotoUsuarioPictureBox.Image = new Bitmap(mStream);
                    mStream.Close();
                    mStream.Dispose();
                }

                fotoUsuarioPictureBox.SizeMode = PictureBoxSizeMode.StretchImage;
                fotoUsuarioPictureBox.Refresh();
            }
            catch
            {
                fotoUsuarioPictureBox.Image = Properties.Resources.UserLogin;
                fotoUsuarioPictureBox.SizeMode = PictureBoxSizeMode.CenterImage;
            }

            BolaoCopaPanel.Visible = false;// Publicas._usuario.AdministraBolaoCopa || Publicas._usuario.Administrador ||
                                           //((DateTime.Now.Date >= Publicas._dataInicioCopa.AddDays(-14) && DateTime.Now.Date <= Publicas._dataFimCopa.AddDays(3))) &&
                                           //Publicas._usuario.ParticipaBolaoCopa && (Publicas._usuario.IdEmpresa == 1  || Publicas._usuario.IdEmpresa == 19|| Publicas._usuario.UsuarioAcesso == "ELSILVA" || Publicas._usuario.UsuarioAcesso == "VBSANTOS" || Publicas._usuario.UsuarioAcesso == "ADRIANA");

            BolaoPictureBox.Visible = BolaoCopaPanel.Visible;

        }

        private void SairPanel_Click(object sender, EventArgs e)
        {
            if (Publicas._idUsuario != 0)
                new LoginBO().AlterarStatusUsuario(Publicas._idUsuario, Publicas.StatusUsuario.OffLine, Publicas._conexaoString);

            Log _log = new Log();

            _log.Descricao = "Encerrou o sistema sem efetuar login. " + Environment.MachineName.ToUpper(); 

            if (Publicas._idUsuario != 0)
            {
                _log.IdUsuario = Publicas._usuario.Id;
                _log.Descricao = "Usuário efetuou o logoff " + Environment.MachineName.ToUpper(); 
            }

            _log.Tela = "Principal - Logoff";

            try
            {
                new LogBO().Gravar(_log);
            }
            catch { }

            Close();
        }

        private void TrocarUsuarioPanel_Click(object sender, EventArgs e)
        {
            _quantidadeNotificacoesNaoLidas = 0;
            _quantidadeNotificacoesLidas = 0;

            DashBoardPanel.Visible = false;
            notificacaoBolaoTimer.Stop();
            notificacaoTimer.Stop();

            FechaMenuSistema();
            FechaMenuUsuario();
            chamadoTimer.Stop();
            FeriasTimer.Stop();

            //Mudar fundo
            if (!Publicas._TemaBlack && _temasComemorativos)
            {
                _imagemUsada = @"Imagens\FundoAzul.png";
                FundoPictureBox.ImageLocation = _imagemUsada;

                if (_temasComemorativos)
                {
                    if (_dataTemas >= Publicas._dataInicioPeriodoNatal &&
                        _dataTemas <= Publicas._dataFimPeriodoNatal)
                    {
                        _imagemUsada = @"Imagens\FundoAzulNatal.png";
                        FundoPictureBox.ImageLocation = _imagemUsada;
                    }
                    else
                    {
                        if (_dataTemas >= Publicas._dataInicioPeriodoHalloween &&
                        _dataTemas <= Publicas._dataFimPeriodoHalloween)
                        {
                            _imagemUsada = @"Imagens\FundoAzulHalloween.png";
                            FundoPictureBox.ImageLocation = _imagemUsada;
                        }
                        else
                        {
                            if ((_dataTemas >= Publicas._dataInicioCopa &&
                                 _dataTemas <= Publicas._dataFimCopa))
                            {
                                _imagemUsada = @"Imagens\FundoAzul.png";
                                FundoPictureBox.ImageLocation = _imagemUsada;
                            }
                            else
                            {
                                if ((_dataTemas >= Publicas._dataInicioCarnaval &&
                                     _dataTemas <= Publicas._dataFimCarnaval))
                                {
                                    _imagemUsada = @"Imagens\FundoAzulCarnaval.png";
                                    FundoPictureBox.ImageLocation = _imagemUsada;
                                }
                                else
                                {
                                    if ((_dataTemas >= Publicas._dataInicioPascoa &&
                                         _dataTemas <= Publicas._dataFimPascoa))
                                    {
                                        _imagemUsada = @"Imagens\FundoAzulPascoa.png";
                                        FundoPictureBox.ImageLocation = _imagemUsada;
                                    }
                                    else
                                    if ((_dataTemas >= Publicas._dataInicioCrianca &&
                                         _dataTemas <= Publicas._dataFimCrianca))
                                    {
                                        _imagemUsada = @"Imagens\FundoAzulCriancas.png";
                                        FundoPictureBox.ImageLocation = _imagemUsada;
                                    }
                                    else
                                    if ((_dataTemas >= Publicas._dataInicioAnoNovo &&
                                     _dataTemas <= Publicas._dataFimAnoNovo))
                                    {
                                        _imagemUsada = @"Imagens\FundoAzulAnoNovo.png";
                                        FundoPictureBox.ImageLocation = _imagemUsada;
                                    }
                                    else
                                    if ((_dataTemas >= Publicas._dataInicioMaes &&
                                     _dataTemas <= Publicas._dataFimMaes))
                                    {
                                        _imagemUsada = @"Imagens\FundoAzulMaes.png";
                                        FundoPictureBox.ImageLocation = _imagemUsada;
                                    }
                                    else
                                    if ((_dataTemas >= Publicas._dataInicioPais &&
                                     _dataTemas <= Publicas._dataFimPais))
                                    {
                                        _imagemUsada = @"Imagens\FundoAzulPais.png";
                                        FundoPictureBox.ImageLocation = _imagemUsada;
                                    }
                                }
                            }
                        }
                    }
                }
            }
            else
            {

                if (_temasComemorativos)
                {
                    _imagemUsada = @"Imagens\" + _fundoBlackNome[pos];

                    if (linhaImagem != "" && linhaImagem != null)
                        _imagemUsada = linhaImagem;

                    FundoPictureBox.ImageLocation = _imagemUsada;

                    if (_dataTemas >= Publicas._dataInicioPeriodoNatal &&
                        _dataTemas <= Publicas._dataFimPeriodoNatal)
                    {
                        _imagemUsada = _imagemUsada.Replace(".jpg", "") + "Natal.png";
                        FundoPictureBox.ImageLocation = _imagemUsada;
                    }
                    else
                    {
                        if (_dataTemas >= Publicas._dataInicioPeriodoHalloween &&
                        _dataTemas <= Publicas._dataFimPeriodoHalloween)
                        {
                            _imagemUsada = _imagemUsada.Replace(".jpg", "") + "Halloween.png";
                            FundoPictureBox.ImageLocation = _imagemUsada;
                        }
                        else
                        {
                            if ((_dataTemas >= Publicas._dataInicioCopa &&
                                 _dataTemas <= Publicas._dataFimCopa))
                            {
                                _imagemUsada = @"Imagens\" + _fundoBlackNome[pos];
                                FundoPictureBox.ImageLocation = _imagemUsada;
                            }
                            else
                            {
                                if ((_dataTemas >= Publicas._dataInicioCarnaval &&
                                     _dataTemas <= Publicas._dataFimCarnaval))
                                {
                                    _imagemUsada = _imagemUsada.Replace(".jpg", "") + "Carnaval.png";
                                    FundoPictureBox.ImageLocation = _imagemUsada;
                                }
                                else
                                {
                                    if ((_dataTemas >= Publicas._dataInicioPascoa &&
                                         _dataTemas <= Publicas._dataFimPascoa))
                                    {
                                        _imagemUsada = _imagemUsada.Replace(".jpg", "") + "Pascoa.png";
                                        FundoPictureBox.ImageLocation = _imagemUsada;
                                    }
                                    else
                                    if ((_dataTemas >= Publicas._dataInicioCrianca &&
                                         _dataTemas <= Publicas._dataFimCrianca))
                                    {
                                        _imagemUsada = _imagemUsada.Replace(".jpg", "") + "Criancas.png";
                                        FundoPictureBox.ImageLocation = _imagemUsada;
                                    }
                                    else
                                    if ((_dataTemas >= Publicas._dataInicioAnoNovo &&
                                         _dataTemas <= Publicas._dataFimAnoNovo))
                                    {
                                        _imagemUsada = _imagemUsada.Replace(".jpg", "") + "AnoNovo.png";
                                        FundoPictureBox.ImageLocation = _imagemUsada;
                                    }
                                    else
                                    if ((_dataTemas >= Publicas._dataInicioMaes &&
                                         _dataTemas <= Publicas._dataFimMaes))
                                    {
                                        _imagemUsada = _imagemUsada.Replace(".jpg", "") + "Maes.png";
                                        FundoPictureBox.ImageLocation = _imagemUsada;
                                    }
                                    else
                                    if ((_dataTemas >= Publicas._dataInicioPais &&
                                         _dataTemas <= Publicas._dataFimPais))
                                    {
                                        _imagemUsada = _imagemUsada.Replace(".jpg", "") + "Pais.png";
                                        FundoPictureBox.ImageLocation = _imagemUsada;
                                    }
                                }
                            }
                        }
                    }
                }                
            }

            new LoginBO().AlterarStatusUsuario(Publicas._idUsuario, Publicas.StatusUsuario.OffLine, Publicas._conexaoString);

            Publicas._idUsuario = 0;
            Publicas._usuario = null;
            Publicas._mensagemSistema = string.Empty;
            this.Cursor = Cursors.Default;

            if (_listaArquiveiImportados != null)
                _listaArquiveiImportados.Clear();

            if (_listaEmprestimos != null)
                _listaEmprestimos.Clear();

            if (_listaReservas != null)
                _listaReservas.Clear();

            if (_listaResenhas != null)
                _listaResenhas.Clear();

            if (_listaResenhasNaoCadastradas != null)
                _listaResenhasNaoCadastradas.Clear();

            if (_listaDownLoad != null)
                _listaDownLoad.Clear();

            if (_listaComunicadosNotificacao != null)
                _listaComunicadosNotificacao.Clear();

            usuarioLogadoLabel.Text = "Olá," + Environment.NewLine + "Efetue seu login";

            fotoUsuarioPictureBox.Image = Properties.Resources.UserLogin;
            fotoUsuarioPictureBox.SizeMode = PictureBoxSizeMode.CenterImage;

            #region Chama tela de login
            NomePadrao();
            this.TelaInicial_Shown(sender, new EventArgs());
            #endregion

        }

        private void MudaSelecaoDeCoresMenuUsuario()
        {
            try
            {
                TrocaSenhaLabel.Font = new Font(TrocaSenhaLabel.Font, TrocaSenhaLabel.Font.Style & ~FontStyle.Bold);
                EditaPerfilLabel.Font = new Font(EditaPerfilLabel.Font, EditaPerfilLabel.Font.Style & ~FontStyle.Bold);
                SairLabel.Font = new Font(SairLabel.Font, SairLabel.Font.Style & ~FontStyle.Bold);
                TrocaUsuarioLabel.Font = new Font(TrocaUsuarioLabel.Font, TrocaUsuarioLabel.Font.Style & ~FontStyle.Bold);
            }
            catch { }

            try
            {
                TrocaSenhaLabel.BackColor = _corFundoMenu;
                EditaPerfilLabel.BackColor = TrocaSenhaPanel.BackColor;
                SairLabel.BackColor = TrocaSenhaPanel.BackColor;
                TrocaUsuarioLabel.BackColor = TrocaSenhaPanel.BackColor;
            }
            catch { }

            try
            {
                TrocaSenhaLabel.ForeColor = Color.WhiteSmoke;
                EditaPerfilLabel.ForeColor = Color.WhiteSmoke;
                SairLabel.ForeColor = Color.WhiteSmoke;
                TrocaUsuarioLabel.ForeColor = Color.WhiteSmoke;
            }
            catch { }
        }

        private void usuarioLogadoLabel_MouseLeave(object sender, EventArgs e)
        {
            usuarioLogadoLabel.Cursor = Cursors.Default;
            usuarioLogadoPanel.BackColor = Publicas._panelTitulo;
        }

        #endregion

        #region Criação da estrutura do menu e subMenus

        private void FechaMenuSistema()
        {
            MostraNotificacoesPanel.Visible = false;
            FecharDashBoard();
            FechaSubMenuRecursosHumanos();
            FechaSubMenuFavoritos();
            FechaSubMenuJuridico();
            FechaSubMenuEscrituracaoFiscal();
            FechaSubMenuControladoria();
            FechaSubMenuAtendimento();
            FechaSubMenuTI();
            FechaSubMenuBSC();
            FechaSubMenuOperacional();
            FechaSubMenuRecebedoria();
            FechaSubMenuFinanceiro();
            FechaSubMenuCigam();
            FechaSubMenuNotasFiscais();
            FechaSubMenuSuprimentos();
            FechaSubMenuConciliacao();

            ConsultaRamaisPanel.Visible = false;
            LeituraResenhaLivro.Visible = false;
            MostraNotificacoesPanel.Visible = false;

            if (MenuSistemaPanel != null)
            {
                MenuSistemaPanel.Visible = false;
                this.Controls.Remove(MenuSistemaPanel);
                MenuSistemaPanel.Dispose();
                MenuSistemaPanel = null;
            }
            Refresh();
        }

        private void MudaSelecaoDeCoresMenuSistema()
        {
            ControladoriaLabel.Font = new Font(ControladoriaLabel.Font, ControladoriaLabel.Font.Style & ~FontStyle.Bold);
            RecursosHumanosLabel.Font = new Font(RecursosHumanosLabel.Font, RecursosHumanosLabel.Font.Style & ~FontStyle.Bold);
            AtendimentoLabel.Font = new Font(AtendimentoLabel.Font, AtendimentoLabel.Font.Style & ~FontStyle.Bold);
            JuridicoLabel.Font = new Font(JuridicoLabel.Font, JuridicoLabel.Font.Style & ~FontStyle.Bold);
            TILabel.Font = new Font(TILabel.Font, TILabel.Font.Style & ~FontStyle.Bold);
            BSCLabel.Font = new Font(BSCLabel.Font, BSCLabel.Font.Style & ~FontStyle.Bold);
            OperacionalLabel.Font = new Font(OperacionalLabel.Font, OperacionalLabel.Font.Style & ~FontStyle.Bold);
            RecebedoriaLabel.Font = new Font(RecebedoriaLabel.Font, RecebedoriaLabel.Font.Style & ~FontStyle.Bold);
            FinanceiroLabel.Font = new Font(FinanceiroLabel.Font, FinanceiroLabel.Font.Style & ~FontStyle.Bold);
            DepartamentoPessoalLabel.Font = new Font(DepartamentoPessoalLabel.Font, DepartamentoPessoalLabel.Font.Style & ~FontStyle.Bold);
            SuprimentosLabel.Font = new Font(SuprimentosLabel.Font, SuprimentosLabel.Font.Style & ~FontStyle.Bold);

            try
            {
                FavoritosLabel.Font = new Font(TILabel.Font, TILabel.Font.Style & ~FontStyle.Bold);
                FavoritosLabel.ForeColor = Color.WhiteSmoke;
                FavoritosLabel.BackColor = _corFundoMenu;
                FavoritosSetaLabel.Text = "6";
                FavoritosSetaLabel.BackColor = _corFundoMenu;
                FavoritosSetaLabel.ForeColor = Color.WhiteSmoke;
            }
            catch { }

            ControladoriaLabel.ForeColor = Color.WhiteSmoke;
            ControladoriaSetaLabel.ForeColor = Color.WhiteSmoke;
            RecursosHumanosLabel.ForeColor = Color.WhiteSmoke;
            RecursosHumanosSetaLabel.ForeColor = Color.WhiteSmoke;
            AtendimentoLabel.ForeColor = Color.WhiteSmoke;
            AtendimentoSetaLabel.ForeColor = Color.WhiteSmoke;
            JuridicoLabel.ForeColor = Color.WhiteSmoke;
            JuridicoSetaLabel.ForeColor = Color.WhiteSmoke;
            TILabel.ForeColor = Color.WhiteSmoke;
            TISetaLabel.ForeColor = Color.WhiteSmoke;
            BSCLabel.ForeColor = Color.WhiteSmoke;
            BSCSetaLabel.ForeColor = Color.WhiteSmoke;
            OperacionalLabel.ForeColor = Color.WhiteSmoke;
            OperacionalSetaLabel.ForeColor = Color.WhiteSmoke;
            RecebedoriaLabel.ForeColor = Color.WhiteSmoke;
            RecebedoriaSetaLabel.ForeColor = Color.WhiteSmoke;
            FinanceiroLabel.ForeColor = Color.WhiteSmoke;
            FinanceiroSetaLabel.ForeColor = Color.WhiteSmoke;
            DepartamentoPessoalLabel.ForeColor = Color.WhiteSmoke;
            DepartamentoPessoalSetaLabel.ForeColor = Color.WhiteSmoke;
            SuprimentosLabel.ForeColor = Color.WhiteSmoke;
            SuprimentosSetaLabel.ForeColor = Color.WhiteSmoke;

            RecursosHumanosSetaLabel.Text = "6";
            ControladoriaSetaLabel.Text = "6";
            JuridicoSetaLabel.Text = "6";
            AtendimentoSetaLabel.Text = "6";
            TISetaLabel.Text = "6";
            BSCSetaLabel.Text = "6";
            OperacionalSetaLabel.Text = "6";
            RecebedoriaSetaLabel.Text = "6";
            FinanceiroSetaLabel.Text = "6";
            DepartamentoPessoalSetaLabel.Text = "6";
            SuprimentosSetaLabel.Text = "6";

            ControladoriaLabel.BackColor = _corFundoMenu;
            RecursosHumanosLabel.BackColor = ControladoriaPanel.BackColor;
            AtendimentoLabel.BackColor = ControladoriaPanel.BackColor;
            JuridicoLabel.BackColor = ControladoriaPanel.BackColor;
            TILabel.BackColor = ControladoriaPanel.BackColor;
            BSCLabel.BackColor = ControladoriaPanel.BackColor;
            OperacionalLabel.BackColor = ControladoriaPanel.BackColor;
            RecebedoriaLabel.BackColor = ControladoriaPanel.BackColor;
            FinanceiroLabel.BackColor = ControladoriaPanel.BackColor;
            DepartamentoPessoalLabel.BackColor = ControladoriaPanel.BackColor;
            SuprimentosLabel.BackColor = ControladoriaPanel.BackColor;

            ControladoriaSetaLabel.BackColor = ControladoriaPanel.BackColor;
            RecursosHumanosSetaLabel.BackColor = ControladoriaPanel.BackColor;
            AtendimentoSetaLabel.BackColor = ControladoriaPanel.BackColor;
            JuridicoSetaLabel.BackColor = ControladoriaPanel.BackColor;
            TISetaLabel.BackColor = ControladoriaPanel.BackColor;
            BSCSetaLabel.BackColor = ControladoriaPanel.BackColor;
            OperacionalSetaLabel.BackColor = ControladoriaPanel.BackColor;
            RecebedoriaSetaLabel.BackColor = ControladoriaPanel.BackColor;
            FinanceiroSetaLabel.BackColor = ControladoriaPanel.BackColor;
            DepartamentoPessoalSetaLabel.BackColor = ControladoriaPanel.BackColor;
            SuprimentosSetaLabel.BackColor = ControladoriaPanel.BackColor;
        }

        private void AcessoAoMenuSeta_MouseHover(object sender, EventArgs e)
        {
            AcessoAoMenuPanel.Cursor = Cursors.Hand;
            //AcessoAoMenuPanel.BackColor = Publicas._panelTituloFoco;
            AcessoAoMenuLabel.Font = new Font(AcessoAoMenuLabel.Font, FontStyle.Bold);
        }

        private void AcessoAoMenuSeta_MouseLeave(object sender, EventArgs e)
        {
            //AcessoAoMenuPanel.BackColor = Publicas._panelTitulo;
            AcessoAoMenuLabel.Font = new Font(AcessoAoMenuLabel.Font, AcessoAoMenuLabel.Font.Style & ~FontStyle.Bold);
        }

        private void AcessoAoMenuSeta_Click(object sender, EventArgs e)
        {
            TemaPanel.Visible = false;
            FecharDashBoard();
            FechaMenuUsuario();
            FechaSubMenuBolao();
            FechaSubMenuRecursosHumanos();
            FechaSubMenuFavoritos();
            FechaSubMenuJuridico();
            FechaSubMenuEscrituracaoFiscal(); 
            FechaSubMenuControladoria();
            FechaSubMenuAtendimento();
            FechaSubMenuTI();
            FechaSubMenuBSC();
            FechaSubMenuOperacional();
            FechaSubMenuRecebedoria();
            FechaSubMenuFinanceiro();
            FechaSubMenuSuprimentos();
            FechaSubMenuConciliacao();

            if (MenuSistemaPanel != null)
            {
                FechaMenuSistema();
                return;
            }

            if (Publicas._usuario == null)
                return;

            #region Cria estrutura 

            // Menu de fundo (onde agrupa os demais itens)
            MenuSistemaPanel = new Panel();
            MenuSistemaPanel.Size = new Size(AcessoAoMenuPanel.Width, _heidthMenuSistema * (10 + (_listaMenusFavoritos.Count != 0 ? 1 : 0)));

            if (MenuSistemaPanel.Height > _heightTela)
            {  //inclui scrool quando maior que tela, notes de tela pequena
                MenuSistemaPanel.Size = new Size(AcessoAoMenuPanel.Width, _heightTela);
                MenuSistemaPanel.AutoScroll = true;
            }
            MenuSistemaPanel.Location = new Point(AcessoAoMenuPanel.Left, AcessoAoMenuPanel.Height);
            MenuSistemaPanel.BackColor = _corFundoDivisao;
            this.Controls.Add(MenuSistemaPanel);
            MenuSistemaPanel.BringToFront();
            MenuSistemaPanel.Visible = true;
            #endregion

            // Os ultimos SubMenus deve ser incluidos primeiros
            #region TI
            TIPanel = new Panel();
            TIPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            TIPanel.Dock = DockStyle.Top;
            TIPanel.BackColor = _corFundoMenu;
            TIPanel.Name = "TIPanel";
            TIPanel.Enabled = Publicas._usuario.Administrador || Publicas._usuario.AcessaRamais || Publicas._usuario.Id == 59 || Publicas._usuario.Id == 544;

            DivisoriaTIImagem = new PictureBox();
            DivisoriaTIImagem.Size = new Size(0, 4);
            DivisoriaTIImagem.Dock = DockStyle.Bottom;
            DivisoriaTIImagem.BackColor = _corFundoDivisao;

            Divisoria2TIImagem = new PictureBox();
            Divisoria2TIImagem.Size = new Size(1, 2);
            Divisoria2TIImagem.Dock = DockStyle.Right;
            Divisoria2TIImagem.BackColor = _corFundoDivisao;// System.Drawing.Color.FromArgb(2, 91, 149);

            TISetaLabel = new Label();
            TISetaLabel.AutoSize = false;
            TISetaLabel.Size = new Size(20, 59);
            TISetaLabel.Dock = DockStyle.Right;
            TISetaLabel.Text = "6";
            TISetaLabel.Font = new Font("Webdings", (float)12);
            TISetaLabel.TextAlign = ContentAlignment.MiddleCenter;
            TISetaLabel.MouseHover += new EventHandler(this.RecursosHumanosSetaLabel_MouseHover);
            TISetaLabel.Click += new System.EventHandler(this.TISetaLabel_Click);
            TISetaLabel.Name = "TISetaLabel";
            TISetaLabel.ForeColor = Color.WhiteSmoke;

            TILabel = new Label();
            TILabel.AutoSize = false;
            TILabel.Size = new Size(_widthLabelMenuSistema, 0);
            TILabel.Dock = DockStyle.Fill;
            TILabel.Text = "Tecnologia da Informação";
            TILabel.Font = CorFontepadraoLabel.Font;
            TILabel.ForeColor = Color.WhiteSmoke;
            TILabel.TextAlign = ContentAlignment.MiddleRight;
            TILabel.MouseHover += new EventHandler(this.RecursosHumanosPanel_MouseHover);
            TILabel.Click += new System.EventHandler(this.TISetaLabel_Click);
            TILabel.Name = "TILabel";

            TIPanel.Controls.Add(TILabel);
            TIPanel.Controls.Add(Divisoria2TIImagem);
            TIPanel.Controls.Add(TISetaLabel);
            TIPanel.Controls.Add(DivisoriaTIImagem);

            MenuSistemaPanel.Controls.Add(TIPanel);
            #endregion

            #region Suprimentos
            SuprimentosPanel = new Panel();
            SuprimentosPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            SuprimentosPanel.Dock = DockStyle.Top;
            SuprimentosPanel.BackColor = _corFundoMenu;
            SuprimentosPanel.Name = "SuprimentosPanel";
            SuprimentosPanel.Enabled = Publicas._usuario.Desenvolvedor || Publicas._usuario.AcessaSuprimentos;

            DivisoriaSuprimentosImagem = new PictureBox();
            DivisoriaSuprimentosImagem.Size = new Size(0, 4);
            DivisoriaSuprimentosImagem.Dock = DockStyle.Bottom;
            DivisoriaSuprimentosImagem.BackColor = _corFundoDivisao;

            Divisoria2SuprimentosImagem = new PictureBox();
            Divisoria2SuprimentosImagem.Size = new Size(1, 2);
            Divisoria2SuprimentosImagem.Dock = DockStyle.Right;
            Divisoria2SuprimentosImagem.BackColor = _corFundoDivisao;// System.Drawing.Color.FromArgb(2, 91, 149);

            SuprimentosSetaLabel = new Label();
            SuprimentosSetaLabel.AutoSize = false;
            SuprimentosSetaLabel.Size = new Size(20, 59);
            SuprimentosSetaLabel.Dock = DockStyle.Right;
            SuprimentosSetaLabel.Text = "6";
            SuprimentosSetaLabel.Font = new Font("Webdings", (float)12);
            SuprimentosSetaLabel.TextAlign = ContentAlignment.MiddleCenter;
            SuprimentosSetaLabel.MouseHover += new EventHandler(this.RecursosHumanosSetaLabel_MouseHover);
            SuprimentosSetaLabel.Click += new System.EventHandler(this.SuprimentosSetaLabel_Click);
            SuprimentosSetaLabel.Name = "SuprimentosSetaLabel";
            SuprimentosSetaLabel.ForeColor = Color.WhiteSmoke;

            SuprimentosLabel = new Label();
            SuprimentosLabel.AutoSize = false;
            SuprimentosLabel.Size = new Size(_widthLabelMenuSistema, 0);
            SuprimentosLabel.Dock = DockStyle.Fill;
            SuprimentosLabel.Text = "Suprimentos";
            SuprimentosLabel.Font = CorFontepadraoLabel.Font;
            SuprimentosLabel.ForeColor = Color.WhiteSmoke;
            SuprimentosLabel.TextAlign = ContentAlignment.MiddleRight;
            SuprimentosLabel.MouseHover += new EventHandler(this.RecursosHumanosPanel_MouseHover);
            SuprimentosLabel.Click += new System.EventHandler(this.SuprimentosSetaLabel_Click);
            SuprimentosLabel.Name = "SuprimentosLabel";

            SuprimentosPanel.Controls.Add(SuprimentosLabel);
            SuprimentosPanel.Controls.Add(Divisoria2SuprimentosImagem);
            SuprimentosPanel.Controls.Add(SuprimentosSetaLabel);
            SuprimentosPanel.Controls.Add(DivisoriaSuprimentosImagem);

            MenuSistemaPanel.Controls.Add(SuprimentosPanel);
            #endregion

            #region RecursosHumanos
            RecursosHumanosPanel = new Panel();
            RecursosHumanosPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            RecursosHumanosPanel.Dock = DockStyle.Top;
            RecursosHumanosPanel.BackColor = _corFundoMenu;
            RecursosHumanosPanel.Name = "RecursosHumanosPanel";

            DivisoriaRecursosHumanosImagem = new PictureBox();
            DivisoriaRecursosHumanosImagem.Size = new Size(0, 4);
            DivisoriaRecursosHumanosImagem.Dock = DockStyle.Bottom;
            DivisoriaRecursosHumanosImagem.BackColor = _corFundoDivisao;

            Divisoria2RecursosHumanosImagem = new PictureBox();
            Divisoria2RecursosHumanosImagem.Size = new Size(1, 2);
            Divisoria2RecursosHumanosImagem.Dock = DockStyle.Right;
            Divisoria2RecursosHumanosImagem.BackColor = _corFundoDivisao; // System.Drawing.Color.FromArgb(2, 91, 149);

            RecursosHumanosSetaLabel = new Label();
            RecursosHumanosSetaLabel.AutoSize = false;
            RecursosHumanosSetaLabel.Size = new Size(20, 59);
            RecursosHumanosSetaLabel.Dock = DockStyle.Right;
            RecursosHumanosSetaLabel.Text = "6";
            RecursosHumanosSetaLabel.Font = new Font("Webdings", (float)12);
            RecursosHumanosSetaLabel.TextAlign = ContentAlignment.MiddleCenter;
            RecursosHumanosSetaLabel.Click += new System.EventHandler(this.RecursosHumanosSetaLabel_Click);
            RecursosHumanosSetaLabel.MouseHover += new EventHandler(this.RecursosHumanosSetaLabel_MouseHover);
            RecursosHumanosSetaLabel.Name = "RecursosHumanosSetaLabel";
            RecursosHumanosSetaLabel.ForeColor = Color.WhiteSmoke;

            RecursosHumanosLabel = new Label();
            RecursosHumanosLabel.AutoSize = false;
            RecursosHumanosLabel.Size = new Size(_widthLabelMenuSistema, 0);
            RecursosHumanosLabel.Dock = DockStyle.Fill;
            RecursosHumanosLabel.Text = "Recursos Humanos";
            RecursosHumanosLabel.Font = CorFontepadraoLabel.Font;
            RecursosHumanosLabel.ForeColor = Color.WhiteSmoke;
            RecursosHumanosLabel.TextAlign = ContentAlignment.MiddleRight;
            RecursosHumanosLabel.MouseHover += new EventHandler(this.RecursosHumanosPanel_MouseHover);
            RecursosHumanosLabel.Click += new System.EventHandler(this.RecursosHumanosSetaLabel_Click);
            RecursosHumanosLabel.Name = "RecursosHumanosLabel";

            RecursosHumanosPanel.Controls.Add(RecursosHumanosLabel);
            //RecursosHumanosPanel.Controls.Add(RecursosHumanosImagem);
            RecursosHumanosPanel.Controls.Add(Divisoria2RecursosHumanosImagem);
            RecursosHumanosPanel.Controls.Add(RecursosHumanosSetaLabel);
            RecursosHumanosPanel.Controls.Add(DivisoriaRecursosHumanosImagem);

            MenuSistemaPanel.Controls.Add(RecursosHumanosPanel);
            #endregion
            
            #region Recebedoria
            RecebedoriaPanel = new Panel();
            RecebedoriaPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            RecebedoriaPanel.Dock = DockStyle.Top;
            RecebedoriaPanel.BackColor = _corFundoMenu;
            RecebedoriaPanel.Name = "RecebedoriaPanel";
            RecebedoriaPanel.Enabled = Publicas._usuario.AcessaRecebedoria || Publicas._usuario.Administrador;

            DivisoriaRecebedoriaImagem = new PictureBox();
            DivisoriaRecebedoriaImagem.Size = new Size(0, 4);
            DivisoriaRecebedoriaImagem.Dock = DockStyle.Bottom;
            DivisoriaRecebedoriaImagem.BackColor = _corFundoDivisao;

            Divisoria2RecebedoriaImagem = new PictureBox();
            Divisoria2RecebedoriaImagem.Size = new Size(1, 2);
            Divisoria2RecebedoriaImagem.Dock = DockStyle.Right;
            Divisoria2RecebedoriaImagem.BackColor = _corFundoDivisao; //System.Drawing.Color.FromArgb(2, 91, 149);

            RecebedoriaSetaLabel = new Label();
            RecebedoriaSetaLabel.AutoSize = false;
            RecebedoriaSetaLabel.Size = new Size(20, 59);
            RecebedoriaSetaLabel.Dock = DockStyle.Right;
            RecebedoriaSetaLabel.Text = "6";
            RecebedoriaSetaLabel.Font = new Font("Webdings", (float)12);
            RecebedoriaSetaLabel.TextAlign = ContentAlignment.MiddleCenter;
            RecebedoriaSetaLabel.MouseHover += new EventHandler(this.RecursosHumanosSetaLabel_MouseHover);
            RecebedoriaSetaLabel.Click += new System.EventHandler(this.RecebedoriaSetaLabel_Click);
            RecebedoriaSetaLabel.Name = "RecebedoriaSetaLabel";
            RecebedoriaSetaLabel.ForeColor = Color.WhiteSmoke;

            RecebedoriaLabel = new Label();
            RecebedoriaLabel.AutoSize = false;
            RecebedoriaLabel.Size = new Size(_widthLabelMenuSistema, 0);
            RecebedoriaLabel.Dock = DockStyle.Fill;
            RecebedoriaLabel.Text = "Recebedoria";
            RecebedoriaLabel.Font = CorFontepadraoLabel.Font;
            RecebedoriaLabel.ForeColor = Color.WhiteSmoke;
            RecebedoriaLabel.TextAlign = ContentAlignment.MiddleRight;
            RecebedoriaLabel.MouseHover += new EventHandler(this.RecursosHumanosPanel_MouseHover);
            RecebedoriaLabel.Click += new System.EventHandler(this.RecebedoriaSetaLabel_Click);
            RecebedoriaLabel.Name = "RecebedoriaLabel";


            RecebedoriaPanel.Controls.Add(RecebedoriaLabel);
            RecebedoriaPanel.Controls.Add(Divisoria2RecebedoriaImagem);
            RecebedoriaPanel.Controls.Add(RecebedoriaSetaLabel);
            RecebedoriaPanel.Controls.Add(DivisoriaRecebedoriaImagem);
            MenuSistemaPanel.Controls.Add(RecebedoriaPanel);
            #endregion

            #region Operacional
            OperacionalPanel = new Panel();
            OperacionalPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            OperacionalPanel.Dock = DockStyle.Top;
            OperacionalPanel.BackColor = _corFundoMenu;
            OperacionalPanel.Name = "OperacionalPanel";
            OperacionalPanel.Enabled = true;// Publicas._usuario.AcessaOperacional;
            //Publicas._usuario.Administrador;

            DivisoriaOperacionalImagem = new PictureBox();
            DivisoriaOperacionalImagem.Size = new Size(0, 4);
            DivisoriaOperacionalImagem.Dock = DockStyle.Bottom;
            DivisoriaOperacionalImagem.BackColor = _corFundoDivisao;

            Divisoria2OperacionalImagem = new PictureBox();
            Divisoria2OperacionalImagem.Size = new Size(1, 2);
            Divisoria2OperacionalImagem.Dock = DockStyle.Right;
            Divisoria2OperacionalImagem.BackColor = _corFundoDivisao; //System.Drawing.Color.FromArgb(2, 91, 149);

            OperacionalSetaLabel = new Label();
            OperacionalSetaLabel.AutoSize = false;
            OperacionalSetaLabel.Size = new Size(20, 59);
            OperacionalSetaLabel.Dock = DockStyle.Right;
            OperacionalSetaLabel.Text = "6";
            OperacionalSetaLabel.Font = new Font("Webdings", (float)12);
            OperacionalSetaLabel.TextAlign = ContentAlignment.MiddleCenter;
            OperacionalSetaLabel.MouseHover += new EventHandler(this.RecursosHumanosSetaLabel_MouseHover);
            OperacionalSetaLabel.Click += new System.EventHandler(this.OperacionalSetaLabel_Click);
            OperacionalSetaLabel.Name = "OperacionalSetaLabel";
            OperacionalSetaLabel.ForeColor = Color.WhiteSmoke;

            OperacionalLabel = new Label();
            OperacionalLabel.AutoSize = false;
            OperacionalLabel.Size = new Size(_widthLabelMenuSistema, 0);
            OperacionalLabel.Dock = DockStyle.Fill;
            OperacionalLabel.Text = "Operacional";
            OperacionalLabel.Font = CorFontepadraoLabel.Font;
            OperacionalLabel.ForeColor = Color.WhiteSmoke;
            OperacionalLabel.TextAlign = ContentAlignment.MiddleRight;
            OperacionalLabel.MouseHover += new EventHandler(this.RecursosHumanosPanel_MouseHover);
            OperacionalLabel.Click += new System.EventHandler(this.OperacionalSetaLabel_Click);

            OperacionalLabel.Name = "OperacionalLabel";


            OperacionalPanel.Controls.Add(OperacionalLabel);
            OperacionalPanel.Controls.Add(Divisoria2OperacionalImagem);
            OperacionalPanel.Controls.Add(OperacionalSetaLabel);
            OperacionalPanel.Controls.Add(DivisoriaOperacionalImagem);
            MenuSistemaPanel.Controls.Add(OperacionalPanel);
            #endregion

            #region Juridico
            JuridicoPanel = new Panel();
            JuridicoPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            JuridicoPanel.Dock = DockStyle.Top;
            JuridicoPanel.BackColor = _corFundoMenu;
            JuridicoPanel.Name = "JuridicoPanel";
            JuridicoPanel.Enabled = Publicas._usuario.AcessaJuridico;

            DivisoriaJuridicoImagem = new PictureBox();
            DivisoriaJuridicoImagem.Size = new Size(0, 4);
            DivisoriaJuridicoImagem.Dock = DockStyle.Bottom;
            DivisoriaJuridicoImagem.BackColor = _corFundoDivisao;

            Divisoria2JuridicoImagem = new PictureBox();
            Divisoria2JuridicoImagem.Size = new Size(1, 2);
            Divisoria2JuridicoImagem.Dock = DockStyle.Right;
            Divisoria2JuridicoImagem.BackColor = _corFundoDivisao; //System.Drawing.Color.FromArgb(2, 91, 149);

            JuridicoSetaLabel = new Label();
            JuridicoSetaLabel.AutoSize = false;
            JuridicoSetaLabel.Size = new Size(20, 59);
            JuridicoSetaLabel.Dock = DockStyle.Right;
            JuridicoSetaLabel.Text = "6";
            JuridicoSetaLabel.Font = new Font("Webdings", (float)12);
            JuridicoSetaLabel.TextAlign = ContentAlignment.MiddleCenter;
            JuridicoSetaLabel.Click += new System.EventHandler(this.JuridicoSetaLabel_Click);
            JuridicoSetaLabel.MouseHover += new EventHandler(this.RecursosHumanosSetaLabel_MouseHover);
            JuridicoSetaLabel.Name = "JuridicoSetaLabel";
            JuridicoSetaLabel.ForeColor = Color.WhiteSmoke;

            JuridicoLabel = new Label();
            JuridicoLabel.AutoSize = false;
            JuridicoLabel.Size = new Size(_widthLabelMenuSistema, 0);
            JuridicoLabel.Dock = DockStyle.Fill;
            JuridicoLabel.Text = "Juridico";
            JuridicoLabel.Font = CorFontepadraoLabel.Font;
            JuridicoLabel.ForeColor = Color.WhiteSmoke;
            JuridicoLabel.TextAlign = ContentAlignment.MiddleRight;
            JuridicoLabel.MouseHover += new EventHandler(this.RecursosHumanosPanel_MouseHover);
            JuridicoLabel.Click += new System.EventHandler(this.JuridicoSetaLabel_Click);
            JuridicoLabel.Name = "JuridicoLabel";

            JuridicoPanel.Controls.Add(JuridicoLabel);
            //JuridicoPanel.Controls.Add(JuridicoImagem);
            JuridicoPanel.Controls.Add(Divisoria2JuridicoImagem);
            JuridicoPanel.Controls.Add(JuridicoSetaLabel);
            JuridicoPanel.Controls.Add(DivisoriaJuridicoImagem);

            MenuSistemaPanel.Controls.Add(JuridicoPanel);
            #endregion
            
            #region Financeiro
            FinanceiroPanel = new Panel();
            FinanceiroPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            FinanceiroPanel.Dock = DockStyle.Top;
            FinanceiroPanel.BackColor = _corFundoMenu;
            FinanceiroPanel.Name = "FinanceiroPanel";
            FinanceiroPanel.Enabled = Publicas._usuario.Desenvolvedor || Publicas._usuario.AcessaFinanceiro;

            DivisoriaFinanceiroImagem = new PictureBox();
            DivisoriaFinanceiroImagem.Size = new Size(0, 4);
            DivisoriaFinanceiroImagem.Dock = DockStyle.Bottom;
            DivisoriaFinanceiroImagem.BackColor = _corFundoDivisao;

            Divisoria2FinanceiroImagem = new PictureBox();
            Divisoria2FinanceiroImagem.Size = new Size(1, 2);
            Divisoria2FinanceiroImagem.Dock = DockStyle.Right;
            Divisoria2FinanceiroImagem.BackColor = _corFundoDivisao; //System.Drawing.Color.FromArgb(2, 91, 149);

            FinanceiroSetaLabel = new Label();
            FinanceiroSetaLabel.AutoSize = false;
            FinanceiroSetaLabel.Size = new Size(20, 59);
            FinanceiroSetaLabel.Dock = DockStyle.Right;
            FinanceiroSetaLabel.Text = "6";
            FinanceiroSetaLabel.Font = new Font("Webdings", (float)12);
            FinanceiroSetaLabel.TextAlign = ContentAlignment.MiddleCenter;
            FinanceiroSetaLabel.MouseHover += new EventHandler(this.RecursosHumanosSetaLabel_MouseHover);
            FinanceiroSetaLabel.Click += new System.EventHandler(this.FinanceiroSetaLabel_Click);
            FinanceiroSetaLabel.Name = "FinanceiroSetaLabel";
            FinanceiroSetaLabel.ForeColor = Color.WhiteSmoke;

            FinanceiroLabel = new Label();
            FinanceiroLabel.AutoSize = false;
            FinanceiroLabel.Size = new Size(_widthLabelMenuSistema, 0);
            FinanceiroLabel.Dock = DockStyle.Fill;
            FinanceiroLabel.Text = "Financeiro";
            FinanceiroLabel.Font = CorFontepadraoLabel.Font;
            FinanceiroLabel.ForeColor = Color.WhiteSmoke;
            FinanceiroLabel.TextAlign = ContentAlignment.MiddleRight;
            FinanceiroLabel.MouseHover += new EventHandler(this.RecursosHumanosPanel_MouseHover);
            FinanceiroLabel.Click += new System.EventHandler(this.FinanceiroSetaLabel_Click);
            FinanceiroLabel.Name = "FinanceiroLabel";

            FinanceiroPanel.Controls.Add(FinanceiroLabel);
            FinanceiroPanel.Controls.Add(Divisoria2FinanceiroImagem);
            FinanceiroPanel.Controls.Add(FinanceiroSetaLabel);
            FinanceiroPanel.Controls.Add(DivisoriaFinanceiroImagem);
            MenuSistemaPanel.Controls.Add(FinanceiroPanel);
            #endregion

            #region Departamento Pessoal
            DepartamentoPessoalPanel = new Panel();
            DepartamentoPessoalPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            DepartamentoPessoalPanel.Dock = DockStyle.Top;
            DepartamentoPessoalPanel.BackColor = _corFundoMenu;
            DepartamentoPessoalPanel.Name = "DepartamentoPessoalPanel";

            DivisoriaDepartamentoPessoalImagem = new PictureBox();
            DivisoriaDepartamentoPessoalImagem.Size = new Size(0, 4);
            DivisoriaDepartamentoPessoalImagem.Dock = DockStyle.Bottom;
            DivisoriaDepartamentoPessoalImagem.BackColor = _corFundoDivisao;

            Divisoria2DepartamentoPessoalImagem = new PictureBox();
            Divisoria2DepartamentoPessoalImagem.Size = new Size(1, 2);
            Divisoria2DepartamentoPessoalImagem.Dock = DockStyle.Right;
            Divisoria2DepartamentoPessoalImagem.BackColor = _corFundoDivisao; //System.Drawing.Color.FromArgb(2, 91, 149);

            DepartamentoPessoalSetaLabel = new Label();
            DepartamentoPessoalSetaLabel.AutoSize = false;
            DepartamentoPessoalSetaLabel.Size = new Size(20, 59);
            DepartamentoPessoalSetaLabel.Dock = DockStyle.Right;
            DepartamentoPessoalSetaLabel.Text = "6";
            DepartamentoPessoalSetaLabel.Font = new Font("Webdings", (float)12);
            DepartamentoPessoalSetaLabel.TextAlign = ContentAlignment.MiddleCenter;
            //DepartamentoPessoalSetaLabel.Click += new System.EventHandler(this.DepartamentoPessoalSetaLabel_Click);
            DepartamentoPessoalSetaLabel.MouseHover += new EventHandler(this.RecursosHumanosSetaLabel_MouseHover);
            DepartamentoPessoalSetaLabel.Name = "DepartamentoPessoalSetaLabel";
            DepartamentoPessoalSetaLabel.ForeColor = Color.WhiteSmoke;

            DepartamentoPessoalLabel = new Label();
            DepartamentoPessoalLabel.AutoSize = false;
            DepartamentoPessoalLabel.Size = new Size(_widthLabelMenuSistema, 0);
            DepartamentoPessoalLabel.Dock = DockStyle.Fill;
            DepartamentoPessoalLabel.Text = "Departamento" + Environment.NewLine + "Pessoal";
            DepartamentoPessoalLabel.Font = CorFontepadraoLabel.Font;
            DepartamentoPessoalLabel.ForeColor = Color.WhiteSmoke;
            DepartamentoPessoalLabel.TextAlign = ContentAlignment.MiddleRight;
            DepartamentoPessoalLabel.MouseHover += new EventHandler(this.RecursosHumanosPanel_MouseHover);
            DepartamentoPessoalLabel.Name = "DepartamentoPessoalLabel";

            DepartamentoPessoalPanel.Controls.Add(DepartamentoPessoalLabel);
            DepartamentoPessoalPanel.Controls.Add(Divisoria2DepartamentoPessoalImagem);
            DepartamentoPessoalPanel.Controls.Add(DepartamentoPessoalSetaLabel);
            DepartamentoPessoalPanel.Controls.Add(DivisoriaDepartamentoPessoalImagem);

            //MenuSistemaPanel.Controls.Add(DepartamentoPessoalPanel);
            #endregion

            #region Controladoria
            ControladoriaPanel = new Panel();
            ControladoriaPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            ControladoriaPanel.Dock = DockStyle.Top;
            ControladoriaPanel.BackColor = _corFundoMenu;
            ControladoriaPanel.Enabled = Publicas._usuario.AcessaBI;
            ControladoriaPanel.Name = "ControladoriaPanel";

            DivisoriaControladoriaImagem = new PictureBox();
            DivisoriaControladoriaImagem.Size = new Size(0, 4);
            DivisoriaControladoriaImagem.Dock = DockStyle.Bottom;
            DivisoriaControladoriaImagem.BackColor = _corFundoDivisao;

            Divisoria2ControladoriaImagem = new PictureBox();
            Divisoria2ControladoriaImagem.Size = new Size(1, 2);
            Divisoria2ControladoriaImagem.Dock = DockStyle.Right;
            Divisoria2ControladoriaImagem.BackColor = _corFundoDivisao; //System.Drawing.Color.FromArgb(2, 91, 149);

            ControladoriaSetaLabel = new Label();
            ControladoriaSetaLabel.AutoSize = false;
            ControladoriaSetaLabel.Size = new Size(20, 59);
            ControladoriaSetaLabel.Dock = DockStyle.Right;
            ControladoriaSetaLabel.Text = "6";
            ControladoriaSetaLabel.Font = new Font("Webdings", (float)12);
            ControladoriaSetaLabel.TextAlign = ContentAlignment.MiddleCenter;
            ControladoriaSetaLabel.MouseHover += new EventHandler(this.RecursosHumanosSetaLabel_MouseHover);
            ControladoriaSetaLabel.Click += new System.EventHandler(this.ControladoriaSetaLabel_Click);
            ControladoriaSetaLabel.Name = "ControladoriaSetaLabel";
            ControladoriaSetaLabel.ForeColor = Color.WhiteSmoke;

            ControladoriaLabel = new Label();
            ControladoriaLabel.AutoSize = false;
            ControladoriaLabel.Size = new Size(_widthLabelMenuSistema, 0);
            ControladoriaLabel.Dock = DockStyle.Fill;
            ControladoriaLabel.Text = "Controladoria";
            ControladoriaLabel.Font = CorFontepadraoLabel.Font;
            ControladoriaLabel.ForeColor = Color.WhiteSmoke;
            ControladoriaLabel.TextAlign = ContentAlignment.MiddleRight;
            ControladoriaLabel.MouseHover += new EventHandler(this.RecursosHumanosPanel_MouseHover);
            ControladoriaLabel.Click += new System.EventHandler(this.ControladoriaSetaLabel_Click);
            ControladoriaLabel.Name = "ControladoriaLabel";

            ControladoriaPanel.Controls.Add(ControladoriaLabel);
            ControladoriaPanel.Controls.Add(Divisoria2ControladoriaImagem);
            ControladoriaPanel.Controls.Add(ControladoriaSetaLabel);
            ControladoriaPanel.Controls.Add(DivisoriaControladoriaImagem);

            MenuSistemaPanel.Controls.Add(ControladoriaPanel);
            #endregion

            #region Balanced ScoredCard BSC 
            BSCPanel = new Panel();
            BSCPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            BSCPanel.Dock = DockStyle.Top;
            BSCPanel.BackColor = _corFundoMenu;
            BSCPanel.Name = "BSCPanel";
            BSCPanel.Enabled = Publicas._usuario.AcessaBSC || Publicas._usuario.Desenvolvedor;

            DivisoriaBSCImagem = new PictureBox();
            DivisoriaBSCImagem.Size = new Size(0, 4);
            DivisoriaBSCImagem.Dock = DockStyle.Bottom;
            DivisoriaBSCImagem.BackColor = _corFundoDivisao;

            Divisoria2BSCImagem = new PictureBox();
            Divisoria2BSCImagem.Size = new Size(1, 2);
            Divisoria2BSCImagem.Dock = DockStyle.Right;
            Divisoria2BSCImagem.BackColor = _corFundoDivisao; //System.Drawing.Color.FromArgb(2, 91, 149);

            BSCSetaLabel = new Label();
            BSCSetaLabel.AutoSize = false;
            BSCSetaLabel.Size = new Size(20, 59);
            BSCSetaLabel.Dock = DockStyle.Right;
            BSCSetaLabel.Text = "6";
            BSCSetaLabel.Font = new Font("Webdings", (float)12);
            BSCSetaLabel.TextAlign = ContentAlignment.MiddleCenter;
            BSCSetaLabel.MouseHover += new EventHandler(this.RecursosHumanosSetaLabel_MouseHover);
            BSCSetaLabel.Click += new System.EventHandler(this.BSCSetaLabel_Click);
            BSCSetaLabel.Name = "BSCSetaLabel";
            BSCSetaLabel.ForeColor = Color.WhiteSmoke;

            BSCLabel = new Label();
            BSCLabel.AutoSize = false;
            BSCLabel.Size = new Size(_widthLabelMenuSistema, 0);
            BSCLabel.Dock = DockStyle.Fill;
            BSCLabel.Text = "Balanced" + Environment.NewLine + "ScoredCard";
            BSCLabel.Font = CorFontepadraoLabel.Font;
            BSCLabel.ForeColor = Color.WhiteSmoke;
            BSCLabel.TextAlign = ContentAlignment.MiddleRight;
            BSCLabel.MouseHover += new EventHandler(this.RecursosHumanosPanel_MouseHover);
            BSCLabel.Click += new System.EventHandler(this.BSCSetaLabel_Click);
            BSCLabel.Name = "BSCLabel";


            BSCPanel.Controls.Add(BSCLabel);
            BSCPanel.Controls.Add(Divisoria2BSCImagem);
            BSCPanel.Controls.Add(BSCSetaLabel);
            BSCPanel.Controls.Add(DivisoriaBSCImagem);
            MenuSistemaPanel.Controls.Add(BSCPanel);
            #endregion

            #region Atendimento
            AtendimentoPanel = new Panel();
            AtendimentoPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            AtendimentoPanel.Dock = DockStyle.Top;
            AtendimentoPanel.BackColor = _corFundoMenu;
            AtendimentoPanel.Name = "AtendimentoPanel";

            DivisoriaAtendimentoImagem = new PictureBox();
            DivisoriaAtendimentoImagem.Size = new Size(0, 4);
            DivisoriaAtendimentoImagem.Dock = DockStyle.Bottom;
            DivisoriaAtendimentoImagem.BackColor = _corFundoDivisao;

            Divisoria2AtendimentoImagem = new PictureBox();
            Divisoria2AtendimentoImagem.Size = new Size(1, 2);
            Divisoria2AtendimentoImagem.Dock = DockStyle.Right;
            Divisoria2AtendimentoImagem.BackColor = _corFundoDivisao; //System.Drawing.Color.FromArgb(2, 91, 149);

            AtendimentoSetaLabel = new Label();
            AtendimentoSetaLabel.AutoSize = false;
            AtendimentoSetaLabel.Size = new Size(20, 59);
            AtendimentoSetaLabel.Dock = DockStyle.Right;
            AtendimentoSetaLabel.Text = "6";
            AtendimentoSetaLabel.Font = new Font("Webdings", (float)12);
            AtendimentoSetaLabel.TextAlign = ContentAlignment.MiddleCenter;
            AtendimentoSetaLabel.Click += new System.EventHandler(this.AtendimentoSetaLabel_Click);
            AtendimentoSetaLabel.MouseHover += new EventHandler(this.RecursosHumanosSetaLabel_MouseHover);
            AtendimentoSetaLabel.Name = "AtendimentoSetaLabel";
            AtendimentoSetaLabel.ForeColor = Color.WhiteSmoke;

            AtendimentoLabel = new Label();
            AtendimentoLabel.AutoSize = false;
            AtendimentoLabel.Size = new Size(_widthLabelMenuSistema, 0);
            AtendimentoLabel.Dock = DockStyle.Fill;
            AtendimentoLabel.Text = "Atendimento";
            AtendimentoLabel.Font = CorFontepadraoLabel.Font;
            AtendimentoLabel.ForeColor = Color.WhiteSmoke;
            AtendimentoLabel.TextAlign = ContentAlignment.MiddleRight;
            AtendimentoLabel.MouseHover += new EventHandler(this.RecursosHumanosPanel_MouseHover);
            AtendimentoLabel.Click += new System.EventHandler(this.AtendimentoSetaLabel_Click);
            AtendimentoLabel.Name = "AtendimentoLabel";

            AtendimentoPanel.Controls.Add(AtendimentoLabel);
            //AtendimentoPanel.Controls.Add(AtendimentoImagem);
            AtendimentoPanel.Controls.Add(Divisoria2AtendimentoImagem);
            AtendimentoPanel.Controls.Add(AtendimentoSetaLabel);
            AtendimentoPanel.Controls.Add(DivisoriaAtendimentoImagem);

            MenuSistemaPanel.Controls.Add(AtendimentoPanel);
            #endregion

            #region Favoritos

            if (_listaMenusFavoritos.Count != 0)
            {
                FavoritosPanel = new Panel();
                FavoritosPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema); 
                FavoritosPanel.Dock = DockStyle.Top;
                FavoritosPanel.BackColor = _corFundoMenu;
                FavoritosPanel.Name = "FavoritosPanel";

                DivisoriaFavoritosImagem = new PictureBox();
                DivisoriaFavoritosImagem.Size = new Size(0, 4);
                DivisoriaFavoritosImagem.Dock = DockStyle.Bottom;
                DivisoriaFavoritosImagem.BackColor = _corFundoDivisao;

                Divisoria2FavoritosImagem = new PictureBox();
                Divisoria2FavoritosImagem.Size = new Size(1, 2);
                Divisoria2FavoritosImagem.Dock = DockStyle.Right;
                Divisoria2FavoritosImagem.BackColor = _corFundoDivisao; //System.Drawing.Color.FromArgb(2, 91, 149);

                FavoritosSetaLabel = new Label();
                FavoritosSetaLabel.AutoSize = false;
                FavoritosSetaLabel.Size = new Size(20, 59);
                FavoritosSetaLabel.Dock = DockStyle.Right;
                FavoritosSetaLabel.Text = "6";
                FavoritosSetaLabel.Font = new Font("Webdings", (float)12);
                FavoritosSetaLabel.TextAlign = ContentAlignment.MiddleCenter;
                FavoritosSetaLabel.Click += new System.EventHandler(this.FavoritosSetaLabel_Click);
                FavoritosSetaLabel.MouseHover += new EventHandler(this.RecursosHumanosSetaLabel_MouseHover);
                FavoritosSetaLabel.Name = "FavoritosSetaLabel";
                FavoritosSetaLabel.ForeColor = Color.WhiteSmoke;

                FavoritosLabel = new Label();
                FavoritosLabel.AutoSize = false;
                FavoritosLabel.Size = new Size(_widthLabelMenuSistema, 0);
                FavoritosLabel.Dock = DockStyle.Fill;
                FavoritosLabel.Text = "Favoritos";
                FavoritosLabel.Font = CorFontepadraoLabel.Font;
                FavoritosLabel.ForeColor = Color.WhiteSmoke;
                FavoritosLabel.TextAlign = ContentAlignment.MiddleRight;
                FavoritosLabel.MouseHover += new EventHandler(this.RecursosHumanosPanel_MouseHover);
                FavoritosLabel.Click += new System.EventHandler(this.FavoritosSetaLabel_Click);
                FavoritosLabel.Name = "FavoritosLabel";

                FavoritosPanel.Controls.Add(FavoritosLabel);
                FavoritosPanel.Controls.Add(Divisoria2FavoritosImagem);
                FavoritosPanel.Controls.Add(FavoritosSetaLabel);
                FavoritosPanel.Controls.Add(DivisoriaFavoritosImagem);

                MenuSistemaPanel.Controls.Add(FavoritosPanel);
            }
            #endregion
        }

        #region Suprimentos
        private void SuprimentosSetaLabel_Click(object sender, EventArgs e)
        {
            // abrir o SubMenu do RecursosHumanos
            SuprimentosSetaLabel.Text = "3";

            if (!Publicas._TemaBlack)
            {
                SuprimentosSetaLabel.ForeColor = Publicas._bordaEntrada;
                SuprimentosLabel.ForeColor = Publicas._bordaEntrada;
            }
            else
            {
                SuprimentosSetaLabel.ForeColor = Publicas._fonteMenuSelecionado;
                SuprimentosLabel.ForeColor = Publicas._fonteMenuSelecionado;
            }
            SuprimentosSetaLabel.BackColor = _corFundoMenu;

            if (SubMenuSuprimentos1Panel != null)
            {
                FechaSubMenuSuprimentos();
                return;
            }

            #region Cria estrutura 

            // Menu de fundo (onde agrupa os demais itens)
            SubMenuSuprimentos1Panel = new Panel();
            SubMenuSuprimentos1Panel.Size = new Size(155, _heidthMenuSistema * 1);
            SubMenuSuprimentos1Panel.Location = new Point(MenuSistemaPanel.Width + 2, AcessoAoMenuPanel.Height);
            SubMenuSuprimentos1Panel.BackColor = _corFundoDivisao;
            this.Controls.Add(SubMenuSuprimentos1Panel);
            SubMenuSuprimentos1Panel.BringToFront();
            SubMenuSuprimentos1Panel.Visible = true;
            #endregion

            #region Metas Suprimento
            MetasSuprimentoPanel = new Panel();
            MetasSuprimentoPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            MetasSuprimentoPanel.Dock = DockStyle.Top;
            MetasSuprimentoPanel.BackColor = _corFundoMenu;
            MetasSuprimentoPanel.Name = "MetasSuprimentoPanel";
            
            DivisoriaMetasSuprimentoImagem = new PictureBox();
            DivisoriaMetasSuprimentoImagem.Size = new Size(0, 4);
            DivisoriaMetasSuprimentoImagem.Dock = DockStyle.Bottom;
            DivisoriaMetasSuprimentoImagem.BackColor = _corFundoDivisao;

            Divisoria2MetasSuprimentoImagem = new PictureBox();
            Divisoria2MetasSuprimentoImagem.Size = new Size(1, 2);
            Divisoria2MetasSuprimentoImagem.Dock = DockStyle.Right;
            Divisoria2MetasSuprimentoImagem.BackColor = _corFundoDivisao; //System.Drawing.Color.FromArgb(2, 91, 149);

            MetasSuprimentoSetaLabel = new Label();
            MetasSuprimentoSetaLabel.AutoSize = false;
            MetasSuprimentoSetaLabel.Size = new Size(20, 59);
            MetasSuprimentoSetaLabel.Dock = DockStyle.Right;
            MetasSuprimentoSetaLabel.Text = "6";
            MetasSuprimentoSetaLabel.Font = new Font("Webdings", (float)12);
            MetasSuprimentoSetaLabel.TextAlign = ContentAlignment.MiddleCenter;
            MetasSuprimentoSetaLabel.Click += new System.EventHandler(this.MetasSuprimentoSetaLabel_Click);
            MetasSuprimentoSetaLabel.MouseHover += new EventHandler(this.MetasSuprimentoSetaLabel_MouseHover);
            MetasSuprimentoSetaLabel.Name = "MetasSuprimentoSetaLabel";
            MetasSuprimentoSetaLabel.ForeColor = Color.WhiteSmoke;

            MetasSuprimentoLabel = new Label();
            MetasSuprimentoLabel.AutoSize = false;
            MetasSuprimentoLabel.Size = new Size(_widthLabelMenuSistema, 0);
            MetasSuprimentoLabel.Dock = DockStyle.Fill;
            MetasSuprimentoLabel.Text = "Metas";
            MetasSuprimentoLabel.Font = CorFontepadraoLabel.Font;
            MetasSuprimentoLabel.ForeColor = Color.WhiteSmoke;
            MetasSuprimentoLabel.TextAlign = ContentAlignment.MiddleRight;
            MetasSuprimentoLabel.MouseHover += new EventHandler(this.MetasSuprimentoLabel_MouseHover);
            MetasSuprimentoLabel.Click += new System.EventHandler(this.MetasSuprimentoSetaLabel_Click);
            MetasSuprimentoLabel.Name = "MetasSuprimentoLabel";

            MetasSuprimentoPanel.Controls.Add(MetasSuprimentoLabel);
            MetasSuprimentoPanel.Controls.Add(Divisoria2MetasSuprimentoImagem);
            MetasSuprimentoPanel.Controls.Add(MetasSuprimentoSetaLabel);
            MetasSuprimentoPanel.Controls.Add(DivisoriaMetasSuprimentoImagem);

            SubMenuSuprimentos1Panel.Controls.Add(MetasSuprimentoPanel);
            #endregion
        }

        private void MetasSuprimentoSetaLabel_Click(object sender, EventArgs e)
        {
            // abrir o SubMenu do RecursosHumanos
            MetasSuprimentoSetaLabel.Text = "3";

            if (!Publicas._TemaBlack)
            {
                MetasSuprimentoSetaLabel.ForeColor = Publicas._bordaEntrada;
                MetasSuprimentoLabel.ForeColor = Publicas._bordaEntrada;
            }
            else
            {
                MetasSuprimentoSetaLabel.ForeColor = Publicas._fonteMenuSelecionado;
                MetasSuprimentoLabel.ForeColor = Publicas._fonteMenuSelecionado;
            }
            MetasSuprimentoSetaLabel.BackColor = _corFundoMenu;

            if (SubMenuSuprimentos2Panel != null)
            {
                FechaSubMenuSuprimentos2();
                return;
            }

            #region Cria estrutura 

            // Menu de fundo (onde agrupa os demais itens)
            SubMenuSuprimentos2Panel = new Panel();
            SubMenuSuprimentos2Panel.Size = new Size(155, _heidthMenuSistema * 2);
            SubMenuSuprimentos2Panel.Location = new Point(MenuSistemaPanel.Width + 2 + SubMenuSuprimentos1Panel.Width +2, AcessoAoMenuPanel.Height);
            SubMenuSuprimentos2Panel.BackColor = _corFundoDivisao;
            this.Controls.Add(SubMenuSuprimentos2Panel);
            SubMenuSuprimentos2Panel.BringToFront();
            SubMenuSuprimentos2Panel.Visible = true;
            #endregion

            #region TiposDePedidos
            TiposDePedidosPanel = new Panel();
            TiposDePedidosPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            TiposDePedidosPanel.Dock = DockStyle.Top;
            TiposDePedidosPanel.BackColor = _corFundoMenu;
            TiposDePedidosPanel.Name = "TiposDePedidosPanel";

            DivisoriaTiposDePedidosImagem = new PictureBox();
            DivisoriaTiposDePedidosImagem.Size = new Size(0, 4);
            DivisoriaTiposDePedidosImagem.Dock = DockStyle.Bottom;
            DivisoriaTiposDePedidosImagem.BackColor = _corFundoDivisao;

            TiposDePedidosLabel = new Label();
            TiposDePedidosLabel.AutoSize = false;
            TiposDePedidosLabel.Size = new Size(_widthLabelMenuSistema, 0);
            TiposDePedidosLabel.Dock = DockStyle.Fill;
            TiposDePedidosLabel.Text = "Pedidos";
            TiposDePedidosLabel.Font = CorFontepadraoLabel.Font;
            TiposDePedidosLabel.ForeColor = Color.WhiteSmoke;
            TiposDePedidosLabel.TextAlign = ContentAlignment.MiddleRight;
            TiposDePedidosLabel.MouseHover += new EventHandler(this.MetasDeGastoLabel_MouseHover);
            TiposDePedidosLabel.Click += new System.EventHandler(TiposDePedidosPanel_Click);
            TiposDePedidosLabel.Name = "TiposDePedidosLabel";

            FavoritoTiposDePedidosImagem = new PictureBox();
            FavoritoTiposDePedidosImagem.Size = new Size(10, 10);
            FavoritoTiposDePedidosImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoTiposDePedidosImagem.Name = "TiposDePedidosLabelPic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoTiposDePedidosImagem.Name))
            {
                FavoritoTiposDePedidosImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoTiposDePedidosImagem.Left = 5;//TiposDePedidosLabel.Width - 10;
            FavoritoTiposDePedidosImagem.Top = 35;
            FavoritoTiposDePedidosImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoTiposDePedidosImagem.Tag = TiposDePedidosLabel.Text;
            FavoritoTiposDePedidosImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoTiposDePedidosImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoTiposDePedidosImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoTiposDePedidosImagem.AccessibleName = "Suprimentos";

            TiposDePedidosPanel.Controls.Add(TiposDePedidosLabel);
            TiposDePedidosPanel.Controls.Add(DivisoriaTiposDePedidosImagem);
            TiposDePedidosPanel.Controls.Add(FavoritoTiposDePedidosImagem);
            FavoritoTiposDePedidosImagem.BringToFront();
            SubMenuSuprimentos2Panel.Controls.Add(TiposDePedidosPanel);
            #endregion

            #region MetasDeGasto
            MetasDeGastoPanel = new Panel();
            MetasDeGastoPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            MetasDeGastoPanel.Dock = DockStyle.Top;
            MetasDeGastoPanel.BackColor = _corFundoMenu;
            MetasDeGastoPanel.Name = "MetasDeGastoPanel";
            MetasDeGastoPanel.Enabled = Publicas._usuario.Desenvolvedor || Publicas._usuario.AcessaMetasSuprimentos;

            DivisoriaMetasDeGastoImagem = new PictureBox();
            DivisoriaMetasDeGastoImagem.Size = new Size(0, 4);
            DivisoriaMetasDeGastoImagem.Dock = DockStyle.Bottom;
            DivisoriaMetasDeGastoImagem.BackColor = _corFundoDivisao;

            MetasDeGastoLabel = new Label();
            MetasDeGastoLabel.AutoSize = false;
            MetasDeGastoLabel.Size = new Size(_widthLabelMenuSistema, 0);
            MetasDeGastoLabel.Dock = DockStyle.Fill;
            MetasDeGastoLabel.Text = "Gastos do" + Environment.NewLine + "Aprovador";
            MetasDeGastoLabel.Font = CorFontepadraoLabel.Font;
            MetasDeGastoLabel.ForeColor = Color.WhiteSmoke;
            MetasDeGastoLabel.TextAlign = ContentAlignment.MiddleRight;
            MetasDeGastoLabel.MouseHover += new EventHandler(this.MetasDeGastoLabel_MouseHover);
            MetasDeGastoLabel.Click += new System.EventHandler(MetasDeGastoPanelGestor_Click);
            MetasDeGastoLabel.Name = "MetasDeGastoLabel";

            FavoritoMetasDeGastoImagem = new PictureBox();
            FavoritoMetasDeGastoImagem.Size = new Size(10, 10);
            FavoritoMetasDeGastoImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoMetasDeGastoImagem.Name = "MetasDeGastoLabelPic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoMetasDeGastoImagem.Name))
            {
                FavoritoMetasDeGastoImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoMetasDeGastoImagem.Left = 5;//MetasDeGastoLabel.Width - 10;
            FavoritoMetasDeGastoImagem.Top = 35;
            FavoritoMetasDeGastoImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoMetasDeGastoImagem.Tag = MetasDeGastoLabel.Text;
            FavoritoMetasDeGastoImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoMetasDeGastoImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoMetasDeGastoImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoMetasDeGastoImagem.AccessibleName = "Suprimentos";

            MetasDeGastoPanel.Controls.Add(MetasDeGastoLabel);
            MetasDeGastoPanel.Controls.Add(DivisoriaMetasDeGastoImagem);
            MetasDeGastoPanel.Controls.Add(FavoritoMetasDeGastoImagem);
            FavoritoMetasDeGastoImagem.BringToFront();
            SubMenuSuprimentos2Panel.Controls.Add(MetasDeGastoPanel);
            #endregion
            
        }

        private void TiposDePedidosPanel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaSuprimentos;
            Suprimentos.TiposDePedido _tela = new Suprimentos.TiposDePedido();
            _tela.Size = new Size(this.Width - 5, this.Height - (tituloPanel.Height + panel2.Height + 2));
            _tela.ShowDialog();
            NomePadrao();
        }

        private void MetasDeGastoPanelGestor_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaSuprimentos;
            Suprimentos.MetasAprovadores _tela = new Suprimentos.MetasAprovadores();
            _tela.ShowDialog();
            NomePadrao();
        }

        private void MetasDeGastoLabel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresMetasDeGasto();
            FechaSubMenuAvaliacaoDesempenho();
            FechaSubMenuBiblioteca();
            FechaSubMenuCurriculo();
            FechaSubMenuCorridas();
            FechaSubMenuCadastroJuridico();
            FechaSubMenuControladoria();
            FechaSubMenuChamadosPanel();
            FechaSubMenuSAC();

            if (((Control)sender).Name.Contains("MetasDeGasto"))
            {
                MetasDeGastoLabel.Font = new Font(MetasDeGastoLabel.Font, FontStyle.Bold);
                MetasDeGastoLabel.ForeColor = Publicas._fonteBotaoFocado;
                MetasDeGastoLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Pedidos"))
            {
                TiposDePedidosLabel.Font = new Font(TiposDePedidosLabel.Font, FontStyle.Bold);
                TiposDePedidosLabel.ForeColor = Publicas._fonteBotaoFocado;
                TiposDePedidosLabel.BackColor = _corMenuSelecionado;
                return;
            }
        }

        private void MudaSelecaoDeCoresMetasDeGasto()
        {
            TiposDePedidosLabel.Font = new Font(TiposDePedidosLabel.Font, TiposDePedidosLabel.Font.Style & ~FontStyle.Bold);
            MetasDeGastoLabel.Font = new Font(MetasDeGastoLabel.Font, MetasDeGastoLabel.Font.Style & ~FontStyle.Bold);

            TiposDePedidosLabel.BackColor = _corFundoMenu;
            MetasDeGastoLabel.BackColor = MetasSuprimentoLabel.BackColor;

            TiposDePedidosLabel.ForeColor = Color.WhiteSmoke;
            MetasDeGastoLabel.ForeColor = Color.WhiteSmoke;

        }

        private void MetasSuprimentoLabel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubMenuSuprimentos();
            FechaSubMenuAvaliacaoDesempenho();
            FechaSubMenuBiblioteca();
            FechaSubMenuCurriculo();
            FechaSubMenuCorridas();
            FechaSubMenuCadastroJuridico();
            FechaSubMenuControladoria();
            FechaSubMenuChamadosPanel();
            FechaSubMenuSAC();

            if (((Control)sender).Name.Contains("Metas"))
            {
                MetasSuprimentoLabel.Font = new Font(MetasSuprimentoLabel.Font, FontStyle.Bold);
                MetasSuprimentoLabel.ForeColor = Publicas._fonteBotaoFocado;
                MetasSuprimentoLabel.BackColor = _corMenuSelecionado;
                return;
            }
        }

        private void MetasSuprimentoSetaLabel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubMenuSuprimentos();
            FechaSubMenuAvaliacaoDesempenho();
            FechaSubMenuBiblioteca();
            FechaSubMenuCurriculo();
            FechaSubMenuCorridas();
            FechaSubMenuCadastroJuridico();
            FechaSubMenuControladoria();
            FechaSubMenuChamadosPanel();
            FechaSubMenuSAC();

            if (((Control)sender).Name.Contains("Metas"))
            {
                MetasSuprimentoSetaLabel.Font = new Font(MetasSuprimentoSetaLabel.Font, FontStyle.Bold);
                MetasSuprimentoSetaLabel.ForeColor = Publicas._fonteBotaoFocado;
                MetasSuprimentoSetaLabel.BackColor = _corMenuSelecionado;
                return;
            }
        }

        private void MudaSelecaoDeCoresSubMenuSuprimentos()
        {
            MetasSuprimentoLabel.Font = new Font(MetasSuprimentoLabel.Font, MetasSuprimentoLabel.Font.Style & ~FontStyle.Bold);
            MetasSuprimentoSetaLabel.Font = new Font(MetasSuprimentoSetaLabel.Font, MetasSuprimentoSetaLabel.Font.Style & ~FontStyle.Bold);

            MetasSuprimentoLabel.BackColor = _corFundoMenu;
            MetasSuprimentoSetaLabel.BackColor = MetasSuprimentoLabel.BackColor;

            MetasSuprimentoLabel.ForeColor = Color.WhiteSmoke;
            MetasSuprimentoSetaLabel.ForeColor = Color.WhiteSmoke;

            MetasSuprimentoSetaLabel.Text = "6";
        }

        private void FechaSubMenuSuprimentos()
        {
            if (SubMenuSuprimentos1Panel != null)
            {
                FechaSubMenuSuprimentos2();
                SubMenuSuprimentos1Panel.Visible = false;
                this.Controls.Remove(SubMenuSuprimentos1Panel);
                SubMenuSuprimentos1Panel.Dispose();
                SubMenuSuprimentos1Panel = null;
            }
        }
        
        private void FechaSubMenuSuprimentos2()
        {
            if (SubMenuSuprimentos2Panel != null)
            {
                SubMenuSuprimentos2Panel.Visible = false;
                this.Controls.Remove(SubMenuSuprimentos2Panel);
                SubMenuSuprimentos2Panel.Dispose();
                SubMenuSuprimentos2Panel = null;
            }
        }
        #endregion
        
        #region SubMenu Recursos Humanos

        private void RecursosHumanosPanel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresMenuSistema();
            FechaMenuUsuario();
            FechaSubMenuRecursosHumanos();
            FechaSubMenuFavoritos();
            FechaSubMenuJuridico();
            FechaSubMenuEscrituracaoFiscal();
            FechaSubMenuControladoria();
            FechaSubMenuAtendimento();
            FechaSubMenuTI();
            FechaSubMenuBSC();
            FechaSubMenuOperacional();
            FechaSubMenuRecebedoria();
            FechaSubMenuFinanceiro();
            FechaSubMenuSuprimentos();

            if (((Control)sender).Name.Contains("Favoritos"))
            {
                FavoritosLabel.Font = new Font(RecursosHumanosLabel.Font, FontStyle.Bold);
                FavoritosLabel.ForeColor = Publicas._fonteBotaoFocado;
                FavoritosLabel.BackColor = _corMenuSelecionado;
                return;
            }
            if (((Control)sender).Name.Contains("RecursosHumanos"))
            {
                RecursosHumanosLabel.Font = new Font(RecursosHumanosLabel.Font, FontStyle.Bold);
                RecursosHumanosLabel.ForeColor = Publicas._fonteBotaoFocado;
                RecursosHumanosLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Controladoria"))
            {
                ControladoriaLabel.Font = new Font(ControladoriaLabel.Font, FontStyle.Bold);
                ControladoriaLabel.ForeColor = Publicas._fonteBotaoFocado;
                ControladoriaLabel.BackColor = _corMenuSelecionado;
                return;
            }


            if (((Control)sender).Name.Contains("Juridico"))
            {
                JuridicoLabel.Font = new Font(JuridicoLabel.Font, FontStyle.Bold);
                JuridicoLabel.ForeColor = Publicas._fonteBotaoFocado;
                JuridicoLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Atendimento"))
            {
                AtendimentoLabel.Font = new Font(AtendimentoLabel.Font, FontStyle.Bold);
                AtendimentoLabel.ForeColor = Publicas._fonteBotaoFocado;
                AtendimentoLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("TI"))
            {
                TILabel.Font = new Font(TILabel.Font, FontStyle.Bold);
                TILabel.ForeColor = Publicas._fonteBotaoFocado;
                TILabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("BSC"))
            {
                BSCLabel.Font = new Font(BSCLabel.Font, FontStyle.Bold);
                BSCLabel.ForeColor = Publicas._fonteBotaoFocado;
                BSCLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Operacional"))
            {
                OperacionalLabel.Font = new Font(OperacionalLabel.Font, FontStyle.Bold);
                OperacionalLabel.ForeColor = Publicas._fonteBotaoFocado;
                OperacionalLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Recebedoria"))
            {
                RecebedoriaLabel.Font = new Font(RecebedoriaLabel.Font, FontStyle.Bold);
                RecebedoriaLabel.ForeColor = Publicas._fonteBotaoFocado;
                RecebedoriaLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Financeiro"))
            {
                FinanceiroLabel.Font = new Font(FinanceiroLabel.Font, FontStyle.Bold);
                FinanceiroLabel.ForeColor = Publicas._fonteBotaoFocado;
                FinanceiroLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Departamento"))
            {
                DepartamentoPessoalLabel.Font = new Font(DepartamentoPessoalLabel.Font, FontStyle.Bold);
                DepartamentoPessoalLabel.ForeColor = Publicas._fonteBotaoFocado;
                DepartamentoPessoalLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Suprimentos"))
            {
                SuprimentosLabel.Font = new Font(SuprimentosLabel.Font, FontStyle.Bold);
                SuprimentosLabel.ForeColor = Publicas._fonteBotaoFocado;
                SuprimentosLabel.BackColor = _corMenuSelecionado;
                return;
            }
        }

        private void RecursosHumanosSetaLabel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresMenuSistema();
            FechaMenuUsuario();
            FechaSubMenuRecursosHumanos();
            FechaSubMenuFavoritos();
            FechaSubMenuJuridico();
            FechaSubMenuControladoria();
            FechaSubMenuAtendimento();
            FechaSubMenuTI();
            FechaSubMenuBSC();
            FechaSubMenuOperacional();
            FechaSubMenuRecebedoria();
            FechaSubMenuFinanceiro();
            FechaSubMenuSuprimentos();

            if (((Control)sender).Name.Contains("Favoritos"))
            {
                FavoritosSetaLabel.ForeColor = Publicas._fonteBotaoFocado;
                FavoritosSetaLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("RecursosHumanos"))
            {
                RecursosHumanosSetaLabel.ForeColor = Publicas._fonteBotaoFocado;
                RecursosHumanosSetaLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Controladoria"))
            {
                ControladoriaSetaLabel.ForeColor = Publicas._fonteBotaoFocado;
                ControladoriaSetaLabel.BackColor = _corMenuSelecionado;
                return;
            }


            if (((Control)sender).Name.Contains("Juridico"))
            {
                JuridicoSetaLabel.ForeColor = Publicas._fonteBotaoFocado;
                JuridicoSetaLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Atendimento"))
            {
                AtendimentoSetaLabel.ForeColor = Publicas._fonteBotaoFocado;
                AtendimentoSetaLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("TI"))
            {
                TISetaLabel.ForeColor = Publicas._fonteBotaoFocado;
                TISetaLabel.BackColor = _corMenuSelecionado;
                return;
            }
            if (((Control)sender).Name.Contains("BSC"))
            {
                BSCSetaLabel.ForeColor = Publicas._fonteBotaoFocado;
                BSCSetaLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Operacional"))
            {
                OperacionalSetaLabel.ForeColor = Publicas._fonteBotaoFocado;
                OperacionalSetaLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Recebedoria"))
            {
                RecebedoriaSetaLabel.ForeColor = Publicas._fonteBotaoFocado;
                RecebedoriaSetaLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Financeiro"))
            {
                FinanceiroSetaLabel.ForeColor = Publicas._fonteBotaoFocado;
                FinanceiroSetaLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Departamento"))
            {
                DepartamentoPessoalSetaLabel.ForeColor = Publicas._fonteBotaoFocado;
                DepartamentoPessoalSetaLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Suprimentos"))
            {
                SuprimentosSetaLabel.ForeColor = Publicas._fonteBotaoFocado;
                SuprimentosSetaLabel.BackColor = _corMenuSelecionado;
                return;
            }
        }

        private void FavoritosSetaLabel_Click(object sender, EventArgs e)
        {
            // abrir o SubMenu do RecursosHumanos
            FavoritosSetaLabel.Text = "3";

            if (!Publicas._TemaBlack)
            {
                FavoritosSetaLabel.ForeColor = Publicas._bordaEntrada;
                FavoritosLabel.ForeColor = Publicas._bordaEntrada;
            }
            else
            {
                FavoritosSetaLabel.ForeColor = Publicas._fonteMenuSelecionado;
                FavoritosLabel.ForeColor = Publicas._fonteMenuSelecionado;
            }
            FavoritosSetaLabel.BackColor = _corFundoMenu;

            if (SubMenuFavoritos != null)
            {
                FechaSubMenuFavoritos();
                return;
            }

            #region Cria estrutura 

            // Menu de fundo (onde agrupa os demais itens)
            SubMenuFavoritos = new Panel();
            SubMenuFavoritos.AutoScroll = true;

            if (_listaMenusFavoritos.Count > 13)
                SubMenuFavoritos.Size = new Size(155, (_heidthMenuSistema + 5) * 13);
            else
                SubMenuFavoritos.Size = new Size(155, (_heidthMenuSistema + 5) * _listaMenusFavoritos.Count);

            if (SubMenuFavoritos.Height > _heightTela)
                SubMenuFavoritos.Size = new Size(155, _heightTela);

            SubMenuFavoritos.Location = new Point(MenuSistemaPanel.Width + 2, AcessoAoMenuPanel.Height);
            SubMenuFavoritos.BackColor = _corFundoDivisao;
            this.Controls.Add(SubMenuFavoritos);
            SubMenuFavoritos.BringToFront();
            SubMenuFavoritos.Visible = true;
            #endregion

            foreach (var item in _listaMenusFavoritos.OrderByDescending(o => o.NomeMenu).OrderByDescending(o => o.MenuAnterior))
            {
                Panel _panel = new Panel();
                _panel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema+5);
                _panel.Dock = DockStyle.Top;
                _panel.BackColor = _corFundoMenu;
                _panel.Name = item.Name.Replace("LabelPic", "FavPanel");

                PictureBox _divisoriaPicture = new PictureBox();
                _divisoriaPicture.Size = new Size(0, 4);
                _divisoriaPicture.Dock = DockStyle.Bottom;
                _divisoriaPicture.BackColor = _corFundoDivisao;

                Label _label = new Label();
                _label.AutoSize = false;
                _label.Size = new Size(_widthLabelMenuSistema, 0); 
                _label.Dock = DockStyle.Fill;
                _label.Text = item.NomeMenu;
                _label.Font = CorFontepadraoLabel.Font;
                _label.ForeColor = Color.WhiteSmoke;
                _label.TextAlign = ContentAlignment.MiddleRight;
                _label.MouseHover += new EventHandler(this.SubMenuFavoritos_MouseHover);
                _label.Click += new System.EventHandler(SuMenufavoritos_Click);
                _label.Name = item.Name.Replace("LabelPic", "FavLabel");
                _label.Tag = item.MenuAnterior + "_" + item.Name;

                Label _label2 = new Label();
                _label2.AutoSize = true;
                _label2.Dock = DockStyle.Bottom;
                _label2.Text = item.MenuAnterior;
                _label2.Font = new Font(CorFontepadraoLabel.Font.FontFamily, 7, FontStyle.Regular);
                _label2.ForeColor = (Publicas._TemaBlack ? Publicas._fonteMenuSelecionado : Publicas._bordaEntrada);
                _label2.TextAlign = ContentAlignment.MiddleLeft;
                _label2.Name = "Sub_" + item.Name.Replace("LabelPic", "FavLabel");

                _panel.Controls.Add(_label2);
                _panel.Controls.Add(_label);
                _panel.Controls.Add(_divisoriaPicture);
                _label.BringToFront();

                SubMenuFavoritos.Controls.Add(_panel);
            }
        }

        private void MudaSelecaoDeCoresSubMenuFavoritos()
        {
            foreach (Control item in SubMenuFavoritos.Controls)
            {
                if (item is Panel)
                {
                    foreach (Control sitem in item.Controls)
                    {
                        if (sitem is Label)
                        {
                            if (!sitem.Name.Contains("Sub_"))
                            {
                                sitem.Font = new Font(FavoritosLabel.Font, FavoritosLabel.Font.Style & ~FontStyle.Bold);
                                sitem.BackColor = _corFundoMenu;
                                sitem.ForeColor = Color.WhiteSmoke;
                            }
                        }
                    }
                }
            }

        }

        private void SubMenuFavoritos_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubMenuFavoritos();
            FechaSubMenuAvaliacaoDesempenho();
            FechaSubMenuBiblioteca();
            FechaSubMenuCorridas();
            FechaSubMenuCurriculo();
            FechaSubMenuSuprimentos();

            ((Control)sender).Font = new Font(FavoritosLabel.Font, FontStyle.Bold);
            ((Control)sender).ForeColor = Publicas._fonteBotaoFocado;
            ((Control)sender).BackColor = _corMenuSelecionado;
            return;

        }

        private void SuMenufavoritos_Click(object sender, EventArgs e)
        {
            if (((Control)sender).Name.Contains("Definicao"))
                DefinicaoMetasPanel_Click(sender, e);
            else
            {                
                if (((Control)sender).Text.Equals("Metas") || ((Control)sender).Text.Equals("MetasDRELabel"))
                    MetasPanel_Click(sender, e);

                if (((Control)sender).Name.Contains("Cargos"))
                    CargosPanel_Click(sender, e);
                if (((Control)sender).Name.Contains("Colaborador"))
                    ColaboradoresPanel_Click(sender, e);
                if (((Control)sender).Name.Contains("Prazos"))
                    PrazosPanel_Click(sender, e);
                if (((Control)sender).Name.Contains("Departamento"))
                    DepartamentoPanel_Click(sender, e);
                if (((Control)sender).Name.Contains("Escolaridade"))
                    EscolaridadePanel_Click(sender, e);
                if (((Control)sender).Name.Contains("Competencias"))
                    CompetenciasPanel_Click(sender, e);
                if (((Control)sender).Name.Contains("Emprestimo"))
                    EmprestimoPanel_Click(sender, e);
                if (((Control)sender).Name.Contains("Reserva"))
                    ReservaPanel_Click(sender, e);
                if (((Control)sender).Name.Contains("Devolucao"))
                    DevolucaoPanel_Click(sender, e);
                if (((Control)sender).Name.Contains("Perguntas"))
                    PerguntasPanel_Click(sender, e);
                if (((Control)sender).Name.Contains("Respostas"))
                    RespostasPanel_Click(sender, e);
                if (((Control)sender).Name.Contains("Acompanhamento"))
                    AcompanhamentoPanel_Click(sender, e);
                if (((Control)sender).Name.Contains("Vara"))
                    VaraPanel_Click(sender, e);
                if (((Control)sender).Name.Contains("TiposPagamento"))
                    TiposPagamentoPanel_Click(sender, e);
                if (((Control)sender).Name.Contains("AbrirComunicado"))
                    AbrirComunicadoPanel_Click(sender, e);

                if (((Control)sender).Name.Contains("DRE"))
                    DRELabel_Click(sender, e);

                if (((Control)sender).Name.Contains("Livros"))
                    LivrosPanel_Click(sender, e);

                if (((Control)sender).Name.Contains("CFOPArquivei"))
                    CFOPArquiveiLabel_Click(sender, e);
                if (((Control)sender).Name.Contains("CFOPSaidaArquivei"))
                    CFOPSaidaArquiveiLabel_Click(sender, e);

                if (((Control)sender).Name.Contains("IntegraNFS"))
                    IntegraNFSLabel_Click(sender, e);
                if (((Control)sender).Name.Contains("ValidacaoArquivei"))
                    ValidacaoArquiveiLabel_Click(sender, e);
                if (((Control)sender).Name.Contains("ValidacaoXmlSaida"))
                    ValidacaoXmlSaidaLabel_Click(sender, e);
                

                if (((Control)sender).Name.Contains("DiferencialAliquota"))
                    DiferencialAliquotaLabel_Click(sender, e);
                
                if (((Control)sender).Name.Contains("BancosF"))
                    BancosFluxoLabel_Click(sender, e);
                if (((Control)sender).Name.Contains("Colunas"))
                    ColunasLabel_Click(sender, e);
                if (((Control)sender).Name.Contains("VariaveisF"))
                    VariaveisFluxoLabel_Click(sender, e);
                if (((Control)sender).Name.Contains("DemonstrativoFluxo"))
                    DemonstrativoFluxoLabel_Click(sender, e);
                if (((Control)sender).Name.Contains("ResumoFluxo"))
                    ResumoFluxoLabel_Click(sender, e);

                if (((Control)sender).Name.StartsWith("Feriado"))
                    FeriadosPanel_Click(sender, e);
                if (((Control)sender).Name.Contains("ResumoBI"))
                    ResumoBILabel_Click(sender, e);
                if (((Control)sender).Name.Contains("ResumoGlobusProdata"))
                    ResumoGlobusProdataLabel_Click(sender, e);
                if (((Control)sender).Name.Contains("ResumoGlobusSigom"))
                    ResumoGlobusSigomLabel_Click(sender, e);

                if (((Control)sender).Name.Contains("CadastroFerias"))
                    CadastroFeriasPanel_Click(sender, e);
                if (((Control)sender).Name.Contains("ProgramacaoFerias"))
                    ProgramacaoFeriasLabel_Click(sender, e);
                
                if (((Control)sender).Name.Contains("Usuario"))
                    UsuariosPanel_Click(sender, e);
                if (((Control)sender).Name.Contains("Modulo"))
                    ModulosTIPanel_Click(sender, e);
                if (((Control)sender).Name.Contains("Empresa"))
                    EmpresasPanel_Click(sender, e);
                if (((Control)sender).Name.Contains("Ramais"))
                    MenuRamaisLabel_Click(sender, e);
                if (((Control)sender).Name.Contains("SalaReuniao"))
                    SalaReuniaoPanel_Click(sender, e);
                if (((Control)sender).Name.Contains("VisoesBI"))
                    VisoesBIPanel_Click(sender, e);

                if (((Control)sender).Name.Contains("Formulas"))
                    FormulasLalurLabel_Click(sender, e);

                if (((Control)sender).Name.Contains("ValoresEndividamento"))
                    ValoresEndividamentoLabel_Click(sender, e);

                if (((Control)sender).Name.Contains("ParametroCodServico"))
                    ParametroCodServicoLabel_Click(sender, e);
                else
                if (((Control)sender).Name.Contains("ParametrosNotasFiscais"))
                    ParametrosNotasFiscaisLabel_Click(sender, e);
                else
                if (((Control)sender).Name.Contains("ParametrosEndividamento"))
                    ParametrosEndividamentoLabel_Click(sender, e);
                else
                if (((Control)sender).Name.Contains("ParametrosLalur"))
                    ParametrosLalurLabel_Click(sender, e);
                else
                if (((Control)sender).Name.Contains("ParametrosBeneficio"))
                    ParametrosBeneficiosCTBLabel_Click(sender, e); 
                else
                if (((Control)sender).Name.Contains("ParametroArquivei"))
                    ParametroArquiveiLabel_Click(sender, e);
                else
                if (((Control)sender).Name.Contains("Parametros") && !((Control)sender).Name.Contains("ConciliacaoAtivoParametros"))
                    ParametrosPanel_Click(sender, e);
                else
                if (((Control)sender).Name.Contains("Lalur"))
                    LalurLabel_Click(sender, e);

                if (((Control)sender).Name.Contains("Selic"))
                    SelicLabel_Click(sender, e);

                if (((Control)sender).Name.Contains("ConciliacaoParcelamento"))
                    ConciliacaoParcelamentoLabel_Click(sender, e);
                if (((Control)sender).Name.Contains("ConciliacaoBancaria"))
                    ConciliacaoBancariaLabel_Click(sender, e);
                if (((Control)sender).Name.Contains("ConciliacaoFornecedores"))
                    ConciliacaoFornecedoresLabel_Click(sender, e);
                if (((Control)sender).Name.Contains("ConciliacaoClientes"))
                    ConciliacaoClientesSetaLabel_Click(sender, e);
                if (((Control)sender).Name.Contains("ConciliacaoAtivoT"))
                    ConciliacaoAtivoTelaLabel_Click(sender, e);
                else
                {
                    if (((Control)sender).Name.Contains("ConciliacaoAtivoParametros"))
                        ConciliacaoAtivoParametrosLabel_Click(sender, e);
                    else
                    if (((Control)sender).Name.Contains("Tela"))
                        TelaTIPanel_Click(sender, e);
                }

                if (((Control)sender).Name.Contains("CalculoParcelamento"))
                    CalculoParcelamentoLabel_Click(sender, e);

                if (((Control)sender).Name.Contains("Notificacoes"))
                    NotificacoesPanel_Click(sender, e);

                if (((Control)sender).Name.Contains("ResumoArquivei"))
                    ResumoArquiveiLabel_Click(sender, e);
                if (((Control)sender).Name.Contains("ResumoSaidaArquivei"))
                    ResumoSaidaArquiveiLabel_Click(sender, e);

                if (((Control)sender).Name.Contains("CategoriasTI"))
                    CategoriasPanel_Click(sender, e);
                else
                if (((Control)sender).Name.Contains("Categorias"))
                    CategoriasPanel_Click(sender, e);

                if (((Control)sender).Name.Contains("PontuacaoLivros"))
                    PontuacaoBibliotecaPanel_Click(sender, e);
                else
                if (((Control)sender).Name.Contains("PontuacaoP"))
                    PontuacaoPanel_Click(sender, e);
                  
                if (((Control)sender).Name.Contains("Responder"))
                    ResponderAtendimentoPanel_Click(sender, e);
                else
                if (((Control)sender).Name.Contains("Retornar"))
                    RetornarLigacoesPanel_Click(sender, e);
                else
                if (((Control)sender).Name.Contains("Finalizar"))
                    FinalizarAtendimentoPanel_Click(sender, e);
                else
                if (((Control)sender).Name.Contains("Satisfacao"))
                    SatisfacaoPanel_Click(sender, e);
                else
                if (((Control)sender).Name.Contains("Atendimento"))
                    AtendimentoSACPanel_Click(sender, e);
                  
                if (((Control)sender).Name.Contains("Candidato"))
                    CandidatosPanel_Click(sender, e);
                if (((Control)sender).Name.Contains("Vaga"))
                    VagasPanel_Click(sender, e);
                if (((Control)sender).Name.Contains("AgendaCurriculo"))
                    AgendaCurriculoPanel_Click(sender, e);

                if (((Control)sender).Name.Contains("DeMetasBI"))
                    CalculoDeMetasBIPanel_Click(sender, e);
                if (((Control)sender).Name.Contains("GestaoDeMetas"))
                    GestaoDeMetasLabel_Click(sender, e);

                if (((Control)sender).Name.Contains("AssociaCustosSetor"))
                    AssociaCustosSetorLabel_Click(sender, e);
                if (((Control)sender).Name.Contains("RateioBeneficio"))
                    CalculoRateioBeneficioLabel_Click(sender, e);

                if (((Control)sender).Name.Contains("TiposDePedidos"))
                    TiposDePedidosPanel_Click(sender, e);

                if (((Control)sender).Name.Contains("MetasDeGasto"))
                    MetasDeGastoPanelGestor_Click(sender, e);
                
                if (((Control)sender).Name.Contains("SetoresDaLinha"))
                    SetoresDaLinhaPanel_Click(sender, e);
                else
                {
                    if (((Control)sender).Name.Contains("AgrupaLinhas"))
                        AgrupaLinhasPanel_Click(sender, e);
                    else
                    {
                        if (((Control)sender).Name.Contains("PontuacaoOperacional"))
                            PontuacaoOperacionalPanel_Click(sender, e);
                        else
                        {
                            if (((Control)sender).Name.Contains("MetasDosIndicadores"))
                                MetasDosIndicadoresPanel_Click(sender, e);
                            else
                            {
                                if (((Control)sender).Name.Contains("ValoresDosIndicadores"))
                                    ValoresDosIndicadoresLabel_Click(sender, e);
                                else
                                {
                                    if (((Control)sender).Name.Contains("Indicadores"))
                                        IndicadoresPanel_Click(sender, e);
                                    else
                                    {
                                        if (((Control)sender).Name.Contains("DemonstrativoLabel"))
                                            DemonstrativoLabel_Click(sender, e);
                                        else
                                        {
                                            if (((Control)sender).Name.Contains("IQO"))
                                                IQOLabel_Click(sender, e);
                                        }
                                    }
                                }
                            }
                        }
                    }
                }

                if (((Control)sender).Name.Contains("ComparacaoDeGuias"))
                    ComparacaoDeGuiasLabel_Click(sender, e);

                if (((Control)sender).Name.Contains("ConciliacaoNotasFiscais"))
                    ConciliacaoNotasFiscaisLabel_Click(sender, e);
                else
                if (((Control)sender).Name.StartsWith("Notas"))
                {
                    foreach (var item in _listaMenusFavoritos.Where(w => w.Name.Contains("Notas")))
                    {
                        if (item.MenuAnterior == "Planejamento" || item.MenuAnterior == "Recursos Humanos")
                            NotasPanel_Click(sender, e);
                        else
                        {
                            if (item.MenuAnterior == "Colaborador")
                                NotasPanelColaborador_Click(sender, e);
                            else
                                NotasPanelGestor_Click(sender, e);
                        }
                    }
                }

                if (((Control)sender).Name.Contains("RadarBI"))
                    RadarBIPanel_Click(sender, e);
                else
                if (((Control)sender).Name.Contains("Radar"))
                {
                    foreach (var item in _listaMenusFavoritos.Where(w => w.Name.Contains("Radar")))
                    {
                        if (item.MenuAnterior == "Planejamento" || item.MenuAnterior == "Recursos Humanos")
                            RadarRecursosHumanosPanel_Click(sender, e);
                        else
                        {
                            if (item.MenuAnterior == "Colaborador")
                                RadarColaboradorPanel_Click(sender, e);
                            else
                                RadarGestorPanel_Click(sender, e);
                        }
                    }
                }

                if (((Control)sender).Name.Contains("MetasNumericas"))
                {
                    foreach (var item in _listaMenusFavoritos.Where(w => w.Name.Contains("MetasNumericas")))
                    {
                        if (item.MenuAnterior == "Planejamento" || item.MenuAnterior == "Recursos Humanos")
                            MetasNumericasRecursosHumanosPanel_Click(sender, e);
                        else
                        {
                            if (item.MenuAnterior == "Colaborador")
                                MetasNumericasColaboradorPanel_Click(sender, e);
                            else
                                MetasNumericasGestorPanel_Click(sender, e);
                        }
                    }
                }

                if (((Control)sender).Name.Contains("Feedback"))
                {
                    foreach (var item in _listaMenusFavoritos.Where(w => w.Name.Contains("Feedback")))
                    {
                        if (item.MenuAnterior == "Planejamento" || item.MenuAnterior == "Recursos Humanos")
                            FeedbackRecursosHumanosPanel_Click(sender, e);
                        else
                        {
                            if (item.MenuAnterior == "Colaborador")
                                FeedbackColaboradorPanel_Click(sender, e);
                            else
                                FeedbackGestorPanel_Click(sender, e);
                        }
                    }
                }

                if (((Control)sender).Name.Contains("AutoAvaliacao") || ((Control)sender).Name.Contains("MetasQualitativas"))
                {
                    foreach (var item in _listaMenusFavoritos.Where(w => w.Name.Contains("AutoAvaliacao") || w.Name.Contains("MetasQualitativas")))
                    {
                        if (item.MenuAnterior == "Planejamento" || item.MenuAnterior == "Recursos Humanos")
                            AvaliacaoQualitativaRecursosHumanosPanel_Click(sender, e);
                        else
                        {
                            if (item.MenuAnterior == "Colaborador")
                                AutoAvaliacaoPanel_Click(sender, e);
                            else
                                AvaliacaoQualitativaPanel_Click(sender, e);
                        }
                    }
                }
            }
        }

        private void RecursosHumanosSetaLabel_Click(object sender, EventArgs e)
        {
            // abrir o SubMenu do RecursosHumanos
            RecursosHumanosSetaLabel.Text = "3";

            if (!Publicas._TemaBlack)
            {
                RecursosHumanosSetaLabel.ForeColor = Publicas._bordaEntrada;
                RecursosHumanosLabel.ForeColor = Publicas._bordaEntrada;
            }
            else
            {
                RecursosHumanosSetaLabel.ForeColor = Publicas._fonteMenuSelecionado;
                RecursosHumanosLabel.ForeColor = Publicas._fonteMenuSelecionado;
            }
            RecursosHumanosSetaLabel.BackColor = _corFundoMenu;

            if (SubMenuRecursosHumanos != null)
            {
                FechaSubMenuRecursosHumanos();
                return;
            }

            #region Cria estrutura 

            // Menu de fundo (onde agrupa os demais itens)
            SubMenuRecursosHumanos = new Panel();
            SubMenuRecursosHumanos.Size = new Size(155, _heidthMenuSistema * 6); // (4 + (Publicas._usuario.IdEmpresa == 1  || Publicas._usuario.IdEmpresa == 19 && Publicas._idColaborador == 7 ? 2 : 0)));
            SubMenuRecursosHumanos.Location = new Point(MenuSistemaPanel.Width + 2, AcessoAoMenuPanel.Height);
            SubMenuRecursosHumanos.BackColor = _corFundoDivisao;
            this.Controls.Add(SubMenuRecursosHumanos);
            SubMenuRecursosHumanos.BringToFront();
            SubMenuRecursosHumanos.Visible = true;
            #endregion

            #region PeriodoBancoHoras
            PeriodoBancoHorasPanel = new Panel();
            PeriodoBancoHorasPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            PeriodoBancoHorasPanel.Dock = DockStyle.Top;
            PeriodoBancoHorasPanel.BackColor = _corFundoMenu;
            PeriodoBancoHorasPanel.Name = "PeriodoBancoHorasPanel";
            PeriodoBancoHorasPanel.Enabled = Publicas._usuario.Administrador ||
                (Publicas._usuario.Departamento.Contains("RH") || Publicas._usuario.Departamento.ToUpper().Contains("Recursos Humanos".ToUpper()));

            DivisoriaPeriodoBancoHorasImagem = new PictureBox();
            DivisoriaPeriodoBancoHorasImagem.Size = new Size(0, 4);
            DivisoriaPeriodoBancoHorasImagem.Dock = DockStyle.Bottom;
            DivisoriaPeriodoBancoHorasImagem.BackColor = _corFundoDivisao;

            PeriodoBancoHorasLabel = new Label();
            PeriodoBancoHorasLabel.AutoSize = false;
            PeriodoBancoHorasLabel.Size = new Size(_widthLabelMenuSistema, 0);
            PeriodoBancoHorasLabel.Dock = DockStyle.Fill;
            PeriodoBancoHorasLabel.Text = "Período" + Environment.NewLine + "Banco de horas";
            PeriodoBancoHorasLabel.Font = CorFontepadraoLabel.Font;
            PeriodoBancoHorasLabel.ForeColor = Color.WhiteSmoke;
            PeriodoBancoHorasLabel.TextAlign = ContentAlignment.MiddleRight;
            PeriodoBancoHorasLabel.MouseHover += new EventHandler(this.CorridasPanel_MouseHover);
            PeriodoBancoHorasLabel.Click += new System.EventHandler(PeriodoBancoHorasPanel_Click);
            PeriodoBancoHorasLabel.Name = "PeriodoBancoHorasLabel";

            PeriodoBancoHorasPanel.Controls.Add(PeriodoBancoHorasLabel);
            //PeriodoBancoHorasPanel.Controls.Add(PeriodoBancoHorasImagem);
            //PeriodoBancoHorasPanel.Controls.Add(PeriodoBancoHorasSetaLabel);
            PeriodoBancoHorasPanel.Controls.Add(DivisoriaPeriodoBancoHorasImagem);

            SubMenuRecursosHumanos.Controls.Add(PeriodoBancoHorasPanel);
            #endregion

            #region Torneio 
            TorneiosPanel = new Panel();
            TorneiosPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            TorneiosPanel.Dock = DockStyle.Top;
            TorneiosPanel.BackColor = _corFundoMenu;
            TorneiosPanel.Name = "TorneiosPanel";
            TorneiosPanel.Enabled = Publicas._usuario.Desenvolvedor;

            DivisoriaTorneiosImagem = new PictureBox();
            DivisoriaTorneiosImagem.Size = new Size(0, 4);
            DivisoriaTorneiosImagem.Dock = DockStyle.Bottom;
            DivisoriaTorneiosImagem.BackColor = _corFundoDivisao;

            Divisoria2TorneiosImagem = new PictureBox();
            Divisoria2TorneiosImagem.Size = new Size(1, 2);
            Divisoria2TorneiosImagem.Dock = DockStyle.Right;
            Divisoria2TorneiosImagem.BackColor = _corFundoDivisao;

            TorneiosSetaLabel = new Label();
            TorneiosSetaLabel.AutoSize = false;
            TorneiosSetaLabel.Size = new Size(20, 59);
            TorneiosSetaLabel.Dock = DockStyle.Right;
            TorneiosSetaLabel.Text = "6";
            TorneiosSetaLabel.Font = new Font("Webdings", (float)12);
            TorneiosSetaLabel.TextAlign = ContentAlignment.MiddleCenter;
            TorneiosSetaLabel.Click += new System.EventHandler(this.TorneiosSetaLabel_Click);
            TorneiosSetaLabel.MouseHover += new EventHandler(this.CorridasSetaLabel_MouseHover);
            TorneiosSetaLabel.Name = "TorneiosSetaLabel";
            TorneiosSetaLabel.ForeColor = Color.WhiteSmoke;

            TorneiosLabel = new Label();
            TorneiosLabel.AutoSize = false;
            TorneiosLabel.Size = new Size(_widthLabelMenuSistema, 0);
            TorneiosLabel.Dock = DockStyle.Fill;
            TorneiosLabel.Text = "Torneios";
            TorneiosLabel.Font = CorFontepadraoLabel.Font;
            TorneiosLabel.ForeColor = Color.WhiteSmoke;
            TorneiosLabel.TextAlign = ContentAlignment.MiddleRight;
            TorneiosLabel.MouseHover += new EventHandler(this.CorridasPanel_MouseHover);
            TorneiosLabel.Click += new System.EventHandler(this.TorneiosSetaLabel_Click);
            TorneiosLabel.Name = "TorneiosLabel";

            TorneiosPanel.Controls.Add(TorneiosLabel);
            //TorneioPanel.Controls.Add(TorneioImagem);
            TorneiosPanel.Controls.Add(Divisoria2TorneiosImagem);
            TorneiosPanel.Controls.Add(TorneiosSetaLabel);
            TorneiosPanel.Controls.Add(DivisoriaTorneiosImagem);

            SubMenuRecursosHumanos.Controls.Add(TorneiosPanel);
            #endregion

            #region Ferias 
            FeriasPanel = new Panel();
            FeriasPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            FeriasPanel.Dock = DockStyle.Top;
            FeriasPanel.BackColor = _corFundoMenu;
            FeriasPanel.Name = "FeriasPanel";
            //FeriasPanel.Enabled = Publicas._usuario.Desenvolvedor || Publicas._usuario.Id == 87;

            DivisoriaFeriasImagem = new PictureBox();
            DivisoriaFeriasImagem.Size = new Size(0, 4);
            DivisoriaFeriasImagem.Dock = DockStyle.Bottom;
            DivisoriaFeriasImagem.BackColor = _corFundoDivisao;

            Divisoria2FeriasImagem = new PictureBox();
            Divisoria2FeriasImagem.Size = new Size(1, 2);
            Divisoria2FeriasImagem.Dock = DockStyle.Right;
            Divisoria2FeriasImagem.BackColor = _corFundoDivisao; 

            FeriasSetaLabel = new Label();
            FeriasSetaLabel.AutoSize = false;
            FeriasSetaLabel.Size = new Size(20, 59);
            FeriasSetaLabel.Dock = DockStyle.Right;
            FeriasSetaLabel.Text = "6";
            FeriasSetaLabel.Font = new Font("Webdings", (float)12);
            FeriasSetaLabel.TextAlign = ContentAlignment.MiddleCenter;
            FeriasSetaLabel.Click += new System.EventHandler(this.FeriasSetaLabel_Click);
            FeriasSetaLabel.MouseHover += new EventHandler(this.CorridasSetaLabel_MouseHover);
            FeriasSetaLabel.Name = "FeriasSetaLabel";
            FeriasSetaLabel.ForeColor = Color.WhiteSmoke;

            FeriasLabel = new Label();
            FeriasLabel.AutoSize = false;
            FeriasLabel.Size = new Size(_widthLabelMenuSistema, 0);
            FeriasLabel.Dock = DockStyle.Fill;
            FeriasLabel.Text = "Programação" + Environment.NewLine + "de Férias";
            FeriasLabel.Font = CorFontepadraoLabel.Font;
            FeriasLabel.ForeColor = Color.WhiteSmoke;
            FeriasLabel.TextAlign = ContentAlignment.MiddleRight;
            FeriasLabel.MouseHover += new EventHandler(this.CorridasPanel_MouseHover);
            FeriasLabel.Click += new System.EventHandler(this.FeriasSetaLabel_Click);
            FeriasLabel.Name = "FeriasLabel";

            FeriasPanel.Controls.Add(FeriasLabel);
            //FeriasPanel.Controls.Add(FeriasImagem);
            FeriasPanel.Controls.Add(Divisoria2FeriasImagem);
            FeriasPanel.Controls.Add(FeriasSetaLabel);
            FeriasPanel.Controls.Add(DivisoriaFeriasImagem);

            SubMenuRecursosHumanos.Controls.Add(FeriasPanel);
            #endregion

            #region Curriculo 
            CurriculoPanel = new Panel();
            CurriculoPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            CurriculoPanel.Dock = DockStyle.Top;
            CurriculoPanel.BackColor = _corFundoMenu;
            CurriculoPanel.Name = "CurriculoPanel";
            CurriculoPanel.Enabled = Publicas._usuario.Desenvolvedor || Publicas._usuario.Departamento.Contains("RH") || Publicas._usuario.Departamento.ToUpper().Contains("Recursos Humanos".ToUpper());

            DivisoriaCurriculoImagem = new PictureBox();
            DivisoriaCurriculoImagem.Size = new Size(0, 4);
            DivisoriaCurriculoImagem.Dock = DockStyle.Bottom;
            DivisoriaCurriculoImagem.BackColor = _corFundoDivisao;

            Divisoria2CurriculoImagem = new PictureBox();
            Divisoria2CurriculoImagem.Size = new Size(1, 2);
            Divisoria2CurriculoImagem.Dock = DockStyle.Right;
            Divisoria2CurriculoImagem.BackColor = _corFundoDivisao; 

            CurriculoSetaLabel = new Label();
            CurriculoSetaLabel.AutoSize = false;
            CurriculoSetaLabel.Size = new Size(20, 59);
            CurriculoSetaLabel.Dock = DockStyle.Right;
            CurriculoSetaLabel.Text = "6";
            CurriculoSetaLabel.Font = new Font("Webdings", (float)12);
            CurriculoSetaLabel.TextAlign = ContentAlignment.MiddleCenter;
            CurriculoSetaLabel.Click += new System.EventHandler(this.CurriculoSetaLabel_Click);
            CurriculoSetaLabel.MouseHover += new EventHandler(this.CorridasSetaLabel_MouseHover);
            CurriculoSetaLabel.Name = "CurriculoSetaLabel";
            CurriculoSetaLabel.ForeColor = Color.WhiteSmoke;

            CurriculoLabel = new Label();
            CurriculoLabel.AutoSize = false;
            CurriculoLabel.Size = new Size(_widthLabelMenuSistema, 0);
            CurriculoLabel.Dock = DockStyle.Fill;
            CurriculoLabel.Text = "Processo" + Environment.NewLine + "Seletivo";
            CurriculoLabel.Font = CorFontepadraoLabel.Font;
            CurriculoLabel.ForeColor = Color.WhiteSmoke;
            CurriculoLabel.TextAlign = ContentAlignment.MiddleRight;
            CurriculoLabel.MouseHover += new EventHandler(this.CorridasPanel_MouseHover);
            CurriculoLabel.Click += new System.EventHandler(this.CurriculoSetaLabel_Click);
            CurriculoLabel.Name = "CurriculoLabel";

            CurriculoPanel.Controls.Add(CurriculoLabel);
            //CurriculoPanel.Controls.Add(CurriculoImagem);
            CurriculoPanel.Controls.Add(Divisoria2CurriculoImagem);
            CurriculoPanel.Controls.Add(CurriculoSetaLabel);
            CurriculoPanel.Controls.Add(DivisoriaCurriculoImagem);

            SubMenuRecursosHumanos.Controls.Add(CurriculoPanel);
            #endregion

            #region Biblioteca 
            BibliotecaPanel = new Panel();
            BibliotecaPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            BibliotecaPanel.Dock = DockStyle.Top;
            BibliotecaPanel.BackColor = _corFundoMenu;
            BibliotecaPanel.Name = "BibliotecaPanel";
            BibliotecaPanel.Enabled = Publicas._usuario.IdEmpresa == 1 || Publicas._usuario.IdEmpresa == 19 || Publicas._usuario.UsuarioAcesso == "ELSILVA" || Publicas._usuario.UsuarioAcesso == "VBSANTOS";

            DivisoriaBibliotecaImagem = new PictureBox();
            DivisoriaBibliotecaImagem.Size = new Size(0, 4);
            DivisoriaBibliotecaImagem.Dock = DockStyle.Bottom;
            DivisoriaBibliotecaImagem.BackColor = _corFundoDivisao;

            Divisoria2BibliotecaImagem = new PictureBox();
            Divisoria2BibliotecaImagem.Size = new Size(1, 2);
            Divisoria2BibliotecaImagem.Dock = DockStyle.Right;
            Divisoria2BibliotecaImagem.BackColor = _corFundoDivisao;

            BibliotecaSetaLabel = new Label();
            BibliotecaSetaLabel.AutoSize = false;
            BibliotecaSetaLabel.Size = new Size(20, 59);
            BibliotecaSetaLabel.Dock = DockStyle.Right;
            BibliotecaSetaLabel.Text = "6";
            BibliotecaSetaLabel.Font = new Font("Webdings", (float)12);
            BibliotecaSetaLabel.TextAlign = ContentAlignment.MiddleCenter;
            BibliotecaSetaLabel.Click += new System.EventHandler(this.BibliotecaSetaLabel_Click);
            BibliotecaSetaLabel.MouseHover += new EventHandler(this.CorridasSetaLabel_MouseHover);
            BibliotecaSetaLabel.Name = "BibliotecaSetaLabel";
            BibliotecaSetaLabel.ForeColor = Color.WhiteSmoke;

            BibliotecaLabel = new Label();
            BibliotecaLabel.AutoSize = false;
            BibliotecaLabel.Size = new Size(_widthLabelMenuSistema, 0);
            BibliotecaLabel.Dock = DockStyle.Fill;
            BibliotecaLabel.Text = "Biblioteca";
            BibliotecaLabel.Font = CorFontepadraoLabel.Font;
            BibliotecaLabel.ForeColor = Color.WhiteSmoke;
            BibliotecaLabel.TextAlign = ContentAlignment.MiddleRight;
            BibliotecaLabel.MouseHover += new EventHandler(this.CorridasPanel_MouseHover);
            BibliotecaLabel.Click += new System.EventHandler(this.BibliotecaSetaLabel_Click);
            BibliotecaLabel.Name = "BibliotecaLabel";

            BibliotecaPanel.Controls.Add(BibliotecaLabel);
            //BibliotecaPanel.Controls.Add(BibliotecaImagem);
            BibliotecaPanel.Controls.Add(Divisoria2BibliotecaImagem);
            BibliotecaPanel.Controls.Add(BibliotecaSetaLabel);
            BibliotecaPanel.Controls.Add(DivisoriaBibliotecaImagem);

            SubMenuRecursosHumanos.Controls.Add(BibliotecaPanel);
            #endregion

            #region AvaliacaoDesempenho 
            AvaliacaoDesempenhoPanel = new Panel();
            AvaliacaoDesempenhoPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            AvaliacaoDesempenhoPanel.Dock = DockStyle.Top;
            AvaliacaoDesempenhoPanel.BackColor = _corFundoMenu;
            AvaliacaoDesempenhoPanel.Name = "AvaliacaoDesempenhoPanel";
            AvaliacaoDesempenhoPanel.Enabled = Publicas._usuario.AcessaAvaliacaoDesempenho;

            DivisoriaAvaliacaoDesempenhoImagem = new PictureBox();
            DivisoriaAvaliacaoDesempenhoImagem.Size = new Size(0, 4);
            DivisoriaAvaliacaoDesempenhoImagem.Dock = DockStyle.Bottom;
            DivisoriaAvaliacaoDesempenhoImagem.BackColor = _corFundoDivisao;

            Divisoria2AvaliacaoDesempenhoImagem = new PictureBox();
            Divisoria2AvaliacaoDesempenhoImagem.Size = new Size(1, 2);
            Divisoria2AvaliacaoDesempenhoImagem.Dock = DockStyle.Right;
            Divisoria2AvaliacaoDesempenhoImagem.BackColor = _corFundoDivisao;

            AvaliacaoDesempenhoSetaLabel = new Label();
            AvaliacaoDesempenhoSetaLabel.AutoSize = false;
            AvaliacaoDesempenhoSetaLabel.Size = new Size(20, 59);
            AvaliacaoDesempenhoSetaLabel.Dock = DockStyle.Right;
            AvaliacaoDesempenhoSetaLabel.Text = "6";
            AvaliacaoDesempenhoSetaLabel.Font = new Font("Webdings", (float)12);
            AvaliacaoDesempenhoSetaLabel.TextAlign = ContentAlignment.MiddleCenter;
            AvaliacaoDesempenhoSetaLabel.Click += new System.EventHandler(this.AvaliacaoDesempenhoSetaLabel_Click);
            AvaliacaoDesempenhoSetaLabel.MouseHover += new EventHandler(this.CorridasSetaLabel_MouseHover);
            AvaliacaoDesempenhoSetaLabel.Name = "AvaliacaoDesempenhoSetaLabel";
            AvaliacaoDesempenhoSetaLabel.ForeColor = Color.WhiteSmoke;

            AvaliacaoDesempenhoLabel = new Label();
            AvaliacaoDesempenhoLabel.AutoSize = false;
            AvaliacaoDesempenhoLabel.Size = new Size(_widthLabelMenuSistema, 0);
            AvaliacaoDesempenhoLabel.Dock = DockStyle.Fill;
            AvaliacaoDesempenhoLabel.Text = "Avaliação de" + Environment.NewLine + "Desempenho";
            AvaliacaoDesempenhoLabel.Font = CorFontepadraoLabel.Font;
            AvaliacaoDesempenhoLabel.ForeColor = Color.WhiteSmoke;
            AvaliacaoDesempenhoLabel.TextAlign = ContentAlignment.MiddleRight;
            AvaliacaoDesempenhoLabel.MouseHover += new EventHandler(this.CorridasPanel_MouseHover);
            AvaliacaoDesempenhoLabel.Click += new System.EventHandler(this.AvaliacaoDesempenhoSetaLabel_Click);
            AvaliacaoDesempenhoLabel.Name = "AvaliacaoDesempenhoLabel";

            AvaliacaoDesempenhoPanel.Controls.Add(AvaliacaoDesempenhoLabel);
            //AvaliacaoDesempenhoPanel.Controls.Add(AvaliacaoDesempenhoImagem);
            AvaliacaoDesempenhoPanel.Controls.Add(Divisoria2AvaliacaoDesempenhoImagem);
            AvaliacaoDesempenhoPanel.Controls.Add(AvaliacaoDesempenhoSetaLabel);
            AvaliacaoDesempenhoPanel.Controls.Add(DivisoriaAvaliacaoDesempenhoImagem);

            SubMenuRecursosHumanos.Controls.Add(AvaliacaoDesempenhoPanel);
            #endregion
        }

        private void FeriasSetaLabel_Click(object sender, EventArgs e)
        {
            FeriasSetaLabel.Text = "3";

            if (!Publicas._TemaBlack)
            {
                FeriasSetaLabel.ForeColor = Publicas._bordaEntrada;
                FeriasLabel.ForeColor = Publicas._bordaEntrada;
            }
            else
            {
                FeriasSetaLabel.ForeColor = Publicas._fonteMenuSelecionado;
                FeriasLabel.ForeColor = Publicas._fonteMenuSelecionado;
            }
            FeriasSetaLabel.BackColor = _corFundoMenu;

            FechaSubMenuAvaliacaoDesempenho();

            if (SubMenuFerias != null)
            {
                FechaSubMenuFerias();
                return;
            }

            #region Cria estrutura 

            // Menu de fundo (onde agrupa os demais itens)
            SubMenuFerias = new Panel();
            SubMenuFerias.Size = new Size(155, _heidthMenuSistema * 3);
            SubMenuFerias.Location = new Point(MenuSistemaPanel.Width + SubMenuRecursosHumanos.Width + 4, AcessoAoMenuPanel.Height);
            SubMenuFerias.BackColor = _corFundoDivisao;
            this.Controls.Add(SubMenuFerias);
            SubMenuFerias.BringToFront();
            SubMenuFerias.Visible = true;
            #endregion

            // Os ultimos SubMenus deve ser incluidos primeiros
            #region ProgramacaoFerias
            ProgramacaoFeriasPanel = new Panel();
            ProgramacaoFeriasPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            ProgramacaoFeriasPanel.Dock = DockStyle.Top;
            ProgramacaoFeriasPanel.BackColor = _corFundoMenu;
            //ProgramacaoFeriasPanel.Enabled = Publicas._usuario.Desenvolvedor || Publicas._usuario.Id == 87;

            ProgramacaoFeriasPanel.Name = "ProgramacaoFeriasPanel";

            DivisoriaProgramacaoFeriasImagem = new PictureBox();
            DivisoriaProgramacaoFeriasImagem.Size = new Size(0, 4);
            DivisoriaProgramacaoFeriasImagem.Dock = DockStyle.Bottom;
            DivisoriaProgramacaoFeriasImagem.BackColor = _corFundoDivisao;

            ProgramacaoFeriasLabel = new Label();
            ProgramacaoFeriasLabel.AutoSize = false;
            ProgramacaoFeriasLabel.Size = new Size(_widthLabelMenuSistema, 0);
            ProgramacaoFeriasLabel.Dock = DockStyle.Fill;
            ProgramacaoFeriasLabel.Text = "Consulta e" + Environment.NewLine + "Aprovação" ;
            ProgramacaoFeriasLabel.Font = CorFontepadraoLabel.Font;
            ProgramacaoFeriasLabel.ForeColor = Color.WhiteSmoke;
            ProgramacaoFeriasLabel.TextAlign = ContentAlignment.MiddleRight;
            ProgramacaoFeriasLabel.Click += new System.EventHandler(this.ProgramacaoFeriasLabel_Click);
            ProgramacaoFeriasLabel.MouseHover += new EventHandler(this.ProgramacaoFeriasLabel_MouseHover);
            ProgramacaoFeriasLabel.Name = "ProgramacaoFeriasLabel";

            FavoritoProgramacaoFeriasImagem = new PictureBox();
            FavoritoProgramacaoFeriasImagem.Size = new Size(10, 10);
            FavoritoProgramacaoFeriasImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoProgramacaoFeriasImagem.Name = ProgramacaoFeriasLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoProgramacaoFeriasImagem.Name))
            {
                FavoritoProgramacaoFeriasImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoProgramacaoFeriasImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoProgramacaoFeriasImagem.Top = 35;
            FavoritoProgramacaoFeriasImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoProgramacaoFeriasImagem.Tag = ProgramacaoFeriasLabel.Text;
            FavoritoProgramacaoFeriasImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoProgramacaoFeriasImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoProgramacaoFeriasImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoProgramacaoFeriasImagem.AccessibleName = "Recursos Humanos";

            ProgramacaoFeriasPanel.Controls.Add(ProgramacaoFeriasLabel);
            ProgramacaoFeriasPanel.Controls.Add(DivisoriaProgramacaoFeriasImagem);
            ProgramacaoFeriasPanel.Controls.Add(FavoritoProgramacaoFeriasImagem);
            FavoritoProgramacaoFeriasImagem.BringToFront();
            SubMenuFerias.Controls.Add(ProgramacaoFeriasPanel);
            #endregion

            #region CadastroFerias
            CadastroFeriasPanel = new Panel();
            CadastroFeriasPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            CadastroFeriasPanel.Dock = DockStyle.Top;
            CadastroFeriasPanel.BackColor = _corFundoMenu;
            //CadastroFeriasPanel.Enabled = Publicas._usuario.Desenvolvedor || Publicas._usuario.Id == 87;

            CadastroFeriasPanel.Name = "CadastroFeriasPanel";

            DivisoriaCadastroFeriasImagem = new PictureBox();
            DivisoriaCadastroFeriasImagem.Size = new Size(0, 4);
            DivisoriaCadastroFeriasImagem.Dock = DockStyle.Bottom;
            DivisoriaCadastroFeriasImagem.BackColor = _corFundoDivisao;

            CadastroFeriasLabel = new Label();
            CadastroFeriasLabel.AutoSize = false;
            CadastroFeriasLabel.Size = new Size(_widthLabelMenuSistema, 0);
            CadastroFeriasLabel.Dock = DockStyle.Fill;
            CadastroFeriasLabel.Text = "Cadastro";
            CadastroFeriasLabel.Font = CorFontepadraoLabel.Font;
            CadastroFeriasLabel.ForeColor = Color.WhiteSmoke;
            CadastroFeriasLabel.TextAlign = ContentAlignment.MiddleRight;
            CadastroFeriasLabel.Click += new System.EventHandler(this.CadastroFeriasPanel_Click);
            CadastroFeriasLabel.MouseHover += new EventHandler(this.ProgramacaoFeriasLabel_MouseHover);
            CadastroFeriasLabel.Name = "CadastroFeriasLabel";

            FavoritoCadastroFeriasImagem = new PictureBox();
            FavoritoCadastroFeriasImagem.Size = new Size(10, 10);
            FavoritoCadastroFeriasImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoCadastroFeriasImagem.Name = CadastroFeriasLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoCadastroFeriasImagem.Name))
            {
                FavoritoCadastroFeriasImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoCadastroFeriasImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoCadastroFeriasImagem.Top = 35;
            FavoritoCadastroFeriasImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoCadastroFeriasImagem.Tag = CadastroFeriasLabel.Text;
            FavoritoCadastroFeriasImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoCadastroFeriasImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoCadastroFeriasImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoCadastroFeriasImagem.AccessibleName = "Recursos Humanos";

            CadastroFeriasPanel.Controls.Add(CadastroFeriasLabel);
            CadastroFeriasPanel.Controls.Add(DivisoriaCadastroFeriasImagem);
            CadastroFeriasPanel.Controls.Add(FavoritoCadastroFeriasImagem);
            FavoritoCadastroFeriasImagem.BringToFront();
            SubMenuFerias.Controls.Add(CadastroFeriasPanel);
            #endregion

            #region PeriodoAquisitivoFerias
            PeriodoAquisitivoFeriasPanel = new Panel();
            PeriodoAquisitivoFeriasPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            PeriodoAquisitivoFeriasPanel.Dock = DockStyle.Top;
            PeriodoAquisitivoFeriasPanel.BackColor = _corFundoMenu;
            PeriodoAquisitivoFeriasPanel.Enabled = Publicas._usuario.AcessaPerAquisitoFerias || Publicas._usuario.Desenvolvedor ;

            PeriodoAquisitivoFeriasPanel.Name = "PeriodoAquisitivoFeriasPanel";

            DivisoriaPeriodoAquisitivoFeriasImagem = new PictureBox();
            DivisoriaPeriodoAquisitivoFeriasImagem.Size = new Size(0, 4);
            DivisoriaPeriodoAquisitivoFeriasImagem.Dock = DockStyle.Bottom;
            DivisoriaPeriodoAquisitivoFeriasImagem.BackColor = _corFundoDivisao;

            PeriodoAquisitivoFeriasLabel = new Label();
            PeriodoAquisitivoFeriasLabel.AutoSize = false;
            PeriodoAquisitivoFeriasLabel.Size = new Size(_widthLabelMenuSistema, 0);
            PeriodoAquisitivoFeriasLabel.Dock = DockStyle.Fill;
            PeriodoAquisitivoFeriasLabel.Text = "Período Aquisitivo" + Environment.NewLine + "de Ferias";
            PeriodoAquisitivoFeriasLabel.Font = CorFontepadraoLabel.Font;
            PeriodoAquisitivoFeriasLabel.ForeColor = Color.WhiteSmoke;
            PeriodoAquisitivoFeriasLabel.TextAlign = ContentAlignment.MiddleRight;
            PeriodoAquisitivoFeriasLabel.Click += new System.EventHandler(this.PeriodoAquisitivoFeriasLabel_Click);
            PeriodoAquisitivoFeriasLabel.MouseHover += new EventHandler(this.ProgramacaoFeriasLabel_MouseHover);
            PeriodoAquisitivoFeriasLabel.Name = "PeriodoAquisitivoFeriasLabel";

            FavoritoPeriodoAquisitivoFeriasImagem = new PictureBox();
            FavoritoPeriodoAquisitivoFeriasImagem.Size = new Size(10, 10);
            FavoritoPeriodoAquisitivoFeriasImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoPeriodoAquisitivoFeriasImagem.Name = PeriodoAquisitivoFeriasLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoPeriodoAquisitivoFeriasImagem.Name))
            {
                FavoritoPeriodoAquisitivoFeriasImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoPeriodoAquisitivoFeriasImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoPeriodoAquisitivoFeriasImagem.Top = 35;
            FavoritoPeriodoAquisitivoFeriasImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoPeriodoAquisitivoFeriasImagem.Tag = PeriodoAquisitivoFeriasLabel.Text;
            FavoritoPeriodoAquisitivoFeriasImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoPeriodoAquisitivoFeriasImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoPeriodoAquisitivoFeriasImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoPeriodoAquisitivoFeriasImagem.AccessibleName = "Recursos Humanos";

            PeriodoAquisitivoFeriasPanel.Controls.Add(PeriodoAquisitivoFeriasLabel);
            PeriodoAquisitivoFeriasPanel.Controls.Add(DivisoriaPeriodoAquisitivoFeriasImagem);
            PeriodoAquisitivoFeriasPanel.Controls.Add(FavoritoPeriodoAquisitivoFeriasImagem);
            FavoritoPeriodoAquisitivoFeriasImagem.BringToFront();
            SubMenuFerias.Controls.Add(PeriodoAquisitivoFeriasPanel);
            #endregion
        }

        private void PeriodoAquisitivoFeriasLabel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaDepartamentoPessoal;
            DepartamentoPessoal.PeriodoAquisitivoDeFerias _tela = new DepartamentoPessoal.PeriodoAquisitivoDeFerias();
            //_tela.Size = new Size(this.Width - 5, this.Height - (tituloPanel.Height + panel2.Height + 2));
            _tela.ShowDialog();
            NomePadrao();
        }

        private void ProgramacaoFeriasLabel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaDepartamentoPessoal;
            DepartamentoPessoal.ProgramacaoDeFerias _tela = new DepartamentoPessoal.ProgramacaoDeFerias();
            _tela.Size = new Size(this.Width - 5, this.Height - (tituloPanel.Height + panel2.Height + 2));
            _tela.ShowDialog();
            NomePadrao();
        }

        private void CadastroFeriasPanel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaDepartamentoPessoal;
            DepartamentoPessoal.CadastroProgramacaoDeFerias _tela = new DepartamentoPessoal.CadastroProgramacaoDeFerias();
            
            if (!Publicas._usuario.Coordenador && !Publicas._usuario.Gerente && !Publicas._usuario.Desenvolvedor)
            {
                _tela.usuarioTextBox.Enabled = false;
                _tela.empresaComboBoxAdv.ReadOnly = true; 
            }

            _tela.ShowDialog();
            NomePadrao();
        }

        private void ProgramacaoFeriasLabel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubMenuFerias();

            if (((Control)sender).Name.Contains("Programacao"))
            {
                ProgramacaoFeriasLabel.Font = new Font(ProgramacaoFeriasLabel.Font, FontStyle.Bold);
                ProgramacaoFeriasLabel.ForeColor = Publicas._fonteBotaoFocado;
                ProgramacaoFeriasLabel.BackColor = _corMenuSelecionado;
                FavoritoProgramacaoFeriasImagem.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("CadastroFerias"))
            {
                CadastroFeriasLabel.Font = new Font(CadastroFeriasLabel.Font, FontStyle.Bold);
                CadastroFeriasLabel.ForeColor = Publicas._fonteBotaoFocado;
                CadastroFeriasLabel.BackColor = _corMenuSelecionado;
                FavoritoCadastroFeriasImagem.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("PeriodoAquisitivo"))
            {
                PeriodoAquisitivoFeriasLabel.Font = new Font(PeriodoAquisitivoFeriasLabel.Font, FontStyle.Bold);
                PeriodoAquisitivoFeriasLabel.ForeColor = Publicas._fonteBotaoFocado;
                PeriodoAquisitivoFeriasLabel.BackColor = _corMenuSelecionado;
                FavoritoPeriodoAquisitivoFeriasImagem.BackColor = _corMenuSelecionado;
                return;
            }
        }

        private void MudaSelecaoDeCoresSubMenuFerias()
        {
            CadastroFeriasLabel.Font = new Font(CadastroFeriasLabel.Font, CadastroFeriasLabel.Font.Style & ~FontStyle.Bold);
            ProgramacaoFeriasLabel.Font = new Font(ProgramacaoFeriasLabel.Font, ProgramacaoFeriasLabel.Font.Style & ~FontStyle.Bold);
            PeriodoAquisitivoFeriasLabel.Font = new Font(PeriodoAquisitivoFeriasLabel.Font, PeriodoAquisitivoFeriasLabel.Font.Style & ~FontStyle.Bold);

            CadastroFeriasLabel.BackColor = _corFundoMenu;
            ProgramacaoFeriasLabel.BackColor = CadastroFeriasLabel.BackColor;
            PeriodoAquisitivoFeriasLabel.BackColor = CadastroFeriasLabel.BackColor;
            FavoritoPeriodoAquisitivoFeriasImagem.BackColor = CadastroFeriasLabel.BackColor;
            FavoritoProgramacaoFeriasImagem.BackColor = CadastroFeriasLabel.BackColor;
            FavoritoCadastroFeriasImagem.BackColor = CadastroFeriasLabel.BackColor;

            CadastroFeriasLabel.ForeColor = Color.WhiteSmoke;
            ProgramacaoFeriasLabel.ForeColor = Color.WhiteSmoke;
            PeriodoAquisitivoFeriasLabel.ForeColor = Color.WhiteSmoke;

        }

        private void FechaSubMenuFerias()
        {
            if (SubMenuFerias != null)
            {
                SubMenuFerias.Visible = false;
                this.Controls.Remove(SubMenuFerias);
                SubMenuFerias.Dispose();
                SubMenuFerias = null;
            }
        }

        private void CorridasPanel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubMenuRecursosHumanos();
            FechaSubMenuAvaliacaoDesempenho();
            FechaSubMenuBiblioteca();
            FechaSubMenuCorridas();
            FechaSubMenuCurriculo();
            FechaSubMenuSuprimentos();

            if (((Control)sender).Name.Contains("Ferias"))
            {
                FeriasLabel.Font = new Font(FeriasLabel.Font, FontStyle.Bold);
                FeriasLabel.ForeColor = Publicas._fonteBotaoFocado;
                FeriasLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("AvaliacaoDesempenho"))
            {
                AvaliacaoDesempenhoLabel.Font = new Font(AvaliacaoDesempenhoLabel.Font, FontStyle.Bold);
                AvaliacaoDesempenhoLabel.ForeColor = Publicas._fonteBotaoFocado;
                AvaliacaoDesempenhoLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Biblioteca"))
            {
                BibliotecaLabel.Font = new Font(BibliotecaLabel.Font, FontStyle.Bold);
                BibliotecaLabel.ForeColor = Publicas._fonteBotaoFocado;
                BibliotecaLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("PeriodoBancoHoras"))
            {
                PeriodoBancoHorasLabel.Font = new Font(PeriodoBancoHorasLabel.Font, FontStyle.Bold);
                PeriodoBancoHorasLabel.ForeColor = Publicas._fonteBotaoFocado;
                PeriodoBancoHorasLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Curriculo"))
            {
                CurriculoLabel.Font = new Font(CurriculoLabel.Font, FontStyle.Bold);
                CurriculoLabel.ForeColor = Publicas._fonteBotaoFocado;
                CurriculoLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Torneios"))
            {
                TorneiosLabel.Font = new Font(TorneiosLabel.Font, FontStyle.Bold);
                TorneiosLabel.ForeColor = Publicas._fonteBotaoFocado;
                TorneiosLabel.BackColor = _corMenuSelecionado;
                return;
            }
        }

        private void CorridasSetaLabel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubMenuRecursosHumanos();
            FechaMenuUsuario();
            FechaSubMenuAvaliacaoDesempenho();
            FechaSubMenuBiblioteca();
            FechaSubMenuCorridas();
            FechaSubMenuCurriculo();
            FechaSubMenuTorneios();
            FechaSubMenuSuprimentos();

            if (((Control)sender).Name.Contains("Biblioteca"))
            {
                BibliotecaSetaLabel.ForeColor = Publicas._fonteBotaoFocado;
                BibliotecaSetaLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Corridas"))
            {
                CorridasSetaLabel.ForeColor = Publicas._fonteBotaoFocado;
                CorridasSetaLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("AvaliacaoDesempenho"))
            {
                AvaliacaoDesempenhoSetaLabel.ForeColor = Publicas._fonteBotaoFocado;
                AvaliacaoDesempenhoSetaLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Curriculo"))
            {
                CurriculoSetaLabel.ForeColor = Publicas._fonteBotaoFocado;
                CurriculoSetaLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Ferias"))
            {
                FeriasSetaLabel.Font = new Font(FeriasSetaLabel.Font, FontStyle.Bold);
                FeriasSetaLabel.ForeColor = Publicas._fonteBotaoFocado;
                FeriasSetaLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Torneios"))
            {
                TorneiosSetaLabel.Font = new Font(TorneiosSetaLabel.Font, FontStyle.Bold);
                TorneiosSetaLabel.ForeColor = Publicas._fonteBotaoFocado;
                TorneiosSetaLabel.BackColor = _corMenuSelecionado;
                return;
            }
        }

        private void MudaSelecaoDeCoresSubMenuRecursosHumanos()
        {
            PeriodoBancoHorasLabel.Font = new Font(PeriodoBancoHorasLabel.Font, PeriodoBancoHorasLabel.Font.Style & ~FontStyle.Bold);
            AvaliacaoDesempenhoLabel.Font = new Font(AvaliacaoDesempenhoLabel.Font, AvaliacaoDesempenhoLabel.Font.Style & ~FontStyle.Bold);
            BibliotecaLabel.Font = new Font(BibliotecaLabel.Font, BibliotecaLabel.Font.Style & ~FontStyle.Bold);
            CurriculoLabel.Font = new Font(CurriculoLabel.Font, CurriculoLabel.Font.Style & ~FontStyle.Bold);
            FeriasLabel.Font = new Font(FeriasLabel.Font, FeriasLabel.Font.Style & ~FontStyle.Bold);
            TorneiosLabel.Font = new Font(TorneiosLabel.Font, TorneiosLabel.Font.Style & ~FontStyle.Bold);

            PeriodoBancoHorasLabel.BackColor = _corFundoMenu;
            AvaliacaoDesempenhoLabel.BackColor = PeriodoBancoHorasLabel.BackColor;
            BibliotecaLabel.BackColor = PeriodoBancoHorasLabel.BackColor;
            CurriculoLabel.BackColor = PeriodoBancoHorasLabel.BackColor;
            FeriasLabel.BackColor = PeriodoBancoHorasLabel.BackColor;
            TorneiosLabel.BackColor = PeriodoBancoHorasLabel.BackColor;

            AvaliacaoDesempenhoSetaLabel.BackColor = PeriodoBancoHorasLabel.BackColor;
            BibliotecaSetaLabel.BackColor = PeriodoBancoHorasLabel.BackColor;
            CurriculoSetaLabel.BackColor = PeriodoBancoHorasLabel.BackColor;
            FeriasSetaLabel.BackColor = PeriodoBancoHorasLabel.BackColor;
            TorneiosSetaLabel.BackColor = PeriodoBancoHorasLabel.BackColor;

            AvaliacaoDesempenhoSetaLabel.ForeColor = Color.WhiteSmoke;
            BibliotecaSetaLabel.ForeColor = Color.WhiteSmoke;
            CurriculoSetaLabel.ForeColor = Color.WhiteSmoke;
            PeriodoBancoHorasLabel.ForeColor = Color.WhiteSmoke;
            AvaliacaoDesempenhoLabel.ForeColor = Color.WhiteSmoke;
            BibliotecaLabel.ForeColor = Color.WhiteSmoke;
            CurriculoLabel.ForeColor = Color.WhiteSmoke;
            FeriasLabel.ForeColor = Color.WhiteSmoke;
            FeriasSetaLabel.ForeColor = Color.WhiteSmoke;
            TorneiosLabel.ForeColor = Color.WhiteSmoke;
            TorneiosSetaLabel.ForeColor = Color.WhiteSmoke;

            AvaliacaoDesempenhoSetaLabel.Text = "6";
            FeriasSetaLabel.Text = "6";
            BibliotecaSetaLabel.Text = "6";
            CurriculoSetaLabel.Text = "6";
            TorneiosSetaLabel.Text = "6";
        }

        private void PeriodoBancoHorasPanel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();

            MensagemSistema();
            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaCadastro;
            Cadastros.PeriodoBancoHoras _tela = new Cadastros.PeriodoBancoHoras();
            _tela.ShowDialog();
            NomePadrao();
            //AtivaTimer(sender, e);
        }

        private void SorteioLabel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();

            MensagemSistema();
            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaCadastro;
            Diversos.Sorteio _tela = new Diversos.Sorteio();
            _tela.ShowDialog();
            NomePadrao();
            //AtivaTimer(sender, e);
        }

        private void FechaSubMenuRecursosHumanos()
        {
            TemaPanel.Visible = false;
            FechaSubMenuAvaliacaoDesempenho();
            FechaSubMenuBiblioteca();
            FechaSubMenuCorridas();
            FechaSubMenuCurriculo();
            FechaSubMenuFerias();
            FechaSubMenuTorneios();
            FechaSubMenuSuprimentos();

            if (SubMenuRecursosHumanos != null)
            {
                SubMenuRecursosHumanos.Visible = false;
                this.Controls.Remove(SubMenuRecursosHumanos);
                SubMenuRecursosHumanos.Dispose();
                SubMenuRecursosHumanos = null;
            }
        }

        private void FechaSubMenuFavoritos()
        {
            FechaSubMenuAvaliacaoDesempenho();
            FechaSubMenuBiblioteca();
            FechaSubMenuCorridas();
            FechaSubMenuCurriculo();
            FechaSubMenuFerias();
            FechaSubMenuSuprimentos();

            if (SubMenuFavoritos != null)
            {
                SubMenuFavoritos.Visible = false;
                this.Controls.Remove(SubMenuFavoritos);
                SubMenuFavoritos.Dispose();
                SubMenuFavoritos = null;
            }
        }

        #region SubMenu Avaliação Desempenho

        private void AvaliacaoDesempenhoSetaLabel_Click(object sender, EventArgs e)
        {
            FechaSubMenuBiblioteca();
            FechaSubMenuCurriculo();
            FechaSubMenuFerias();

            AvaliacaoDesempenhoSetaLabel.Text = "3";
            if (!Publicas._TemaBlack)
            {
                AvaliacaoDesempenhoSetaLabel.ForeColor = Publicas._bordaEntrada;
                AvaliacaoDesempenhoLabel.ForeColor = Publicas._bordaEntrada;
            }
            else
            {
                AvaliacaoDesempenhoSetaLabel.ForeColor = Publicas._fonteMenuSelecionado;
                AvaliacaoDesempenhoLabel.ForeColor = Publicas._fonteMenuSelecionado;
            }
            AvaliacaoDesempenhoSetaLabel.BackColor = _corFundoMenu;

            if (SubMenuAvaliacaoDesempenho != null)
            {
                FechaSubMenuAvaliacaoDesempenho();
                return;
            }

            if (SubMenuFavoritos != null)
            {
                FechaSubMenuFavoritos();
                return;
            }

            #region Cria estrutura 

            // Menu de fundo (onde agrupa os demais itens)
            SubMenuAvaliacaoDesempenho = new Panel();
            SubMenuAvaliacaoDesempenho.Size = new Size(155, _heidthMenuSistema * 4);
            SubMenuAvaliacaoDesempenho.Location = new Point(MenuSistemaPanel.Width + SubMenuRecursosHumanos.Width + 4, AcessoAoMenuPanel.Height);
            SubMenuAvaliacaoDesempenho.BackColor = _corFundoDivisao;
            this.Controls.Add(SubMenuAvaliacaoDesempenho);
            SubMenuAvaliacaoDesempenho.BringToFront();
            SubMenuAvaliacaoDesempenho.Visible = true;
            #endregion

            #region AD_Gestor 
            AD_GestorPanel = new Panel();
            AD_GestorPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            AD_GestorPanel.Dock = DockStyle.Top;
            AD_GestorPanel.BackColor = _corFundoMenu;
            AD_GestorPanel.Name = "AD_GestorPanel";
            AD_GestorPanel.Enabled = Publicas._usuario.AcessoDeGestor;

            DivisoriaAD_GestorImagem = new PictureBox();
            DivisoriaAD_GestorImagem.Size = new Size(0, 4);
            DivisoriaAD_GestorImagem.Dock = DockStyle.Bottom;
            DivisoriaAD_GestorImagem.BackColor = _corFundoDivisao;

            Divisoria2AD_GestorImagem = new PictureBox();
            Divisoria2AD_GestorImagem.Size = new Size(1, 2);
            Divisoria2AD_GestorImagem.Dock = DockStyle.Right;
            Divisoria2AD_GestorImagem.BackColor = _corFundoDivisao; 

            AD_GestorSetaLabel = new Label();
            AD_GestorSetaLabel.AutoSize = false;
            AD_GestorSetaLabel.Size = new Size(20, 59);
            AD_GestorSetaLabel.Dock = DockStyle.Right;
            AD_GestorSetaLabel.Text = "6";
            AD_GestorSetaLabel.Font = new Font("Webdings", (float)12);
            AD_GestorSetaLabel.TextAlign = ContentAlignment.MiddleCenter;
            AD_GestorSetaLabel.Click += new System.EventHandler(this.AD_GestorPanel_Click);
            AD_GestorSetaLabel.MouseHover += new EventHandler(this.AD_GestorSetaLabel_MouseHover);
            AD_GestorSetaLabel.Name = "AD_GestorSetaLabel";
            AD_GestorSetaLabel.ForeColor = Color.WhiteSmoke;

            AD_GestorLabel = new Label();
            AD_GestorLabel.AutoSize = false;
            AD_GestorLabel.Size = new Size(_widthLabelMenuSistema, 0);
            AD_GestorLabel.Dock = DockStyle.Fill;
            AD_GestorLabel.Text = "Gestor";
            AD_GestorLabel.Font = CorFontepadraoLabel.Font;
            AD_GestorLabel.ForeColor = Color.WhiteSmoke;
            AD_GestorLabel.TextAlign = ContentAlignment.MiddleRight;
            AD_GestorLabel.MouseHover += new EventHandler(this.AD_GestorPanel_MouseHover);
            AD_GestorLabel.Click += new System.EventHandler(this.AD_GestorPanel_Click);
            AD_GestorLabel.Name = "AD_GestorLabel";

            AD_GestorPanel.Controls.Add(AD_GestorLabel);
            //AD_GestorPanel.Controls.Add(AD_GestorImagem);
            AD_GestorPanel.Controls.Add(Divisoria2AD_GestorImagem);
            AD_GestorPanel.Controls.Add(AD_GestorSetaLabel);
            AD_GestorPanel.Controls.Add(DivisoriaAD_GestorImagem);

            SubMenuAvaliacaoDesempenho.Controls.Add(AD_GestorPanel);
            #endregion

            #region AD_Colaborador 
            AD_ColaboradorPanel = new Panel();
            AD_ColaboradorPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            AD_ColaboradorPanel.Dock = DockStyle.Top;
            AD_ColaboradorPanel.BackColor = _corFundoMenu;
            AD_ColaboradorPanel.Name = "AD_ColaboradorPanel";
            AD_ColaboradorPanel.Enabled = Publicas._usuario.AcessoDeColaborador;

            DivisoriaAD_ColaboradorImagem = new PictureBox();
            DivisoriaAD_ColaboradorImagem.Size = new Size(0, 4);
            DivisoriaAD_ColaboradorImagem.Dock = DockStyle.Bottom;
            DivisoriaAD_ColaboradorImagem.BackColor = _corFundoDivisao;

            Divisoria2AD_ColaboradorImagem = new PictureBox();
            Divisoria2AD_ColaboradorImagem.Size = new Size(1, 2);
            Divisoria2AD_ColaboradorImagem.Dock = DockStyle.Right;
            Divisoria2AD_ColaboradorImagem.BackColor = _corFundoDivisao;

            AD_ColaboradorSetaLabel = new Label();
            AD_ColaboradorSetaLabel.AutoSize = false;
            AD_ColaboradorSetaLabel.Size = new Size(20, 59);
            AD_ColaboradorSetaLabel.Dock = DockStyle.Right;
            AD_ColaboradorSetaLabel.Text = "6";
            AD_ColaboradorSetaLabel.Font = new Font("Webdings", (float)12);
            AD_ColaboradorSetaLabel.TextAlign = ContentAlignment.MiddleCenter;
            AD_ColaboradorSetaLabel.Click += new System.EventHandler(this.AD_ColaboradorPanel_Click);
            AD_ColaboradorSetaLabel.MouseHover += new EventHandler(this.AD_GestorSetaLabel_MouseHover);
            AD_ColaboradorSetaLabel.Name = "AD_ColaboradorSetaLabel";
            AD_ColaboradorSetaLabel.ForeColor = Color.WhiteSmoke;

            AD_ColaboradorLabel = new Label();
            AD_ColaboradorLabel.AutoSize = false;
            AD_ColaboradorLabel.Size = new Size(_widthLabelMenuSistema, 0);
            AD_ColaboradorLabel.Dock = DockStyle.Fill;
            AD_ColaboradorLabel.Text = "Colaborador";
            AD_ColaboradorLabel.Font = CorFontepadraoLabel.Font;
            AD_ColaboradorLabel.ForeColor = Color.WhiteSmoke;
            AD_ColaboradorLabel.TextAlign = ContentAlignment.MiddleRight;
            AD_ColaboradorLabel.MouseHover += new EventHandler(this.AD_GestorPanel_MouseHover);
            AD_ColaboradorLabel.Click += new System.EventHandler(this.AD_ColaboradorPanel_Click);
            AD_ColaboradorLabel.Name = "AD_ColaboradorLabel";

            AD_ColaboradorPanel.Controls.Add(AD_ColaboradorLabel);
            //AD_ColaboradorPanel.Controls.Add(AD_ColaboradorImagem);
            AD_ColaboradorPanel.Controls.Add(Divisoria2AD_ColaboradorImagem);
            AD_ColaboradorPanel.Controls.Add(AD_ColaboradorSetaLabel);
            AD_ColaboradorPanel.Controls.Add(DivisoriaAD_ColaboradorImagem);

            SubMenuAvaliacaoDesempenho.Controls.Add(AD_ColaboradorPanel);
            #endregion

            #region AD_RecursosHumanos 
            AD_RecursosHumanosPanel = new Panel();
            AD_RecursosHumanosPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            AD_RecursosHumanosPanel.Dock = DockStyle.Top;
            AD_RecursosHumanosPanel.BackColor = _corFundoMenu;
            AD_RecursosHumanosPanel.Name = "AD_RecursosHumanosPanel";
            AD_RecursosHumanosPanel.Enabled = Publicas._usuario.AcessoDeRH;

            DivisoriaAD_RecursosHumanosImagem = new PictureBox();
            DivisoriaAD_RecursosHumanosImagem.Size = new Size(0, 4);
            DivisoriaAD_RecursosHumanosImagem.Dock = DockStyle.Bottom;
            DivisoriaAD_RecursosHumanosImagem.BackColor = _corFundoDivisao;

            Divisoria2AD_RecursosHumanosImagem = new PictureBox();
            Divisoria2AD_RecursosHumanosImagem.Size = new Size(1, 2);
            Divisoria2AD_RecursosHumanosImagem.Dock = DockStyle.Right;
            Divisoria2AD_RecursosHumanosImagem.BackColor = _corFundoDivisao;

            AD_RecursosHumanosSetaLabel = new Label();
            AD_RecursosHumanosSetaLabel.AutoSize = false;
            AD_RecursosHumanosSetaLabel.Size = new Size(20, 59);
            AD_RecursosHumanosSetaLabel.Dock = DockStyle.Right;
            AD_RecursosHumanosSetaLabel.Text = "6";
            AD_RecursosHumanosSetaLabel.Font = new Font("Webdings", (float)12);
            AD_RecursosHumanosSetaLabel.TextAlign = ContentAlignment.MiddleCenter;
            AD_RecursosHumanosSetaLabel.Click += new System.EventHandler(this.AD_RecursosHumanosPanel_Click);
            AD_RecursosHumanosSetaLabel.MouseHover += new EventHandler(this.AD_GestorSetaLabel_MouseHover);
            AD_RecursosHumanosSetaLabel.Name = "AD_RecursosHumanosSetaLabel";
            AD_RecursosHumanosSetaLabel.ForeColor = Color.WhiteSmoke;

            AD_RecursosHumanosLabel = new Label();
            AD_RecursosHumanosLabel.AutoSize = false;
            AD_RecursosHumanosLabel.Size = new Size(_widthLabelMenuSistema, 0);
            AD_RecursosHumanosLabel.Dock = DockStyle.Fill;
            AD_RecursosHumanosLabel.Text = "Recursos Humanos";
            AD_RecursosHumanosLabel.Font = CorFontepadraoLabel.Font;
            AD_RecursosHumanosLabel.ForeColor = Color.WhiteSmoke;
            AD_RecursosHumanosLabel.TextAlign = ContentAlignment.MiddleRight;
            AD_RecursosHumanosLabel.MouseHover += new EventHandler(this.AD_GestorPanel_MouseHover);
            AD_RecursosHumanosLabel.Click += new System.EventHandler(this.AD_RecursosHumanosPanel_Click);
            AD_RecursosHumanosLabel.Name = "AD_RecursosHumanosLabel";

            AD_RecursosHumanosPanel.Controls.Add(AD_RecursosHumanosLabel);
            //AD_RecursosHumanosPanel.Controls.Add(AD_RecursosHumanosImagem);
            AD_RecursosHumanosPanel.Controls.Add(Divisoria2AD_RecursosHumanosImagem);
            AD_RecursosHumanosPanel.Controls.Add(AD_RecursosHumanosSetaLabel);
            AD_RecursosHumanosPanel.Controls.Add(DivisoriaAD_RecursosHumanosImagem);

            SubMenuAvaliacaoDesempenho.Controls.Add(AD_RecursosHumanosPanel);
            #endregion

            #region AD_Planejamento 
            AD_PlanejamentoPanel = new Panel();
            AD_PlanejamentoPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            AD_PlanejamentoPanel.Dock = DockStyle.Top;
            AD_PlanejamentoPanel.BackColor = _corFundoMenu;
            AD_PlanejamentoPanel.Name = "AD_PlanejamentoPanel";
            AD_PlanejamentoPanel.Enabled = Publicas._usuario.AcessoDeControladoria;

            DivisoriaAD_PlanejamentoImagem = new PictureBox();
            DivisoriaAD_PlanejamentoImagem.Size = new Size(0, 4);
            DivisoriaAD_PlanejamentoImagem.Dock = DockStyle.Bottom;
            DivisoriaAD_PlanejamentoImagem.BackColor = _corFundoDivisao;

            Divisoria2AD_PlanejamentoImagem = new PictureBox();
            Divisoria2AD_PlanejamentoImagem.Size = new Size(1, 2);
            Divisoria2AD_PlanejamentoImagem.Dock = DockStyle.Right;
            Divisoria2AD_PlanejamentoImagem.BackColor = _corFundoDivisao;

            AD_PlanejamentoSetaLabel = new Label();
            AD_PlanejamentoSetaLabel.AutoSize = false;
            AD_PlanejamentoSetaLabel.Size = new Size(20, 59);
            AD_PlanejamentoSetaLabel.Dock = DockStyle.Right;
            AD_PlanejamentoSetaLabel.Text = "6";
            AD_PlanejamentoSetaLabel.Font = new Font("Webdings", (float)12);
            AD_PlanejamentoSetaLabel.TextAlign = ContentAlignment.MiddleCenter;
            AD_PlanejamentoSetaLabel.Click += new System.EventHandler(this.AD_PlanejamentoPanel_Click);
            AD_PlanejamentoSetaLabel.MouseHover += new EventHandler(this.AD_GestorSetaLabel_MouseHover);
            AD_PlanejamentoSetaLabel.Name = "AD_PlanejamentoSetaLabel";
            AD_PlanejamentoSetaLabel.ForeColor = Color.WhiteSmoke;

            AD_PlanejamentoLabel = new Label();
            AD_PlanejamentoLabel.AutoSize = false;
            AD_PlanejamentoLabel.Size = new Size(_widthLabelMenuSistema, 0);
            AD_PlanejamentoLabel.Dock = DockStyle.Fill;
            AD_PlanejamentoLabel.Text = "Planejamento";
            AD_PlanejamentoLabel.Font = CorFontepadraoLabel.Font;
            AD_PlanejamentoLabel.ForeColor = Color.WhiteSmoke;
            AD_PlanejamentoLabel.TextAlign = ContentAlignment.MiddleRight;
            AD_PlanejamentoLabel.MouseHover += new EventHandler(this.AD_GestorPanel_MouseHover);
            AD_PlanejamentoLabel.Click += new System.EventHandler(this.AD_PlanejamentoPanel_Click);
            AD_PlanejamentoLabel.Name = "AD_PlanejamentoLabel";

            AD_PlanejamentoPanel.Controls.Add(AD_PlanejamentoLabel);
            //AD_ControladoriaPanel.Controls.Add(AD_ControladoriaImagem);
            AD_PlanejamentoPanel.Controls.Add(Divisoria2AD_PlanejamentoImagem);
            AD_PlanejamentoPanel.Controls.Add(AD_PlanejamentoSetaLabel);
            AD_PlanejamentoPanel.Controls.Add(DivisoriaAD_PlanejamentoImagem);

            SubMenuAvaliacaoDesempenho.Controls.Add(AD_PlanejamentoPanel);
            #endregion
        }

        private void MudaSelecaoDeCoresSubAvaliacaoDesempenho()
        {
            AD_GestorLabel.Font = new Font(AD_GestorLabel.Font, AD_GestorLabel.Font.Style & ~FontStyle.Bold);
            AD_PlanejamentoLabel.Font = new Font(AD_PlanejamentoLabel.Font, AD_PlanejamentoLabel.Font.Style & ~FontStyle.Bold);
            AD_ColaboradorLabel.Font = new Font(AD_ColaboradorLabel.Font, AD_ColaboradorLabel.Font.Style & ~FontStyle.Bold);
            AD_RecursosHumanosLabel.Font = new Font(AD_RecursosHumanosLabel.Font, AD_RecursosHumanosLabel.Font.Style & ~FontStyle.Bold);

            AD_GestorLabel.BackColor = _corFundoMenu;
            AD_PlanejamentoLabel.BackColor = AD_GestorLabel.BackColor;
            AD_ColaboradorLabel.BackColor = AD_GestorLabel.BackColor;
            AD_RecursosHumanosLabel.BackColor = AD_GestorLabel.BackColor;

            AD_GestorSetaLabel.BackColor = _corFundoMenu;
            AD_PlanejamentoSetaLabel.BackColor = AD_GestorLabel.BackColor;
            AD_ColaboradorSetaLabel.BackColor = AD_GestorLabel.BackColor;
            AD_RecursosHumanosSetaLabel.BackColor = AD_GestorLabel.BackColor;

            AD_GestorLabel.ForeColor = Color.WhiteSmoke;
            AD_GestorSetaLabel.ForeColor = Color.WhiteSmoke;
            AD_PlanejamentoLabel.ForeColor = Color.WhiteSmoke;
            AD_PlanejamentoSetaLabel.ForeColor = Color.WhiteSmoke;
            AD_ColaboradorLabel.ForeColor = Color.WhiteSmoke;
            AD_ColaboradorSetaLabel.ForeColor = Color.WhiteSmoke;
            AD_RecursosHumanosLabel.ForeColor = Color.WhiteSmoke;
            AD_RecursosHumanosSetaLabel.ForeColor = Color.WhiteSmoke;

            AD_RecursosHumanosSetaLabel.Text = "6";
            AD_ColaboradorSetaLabel.Text = "6";
            AD_PlanejamentoSetaLabel.Text = "6";
            AD_GestorSetaLabel.Text = "6";

        }

        private void AD_GestorPanel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubAvaliacaoDesempenho();
            FechaMenuUsuario();
            FechaSubMenuADPlanejamento();
            FechaSubMenuADColaborador();
            FechaSubMenuADRecursosHumanos();
            FechaSubMenuADGestor();

            if (((Control)sender).Name.Contains("AD_Gestor"))
            {
                AD_GestorLabel.Font = new Font(AD_GestorLabel.Font, FontStyle.Bold);
                AD_GestorLabel.ForeColor = Publicas._fonteBotaoFocado;
                AD_GestorLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("AD_Colaborador"))
            {
                AD_ColaboradorLabel.Font = new Font(AD_ColaboradorLabel.Font, FontStyle.Bold);
                AD_ColaboradorLabel.ForeColor = Publicas._fonteBotaoFocado;
                AD_ColaboradorLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("AD_Planejamento"))
            {
                AD_PlanejamentoLabel.Font = new Font(AD_PlanejamentoLabel.Font, FontStyle.Bold);
                AD_PlanejamentoLabel.ForeColor = Publicas._fonteBotaoFocado;
                AD_PlanejamentoLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("AD_RecursosHumanos"))
            {
                AD_RecursosHumanosLabel.Font = new Font(AD_RecursosHumanosLabel.Font, FontStyle.Bold);
                AD_RecursosHumanosLabel.ForeColor = Publicas._fonteBotaoFocado;
                AD_RecursosHumanosLabel.BackColor = _corMenuSelecionado;
                return;
            }
        }

        private void AD_GestorSetaLabel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubAvaliacaoDesempenho();
            FechaMenuUsuario();
            FechaSubMenuADPlanejamento();
            FechaSubMenuADColaborador();
            FechaSubMenuADRecursosHumanos();
            FechaSubMenuADGestor();

            if (((Control)sender).Name.Contains("AD_Gestor"))
            {
                AD_GestorSetaLabel.ForeColor = Publicas._fonteBotaoFocado;
                AD_GestorSetaLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("AD_Colaborador"))
            {
                AD_ColaboradorSetaLabel.ForeColor = Publicas._fonteBotaoFocado;
                AD_ColaboradorSetaLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("AD_Planejamento"))
            {
                AD_PlanejamentoSetaLabel.ForeColor = Publicas._fonteBotaoFocado;
                AD_PlanejamentoSetaLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("AD_RecursosHumanos"))
            {
                AD_RecursosHumanosSetaLabel.ForeColor = Publicas._fonteBotaoFocado;
                AD_RecursosHumanosSetaLabel.BackColor = _corMenuSelecionado;
                return;
            }
        }

        private void FechaSubMenuAvaliacaoDesempenho()
        {
            FechaSubMenuFerias();
            FechaSubMenuADRecursosHumanos();
            FechaSubMenuADGestor();
            FechaSubMenuADPlanejamento();
            FechaSubMenuADColaborador();

            if (SubMenuAvaliacaoDesempenho != null)
            {
                SubMenuAvaliacaoDesempenho.Visible = false;
                this.Controls.Remove(SubMenuAvaliacaoDesempenho);
                SubMenuAvaliacaoDesempenho.Dispose();
                SubMenuAvaliacaoDesempenho = null;
            }
        }

        #region SubMenu Planejamento
        private void AD_PlanejamentoPanel_Click(object sender, EventArgs e)
        {
            AD_PlanejamentoSetaLabel.Text = "3";

            if (!Publicas._TemaBlack)
            {
                AD_PlanejamentoSetaLabel.ForeColor = Publicas._bordaEntrada;
                AD_PlanejamentoLabel.ForeColor = Publicas._bordaEntrada;
            }
            else
            {
                AD_PlanejamentoSetaLabel.ForeColor = Publicas._fonteMenuSelecionado;
                AD_PlanejamentoLabel.ForeColor = Publicas._fonteMenuSelecionado;
            }
            AD_PlanejamentoSetaLabel.BackColor = _corFundoMenu;

            FechaSubMenuADGestor();
            FechaSubMenuADColaborador();
            FechaSubMenuADRecursosHumanos();

            if (SubMenuADPlanejamento != null)
            {
                FechaSubMenuADPlanejamento();
                return;
            }

            if (SubMenuFavoritos != null)
            {
                FechaSubMenuFavoritos();
                return;
            }

            #region Cria estrutura 

            // Menu de fundo (onde agrupa os demais itens)
            SubMenuADPlanejamento = new Panel();
            SubMenuADPlanejamento.Size = new Size(155, _heidthMenuSistema * 4);
            SubMenuADPlanejamento.Location = new Point(MenuSistemaPanel.Width + SubMenuRecursosHumanos.Width + SubMenuAvaliacaoDesempenho.Width + 6, AcessoAoMenuPanel.Height);
            SubMenuADPlanejamento.BackColor = _corFundoDivisao;
            this.Controls.Add(SubMenuADPlanejamento);
            #endregion

            #region Notas
            NotasPanel = new Panel();
            NotasPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            NotasPanel.Dock = DockStyle.Top;
            NotasPanel.BackColor = _corFundoMenu;
            NotasPanel.Name = "NotasPanel";

            DivisoriaNotasImagem = new PictureBox();
            DivisoriaNotasImagem.Size = new Size(0, 4);
            DivisoriaNotasImagem.Dock = DockStyle.Bottom;
            DivisoriaNotasImagem.BackColor = _corFundoDivisao;

            NotasLabel = new Label();
            NotasLabel.AutoSize = false;
            NotasLabel.Size = new Size(_widthLabelMenuSistema, 0);
            NotasLabel.Dock = DockStyle.Fill;
            NotasLabel.Text = "Notas";
            NotasLabel.Font = CorFontepadraoLabel.Font;
            NotasLabel.ForeColor = Color.WhiteSmoke;
            NotasLabel.TextAlign = ContentAlignment.MiddleRight;
            NotasLabel.MouseHover += new EventHandler(this.DefinicaoMetasLabel_MouseHover);
            NotasLabel.Click += new System.EventHandler(NotasPanel_Click);
            NotasLabel.Name = "NotasLabel";

            FavoritoNotasImagem = new PictureBox();
            FavoritoNotasImagem.Size = new Size(10, 10);
            FavoritoNotasImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoNotasImagem.Name = "NotasLabelPic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoNotasImagem.Name))
            {
                FavoritoNotasImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoNotasImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoNotasImagem.Top = 35;
            FavoritoNotasImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoNotasImagem.Tag = NotasLabel.Text;
            FavoritoNotasImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoNotasImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoNotasImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoNotasImagem.AccessibleName = "Recursos Humanos";

            NotasPanel.Controls.Add(NotasLabel);
            NotasPanel.Controls.Add(DivisoriaNotasImagem);
            NotasPanel.Controls.Add(FavoritoNotasImagem);
            FavoritoNotasImagem.BringToFront();
            SubMenuADPlanejamento.Controls.Add(NotasPanel);
            #endregion

            #region DefinicaoDefinicaoMetas 
            DefinicaoMetasPanel = new Panel();
            DefinicaoMetasPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            DefinicaoMetasPanel.Dock = DockStyle.Top;
            DefinicaoMetasPanel.BackColor = _corFundoMenu;
            DefinicaoMetasPanel.Name = "DefinicaoMetasPanel";

            DivisoriaDefinicaoMetasImagem = new PictureBox();
            DivisoriaDefinicaoMetasImagem.Size = new Size(0, 4);
            DivisoriaDefinicaoMetasImagem.Dock = DockStyle.Bottom;
            DivisoriaDefinicaoMetasImagem.BackColor = _corFundoDivisao;

            DefinicaoMetasLabel = new Label();
            DefinicaoMetasLabel.AutoSize = false;
            DefinicaoMetasLabel.Size = new Size(_widthLabelMenuSistema, 0);
            DefinicaoMetasLabel.Dock = DockStyle.Fill;
            DefinicaoMetasLabel.Text = "Definição das metas";
            DefinicaoMetasLabel.Font = CorFontepadraoLabel.Font;
            DefinicaoMetasLabel.ForeColor = Color.WhiteSmoke;
            DefinicaoMetasLabel.TextAlign = ContentAlignment.MiddleRight;
            DefinicaoMetasLabel.MouseHover += new EventHandler(this.DefinicaoMetasLabel_MouseHover);
            DefinicaoMetasLabel.Click += new System.EventHandler(DefinicaoMetasPanel_Click);
            DefinicaoMetasLabel.Name = "DefinicaoMetasLabel";

            FavoritoDefinicaoMetasImagem = new PictureBox();
            FavoritoDefinicaoMetasImagem.Size = new Size(10, 10);
            FavoritoDefinicaoMetasImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoDefinicaoMetasImagem.Name = "DefinicaoMetasLabelPic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoDefinicaoMetasImagem.Name))
            {
                FavoritoDefinicaoMetasImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoDefinicaoMetasImagem.Left = 5;//DefinicaoMetasLabel.Width - 10;
            FavoritoDefinicaoMetasImagem.Top = 35;
            FavoritoDefinicaoMetasImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoDefinicaoMetasImagem.Tag = DefinicaoMetasLabel.Text;
            FavoritoDefinicaoMetasImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoDefinicaoMetasImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoDefinicaoMetasImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoDefinicaoMetasImagem.AccessibleName = "Recursos Humanos";

            DefinicaoMetasPanel.Controls.Add(DefinicaoMetasLabel);
            DefinicaoMetasPanel.Controls.Add(DivisoriaDefinicaoMetasImagem);
            DefinicaoMetasPanel.Controls.Add(FavoritoDefinicaoMetasImagem);
            FavoritoDefinicaoMetasImagem.BringToFront();

            SubMenuADPlanejamento.Controls.Add(DefinicaoMetasPanel);
            #endregion

            #region Cargos
            CargosPanel = new Panel();
            CargosPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            CargosPanel.Dock = DockStyle.Top;
            CargosPanel.BackColor = _corFundoMenu;
            CargosPanel.Name = "CargosPanel";

            DivisoriaCargosImagem = new PictureBox();
            DivisoriaCargosImagem.Size = new Size(0, 4);
            DivisoriaCargosImagem.Dock = DockStyle.Bottom;
            DivisoriaCargosImagem.BackColor = _corFundoDivisao;

            CargosLabel = new Label();
            CargosLabel.AutoSize = false;
            CargosLabel.Size = new Size(_widthLabelMenuSistema, 0);
            CargosLabel.Dock = DockStyle.Fill;
            CargosLabel.Text = "Cargos";
            CargosLabel.Font = CorFontepadraoLabel.Font;
            CargosLabel.ForeColor = Color.WhiteSmoke;
            CargosLabel.TextAlign = ContentAlignment.MiddleRight;
            CargosLabel.MouseHover += new EventHandler(this.DefinicaoMetasLabel_MouseHover);
            CargosLabel.Click += new System.EventHandler(CargosPanel_Click);
            CargosLabel.Name = "CargosLabel";

            FavoritoCargosImagem = new PictureBox();
            FavoritoCargosImagem.Size = new Size(10, 10);
            FavoritoCargosImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoCargosImagem.Name = "CargosLabelPic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoCargosImagem.Name))
            {
                FavoritoCargosImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoCargosImagem.Left = 5;//CargosLabel.Width - 10;
            FavoritoCargosImagem.Top = 35;
            FavoritoCargosImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoCargosImagem.Tag = CargosLabel.Text;
            FavoritoCargosImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoCargosImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoCargosImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoCargosImagem.AccessibleName = "Recursos Humanos";

            CargosPanel.Controls.Add(CargosLabel);
            CargosPanel.Controls.Add(DivisoriaCargosImagem);
            CargosPanel.Controls.Add(FavoritoCargosImagem);
            FavoritoCargosImagem.BringToFront();
            CargosLabel.SendToBack();

            SubMenuADPlanejamento.Controls.Add(CargosPanel);
            #endregion

            #region Metas
            MetasPanel = new Panel();
            MetasPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            MetasPanel.Dock = DockStyle.Top;
            MetasPanel.BackColor = _corFundoMenu;
            MetasPanel.Name = "MetasPanel";

            DivisoriaMetasImagem = new PictureBox();
            DivisoriaMetasImagem.Size = new Size(0, 4);
            DivisoriaMetasImagem.Dock = DockStyle.Bottom;
            DivisoriaMetasImagem.BackColor = _corFundoDivisao;

            MetasLabel = new Label();
            MetasLabel.AutoSize = false;
            MetasLabel.Size = new Size(_widthLabelMenuSistema, 0);
            MetasLabel.Dock = DockStyle.Fill;
            MetasLabel.Text = "Metas";
            MetasLabel.Font = CorFontepadraoLabel.Font;
            MetasLabel.ForeColor = Color.WhiteSmoke;
            MetasLabel.TextAlign = ContentAlignment.MiddleRight;
            MetasLabel.MouseHover += new EventHandler(this.DefinicaoMetasLabel_MouseHover);
            MetasLabel.Click += new System.EventHandler(MetasPanel_Click);
            MetasLabel.Name = "MetasLabel";

            FavoritoMetasImagem = new PictureBox();
            FavoritoMetasImagem.Size = new Size(10, 10);
            FavoritoMetasImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoMetasImagem.Name = "MetasLabelPic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoMetasImagem.Name))
            {
                FavoritoMetasImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoMetasImagem.Left = 5;// MetasLabel.Width - 10;
            FavoritoMetasImagem.Top = 35;
            FavoritoMetasImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoMetasImagem.Tag = MetasLabel.Text;
            FavoritoMetasImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoMetasImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoMetasImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoMetasImagem.AccessibleName = "Recursos Humanos";

            MetasPanel.Controls.Add(MetasLabel);
            MetasPanel.Controls.Add(DivisoriaMetasImagem);
            MetasPanel.Controls.Add(FavoritoMetasImagem);
            FavoritoMetasImagem.BringToFront();
            MetasLabel.SendToBack();

            SubMenuADPlanejamento.Controls.Add(MetasPanel);
            #endregion

            SubMenuADPlanejamento.BringToFront();
            SubMenuADPlanejamento.Visible = true;

        }

        private void MudaSelecaoDeCoresSubADControladoria()
        {
            MetasLabel.Font = new Font(MetasLabel.Font, MetasLabel.Font.Style & ~FontStyle.Bold);
            DefinicaoMetasLabel.Font = new Font(DefinicaoMetasLabel.Font, DefinicaoMetasLabel.Font.Style & ~FontStyle.Bold);
            CargosLabel.Font = new Font(DefinicaoMetasLabel.Font, DefinicaoMetasLabel.Font.Style & ~FontStyle.Bold);
            NotasLabel.Font = new Font(DefinicaoMetasLabel.Font, DefinicaoMetasLabel.Font.Style & ~FontStyle.Bold);

            DefinicaoMetasLabel.BackColor = _corFundoMenu;
            MetasLabel.BackColor = DefinicaoMetasLabel.BackColor;
            CargosLabel.BackColor = DefinicaoMetasLabel.BackColor;
            NotasLabel.BackColor = DefinicaoMetasLabel.BackColor;

            FavoritoMetasImagem.BackColor = _corFundoMenu;
            FavoritoDefinicaoMetasImagem.BackColor = FavoritoMetasImagem.BackColor;
            FavoritoCargosImagem.BackColor = FavoritoMetasImagem.BackColor;
            FavoritoNotasImagem.BackColor = FavoritoMetasImagem.BackColor;

            try
            {
                FavoritoCompararAvaliacaoImagem.BackColor = FavoritoMetasImagem.BackColor;
            }
            catch { }

            DefinicaoMetasLabel.ForeColor = Color.WhiteSmoke;
            MetasLabel.ForeColor = Color.WhiteSmoke;
            CargosLabel.ForeColor = Color.WhiteSmoke;
            NotasLabel.ForeColor = Color.WhiteSmoke;
        }

        private void DefinicaoMetasLabel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubADControladoria();
            FechaMenuUsuario();
            
            if (((Control)sender).Name.Contains("Definicao"))
            {
                DefinicaoMetasLabel.Font = new Font(DefinicaoMetasLabel.Font, FontStyle.Bold);
                DefinicaoMetasLabel.ForeColor = Publicas._fonteBotaoFocado;
                DefinicaoMetasLabel.BackColor = _corMenuSelecionado;
                FavoritoDefinicaoMetasImagem.BackColor = DefinicaoMetasLabel.BackColor;
                return;
            }

            if (((Control)sender).Name.Contains("Metas"))
            {
                MetasLabel.Font = new Font(MetasLabel.Font, FontStyle.Bold);
                MetasLabel.ForeColor = Publicas._fonteBotaoFocado;
                MetasLabel.BackColor = _corMenuSelecionado;
                FavoritoMetasImagem.BackColor = MetasLabel.BackColor;
                return;
            }

            if (((Control)sender).Name.Contains("Cargos"))
            {
                CargosLabel.Font = new Font(CargosLabel.Font, FontStyle.Bold);
                CargosLabel.ForeColor = Publicas._fonteBotaoFocado;
                CargosLabel.BackColor = _corMenuSelecionado;
                FavoritoCargosImagem.BackColor = CargosLabel.BackColor;
                return;
            }

            if (((Control)sender).Name.Contains("Notas"))
            {
                NotasLabel.Font = new Font(NotasLabel.Font, FontStyle.Bold);
                NotasLabel.ForeColor = Publicas._fonteBotaoFocado;
                NotasLabel.BackColor = _corMenuSelecionado;
                FavoritoNotasImagem.BackColor = NotasLabel.BackColor;
                return;
            }
        }


        private void FavoritoMetasImagem_Click(object sender, EventArgs e)
        {
            if (((PictureBox)sender).ImageLocation.Contains("CoracaoEscuro"))
            {
                if (_listaMenusFavoritos.Count >= 10 && !Publicas._usuario.Desenvolvedor)
                {
                    new Notificacoes.Mensagem("Não é possível selecionar mais menus como favorito." +
                            Environment.NewLine + "A quantidade máxima de 10 menus já foi atingida.", Publicas.TipoMensagem.Informacao).ShowDialog();
                    return;
                }

                ((PictureBox)sender).ImageLocation = @"Imagens\CoracaoVermelho.png";

                Favoritos _fav = new Favoritos();
                _fav.IdUsuario = Publicas._idUsuario;
                _fav.Name = ((PictureBox)sender).Name;
                _fav.NomeMenu = ((PictureBox)sender).Tag.ToString();
                _fav.MenuAnterior = ((PictureBox)sender).AccessibleName;

                new FavoritosBO().Gravar(_fav);

                _listaMenusFavoritos = new FavoritosBO().Listar();
            }
            else
            {
                ((PictureBox)sender).ImageLocation = @"Imagens\CoracaoEscuro.png";
                foreach (var item in _listaMenusFavoritos.Where(w => w.Name == ((PictureBox)sender).Name))
                {
                    new FavoritosBO().Excluir(item.Id);

                    _listaMenusFavoritos.Remove(item);
                    break;
                }
            }
        }

        private void FavoritoMetasImagem_MouseHover(object sender, EventArgs e)
        {
            ((PictureBox)sender).Cursor = Cursors.Hand;
        }

        private void FavoritoMetasImagem_MouseLeave(object sender, EventArgs e)
        {
            ((PictureBox)sender).Cursor = Cursors.Default;
        }

        private void MetasPanel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();

            MensagemSistema();
            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaAvaliacao;
            new GestaoEstrategica.Metas().ShowDialog();
            NomePadrao();
            //AtivaTimer(sender, e);
        }

        private void DefinicaoMetasPanel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaAvaliacao;
            Avaliacao_de_desempenho.DefinicaoDeMetas _tela = new Avaliacao_de_desempenho.DefinicaoDeMetas();

            _tela.ShowDialog();
            NomePadrao();
            //AtivaTimer(sender, e);
        }

        private void FechaSubMenuADPlanejamento()
        {
            if (SubMenuADPlanejamento != null)
            {
                SubMenuADPlanejamento.Visible = false;
                this.Controls.Remove(SubMenuADPlanejamento);
                SubMenuADPlanejamento.Dispose();
                SubMenuADPlanejamento = null;
            }
        }
        #endregion

        #region SubMenu Colaborador
        private void AD_ColaboradorPanel_Click(object sender, EventArgs e)
        {
            AD_ColaboradorSetaLabel.Text = "3";

            if (!Publicas._TemaBlack)
            {
                AD_ColaboradorSetaLabel.ForeColor = Publicas._bordaEntrada;
                AD_ColaboradorLabel.ForeColor = Publicas._bordaEntrada;
            }
            else
            {
                AD_ColaboradorSetaLabel.ForeColor = Publicas._fonteMenuSelecionado;
                AD_ColaboradorLabel.ForeColor = Publicas._fonteMenuSelecionado;
            }
            AD_ColaboradorSetaLabel.BackColor = _corFundoMenu;

            FechaSubMenuADPlanejamento();
            FechaSubMenuADGestor();
            FechaSubMenuADRecursosHumanos();

            if (SubMenuADColaborador != null)
            {
                FechaSubMenuADColaborador();
                return;
            }

            if (SubMenuFavoritos != null)
            {
                FechaSubMenuFavoritos();
                return;
            }

            #region Cria estrutura 

            // Menu de fundo (onde agrupa os demais itens)
            SubMenuADColaborador = new Panel();
            SubMenuADColaborador.Size = new Size(155, _heidthMenuSistema * 5);
            SubMenuADColaborador.Location = new Point(MenuSistemaPanel.Width + SubMenuRecursosHumanos.Width + SubMenuAvaliacaoDesempenho.Width + 6, AcessoAoMenuPanel.Height);
            SubMenuADColaborador.BackColor = _corFundoDivisao;
            this.Controls.Add(SubMenuADColaborador);
            SubMenuADColaborador.BringToFront();
            SubMenuADColaborador.Visible = true;
            #endregion

            #region Notas
            NotasPanel = new Panel();
            NotasPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            NotasPanel.Dock = DockStyle.Top;
            NotasPanel.BackColor = _corFundoMenu;
            NotasPanel.Name = "NotasPanel";

            DivisoriaNotasImagem = new PictureBox();
            DivisoriaNotasImagem.Size = new Size(0, 4);
            DivisoriaNotasImagem.Dock = DockStyle.Bottom;
            DivisoriaNotasImagem.BackColor = _corFundoDivisao;

            NotasLabel = new Label();
            NotasLabel.AutoSize = false;
            NotasLabel.Size = new Size(_widthLabelMenuSistema, 0);
            NotasLabel.Dock = DockStyle.Fill;
            NotasLabel.Text = "Notas";
            NotasLabel.Font = CorFontepadraoLabel.Font;
            NotasLabel.ForeColor = Color.WhiteSmoke;
            NotasLabel.TextAlign = ContentAlignment.MiddleRight;
            NotasLabel.MouseHover += new EventHandler(this.MetasNumericasLabel_MouseHover);
            NotasLabel.Click += new System.EventHandler(NotasPanelColaborador_Click);
            NotasLabel.Name = "NotasLabel";

            FavoritoNotasImagem = new PictureBox();
            FavoritoNotasImagem.Size = new Size(10, 10);
            FavoritoNotasImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoNotasImagem.Name = "NotasLabelPic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoNotasImagem.Name))
            {
                FavoritoNotasImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoNotasImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoNotasImagem.Top = 35;
            FavoritoNotasImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoNotasImagem.Tag = NotasLabel.Text;
            FavoritoNotasImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoNotasImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoNotasImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoNotasImagem.AccessibleName = "Recursos Humanos";

            NotasPanel.Controls.Add(NotasLabel);
            NotasPanel.Controls.Add(DivisoriaNotasImagem);
            NotasPanel.Controls.Add(FavoritoNotasImagem);
            FavoritoNotasImagem.BringToFront();
            SubMenuADColaborador.Controls.Add(NotasPanel);
            #endregion

            #region Radar
            RadarPanel = new Panel();
            RadarPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            RadarPanel.Dock = DockStyle.Top;
            RadarPanel.BackColor = _corFundoMenu;
            RadarPanel.Name = "RadarPanel";

            DivisoriaRadarImagem = new PictureBox();
            DivisoriaRadarImagem.Size = new Size(0, 4);
            DivisoriaRadarImagem.Dock = DockStyle.Bottom;
            DivisoriaRadarImagem.BackColor = _corFundoDivisao;

            RadarLabel = new Label();
            RadarLabel.AutoSize = false;
            RadarLabel.Size = new Size(_widthLabelMenuSistema, 0);
            RadarLabel.Dock = DockStyle.Fill;
            RadarLabel.Text = "Radar";
            RadarLabel.Font = CorFontepadraoLabel.Font;
            RadarLabel.ForeColor = Color.WhiteSmoke;
            RadarLabel.TextAlign = ContentAlignment.MiddleRight;
            RadarLabel.MouseHover += new EventHandler(this.MetasNumericasLabel_MouseHover);
            RadarLabel.Click += new System.EventHandler(RadarColaboradorPanel_Click);
            RadarLabel.Name = "RadarLabel";

            FavoritoRadarImagem = new PictureBox();
            FavoritoRadarImagem.Size = new Size(10, 10);
            FavoritoRadarImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoRadarImagem.Name = "RadarLabelPic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoRadarImagem.Name))
            {
                FavoritoRadarImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoRadarImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoRadarImagem.Top = 35;
            FavoritoRadarImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoRadarImagem.Tag = RadarLabel.Text;
            FavoritoRadarImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoRadarImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoRadarImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoRadarImagem.AccessibleName = "Recursos Humanos";

            RadarPanel.Controls.Add(RadarLabel);
            RadarPanel.Controls.Add(DivisoriaRadarImagem);
            RadarPanel.Controls.Add(FavoritoRadarImagem);
            FavoritoRadarImagem.BringToFront();
            SubMenuADColaborador.Controls.Add(RadarPanel);
            #endregion

            #region Feedback
            FeedbackPanel = new Panel();
            FeedbackPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            FeedbackPanel.Dock = DockStyle.Top;
            FeedbackPanel.BackColor = _corFundoMenu;
            FeedbackPanel.Name = "FeedbackPanel";

            DivisoriaFeedbackImagem = new PictureBox();
            DivisoriaFeedbackImagem.Size = new Size(0, 4);
            DivisoriaFeedbackImagem.Dock = DockStyle.Bottom;
            DivisoriaFeedbackImagem.BackColor = _corFundoDivisao;

            FeedbackLabel = new Label();
            FeedbackLabel.AutoSize = false;
            FeedbackLabel.Size = new Size(_widthLabelMenuSistema, 0);
            FeedbackLabel.Dock = DockStyle.Fill;
            FeedbackLabel.Text = "Feedback";
            FeedbackLabel.Font = CorFontepadraoLabel.Font;
            FeedbackLabel.ForeColor = Color.WhiteSmoke;
            FeedbackLabel.TextAlign = ContentAlignment.MiddleRight;
            FeedbackLabel.MouseHover += new EventHandler(this.MetasNumericasLabel_MouseHover);
            FeedbackLabel.Click += new System.EventHandler(FeedbackColaboradorPanel_Click);
            FeedbackLabel.Name = "FeedbackLabel";

            FavoritoFeedbackImagem = new PictureBox();
            FavoritoFeedbackImagem.Size = new Size(10, 10);
            FavoritoFeedbackImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoFeedbackImagem.Name = "FeedbackLabelPic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoFeedbackImagem.Name))
            {
                FavoritoFeedbackImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoFeedbackImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoFeedbackImagem.Top = 35;
            FavoritoFeedbackImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoFeedbackImagem.Tag = FeedbackLabel.Text;
            FavoritoFeedbackImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoFeedbackImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoFeedbackImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoFeedbackImagem.AccessibleName = "Recursos Humanos";

            FeedbackPanel.Controls.Add(FeedbackLabel);
            FeedbackPanel.Controls.Add(DivisoriaFeedbackImagem);
            FeedbackPanel.Controls.Add(FavoritoFeedbackImagem);
            FavoritoFeedbackImagem.BringToFront();
            SubMenuADColaborador.Controls.Add(FeedbackPanel);
            #endregion            

            #region AutoAvaliacao
            AutoAvaliacaoPanel = new Panel();
            AutoAvaliacaoPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            AutoAvaliacaoPanel.Dock = DockStyle.Top;
            AutoAvaliacaoPanel.BackColor = _corFundoMenu;
            AutoAvaliacaoPanel.Name = "AutoAvaliacaoPanel";

            DivisoriaAutoAvaliacaoImagem = new PictureBox();
            DivisoriaAutoAvaliacaoImagem.Size = new Size(0, 4);
            DivisoriaAutoAvaliacaoImagem.Dock = DockStyle.Bottom;
            DivisoriaAutoAvaliacaoImagem.BackColor = _corFundoDivisao;

            AutoAvaliacaoLabel = new Label();
            AutoAvaliacaoLabel.AutoSize = false;
            AutoAvaliacaoLabel.Size = new Size(_widthLabelMenuSistema, 0);
            AutoAvaliacaoLabel.Dock = DockStyle.Fill;
            AutoAvaliacaoLabel.Text = "Auto Avaliação";
            AutoAvaliacaoLabel.Font = CorFontepadraoLabel.Font;
            AutoAvaliacaoLabel.ForeColor = Color.WhiteSmoke;
            AutoAvaliacaoLabel.TextAlign = ContentAlignment.MiddleRight;
            AutoAvaliacaoLabel.MouseHover += new EventHandler(this.MetasNumericasLabel_MouseHover);
            AutoAvaliacaoLabel.Click += new System.EventHandler(AutoAvaliacaoPanel_Click);
            AutoAvaliacaoLabel.Name = "AutoAvaliacaoLabel";

            FavoritoAutoAvaliacaoImagem = new PictureBox();
            FavoritoAutoAvaliacaoImagem.Size = new Size(10, 10);
            FavoritoAutoAvaliacaoImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoAutoAvaliacaoImagem.Name = AutoAvaliacaoLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoAutoAvaliacaoImagem.Name))
            {
                FavoritoAutoAvaliacaoImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoAutoAvaliacaoImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoAutoAvaliacaoImagem.Top = 35;
            FavoritoAutoAvaliacaoImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoAutoAvaliacaoImagem.Tag = AutoAvaliacaoLabel.Text;
            FavoritoAutoAvaliacaoImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoAutoAvaliacaoImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoAutoAvaliacaoImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoAutoAvaliacaoImagem.AccessibleName = "Recursos Humanos";

            AutoAvaliacaoPanel.Controls.Add(AutoAvaliacaoLabel);
            AutoAvaliacaoPanel.Controls.Add(DivisoriaAutoAvaliacaoImagem);
            AutoAvaliacaoPanel.Controls.Add(FavoritoAutoAvaliacaoImagem);
            FavoritoAutoAvaliacaoImagem.BringToFront();
            SubMenuADColaborador.Controls.Add(AutoAvaliacaoPanel);
            #endregion            

            #region MetasNumericas
            MetasNumericasPanel = new Panel();
            MetasNumericasPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            MetasNumericasPanel.Dock = DockStyle.Top;
            MetasNumericasPanel.BackColor = _corFundoMenu;
            MetasNumericasPanel.Name = "MetasNumericasPanel";

            DivisoriaMetasNumericasImagem = new PictureBox();
            DivisoriaMetasNumericasImagem.Size = new Size(0, 4);
            DivisoriaMetasNumericasImagem.Dock = DockStyle.Bottom;
            DivisoriaMetasNumericasImagem.BackColor = _corFundoDivisao;

            MetasNumericasLabel = new Label();
            MetasNumericasLabel.AutoSize = false;
            MetasNumericasLabel.Size = new Size(_widthLabelMenuSistema, 0);
            MetasNumericasLabel.Dock = DockStyle.Fill;
            MetasNumericasLabel.Text = "Metas Numéricas";
            MetasNumericasLabel.Font = CorFontepadraoLabel.Font;
            MetasNumericasLabel.ForeColor = Color.WhiteSmoke;
            MetasNumericasLabel.TextAlign = ContentAlignment.MiddleRight;
            MetasNumericasLabel.MouseHover += new EventHandler(this.MetasNumericasLabel_MouseHover);
            MetasNumericasLabel.Click += new System.EventHandler(MetasNumericasColaboradorPanel_Click);
            MetasNumericasLabel.Name = "MetasNumericasLabel";

            FavoritoMetasNumericasImagem = new PictureBox();
            FavoritoMetasNumericasImagem.Size = new Size(10, 10);
            FavoritoMetasNumericasImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoMetasNumericasImagem.Name = MetasNumericasLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoMetasNumericasImagem.Name))
            {
                FavoritoMetasNumericasImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoMetasNumericasImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoMetasNumericasImagem.Top = 35;
            FavoritoMetasNumericasImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoMetasNumericasImagem.Tag = MetasNumericasLabel.Text;
            FavoritoMetasNumericasImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoMetasNumericasImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoMetasNumericasImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoMetasNumericasImagem.AccessibleName = "Recursos Humanos";

            MetasNumericasPanel.Controls.Add(MetasNumericasLabel);
            MetasNumericasPanel.Controls.Add(DivisoriaMetasNumericasImagem);
            MetasNumericasPanel.Controls.Add(FavoritoMetasNumericasImagem);
            FavoritoMetasNumericasImagem.BringToFront();
            SubMenuADColaborador.Controls.Add(MetasNumericasPanel);
            #endregion            
        }

        private void MudaSelecaoDeCoresSubADColaborador()
        {
            MetasNumericasLabel.Font = new Font(MetasNumericasLabel.Font, MetasNumericasLabel.Font.Style & ~FontStyle.Bold);
            AutoAvaliacaoLabel.Font = new Font(AutoAvaliacaoLabel.Font, AutoAvaliacaoLabel.Font.Style & ~FontStyle.Bold);
            FeedbackLabel.Font = new Font(FeedbackLabel.Font, FeedbackLabel.Font.Style & ~FontStyle.Bold);
            RadarLabel.Font = new Font(RadarLabel.Font, RadarLabel.Font.Style & ~FontStyle.Bold);

            MetasNumericasLabel.BackColor = _corFundoMenu;
            AutoAvaliacaoLabel.BackColor = MetasNumericasLabel.BackColor;
            FeedbackLabel.BackColor = MetasNumericasLabel.BackColor;
            RadarLabel.BackColor = MetasNumericasLabel.BackColor;

            FavoritoMetasNumericasImagem.BackColor = MetasNumericasLabel.BackColor;
            FavoritoAutoAvaliacaoImagem.BackColor = MetasNumericasLabel.BackColor;
            FavoritoFeedbackImagem.BackColor = MetasNumericasLabel.BackColor;
            FavoritoRadarImagem.BackColor = MetasNumericasLabel.BackColor;
            FavoritoNotasImagem.BackColor = MetasNumericasLabel.BackColor;

            MetasNumericasLabel.ForeColor = Color.WhiteSmoke;
            AutoAvaliacaoLabel.ForeColor = Color.WhiteSmoke;
            FeedbackLabel.ForeColor = Color.WhiteSmoke;
            RadarLabel.ForeColor = Color.WhiteSmoke;

            if (CadastrosRHLabel != null)
            {
                CadastrosRHLabel.Font = new Font(CadastrosRHLabel.Font, CadastrosRHLabel.Font.Style & ~FontStyle.Bold);
                CadastrosRHLabel.BackColor = MetasNumericasLabel.BackColor;
                CadastrosRHLabel.ForeColor = Color.WhiteSmoke;
                CadastrosRHSetaLabel.Font = new Font(CadastrosRHSetaLabel.Font, CadastrosRHSetaLabel.Font.Style & ~FontStyle.Bold);
                CadastrosRHSetaLabel.BackColor = MetasNumericasLabel.BackColor;
                CadastrosRHLabel.ForeColor = Color.WhiteSmoke;
                CadastrosRHSetaLabel.Text = "6";
            }

            if (NotasLabel != null)
            {
                NotasLabel.Font = new Font(NotasLabel.Font, NotasLabel.Font.Style & ~FontStyle.Bold);
                NotasLabel.BackColor = MetasNumericasLabel.BackColor;
                NotasLabel.ForeColor = Color.WhiteSmoke;
            }

            if (CompararAvaliacaoLabel != null)
            {
                CompararAvaliacaoLabel.Font = new Font(CompararAvaliacaoLabel.Font, CompararAvaliacaoLabel.Font.Style & ~FontStyle.Bold);
                CompararAvaliacaoLabel.BackColor = MetasNumericasLabel.BackColor;
                CompararAvaliacaoLabel.ForeColor = Color.WhiteSmoke;
                try
                {
                    FavoritoCompararAvaliacaoImagem.BackColor = FavoritoMetasImagem.BackColor;
                }
                catch { }
            }
        }

        private void MetasNumericasLabel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubADColaborador();
            FechaMenuUsuario();
            FechaSubMenuCadastrosRH();

            if (((Control)sender).Name.Contains("MetasNumericas"))
            {
                MetasNumericasLabel.Font = new Font(MetasNumericasLabel.Font, FontStyle.Bold);
                MetasNumericasLabel.ForeColor = Publicas._fonteBotaoFocado;
                MetasNumericasLabel.BackColor = _corMenuSelecionado;
                FavoritoMetasNumericasImagem.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("AutoAvaliacao"))
            {
                AutoAvaliacaoLabel.Font = new Font(AutoAvaliacaoLabel.Font, FontStyle.Bold);
                AutoAvaliacaoLabel.ForeColor = Publicas._fonteBotaoFocado;
                AutoAvaliacaoLabel.BackColor = _corMenuSelecionado;
                FavoritoAutoAvaliacaoImagem.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Feedback"))
            {
                FeedbackLabel.Font = new Font(FeedbackLabel.Font, FontStyle.Bold);
                FeedbackLabel.ForeColor = Publicas._fonteBotaoFocado;
                FeedbackLabel.BackColor = _corMenuSelecionado;
                FavoritoFeedbackImagem.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Radar"))
            {
                RadarLabel.Font = new Font(RadarLabel.Font, FontStyle.Bold);
                RadarLabel.ForeColor = Publicas._fonteBotaoFocado;
                RadarLabel.BackColor = _corMenuSelecionado;
                FavoritoRadarImagem.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Notas"))
            {
                NotasLabel.Font = new Font(NotasLabel.Font, FontStyle.Bold);
                NotasLabel.ForeColor = Publicas._fonteBotaoFocado;
                NotasLabel.BackColor = _corMenuSelecionado;
                FavoritoNotasImagem.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Comparar"))
            {
                CompararAvaliacaoLabel.Font = new Font(CompararAvaliacaoLabel.Font, FontStyle.Bold);
                CompararAvaliacaoLabel.ForeColor = Publicas._fonteBotaoFocado;
                CompararAvaliacaoLabel.BackColor = _corMenuSelecionado;
                FavoritoCompararAvaliacaoImagem.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("CadastrosRH"))
            {
                CadastrosRHLabel.Font = new Font(CadastrosRHLabel.Font, FontStyle.Bold);
                CadastrosRHLabel.ForeColor = Publicas._fonteBotaoFocado;
                CadastrosRHLabel.BackColor = _corMenuSelecionado;
                return;
            }
        }

        private void MetasNumericasColaboradorPanel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaAvaliacao;
            Avaliacao_de_desempenho.DefinicaoDeMetas _tela = new Avaliacao_de_desempenho.DefinicaoDeMetas();
            _tela.tituloLabel.Text = "Metas Numéricas";

            _tela.empresaComboBoxAdv.Enabled = false;
            _tela.usuarioTextBox.Enabled = false;

            _tela.ShowDialog();
            NomePadrao();
            //AtivaTimer(sender, e);
        }

        private void AutoAvaliacaoPanel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaAvaliacao;
            Avaliacao_de_desempenho.AvaliacaoComportamental _tela = new Avaliacao_de_desempenho.AvaliacaoComportamental();
            _tela.tituloLabel.Text = "Auto Avaliação";
            _tela.empresaComboBoxAdv.Enabled = false;
            _tela.usuarioTextBox.Enabled = false;
            _tela.tipoAvaliacao = Publicas.TipoPrazos.AutoAvaliacao;
            _tela.ShowDialog();
            NomePadrao();

            //AtivaTimer(sender, e);
        }

        private void FeedbackColaboradorPanel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaAvaliacao;
            Avaliacao_de_desempenho.Feedback _tela = new Avaliacao_de_desempenho.Feedback();
            _tela.Size = new Size(718, 569);
            _tela.empresaComboBoxAdv.Enabled = false;
            _tela.usuarioTextBox.Enabled = false;

            _tela.tipoAvaliacao = Publicas.TipoPrazos.FeedbackAvaliado;
            _tela.ShowDialog();
            NomePadrao();

            //AtivaTimer(sender, e);
        }

        private void RadarColaboradorPanel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            Publicas._telaRadarChamadaPeloMenu = "Colaborador";
            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaAvaliacao;
            Avaliacao_de_desempenho.Radar _tela = new Avaliacao_de_desempenho.Radar();
            _tela.empresaComboBoxAdv.Enabled = false;
            _tela.usuarioTextBox.Enabled = false;
            _tela.ShowDialog();
            NomePadrao();

            //AtivaTimer(sender, e);
        }

        private void FechaSubMenuADColaborador()
        {
            if (SubMenuADColaborador != null)
            {
                SubMenuADColaborador.Visible = false;
                this.Controls.Remove(SubMenuADColaborador);
                SubMenuADColaborador.Dispose();
                SubMenuADColaborador = null;
            }
        }
        #endregion

        #region SubMenu Gestor
        private void AD_GestorPanel_Click(object sender, EventArgs e)
        {
            AD_GestorSetaLabel.Text = "3";

            if (!Publicas._TemaBlack)
            {
                AD_GestorSetaLabel.ForeColor = Publicas._bordaEntrada;
                AD_GestorLabel.ForeColor = Publicas._bordaEntrada;
            }
            else
            {
                AD_GestorSetaLabel.ForeColor = Publicas._fonteMenuSelecionado;
                AD_GestorLabel.ForeColor = Publicas._fonteMenuSelecionado;
            }
            AD_GestorSetaLabel.BackColor = _corFundoMenu;

            FechaSubMenuADColaborador();
            FechaSubMenuADPlanejamento();
            FechaSubMenuADRecursosHumanos();

            if (SubMenuADGestor != null)
            {
                FechaSubMenuADGestor();
                return;
            }

            if (SubMenuFavoritos != null)
            {
                FechaSubMenuFavoritos();
                return;
            }

            #region Cria estrutura 

            // Menu de fundo (onde agrupa os demais itens)
            SubMenuADGestor = new Panel();
            SubMenuADGestor.Size = new Size(155, _heidthMenuSistema * 5);
            SubMenuADGestor.Location = new Point(MenuSistemaPanel.Width + SubMenuRecursosHumanos.Width + SubMenuAvaliacaoDesempenho.Width + 6, AcessoAoMenuPanel.Height);
            SubMenuADGestor.BackColor = _corFundoDivisao;
            this.Controls.Add(SubMenuADGestor);
            SubMenuADGestor.BringToFront();
            SubMenuADGestor.Visible = true;
            #endregion

            #region Notas
            NotasPanel = new Panel();
            NotasPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            NotasPanel.Dock = DockStyle.Top;
            NotasPanel.BackColor = _corFundoMenu;
            NotasPanel.Name = "NotasPanel";

            DivisoriaNotasImagem = new PictureBox();
            DivisoriaNotasImagem.Size = new Size(0, 4);
            DivisoriaNotasImagem.Dock = DockStyle.Bottom;
            DivisoriaNotasImagem.BackColor = _corFundoDivisao;

            NotasLabel = new Label();
            NotasLabel.AutoSize = false;
            NotasLabel.Size = new Size(_widthLabelMenuSistema, 0);
            NotasLabel.Dock = DockStyle.Fill;
            NotasLabel.Text = "Notas";
            NotasLabel.Font = CorFontepadraoLabel.Font;
            NotasLabel.ForeColor = Color.WhiteSmoke;
            NotasLabel.TextAlign = ContentAlignment.MiddleRight;
            NotasLabel.MouseHover += new EventHandler(this.MetasNumericasLabel_MouseHover);
            NotasLabel.Click += new System.EventHandler(NotasPanelGestor_Click);
            NotasLabel.Name = "NotasLabel";

            FavoritoNotasImagem = new PictureBox();
            FavoritoNotasImagem.Size = new Size(10, 10);
            FavoritoNotasImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoNotasImagem.Name = "NotasLabelPic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoNotasImagem.Name))
            {
                FavoritoNotasImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoNotasImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoNotasImagem.Top = 35;
            FavoritoNotasImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoNotasImagem.Tag = NotasLabel.Text;
            FavoritoNotasImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoNotasImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoNotasImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoNotasImagem.AccessibleName = "Recursos Humanos";

            NotasPanel.Controls.Add(NotasLabel);
            NotasPanel.Controls.Add(DivisoriaNotasImagem);
            NotasPanel.Controls.Add(FavoritoNotasImagem);
            FavoritoNotasImagem.BringToFront();
            SubMenuADGestor.Controls.Add(NotasPanel);
            #endregion

            #region Radar
            RadarPanel = new Panel();
            RadarPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            RadarPanel.Dock = DockStyle.Top;
            RadarPanel.BackColor = _corFundoMenu;
            RadarPanel.Name = "RadarPanel";

            DivisoriaRadarImagem = new PictureBox();
            DivisoriaRadarImagem.Size = new Size(0, 4);
            DivisoriaRadarImagem.Dock = DockStyle.Bottom;
            DivisoriaRadarImagem.BackColor = _corFundoDivisao;

            RadarLabel = new Label();
            RadarLabel.AutoSize = false;
            RadarLabel.Size = new Size(_widthLabelMenuSistema, 0);
            RadarLabel.Dock = DockStyle.Fill;
            RadarLabel.Text = "Radar";
            RadarLabel.Font = CorFontepadraoLabel.Font;
            RadarLabel.ForeColor = Color.WhiteSmoke;
            RadarLabel.TextAlign = ContentAlignment.MiddleRight;
            RadarLabel.MouseHover += new EventHandler(this.MetasNumericasLabel_MouseHover);
            RadarLabel.Click += new System.EventHandler(RadarGestorPanel_Click);
            RadarLabel.Name = "RadarLabel";

            FavoritoRadarImagem = new PictureBox();
            FavoritoRadarImagem.Size = new Size(10, 10);
            FavoritoRadarImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoRadarImagem.Name = "RadarLabelPic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoRadarImagem.Name))
            {
                FavoritoRadarImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoRadarImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoRadarImagem.Top = 35;
            FavoritoRadarImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoRadarImagem.Tag = RadarLabel.Text;
            FavoritoRadarImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoRadarImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoRadarImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoRadarImagem.AccessibleName = "Recursos Humanos";

            RadarPanel.Controls.Add(RadarLabel);
            RadarPanel.Controls.Add(DivisoriaRadarImagem);
            RadarPanel.Controls.Add(FavoritoRadarImagem);
            FavoritoRadarImagem.BringToFront();
            SubMenuADGestor.Controls.Add(RadarPanel);
            #endregion

            #region Feedback
            FeedbackPanel = new Panel();
            FeedbackPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            FeedbackPanel.Dock = DockStyle.Top;
            FeedbackPanel.BackColor = _corFundoMenu;
            FeedbackPanel.Name = "FeedbackPanel";

            DivisoriaFeedbackImagem = new PictureBox();
            DivisoriaFeedbackImagem.Size = new Size(0, 4);
            DivisoriaFeedbackImagem.Dock = DockStyle.Bottom;
            DivisoriaFeedbackImagem.BackColor = _corFundoDivisao;

            FeedbackLabel = new Label();
            FeedbackLabel.AutoSize = false;
            FeedbackLabel.Size = new Size(_widthLabelMenuSistema, 0);
            FeedbackLabel.Dock = DockStyle.Fill;
            FeedbackLabel.Text = "Feedback";
            FeedbackLabel.Font = CorFontepadraoLabel.Font;
            FeedbackLabel.ForeColor = Color.WhiteSmoke;
            FeedbackLabel.TextAlign = ContentAlignment.MiddleRight;
            FeedbackLabel.MouseHover += new EventHandler(this.MetasNumericasLabel_MouseHover);
            FeedbackLabel.Click += new System.EventHandler(FeedbackGestorPanel_Click);
            FeedbackLabel.Name = "FeedbackLabel";

            FavoritoFeedbackImagem = new PictureBox();
            FavoritoFeedbackImagem.Size = new Size(10, 10);
            FavoritoFeedbackImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoFeedbackImagem.Name = "FeedbackLabelPic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoFeedbackImagem.Name))
            {
                FavoritoFeedbackImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoFeedbackImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoFeedbackImagem.Top = 35;
            FavoritoFeedbackImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoFeedbackImagem.Tag = FeedbackLabel.Text;
            FavoritoFeedbackImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoFeedbackImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoFeedbackImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoFeedbackImagem.AccessibleName = "Recursos Humanos";

            FeedbackPanel.Controls.Add(FeedbackLabel);
            FeedbackPanel.Controls.Add(DivisoriaFeedbackImagem);
            FeedbackPanel.Controls.Add(FavoritoFeedbackImagem);
            FavoritoFeedbackImagem.BringToFront();

            SubMenuADGestor.Controls.Add(FeedbackPanel);
            #endregion            

            #region AutoAvaliacao
            AutoAvaliacaoPanel = new Panel();
            AutoAvaliacaoPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            AutoAvaliacaoPanel.Dock = DockStyle.Top;
            AutoAvaliacaoPanel.BackColor = _corFundoMenu;
            AutoAvaliacaoPanel.Name = "AutoAvaliacaoPanel";

            DivisoriaAutoAvaliacaoImagem = new PictureBox();
            DivisoriaAutoAvaliacaoImagem.Size = new Size(0, 4);
            DivisoriaAutoAvaliacaoImagem.Dock = DockStyle.Bottom;
            DivisoriaAutoAvaliacaoImagem.BackColor = _corFundoDivisao;

            AutoAvaliacaoLabel = new Label();
            AutoAvaliacaoLabel.AutoSize = false;
            AutoAvaliacaoLabel.Size = new Size(_widthLabelMenuSistema, 0);
            AutoAvaliacaoLabel.Dock = DockStyle.Fill;
            AutoAvaliacaoLabel.Text = "Avaliação Qualitativa";
            AutoAvaliacaoLabel.Font = CorFontepadraoLabel.Font;
            AutoAvaliacaoLabel.ForeColor = Color.WhiteSmoke;
            AutoAvaliacaoLabel.TextAlign = ContentAlignment.MiddleRight;
            AutoAvaliacaoLabel.MouseHover += new EventHandler(this.MetasNumericasLabel_MouseHover);
            AutoAvaliacaoLabel.Click += new System.EventHandler(AvaliacaoQualitativaPanel_Click);
            AutoAvaliacaoLabel.Name = "AutoAvaliacaoLabel";

            FavoritoAutoAvaliacaoImagem = new PictureBox();
            FavoritoAutoAvaliacaoImagem.Size = new Size(10, 10);
            FavoritoAutoAvaliacaoImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoAutoAvaliacaoImagem.Name = AutoAvaliacaoLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoAutoAvaliacaoImagem.Name))
            {
                FavoritoAutoAvaliacaoImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoAutoAvaliacaoImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoAutoAvaliacaoImagem.Top = 35;
            FavoritoAutoAvaliacaoImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoAutoAvaliacaoImagem.Tag = AutoAvaliacaoLabel.Text;
            FavoritoAutoAvaliacaoImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoAutoAvaliacaoImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoAutoAvaliacaoImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoAutoAvaliacaoImagem.AccessibleName = "Recursos Humanos";

            AutoAvaliacaoPanel.Controls.Add(AutoAvaliacaoLabel);
            AutoAvaliacaoPanel.Controls.Add(DivisoriaAutoAvaliacaoImagem);
            AutoAvaliacaoPanel.Controls.Add(FavoritoAutoAvaliacaoImagem);
            FavoritoAutoAvaliacaoImagem.BringToFront();
            SubMenuADGestor.Controls.Add(AutoAvaliacaoPanel);
            #endregion            

            #region MetasNumericas
            MetasNumericasPanel = new Panel();
            MetasNumericasPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            MetasNumericasPanel.Dock = DockStyle.Top;
            MetasNumericasPanel.BackColor = _corFundoMenu;
            MetasNumericasPanel.Name = "MetasNumericasPanel";

            DivisoriaMetasNumericasImagem = new PictureBox();
            DivisoriaMetasNumericasImagem.Size = new Size(0, 4);
            DivisoriaMetasNumericasImagem.Dock = DockStyle.Bottom;
            DivisoriaMetasNumericasImagem.BackColor = _corFundoDivisao;

            MetasNumericasLabel = new Label();
            MetasNumericasLabel.AutoSize = false;
            MetasNumericasLabel.Size = new Size(_widthLabelMenuSistema, 0);
            MetasNumericasLabel.Dock = DockStyle.Fill;
            MetasNumericasLabel.Text = "Metas Numéricas";
            MetasNumericasLabel.Font = CorFontepadraoLabel.Font;
            MetasNumericasLabel.ForeColor = Color.WhiteSmoke;
            MetasNumericasLabel.TextAlign = ContentAlignment.MiddleRight;
            MetasNumericasLabel.MouseHover += new EventHandler(this.MetasNumericasLabel_MouseHover);
            MetasNumericasLabel.Click += new System.EventHandler(MetasNumericasGestorPanel_Click);
            MetasNumericasLabel.Name = "MetasNumericasLabel";

            FavoritoMetasNumericasImagem = new PictureBox();
            FavoritoMetasNumericasImagem.Size = new Size(10, 10);
            FavoritoMetasNumericasImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoMetasNumericasImagem.Name = MetasNumericasLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoMetasNumericasImagem.Name))
            {
                FavoritoMetasNumericasImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoMetasNumericasImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoMetasNumericasImagem.Top = 35;
            FavoritoMetasNumericasImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoMetasNumericasImagem.Tag = MetasNumericasLabel.Text;
            FavoritoMetasNumericasImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoMetasNumericasImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoMetasNumericasImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoMetasNumericasImagem.AccessibleName = "Recursos Humanos";

            MetasNumericasPanel.Controls.Add(MetasNumericasLabel);
            MetasNumericasPanel.Controls.Add(DivisoriaMetasNumericasImagem);
            MetasNumericasPanel.Controls.Add(FavoritoMetasNumericasImagem);
            FavoritoMetasNumericasImagem.BringToFront();

            SubMenuADGestor.Controls.Add(MetasNumericasPanel);
            #endregion            
        }

        private void MetasNumericasGestorPanel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaAvaliacao;
            Avaliacao_de_desempenho.DefinicaoDeMetas _tela = new Avaliacao_de_desempenho.DefinicaoDeMetas();
            _tela.tituloLabel.Text = "Metas Numéricas - Gestor";
            _tela.ShowDialog();
            NomePadrao();
            //AtivaTimer(sender, e);
        }

        private void AvaliacaoQualitativaPanel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaAvaliacao;
            Avaliacao_de_desempenho.AvaliacaoComportamental _tela = new Avaliacao_de_desempenho.AvaliacaoComportamental();
            _tela.tituloLabel.Text = "Avaliação comportamental da equipe - pelo Gestor";
            _tela.empresaComboBoxAdv.Enabled = true;
            _tela.usuarioTextBox.Enabled = true;

            _tela.tipoAvaliacao = Publicas.TipoPrazos.AvaliacaoDoGestor;
            _tela.ShowDialog();
            NomePadrao();

            //AtivaTimer(sender, e);
        }

        private void FeedbackGestorPanel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaAvaliacao;
            Avaliacao_de_desempenho.Feedback _tela = new Avaliacao_de_desempenho.Feedback();
            _tela.Size = new Size(718, 383);
            _tela.empresaComboBoxAdv.Enabled = true;
            _tela.usuarioTextBox.Enabled = true;

            _tela.tipoAvaliacao = Publicas.TipoPrazos.FeedbackGestor;
            _tela.ShowDialog();
            NomePadrao();

            //AtivaTimer(sender, e);
        }

        private void RadarGestorPanel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            Publicas._telaRadarChamadaPeloMenu = "Gestor";
            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaAvaliacao;
            Avaliacao_de_desempenho.Radar _tela = new Avaliacao_de_desempenho.Radar();
            _tela.ShowDialog();
            NomePadrao();

            //AtivaTimer(sender, e);
        }

        private void FechaSubMenuADGestor()
        {
            if (SubMenuADGestor != null)
            {
                SubMenuADGestor.Visible = false;
                this.Controls.Remove(SubMenuADGestor);
                SubMenuADGestor.Dispose();
                SubMenuADGestor = null;
            }
        }
        #endregion

        #region SubMenu Recursos Humanos
        private void AD_RecursosHumanosPanel_Click(object sender, EventArgs e)
        {
            AD_RecursosHumanosSetaLabel.Text = "3";

            if (!Publicas._TemaBlack)
            {
                AD_RecursosHumanosSetaLabel.ForeColor = Publicas._bordaEntrada;
                AD_RecursosHumanosLabel.ForeColor = Publicas._bordaEntrada;
            }
            else
            {
                AD_RecursosHumanosSetaLabel.ForeColor = Publicas._fonteMenuSelecionado;
                AD_RecursosHumanosLabel.ForeColor = Publicas._fonteMenuSelecionado;
            }
            AD_RecursosHumanosSetaLabel.BackColor = _corFundoMenu;

            FechaSubMenuADColaborador();
            FechaSubMenuADPlanejamento();
            FechaSubMenuADGestor();

            if (SubMenuADRecursosHumanos != null)
            {
                FechaSubMenuADRecursosHumanos();
                return;
            }

            if (SubMenuFavoritos != null)
            {
                FechaSubMenuFavoritos();
                return;
            }

            #region Cria estrutura 

            // Menu de fundo (onde agrupa os demais itens)
            SubMenuADRecursosHumanos = new Panel();
            SubMenuADRecursosHumanos.Size = new Size(155, _heidthMenuSistema * 7);
            SubMenuADRecursosHumanos.Location = new Point(MenuSistemaPanel.Width + SubMenuRecursosHumanos.Width + SubMenuAvaliacaoDesempenho.Width + 6, AcessoAoMenuPanel.Height);
            SubMenuADRecursosHumanos.BackColor = _corFundoDivisao;
            this.Controls.Add(SubMenuADRecursosHumanos);
            SubMenuADRecursosHumanos.BringToFront();
            SubMenuADRecursosHumanos.Visible = true;
            #endregion

            #region Comparar Avaliacao
            CompararAvaliacaoPanel = new Panel();
            CompararAvaliacaoPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            CompararAvaliacaoPanel.Dock = DockStyle.Top;
            CompararAvaliacaoPanel.BackColor = _corFundoMenu;
            CompararAvaliacaoPanel.Name = "CompararAvaliacaoPanel";

            DivisoriaCompararAvaliacaoImagem = new PictureBox();
            DivisoriaCompararAvaliacaoImagem.Size = new Size(0, 4);
            DivisoriaCompararAvaliacaoImagem.Dock = DockStyle.Bottom;
            DivisoriaCompararAvaliacaoImagem.BackColor = _corFundoDivisao;

            CompararAvaliacaoLabel = new Label();
            CompararAvaliacaoLabel.AutoSize = false;
            CompararAvaliacaoLabel.Size = new Size(_widthLabelMenuSistema, 0);
            CompararAvaliacaoLabel.Dock = DockStyle.Fill;
            CompararAvaliacaoLabel.Text = "Comparar" + Environment.NewLine + "avaliação";
            CompararAvaliacaoLabel.Font = CorFontepadraoLabel.Font;
            CompararAvaliacaoLabel.ForeColor = Color.WhiteSmoke;
            CompararAvaliacaoLabel.TextAlign = ContentAlignment.MiddleRight;
            CompararAvaliacaoLabel.MouseHover += new EventHandler(this.MetasNumericasLabel_MouseHover);
            CompararAvaliacaoLabel.Click += new System.EventHandler(CompararAvaliacaoPanel_Click);
            CompararAvaliacaoLabel.Name = "CompararAvaliacaoLabel";

            FavoritoCompararAvaliacaoImagem = new PictureBox();
            FavoritoCompararAvaliacaoImagem.Size = new Size(10, 10);
            FavoritoCompararAvaliacaoImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoCompararAvaliacaoImagem.Name = "CompararAvaliacaoLabelPic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoCompararAvaliacaoImagem.Name))
            {
                FavoritoCompararAvaliacaoImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoCompararAvaliacaoImagem.Left = 5;//CompararAvaliacaoLabel.Width - 10;
            FavoritoCompararAvaliacaoImagem.Top = 35;
            FavoritoCompararAvaliacaoImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoCompararAvaliacaoImagem.Tag = CompararAvaliacaoLabel.Text;
            FavoritoCompararAvaliacaoImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoCompararAvaliacaoImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoCompararAvaliacaoImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoCompararAvaliacaoImagem.AccessibleName = "Recursos Humanos";

            CompararAvaliacaoPanel.Controls.Add(CompararAvaliacaoLabel);
            CompararAvaliacaoPanel.Controls.Add(DivisoriaCompararAvaliacaoImagem);
            CompararAvaliacaoPanel.Controls.Add(FavoritoCompararAvaliacaoImagem);
            FavoritoCompararAvaliacaoImagem.BringToFront();

            SubMenuADRecursosHumanos.Controls.Add(CompararAvaliacaoPanel);
            #endregion

            #region Notas
            NotasPanel = new Panel();
            NotasPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            NotasPanel.Dock = DockStyle.Top;
            NotasPanel.BackColor = _corFundoMenu;
            NotasPanel.Name = "NotasPanel";

            DivisoriaNotasImagem = new PictureBox();
            DivisoriaNotasImagem.Size = new Size(0, 4);
            DivisoriaNotasImagem.Dock = DockStyle.Bottom;
            DivisoriaNotasImagem.BackColor = _corFundoDivisao;

            NotasLabel = new Label();
            NotasLabel.AutoSize = false;
            NotasLabel.Size = new Size(_widthLabelMenuSistema, 0);
            NotasLabel.Dock = DockStyle.Fill;
            NotasLabel.Text = "Notas";
            NotasLabel.Font = CorFontepadraoLabel.Font;
            NotasLabel.ForeColor = Color.WhiteSmoke;
            NotasLabel.TextAlign = ContentAlignment.MiddleRight;
            NotasLabel.MouseHover += new EventHandler(this.MetasNumericasLabel_MouseHover);
            NotasLabel.Click += new System.EventHandler(NotasPanel_Click);
            NotasLabel.Name = "NotasLabel";

            FavoritoNotasImagem = new PictureBox();
            FavoritoNotasImagem.Size = new Size(10, 10);
            FavoritoNotasImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoNotasImagem.Name = "NotasLabelPic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoNotasImagem.Name))
            {
                FavoritoNotasImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoNotasImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoNotasImagem.Top = 35;
            FavoritoNotasImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoNotasImagem.Tag = NotasLabel.Text;
            FavoritoNotasImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoNotasImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoNotasImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoNotasImagem.AccessibleName = "Recursos Humanos";

            NotasPanel.Controls.Add(NotasLabel);
            NotasPanel.Controls.Add(DivisoriaNotasImagem);
            NotasPanel.Controls.Add(FavoritoNotasImagem);
            FavoritoNotasImagem.BringToFront();

            SubMenuADRecursosHumanos.Controls.Add(NotasPanel);
            #endregion

            #region Radar
            RadarPanel = new Panel();
            RadarPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            RadarPanel.Dock = DockStyle.Top;
            RadarPanel.BackColor = _corFundoMenu;
            RadarPanel.Name = "RadarPanel";

            DivisoriaRadarImagem = new PictureBox();
            DivisoriaRadarImagem.Size = new Size(0, 4);
            DivisoriaRadarImagem.Dock = DockStyle.Bottom;
            DivisoriaRadarImagem.BackColor = _corFundoDivisao;

            RadarLabel = new Label();
            RadarLabel.AutoSize = false;
            RadarLabel.Size = new Size(_widthLabelMenuSistema, 0);
            RadarLabel.Dock = DockStyle.Fill;
            RadarLabel.Text = "Radar";
            RadarLabel.Font = CorFontepadraoLabel.Font;
            RadarLabel.ForeColor = Color.WhiteSmoke;
            RadarLabel.TextAlign = ContentAlignment.MiddleRight;
            RadarLabel.MouseHover += new EventHandler(this.MetasNumericasLabel_MouseHover);
            RadarLabel.Click += new System.EventHandler(RadarRecursosHumanosPanel_Click);
            RadarLabel.Name = "RadarLabel";

            FavoritoRadarImagem = new PictureBox();
            FavoritoRadarImagem.Size = new Size(10, 10);
            FavoritoRadarImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoRadarImagem.Name = "RadarLabelPic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoRadarImagem.Name))
            {
                FavoritoRadarImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoRadarImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoRadarImagem.Top = 35;
            FavoritoRadarImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoRadarImagem.Tag = RadarLabel.Text;
            FavoritoRadarImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoRadarImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoRadarImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoRadarImagem.AccessibleName = "Recursos Humanos";

            RadarPanel.Controls.Add(RadarLabel);
            RadarPanel.Controls.Add(DivisoriaRadarImagem);
            RadarPanel.Controls.Add(FavoritoRadarImagem);
            FavoritoRadarImagem.BringToFront();
            SubMenuADRecursosHumanos.Controls.Add(RadarPanel);
            #endregion

            #region Feedback
            FeedbackPanel = new Panel();
            FeedbackPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            FeedbackPanel.Dock = DockStyle.Top;
            FeedbackPanel.BackColor = _corFundoMenu;
            FeedbackPanel.Name = "FeedbackPanel";

            DivisoriaFeedbackImagem = new PictureBox();
            DivisoriaFeedbackImagem.Size = new Size(0, 4);
            DivisoriaFeedbackImagem.Dock = DockStyle.Bottom;
            DivisoriaFeedbackImagem.BackColor = _corFundoDivisao;

            FeedbackLabel = new Label();
            FeedbackLabel.AutoSize = false;
            FeedbackLabel.Size = new Size(_widthLabelMenuSistema, 0);
            FeedbackLabel.Dock = DockStyle.Fill;
            FeedbackLabel.Text = "Feedback";
            FeedbackLabel.Font = CorFontepadraoLabel.Font;
            FeedbackLabel.ForeColor = Color.WhiteSmoke;
            FeedbackLabel.TextAlign = ContentAlignment.MiddleRight;
            FeedbackLabel.MouseHover += new EventHandler(this.MetasNumericasLabel_MouseHover);
            FeedbackLabel.Click += new System.EventHandler(FeedbackRecursosHumanosPanel_Click);
            FeedbackLabel.Name = "FeedbackLabel";

            FavoritoFeedbackImagem = new PictureBox();
            FavoritoFeedbackImagem.Size = new Size(10, 10);
            FavoritoFeedbackImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoFeedbackImagem.Name = "FeedbackLabelPic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoFeedbackImagem.Name))
            {
                FavoritoFeedbackImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoFeedbackImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoFeedbackImagem.Top = 35;
            FavoritoFeedbackImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoFeedbackImagem.Tag = FeedbackLabel.Text;
            FavoritoFeedbackImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoFeedbackImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoFeedbackImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoFeedbackImagem.AccessibleName = "Recursos Humanos";

            FeedbackPanel.Controls.Add(FeedbackLabel);
            FeedbackPanel.Controls.Add(DivisoriaFeedbackImagem);
            FeedbackPanel.Controls.Add(FavoritoFeedbackImagem);
            FavoritoFeedbackImagem.BringToFront();

            SubMenuADRecursosHumanos.Controls.Add(FeedbackPanel);
            #endregion            

            #region AutoAvaliacao
            AutoAvaliacaoPanel = new Panel();
            AutoAvaliacaoPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            AutoAvaliacaoPanel.Dock = DockStyle.Top;
            AutoAvaliacaoPanel.BackColor = _corFundoMenu;
            AutoAvaliacaoPanel.Name = "AutoAvaliacaoPanel";

            DivisoriaAutoAvaliacaoImagem = new PictureBox();
            DivisoriaAutoAvaliacaoImagem.Size = new Size(0, 4);
            DivisoriaAutoAvaliacaoImagem.Dock = DockStyle.Bottom;
            DivisoriaAutoAvaliacaoImagem.BackColor = _corFundoDivisao;

            AutoAvaliacaoLabel = new Label();
            AutoAvaliacaoLabel.AutoSize = false;
            AutoAvaliacaoLabel.Size = new Size(_widthLabelMenuSistema, 0);
            AutoAvaliacaoLabel.Dock = DockStyle.Fill;
            AutoAvaliacaoLabel.Text = "Avaliação Qualitativa";
            AutoAvaliacaoLabel.Font = CorFontepadraoLabel.Font;
            AutoAvaliacaoLabel.ForeColor = Color.WhiteSmoke;
            AutoAvaliacaoLabel.TextAlign = ContentAlignment.MiddleRight;
            AutoAvaliacaoLabel.MouseHover += new EventHandler(this.MetasNumericasLabel_MouseHover);
            AutoAvaliacaoLabel.Click += new System.EventHandler(AvaliacaoQualitativaRecursosHumanosPanel_Click);
            AutoAvaliacaoLabel.Name = "AutoAvaliacaoLabel";

            FavoritoAutoAvaliacaoImagem = new PictureBox();
            FavoritoAutoAvaliacaoImagem.Size = new Size(10, 10);
            FavoritoAutoAvaliacaoImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoAutoAvaliacaoImagem.Name = AutoAvaliacaoLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoAutoAvaliacaoImagem.Name))
            {
                FavoritoAutoAvaliacaoImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoAutoAvaliacaoImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoAutoAvaliacaoImagem.Top = 35;
            FavoritoAutoAvaliacaoImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoAutoAvaliacaoImagem.Tag = AutoAvaliacaoLabel.Text;
            FavoritoAutoAvaliacaoImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoAutoAvaliacaoImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoAutoAvaliacaoImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoAutoAvaliacaoImagem.AccessibleName = "Recursos Humanos";

            AutoAvaliacaoPanel.Controls.Add(AutoAvaliacaoLabel);
            AutoAvaliacaoPanel.Controls.Add(DivisoriaAutoAvaliacaoImagem);
            AutoAvaliacaoPanel.Controls.Add(FavoritoAutoAvaliacaoImagem);
            FavoritoAutoAvaliacaoImagem.BringToFront();

            SubMenuADRecursosHumanos.Controls.Add(AutoAvaliacaoPanel);
            #endregion            

            #region MetasNumericas
            MetasNumericasPanel = new Panel();
            MetasNumericasPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            MetasNumericasPanel.Dock = DockStyle.Top;
            MetasNumericasPanel.BackColor = _corFundoMenu;
            MetasNumericasPanel.Name = "MetasNumericasPanel";

            DivisoriaMetasNumericasImagem = new PictureBox();
            DivisoriaMetasNumericasImagem.Size = new Size(0, 4);
            DivisoriaMetasNumericasImagem.Dock = DockStyle.Bottom;
            DivisoriaMetasNumericasImagem.BackColor = _corFundoDivisao;

            MetasNumericasLabel = new Label();
            MetasNumericasLabel.AutoSize = false;
            MetasNumericasLabel.Size = new Size(_widthLabelMenuSistema, 0);
            MetasNumericasLabel.Dock = DockStyle.Fill;
            MetasNumericasLabel.Text = "Metas Numéricas";
            MetasNumericasLabel.Font = CorFontepadraoLabel.Font;
            MetasNumericasLabel.ForeColor = Color.WhiteSmoke;
            MetasNumericasLabel.TextAlign = ContentAlignment.MiddleRight;
            MetasNumericasLabel.MouseHover += new EventHandler(this.MetasNumericasLabel_MouseHover);
            MetasNumericasLabel.Click += new System.EventHandler(MetasNumericasRecursosHumanosPanel_Click);
            MetasNumericasLabel.Name = "MetasNumericasLabel";

            FavoritoMetasNumericasImagem = new PictureBox();
            FavoritoMetasNumericasImagem.Size = new Size(10, 10);
            FavoritoMetasNumericasImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoMetasNumericasImagem.Name = MetasNumericasLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoMetasNumericasImagem.Name))
            {
                FavoritoMetasNumericasImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoMetasNumericasImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoMetasNumericasImagem.Top = 35;
            FavoritoMetasNumericasImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoMetasNumericasImagem.Tag = MetasNumericasLabel.Text;
            FavoritoMetasNumericasImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoMetasNumericasImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoMetasNumericasImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoMetasNumericasImagem.AccessibleName = "Recursos Humanos";

            MetasNumericasPanel.Controls.Add(MetasNumericasLabel);
            MetasNumericasPanel.Controls.Add(DivisoriaMetasNumericasImagem);
            MetasNumericasPanel.Controls.Add(FavoritoMetasNumericasImagem);
            FavoritoMetasNumericasImagem.BringToFront();

            SubMenuADRecursosHumanos.Controls.Add(MetasNumericasPanel);
            #endregion            

            #region Cadastros 
            CadastrosRHPanel = new Panel();
            CadastrosRHPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            CadastrosRHPanel.Dock = DockStyle.Top;
            CadastrosRHPanel.BackColor = _corFundoMenu;
            CadastrosRHPanel.Name = "CadastrosRHPanel";

            DivisoriaCadastrosRHImagem = new PictureBox();
            DivisoriaCadastrosRHImagem.Size = new Size(0, 4);
            DivisoriaCadastrosRHImagem.Dock = DockStyle.Bottom;
            DivisoriaCadastrosRHImagem.BackColor = _corFundoDivisao;

            Divisoria2CadastrosRHImagem = new PictureBox();
            Divisoria2CadastrosRHImagem.Size = new Size(1, 2);
            Divisoria2CadastrosRHImagem.Dock = DockStyle.Right;
            Divisoria2CadastrosRHImagem.BackColor = _corFundoDivisao; 

            CadastrosRHSetaLabel = new Label();
            CadastrosRHSetaLabel.AutoSize = false;
            CadastrosRHSetaLabel.Size = new Size(20, 59);
            CadastrosRHSetaLabel.Dock = DockStyle.Right;
            CadastrosRHSetaLabel.Text = "6";
            CadastrosRHSetaLabel.Font = new Font("Webdings", (float)12);
            CadastrosRHSetaLabel.TextAlign = ContentAlignment.MiddleCenter;
            CadastrosRHSetaLabel.Click += new System.EventHandler(this.CadastrosRHSetaLabel_Click);
            CadastrosRHSetaLabel.MouseHover += new EventHandler(this.CadastrosRHSetaLabel_MouseHover);
            CadastrosRHSetaLabel.Name = "CadastrosRHSetaLabel";
            CadastrosRHSetaLabel.ForeColor = Color.WhiteSmoke;

            CadastrosRHLabel = new Label();
            CadastrosRHLabel.AutoSize = false;
            CadastrosRHLabel.Size = new Size(_widthLabelMenuSistema, 0);
            CadastrosRHLabel.Dock = DockStyle.Fill;
            CadastrosRHLabel.Text = "Cadastros";
            CadastrosRHLabel.Font = CorFontepadraoLabel.Font;
            CadastrosRHLabel.ForeColor = Color.WhiteSmoke;
            CadastrosRHLabel.TextAlign = ContentAlignment.MiddleRight;
            CadastrosRHLabel.MouseHover += new EventHandler(this.MetasNumericasLabel_MouseHover);
            CadastrosRHLabel.Click += new System.EventHandler(this.CadastrosRHSetaLabel_Click);
            CadastrosRHLabel.Name = "CadastrosRHLabel";

            CadastrosRHPanel.Controls.Add(CadastrosRHLabel);
            //CadastrosRHPanel.Controls.Add(CadastrosRHImagem);
            CadastrosRHPanel.Controls.Add(Divisoria2CadastrosRHImagem);
            CadastrosRHPanel.Controls.Add(CadastrosRHSetaLabel);
            CadastrosRHPanel.Controls.Add(DivisoriaCadastrosRHImagem);

            SubMenuADRecursosHumanos.Controls.Add(CadastrosRHPanel);
            #endregion
        }

        private void CadastrosRHSetaLabel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubADColaborador();
            FechaMenuUsuario();

            if (((Control)sender).Name.Contains("CadastrosRH"))
            {
                CadastrosRHSetaLabel.Font = new Font(CadastrosRHSetaLabel.Font, FontStyle.Bold);
                CadastrosRHSetaLabel.ForeColor = Publicas._fonteBotaoFocado;
                CadastrosRHSetaLabel.BackColor = _corMenuSelecionado;
                return;
            }
        }

        private void MetasNumericasRecursosHumanosPanel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaAvaliacao;
            Avaliacao_de_desempenho.DefinicaoDeMetas _tela = new Avaliacao_de_desempenho.DefinicaoDeMetas();
            _tela.tituloLabel.Text = "Metas Numéricas - RH";
            _tela.ShowDialog();
            NomePadrao();
            //AtivaTimer(sender, e);
        }

        private void AvaliacaoQualitativaRecursosHumanosPanel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaAvaliacao;
            Avaliacao_de_desempenho.AvaliacaoComportamental _tela = new Avaliacao_de_desempenho.AvaliacaoComportamental();
            _tela.tituloLabel.Text = "Avaliação comportamental da equipe - pelo Recursos Humanos";
            _tela.empresaComboBoxAdv.Enabled = true;
            _tela.usuarioTextBox.Enabled = true;

            _tela.tipoAvaliacao = Publicas.TipoPrazos.AvaliacaoRH;
            _tela.ShowDialog();
            NomePadrao();

            //AtivaTimer(sender, e);
        }

        private void FeedbackRecursosHumanosPanel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaAvaliacao;
            Avaliacao_de_desempenho.Feedback _tela = new Avaliacao_de_desempenho.Feedback();
            _tela.Size = new Size(718, 569);
            _tela.empresaComboBoxAdv.Enabled = true;
            _tela.usuarioTextBox.Enabled = true;

            _tela.tipoAvaliacao = Publicas.TipoPrazos.RHConsultaFeedback;
            _tela.ShowDialog();
            NomePadrao();

            //AtivaTimer(sender, e);
        }

        private void RadarRecursosHumanosPanel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            Publicas._telaRadarChamadaPeloMenu = "RH";
            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaAvaliacao;
            Avaliacao_de_desempenho.Radar _tela = new Avaliacao_de_desempenho.Radar();
            _tela.ShowDialog();
            NomePadrao();

            //AtivaTimer(sender, e);
        }

        private void CompararAvaliacaoPanel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            Publicas._notasAcessadoPeloMenu = "RH";
            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaAvaliacao;

            Avaliacao_de_desempenho.ComparaAvaliacaoQualitativa _tela = new Avaliacao_de_desempenho.ComparaAvaliacaoQualitativa();
            _tela.Size = new Size(this.Width - 5, this.Height - (tituloPanel.Height + panel2.Height + 2));
            _tela.ShowDialog();

            NomePadrao();

            //AtivaTimer(sender, e);
        }

        private void NotasPanel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            Publicas._notasAcessadoPeloMenu = "RH";
            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaAvaliacao;
            Avaliacao_de_desempenho.Notas _tela = new Avaliacao_de_desempenho.Notas();

            _tela.Size = new Size(this.Width - 5, this.Height - (tituloPanel.Height + panel2.Height + 2));
            _tela.ShowDialog();
            NomePadrao();

            //AtivaTimer(sender, e);
        }

        private void NotasPanelGestor_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            Publicas._notasAcessadoPeloMenu = (Publicas._idColaborador == 13 ? "RH" : "Gestor"); // Jorge Fernandes terá visão do RH. Poderá ver todos os colaboradores
            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaAvaliacao;
            Avaliacao_de_desempenho.Notas _tela = new Avaliacao_de_desempenho.Notas();

            _tela.Size = new Size(this.Width - 5, this.Height - (tituloPanel.Height + panel2.Height + 2));
            _tela.ShowDialog();
            NomePadrao();

            //AtivaTimer(sender, e);
        }

        private void NotasPanelColaborador_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            Publicas._notasAcessadoPeloMenu = "Colaborador";
            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaAvaliacao;
            Avaliacao_de_desempenho.Notas _tela = new Avaliacao_de_desempenho.Notas();

            _tela.Size = new Size(this.Width - 5, this.Height - (tituloPanel.Height + panel2.Height + 2));
            _tela.ShowDialog();
            NomePadrao();

            //AtivaTimer(sender, e);
        }

        private void FechaSubMenuADRecursosHumanos()
        {
            FechaSubMenuCadastrosRH();
            if (SubMenuADRecursosHumanos != null)
            {
                SubMenuADRecursosHumanos.Visible = false;
                this.Controls.Remove(SubMenuADRecursosHumanos);
                SubMenuADRecursosHumanos.Dispose();
                SubMenuADRecursosHumanos = null;
            }
        }

        #region SubMenu Cadastros
        private void CadastrosRHSetaLabel_Click(object sender, EventArgs e)
        {
            CadastrosRHSetaLabel.Text = "3";

            if (!Publicas._TemaBlack)
            {
                CadastrosRHSetaLabel.ForeColor = Publicas._bordaEntrada;
                CadastrosRHLabel.ForeColor = Publicas._bordaEntrada;
            }
            else
            {
                CadastrosRHSetaLabel.ForeColor = Publicas._fonteMenuSelecionado;
                CadastrosRHLabel.ForeColor = Publicas._fonteMenuSelecionado;
                CadastrosRHSetaLabel.BackColor = _corFundoMenu;
            }
            CadastrosRHSetaLabel.BackColor = _corFundoMenu;

            FechaSubMenuADColaborador();
            FechaSubMenuADPlanejamento();
            FechaSubMenuADGestor();

            if (SubMenuCadastrosRH != null)
            {
                FechaSubMenuCadastrosRH();
                return;
            }

            #region Cria estrutura 

            // Menu de fundo (onde agrupa os demais itens)
            SubMenuCadastrosRH = new Panel();
            SubMenuCadastrosRH.Size = new Size(155, _heidthMenuSistema * 7);
            SubMenuCadastrosRH.Location = new Point(MenuSistemaPanel.Width + SubMenuRecursosHumanos.Width +
                                SubMenuAvaliacaoDesempenho.Width + SubMenuRecursosHumanos.Width + 8, AcessoAoMenuPanel.Height);
            SubMenuCadastrosRH.BackColor = _corFundoDivisao;
            this.Controls.Add(SubMenuCadastrosRH);
            SubMenuCadastrosRH.BringToFront();
            SubMenuCadastrosRH.Visible = true;
            #endregion

            #region Pontuacao
            PontuacaoPanel = new Panel();
            PontuacaoPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            PontuacaoPanel.Dock = DockStyle.Top;
            PontuacaoPanel.BackColor = _corFundoMenu;
            PontuacaoPanel.Name = "PontuacaoPanel";

            DivisoriaPontuacaoImagem = new PictureBox();
            DivisoriaPontuacaoImagem.Size = new Size(0, 4);
            DivisoriaPontuacaoImagem.Dock = DockStyle.Bottom;
            DivisoriaPontuacaoImagem.BackColor = _corFundoDivisao;

            PontuacaoLabel = new Label();
            PontuacaoLabel.AutoSize = false;
            PontuacaoLabel.Size = new Size(_widthLabelMenuSistema, 0);
            PontuacaoLabel.Dock = DockStyle.Fill;
            PontuacaoLabel.Text = "Pontuação";
            PontuacaoLabel.Font = CorFontepadraoLabel.Font;
            PontuacaoLabel.ForeColor = Color.WhiteSmoke;
            PontuacaoLabel.TextAlign = ContentAlignment.MiddleRight;
            PontuacaoLabel.MouseHover += new EventHandler(this.NineBoxLabel_MouseHover);
            PontuacaoLabel.Click += new System.EventHandler(PontuacaoPanel_Click);
            PontuacaoLabel.Name = "PontuacaoLabel";

            FavoritoPontuacaoImagem = new PictureBox();
            FavoritoPontuacaoImagem.Size = new Size(10, 10);
            FavoritoPontuacaoImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoPontuacaoImagem.Name = PontuacaoLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoPontuacaoImagem.Name))
            {
                FavoritoPontuacaoImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoPontuacaoImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoPontuacaoImagem.Top = 35;
            FavoritoPontuacaoImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoPontuacaoImagem.Tag = PontuacaoLabel.Text;
            FavoritoPontuacaoImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoPontuacaoImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoPontuacaoImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoPontuacaoImagem.AccessibleName = "Recursos Humanos";

            PontuacaoPanel.Controls.Add(PontuacaoLabel);
            PontuacaoPanel.Controls.Add(DivisoriaPontuacaoImagem);
            PontuacaoPanel.Controls.Add(FavoritoPontuacaoImagem);
            FavoritoPontuacaoImagem.BringToFront();

            SubMenuCadastrosRH.Controls.Add(PontuacaoPanel);
            #endregion

            #region Departamento
            DepartamentoPanel = new Panel();
            DepartamentoPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            DepartamentoPanel.Dock = DockStyle.Top;
            DepartamentoPanel.BackColor = _corFundoMenu;
            DepartamentoPanel.Name = "DepartamentoPanel";

            DivisoriaDepartamentoImagem = new PictureBox();
            DivisoriaDepartamentoImagem.Size = new Size(0, 4);
            DivisoriaDepartamentoImagem.Dock = DockStyle.Bottom;
            DivisoriaDepartamentoImagem.BackColor = _corFundoDivisao;

            DepartamentoLabel = new Label();
            DepartamentoLabel.AutoSize = false;
            DepartamentoLabel.Size = new Size(_widthLabelMenuSistema, 0);
            DepartamentoLabel.Dock = DockStyle.Fill;
            DepartamentoLabel.Text = "Departamento";
            DepartamentoLabel.Font = CorFontepadraoLabel.Font;
            DepartamentoLabel.ForeColor = Color.WhiteSmoke;
            DepartamentoLabel.TextAlign = ContentAlignment.MiddleRight;
            DepartamentoLabel.MouseHover += new EventHandler(this.NineBoxLabel_MouseHover);
            DepartamentoLabel.Click += new System.EventHandler(DepartamentoPanel_Click);
            DepartamentoLabel.Name = "DepartamentoLabel";

            FavoritoDepartamentoImagem = new PictureBox();
            FavoritoDepartamentoImagem.Size = new Size(10, 10);
            FavoritoDepartamentoImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoDepartamentoImagem.Name = DepartamentoLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoDepartamentoImagem.Name))
            {
                FavoritoDepartamentoImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoDepartamentoImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoDepartamentoImagem.Top = 35;
            FavoritoDepartamentoImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoDepartamentoImagem.Tag = DepartamentoLabel.Text;
            FavoritoDepartamentoImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoDepartamentoImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoDepartamentoImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoDepartamentoImagem.AccessibleName = "Recursos Humanos";

            DepartamentoPanel.Controls.Add(DepartamentoLabel);
            DepartamentoPanel.Controls.Add(DivisoriaDepartamentoImagem);
            DepartamentoPanel.Controls.Add(FavoritoDepartamentoImagem);
            FavoritoDepartamentoImagem.BringToFront();

            SubMenuCadastrosRH.Controls.Add(DepartamentoPanel);
            #endregion

            #region Competencias
            CompetenciasPanel = new Panel();
            CompetenciasPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            CompetenciasPanel.Dock = DockStyle.Top;
            CompetenciasPanel.BackColor = _corFundoMenu;
            CompetenciasPanel.Name = "CompetenciasPanel";

            DivisoriaCompetenciasImagem = new PictureBox();
            DivisoriaCompetenciasImagem.Size = new Size(0, 4);
            DivisoriaCompetenciasImagem.Dock = DockStyle.Bottom;
            DivisoriaCompetenciasImagem.BackColor = _corFundoDivisao;

            CompetenciasLabel = new Label();
            CompetenciasLabel.AutoSize = false;
            CompetenciasLabel.Size = new Size(_widthLabelMenuSistema, 0);
            CompetenciasLabel.Dock = DockStyle.Fill;
            CompetenciasLabel.Text = "Competências";
            CompetenciasLabel.Font = CorFontepadraoLabel.Font;
            CompetenciasLabel.ForeColor = Color.WhiteSmoke;
            CompetenciasLabel.TextAlign = ContentAlignment.MiddleRight;
            CompetenciasLabel.MouseHover += new EventHandler(this.NineBoxLabel_MouseHover);
            CompetenciasLabel.Click += new System.EventHandler(CompetenciasPanel_Click);
            CompetenciasLabel.Name = "CompetenciasLabel";

            FavoritoCompetenciasImagem = new PictureBox();
            FavoritoCompetenciasImagem.Size = new Size(10, 10);
            FavoritoCompetenciasImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoCompetenciasImagem.Name = DepartamentoLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoCompetenciasImagem.Name))
            {
                FavoritoCompetenciasImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoCompetenciasImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoCompetenciasImagem.Top = 35;
            FavoritoCompetenciasImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoCompetenciasImagem.Tag = DepartamentoLabel.Text;
            FavoritoCompetenciasImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoCompetenciasImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoCompetenciasImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoCompetenciasImagem.AccessibleName = "Recursos Humanos";

            CompetenciasPanel.Controls.Add(CompetenciasLabel);
            CompetenciasPanel.Controls.Add(DivisoriaCompetenciasImagem);
            CompetenciasPanel.Controls.Add(FavoritoCompetenciasImagem);
            FavoritoCompetenciasImagem.BringToFront();

            SubMenuCadastrosRH.Controls.Add(CompetenciasPanel);
            #endregion

            #region Escolaridade
            EscolaridadePanel = new Panel();
            EscolaridadePanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            EscolaridadePanel.Dock = DockStyle.Top;
            EscolaridadePanel.BackColor = _corFundoMenu;
            EscolaridadePanel.Name = "EscolaridadePanel";

            DivisoriaEscolaridadeImagem = new PictureBox();
            DivisoriaEscolaridadeImagem.Size = new Size(0, 4);
            DivisoriaEscolaridadeImagem.Dock = DockStyle.Bottom;
            DivisoriaEscolaridadeImagem.BackColor = _corFundoDivisao;

            EscolaridadeLabel = new Label();
            EscolaridadeLabel.AutoSize = false;
            EscolaridadeLabel.Size = new Size(_widthLabelMenuSistema, 0);
            EscolaridadeLabel.Dock = DockStyle.Fill;
            EscolaridadeLabel.Text = "Escolaridade";
            EscolaridadeLabel.Font = CorFontepadraoLabel.Font;
            EscolaridadeLabel.ForeColor = Color.WhiteSmoke;
            EscolaridadeLabel.TextAlign = ContentAlignment.MiddleRight;
            EscolaridadeLabel.MouseHover += new EventHandler(this.NineBoxLabel_MouseHover);
            EscolaridadeLabel.Click += new System.EventHandler(EscolaridadePanel_Click);
            EscolaridadeLabel.Name = "EscolaridadeLabel";

            FavoritoEscolaridadeImagem = new PictureBox();
            FavoritoEscolaridadeImagem.Size = new Size(10, 10);
            FavoritoEscolaridadeImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoEscolaridadeImagem.Name = DepartamentoLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoEscolaridadeImagem.Name))
            {
                FavoritoEscolaridadeImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoEscolaridadeImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoEscolaridadeImagem.Top = 35;
            FavoritoEscolaridadeImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoEscolaridadeImagem.Tag = DepartamentoLabel.Text;
            FavoritoEscolaridadeImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoEscolaridadeImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoEscolaridadeImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoEscolaridadeImagem.AccessibleName = "Recursos Humanos";

            EscolaridadePanel.Controls.Add(EscolaridadeLabel);
            EscolaridadePanel.Controls.Add(DivisoriaEscolaridadeImagem);
            EscolaridadePanel.Controls.Add(FavoritoEscolaridadeImagem);
            FavoritoEscolaridadeImagem.BringToFront();
            SubMenuCadastrosRH.Controls.Add(EscolaridadePanel);
            #endregion

            #region Cargos
            CargosPanel = new Panel();
            CargosPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            CargosPanel.Dock = DockStyle.Top;
            CargosPanel.BackColor = _corFundoMenu;
            CargosPanel.Name = "CargosPanel";

            DivisoriaCargosImagem = new PictureBox();
            DivisoriaCargosImagem.Size = new Size(0, 4);
            DivisoriaCargosImagem.Dock = DockStyle.Bottom;
            DivisoriaCargosImagem.BackColor = _corFundoDivisao;

            CargosLabel = new Label();
            CargosLabel.AutoSize = false;
            CargosLabel.Size = new Size(_widthLabelMenuSistema, 0);
            CargosLabel.Dock = DockStyle.Fill;
            CargosLabel.Text = "Cargos";
            CargosLabel.Font = CorFontepadraoLabel.Font;
            CargosLabel.ForeColor = Color.WhiteSmoke;
            CargosLabel.TextAlign = ContentAlignment.MiddleRight;
            CargosLabel.MouseHover += new EventHandler(this.NineBoxLabel_MouseHover);
            CargosLabel.Click += new System.EventHandler(CargosPanel_Click);
            CargosLabel.Name = "CargosLabel";

            FavoritoCargosImagem = new PictureBox();
            FavoritoCargosImagem.Size = new Size(10, 10);
            FavoritoCargosImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoCargosImagem.Name = "CargosLabelPic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoCargosImagem.Name))
            {
                FavoritoCargosImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoCargosImagem.Left = 5;//CargosLabel.Width - 10;
            FavoritoCargosImagem.Top = 35;
            FavoritoCargosImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoCargosImagem.Tag = CargosLabel.Text;
            FavoritoCargosImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoCargosImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoCargosImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoCargosImagem.AccessibleName = "Recursos Humanos";

            CargosPanel.Controls.Add(CargosLabel);
            CargosPanel.Controls.Add(DivisoriaCargosImagem);
            CargosPanel.Controls.Add(FavoritoCargosImagem);
            FavoritoCargosImagem.BringToFront();

            SubMenuCadastrosRH.Controls.Add(CargosPanel);
            #endregion

            #region Prazos
            PrazosPanel = new Panel();
            PrazosPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            PrazosPanel.Dock = DockStyle.Top;
            PrazosPanel.BackColor = _corFundoMenu;
            PrazosPanel.Name = "PrazosPanel";

            DivisoriaPrazosImagem = new PictureBox();
            DivisoriaPrazosImagem.Size = new Size(0, 4);
            DivisoriaPrazosImagem.Dock = DockStyle.Bottom;
            DivisoriaPrazosImagem.BackColor = _corFundoDivisao;

            PrazosLabel = new Label();
            PrazosLabel.AutoSize = false;
            PrazosLabel.Size = new Size(_widthLabelMenuSistema, 0);
            PrazosLabel.Dock = DockStyle.Fill;
            PrazosLabel.Text = "Prazos";
            PrazosLabel.Font = CorFontepadraoLabel.Font;
            PrazosLabel.ForeColor = Color.WhiteSmoke;
            PrazosLabel.TextAlign = ContentAlignment.MiddleRight;
            PrazosLabel.MouseHover += new EventHandler(this.NineBoxLabel_MouseHover);
            PrazosLabel.Click += new System.EventHandler(PrazosPanel_Click);
            PrazosLabel.Name = "PrazosLabel";

            FavoritoPrazosImagem = new PictureBox();
            FavoritoPrazosImagem.Size = new Size(10, 10);
            FavoritoPrazosImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoPrazosImagem.Name = PrazosLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoPrazosImagem.Name))
            {
                FavoritoPrazosImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoPrazosImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoPrazosImagem.Top = 35;
            FavoritoPrazosImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoPrazosImagem.Tag = PrazosLabel.Text;
            FavoritoPrazosImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoPrazosImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoPrazosImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoPrazosImagem.AccessibleName = "Recursos Humanos";

            PrazosPanel.Controls.Add(PrazosLabel);
            PrazosPanel.Controls.Add(DivisoriaPrazosImagem);
            PrazosPanel.Controls.Add(FavoritoPrazosImagem);
            FavoritoPrazosImagem.BringToFront();

            SubMenuCadastrosRH.Controls.Add(PrazosPanel);
            #endregion

            #region Colaboradores
            ColaboradoresPanel = new Panel();
            ColaboradoresPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            ColaboradoresPanel.Dock = DockStyle.Top;
            ColaboradoresPanel.BackColor = _corFundoMenu;
            ColaboradoresPanel.Name = "ColaboradoresPanel";

            DivisoriaColaboradoresImagem = new PictureBox();
            DivisoriaColaboradoresImagem.Size = new Size(0, 4);
            DivisoriaColaboradoresImagem.Dock = DockStyle.Bottom;
            DivisoriaColaboradoresImagem.BackColor = _corFundoDivisao;

            ColaboradoresLabel = new Label();
            ColaboradoresLabel.AutoSize = false;
            ColaboradoresLabel.Size = new Size(_widthLabelMenuSistema, 0);
            ColaboradoresLabel.Dock = DockStyle.Fill;
            ColaboradoresLabel.Text = "Colaboradores";
            ColaboradoresLabel.Font = CorFontepadraoLabel.Font;
            ColaboradoresLabel.ForeColor = Color.WhiteSmoke;
            ColaboradoresLabel.TextAlign = ContentAlignment.MiddleRight;
            ColaboradoresLabel.MouseHover += new EventHandler(this.NineBoxLabel_MouseHover);
            ColaboradoresLabel.Click += new System.EventHandler(ColaboradoresPanel_Click);
            ColaboradoresLabel.Name = "ColaboradoresLabel";

            FavoritoColaboradorImagem = new PictureBox();
            FavoritoColaboradorImagem.Size = new Size(10, 10);
            FavoritoColaboradorImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoColaboradorImagem.Name = ColaboradoresLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoColaboradorImagem.Name))
            {
                FavoritoColaboradorImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoColaboradorImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoColaboradorImagem.Top = 35;
            FavoritoColaboradorImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoColaboradorImagem.Tag = ColaboradoresLabel.Text;
            FavoritoColaboradorImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoColaboradorImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoColaboradorImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoColaboradorImagem.AccessibleName = "Recursos Humanos";

            ColaboradoresPanel.Controls.Add(ColaboradoresLabel);
            ColaboradoresPanel.Controls.Add(DivisoriaColaboradoresImagem);
            ColaboradoresPanel.Controls.Add(FavoritoColaboradorImagem);
            FavoritoColaboradorImagem.BringToFront();

            SubMenuCadastrosRH.Controls.Add(ColaboradoresPanel);
            #endregion

            #region NineBox 
            NineBoxPanel = new Panel();
            NineBoxPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            NineBoxPanel.Dock = DockStyle.Top;
            NineBoxPanel.BackColor = _corFundoMenu;
            NineBoxPanel.Name = "NineBoxPanel";
            NineBoxPanel.Visible = false;

            DivisoriaNineBoxImagem = new PictureBox();
            DivisoriaNineBoxImagem.Size = new Size(0, 4);
            DivisoriaNineBoxImagem.Dock = DockStyle.Bottom;
            DivisoriaNineBoxImagem.BackColor = _corFundoDivisao;

            Divisoria2NineBoxImagem = new PictureBox();
            Divisoria2NineBoxImagem.Size = new Size(1, 2);
            Divisoria2NineBoxImagem.Dock = DockStyle.Right;
            Divisoria2NineBoxImagem.BackColor = _corFundoDivisao;

            NineBoxSetaLabel = new Label();
            NineBoxSetaLabel.AutoSize = false;
            NineBoxSetaLabel.Size = new Size(20, 59);
            NineBoxSetaLabel.Dock = DockStyle.Right;
            NineBoxSetaLabel.Text = "6";
            NineBoxSetaLabel.Font = new Font("Webdings", (float)12);
            NineBoxSetaLabel.TextAlign = ContentAlignment.MiddleCenter;
            NineBoxSetaLabel.Click += new System.EventHandler(this.NineBoxSetaLabel_Click);
            NineBoxSetaLabel.MouseHover += new EventHandler(this.NineBoxSetaLabel_MouseHover);
            NineBoxSetaLabel.Name = "NineBoxSetaLabel";
            NineBoxSetaLabel.ForeColor = Color.WhiteSmoke;

            NineBoxLabel = new Label();
            NineBoxLabel.AutoSize = false;
            NineBoxLabel.Size = new Size(_widthLabelMenuSistema, 0);
            NineBoxLabel.Dock = DockStyle.Fill;
            NineBoxLabel.Text = "9 box";
            NineBoxLabel.Font = CorFontepadraoLabel.Font;
            NineBoxLabel.ForeColor = Color.WhiteSmoke;
            NineBoxLabel.TextAlign = ContentAlignment.MiddleRight;
            NineBoxLabel.MouseHover += new EventHandler(this.NineBoxLabel_MouseHover);
            NineBoxLabel.Click += new System.EventHandler(this.NineBoxSetaLabel_Click);
            NineBoxLabel.Name = "NineBoxLabel";

            NineBoxPanel.Controls.Add(NineBoxLabel);
            //NineBoxPanel.Controls.Add(NineBoxImagem);
            NineBoxPanel.Controls.Add(Divisoria2NineBoxImagem);
            NineBoxPanel.Controls.Add(NineBoxSetaLabel);
            NineBoxPanel.Controls.Add(DivisoriaNineBoxImagem);

            SubMenuCadastrosRH.Controls.Add(NineBoxPanel);
            #endregion
        }

        private void MudaSelecaoDeCoresSubCadastrosRH()
        {
            ColaboradoresLabel.Font = new Font(ColaboradoresLabel.Font, ColaboradoresLabel.Font.Style & ~FontStyle.Bold);
            PrazosLabel.Font = new Font(PrazosLabel.Font, PrazosLabel.Font.Style & ~FontStyle.Bold);
            CargosLabel.Font = new Font(CargosLabel.Font, CargosLabel.Font.Style & ~FontStyle.Bold);
            EscolaridadeLabel.Font = new Font(EscolaridadeLabel.Font, EscolaridadeLabel.Font.Style & ~FontStyle.Bold);
            CompetenciasLabel.Font = new Font(CompetenciasLabel.Font, CompetenciasLabel.Font.Style & ~FontStyle.Bold);
            DepartamentoLabel.Font = new Font(DepartamentoLabel.Font, DepartamentoLabel.Font.Style & ~FontStyle.Bold);
            PontuacaoLabel.Font = new Font(PontuacaoLabel.Font, PontuacaoLabel.Font.Style & ~FontStyle.Bold);
            NineBoxLabel.Font = new Font(NineBoxLabel.Font, NineBoxLabel.Font.Style & ~FontStyle.Bold);
            NineBoxSetaLabel.Font = new Font(NineBoxSetaLabel.Font, NineBoxSetaLabel.Font.Style & ~FontStyle.Bold);

            ColaboradoresLabel.BackColor = _corFundoMenu;
            PrazosLabel.BackColor = ColaboradoresLabel.BackColor;
            CargosLabel.BackColor = ColaboradoresLabel.BackColor;
            EscolaridadeLabel.BackColor = ColaboradoresLabel.BackColor;
            CompetenciasLabel.BackColor = ColaboradoresLabel.BackColor;
            DepartamentoLabel.BackColor = ColaboradoresLabel.BackColor;
            PontuacaoLabel.BackColor = ColaboradoresLabel.BackColor;
            NineBoxLabel.BackColor = ColaboradoresLabel.BackColor;
            NineBoxSetaLabel.BackColor = ColaboradoresLabel.BackColor;

            FavoritoColaboradorImagem.BackColor = ColaboradoresLabel.BackColor;
            FavoritoPrazosImagem.BackColor = ColaboradoresLabel.BackColor;
            FavoritoCargosImagem.BackColor = ColaboradoresLabel.BackColor;
            FavoritoEscolaridadeImagem.BackColor = ColaboradoresLabel.BackColor;
            FavoritoCompetenciasImagem.BackColor = ColaboradoresLabel.BackColor;
            FavoritoDepartamentoImagem.BackColor = ColaboradoresLabel.BackColor;
            FavoritoPontuacaoImagem.BackColor = ColaboradoresLabel.BackColor;

            ColaboradoresLabel.ForeColor = Color.WhiteSmoke;
            PrazosLabel.ForeColor = Color.WhiteSmoke;
            CargosLabel.ForeColor = Color.WhiteSmoke;
            EscolaridadeLabel.ForeColor = Color.WhiteSmoke;
            CompetenciasLabel.ForeColor = Color.WhiteSmoke;
            DepartamentoLabel.ForeColor = Color.WhiteSmoke;
            PontuacaoLabel.ForeColor = Color.WhiteSmoke;
            NineBoxLabel.ForeColor = Color.WhiteSmoke;
            NineBoxSetaLabel.ForeColor = Color.WhiteSmoke;

            NineBoxSetaLabel.Text = "6";
        }

        private void NineBoxSetaLabel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubCadastrosRH();
            FechaMenuUsuario();
            FechaSubMenuNineBox();

            if (((Control)sender).Name.Contains("NineBox"))
            {
                NineBoxSetaLabel.Font = new Font(NineBoxSetaLabel.Font, FontStyle.Bold);
                NineBoxSetaLabel.ForeColor = Publicas._fonteBotaoFocado;
                NineBoxSetaLabel.BackColor = _corMenuSelecionado;
                return;
            }
        }

        private void NineBoxLabel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubCadastrosRH();
            FechaMenuUsuario();
            FechaSubMenuNineBox();

            if (((Control)sender).Name.Contains("Colaboradores"))
            {
                ColaboradoresLabel.Font = new Font(ColaboradoresLabel.Font, FontStyle.Bold);
                ColaboradoresLabel.ForeColor = Publicas._fonteBotaoFocado;
                ColaboradoresLabel.BackColor = _corMenuSelecionado;
                FavoritoColaboradorImagem.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Prazos"))
            {
                PrazosLabel.Font = new Font(PrazosLabel.Font, FontStyle.Bold);
                PrazosLabel.ForeColor = Publicas._fonteBotaoFocado;
                PrazosLabel.BackColor = _corMenuSelecionado;
                FavoritoPrazosImagem.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Cargos"))
            {
                CargosLabel.Font = new Font(CargosLabel.Font, FontStyle.Bold);
                CargosLabel.ForeColor = Publicas._fonteBotaoFocado;
                CargosLabel.BackColor = _corMenuSelecionado;
                FavoritoCargosImagem.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Escolaridade"))
            {
                EscolaridadeLabel.Font = new Font(EscolaridadeLabel.Font, FontStyle.Bold);
                EscolaridadeLabel.ForeColor = Publicas._fonteBotaoFocado;
                EscolaridadeLabel.BackColor = _corMenuSelecionado;
                FavoritoEscolaridadeImagem.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Competencias"))
            {
                CompetenciasLabel.Font = new Font(CompetenciasLabel.Font, FontStyle.Bold);
                CompetenciasLabel.ForeColor = Publicas._fonteBotaoFocado;
                CompetenciasLabel.BackColor = _corMenuSelecionado;
                FavoritoCompetenciasImagem.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Departamento"))
            {
                DepartamentoLabel.Font = new Font(DepartamentoLabel.Font, FontStyle.Bold);
                DepartamentoLabel.ForeColor = Publicas._fonteBotaoFocado;
                DepartamentoLabel.BackColor = _corMenuSelecionado;
                FavoritoDepartamentoImagem.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Pontuacao"))
            {
                PontuacaoLabel.Font = new Font(PontuacaoLabel.Font, FontStyle.Bold);
                PontuacaoLabel.ForeColor = Publicas._fonteBotaoFocado;
                PontuacaoLabel.BackColor = _corMenuSelecionado;
                FavoritoPontuacaoImagem.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("NineBox"))
            {
                NineBoxLabel.Font = new Font(NineBoxLabel.Font, FontStyle.Bold);
                NineBoxLabel.ForeColor = Publicas._fonteBotaoFocado;
                NineBoxLabel.BackColor = _corMenuSelecionado;
                return;
            }
        }

        private void FechaSubMenuCadastrosRH()
        {
            FechaSubMenuNineBox();
            if (SubMenuCadastrosRH != null)
            {
                SubMenuCadastrosRH.Visible = false;
                this.Controls.Remove(SubMenuCadastrosRH);
                SubMenuCadastrosRH.Dispose();
                SubMenuCadastrosRH = null;
            }
        }

        private void ColaboradoresPanel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaAvaliacao;
            new Cadastros.Pessoas().ShowDialog();
            NomePadrao();

            //AtivaTimer(sender, e);
        }

        private void PrazosPanel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaAvaliacao;
            new Cadastros.Prazos().ShowDialog();
            NomePadrao();

            //AtivaTimer(sender, e);
        }

        private void CargosPanel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();
            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaAvaliacao;
            new Cadastros.Cargos().ShowDialog();
            NomePadrao();

            //AtivaTimer(sender, e);
        }

        private void EscolaridadePanel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaAvaliacao;
            new Cadastros.Escolaridade().ShowDialog();
            NomePadrao();

            //AtivaTimer(sender, e);
        }

        private void CompetenciasPanel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaAvaliacao;
            new Cadastros.Competencia().ShowDialog();
            NomePadrao();

            //AtivaTimer(sender, e);
        }

        private void DepartamentoPanel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaAvaliacao;
            new Cadastros.Departamentos().ShowDialog();
            NomePadrao();

            //AtivaTimer(sender, e);
        }

        private void PontuacaoPanel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaAvaliacao;
            new Cadastros.Pontuacao().ShowDialog();
            NomePadrao();

            //AtivaTimer(sender, e);
        }

        #region SubMenu NineBox
        private void NineBoxSetaLabel_Click(object sender, EventArgs e)
        {
            NineBoxSetaLabel.Text = "3";

            if (!Publicas._TemaBlack)
            {
                NineBoxSetaLabel.ForeColor = Publicas._bordaEntrada;
                NineBoxLabel.ForeColor = Publicas._bordaEntrada;
            }
            else
            {
                NineBoxSetaLabel.ForeColor = Publicas._fonteMenuSelecionado;
                NineBoxLabel.ForeColor = Publicas._fonteMenuSelecionado;
            }
            NineBoxSetaLabel.BackColor = _corFundoMenu;

            FechaSubMenuADColaborador();
            FechaSubMenuADPlanejamento();
            FechaSubMenuADGestor();

            if (SubMenuNineBox != null)
            {
                FechaSubMenuNineBox();
                return;
            }

            #region Cria estrutura 

            // Menu de fundo (onde agrupa os demais itens)
            SubMenuNineBox = new Panel();
            SubMenuNineBox.Size = new Size(155, _heidthMenuSistema * 2);
            SubMenuNineBox.Location = new Point(MenuSistemaPanel.Width + SubMenuRecursosHumanos.Width +
                                SubMenuAvaliacaoDesempenho.Width + SubMenuRecursosHumanos.Width +
                                SubMenuCadastrosRH.Width + 10, AcessoAoMenuPanel.Height);
            SubMenuNineBox.BackColor = _corFundoDivisao;
            this.Controls.Add(SubMenuNineBox);
            SubMenuNineBox.BringToFront();
            SubMenuNineBox.Visible = true;
            #endregion

            #region ColaboradoresNineBox
            ColaboradoresNineBoxPanel = new Panel();
            ColaboradoresNineBoxPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            ColaboradoresNineBoxPanel.Dock = DockStyle.Top;
            ColaboradoresNineBoxPanel.BackColor = _corFundoMenu;
            ColaboradoresNineBoxPanel.Name = "ColaboradoresNineBoxPanel";

            DivisoriaColaboradoresNineBoxImagem = new PictureBox();
            DivisoriaColaboradoresNineBoxImagem.Size = new Size(0, 4);
            DivisoriaColaboradoresNineBoxImagem.Dock = DockStyle.Bottom;
            DivisoriaColaboradoresNineBoxImagem.BackColor = _corFundoDivisao;

            ColaboradoresNineBoxLabel = new Label();
            ColaboradoresNineBoxLabel.AutoSize = false;
            ColaboradoresNineBoxLabel.Size = new Size(_widthLabelMenuSistema, 0);
            ColaboradoresNineBoxLabel.Dock = DockStyle.Fill;
            ColaboradoresNineBoxLabel.Text = "Colaboradores";
            ColaboradoresNineBoxLabel.Font = CorFontepadraoLabel.Font;
            ColaboradoresNineBoxLabel.ForeColor = Color.WhiteSmoke;
            ColaboradoresNineBoxLabel.TextAlign = ContentAlignment.MiddleRight;
            ColaboradoresNineBoxLabel.MouseHover += new EventHandler(this.CargosNineBoxLabel_MouseHover);
            ColaboradoresNineBoxLabel.Click += new System.EventHandler(ColaboradoresNineBoxPanel_Click);
            ColaboradoresNineBoxLabel.Name = "ColaboradoresNineBoxLabel";

            ColaboradoresNineBoxPanel.Controls.Add(ColaboradoresNineBoxLabel);
            ColaboradoresNineBoxPanel.Controls.Add(DivisoriaColaboradoresNineBoxImagem);

            SubMenuNineBox.Controls.Add(ColaboradoresNineBoxPanel);
            #endregion

            #region CargosNineBox
            CargosNineBoxPanel = new Panel();
            CargosNineBoxPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            CargosNineBoxPanel.Dock = DockStyle.Top;
            CargosNineBoxPanel.BackColor = _corFundoMenu;
            CargosNineBoxPanel.Name = "CargosNineBoxPanel";

            DivisoriaCargosNineBoxImagem = new PictureBox();
            DivisoriaCargosNineBoxImagem.Size = new Size(0, 4);
            DivisoriaCargosNineBoxImagem.Dock = DockStyle.Bottom;
            DivisoriaCargosNineBoxImagem.BackColor = _corFundoDivisao;

            CargosNineBoxLabel = new Label();
            CargosNineBoxLabel.AutoSize = false;
            CargosNineBoxLabel.Size = new Size(_widthLabelMenuSistema, 0);
            CargosNineBoxLabel.Dock = DockStyle.Fill;
            CargosNineBoxLabel.Text = "Cargos";
            CargosNineBoxLabel.Font = CorFontepadraoLabel.Font;
            CargosNineBoxLabel.ForeColor = Color.WhiteSmoke;
            CargosNineBoxLabel.TextAlign = ContentAlignment.MiddleRight;
            CargosNineBoxLabel.MouseHover += new EventHandler(this.CargosNineBoxLabel_MouseHover);
            CargosNineBoxLabel.Click += new System.EventHandler(CargosNineBoxPanel_Click);
            CargosNineBoxLabel.Name = "CargosNineBoxLabel";

            CargosNineBoxPanel.Controls.Add(CargosNineBoxLabel);
            CargosNineBoxPanel.Controls.Add(DivisoriaCargosNineBoxImagem);

            SubMenuNineBox.Controls.Add(CargosNineBoxPanel);
            #endregion
        }

        private void FechaSubMenuNineBox()
        {
            if (SubMenuNineBox != null)
            {
                SubMenuNineBox.Visible = false;
                this.Controls.Remove(SubMenuNineBox);
                SubMenuNineBox.Dispose();
                SubMenuNineBox = null;
            }
        }

        private void MudaSelecaoDeCoresSubNineBox()
        {
            ColaboradoresNineBoxLabel.Font = new Font(ColaboradoresNineBoxLabel.Font, ColaboradoresNineBoxLabel.Font.Style & ~FontStyle.Bold);
            CargosNineBoxLabel.Font = new Font(CargosNineBoxLabel.Font, CargosNineBoxLabel.Font.Style & ~FontStyle.Bold);

            ColaboradoresNineBoxLabel.BackColor = _corFundoMenu;
            CargosNineBoxLabel.BackColor = ColaboradoresLabel.BackColor;

            ColaboradoresNineBoxLabel.ForeColor = Color.WhiteSmoke;
            CargosNineBoxLabel.ForeColor = Color.WhiteSmoke;
        }

        private void CargosNineBoxLabel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubNineBox();
            FechaMenuUsuario();

            if (((Control)sender).Name.Contains("Cargos"))
            {
                CargosNineBoxLabel.Font = new Font(CargosNineBoxLabel.Font, FontStyle.Bold);
                CargosNineBoxLabel.ForeColor = Publicas._fonteBotaoFocado;
                CargosNineBoxLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Colaboradores"))
            {
                ColaboradoresNineBoxLabel.Font = new Font(ColaboradoresNineBoxLabel.Font, FontStyle.Bold);
                ColaboradoresNineBoxLabel.ForeColor = Publicas._fonteBotaoFocado;
                ColaboradoresNineBoxLabel.BackColor = _corMenuSelecionado;
                return;
            }
        }

        private void CargosNineBoxPanel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaAvaliacao;
            Avaliacao_de_desempenho.EixoYNineBox _tela = new Avaliacao_de_desempenho.EixoYNineBox();

            _tela.cargosPanel.Visible = true;
            _tela.colaboradorPanel.Visible = false;
            _tela.ShowDialog();
            NomePadrao();
        }

        private void ColaboradoresNineBoxPanel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaAvaliacao;
            Avaliacao_de_desempenho.EixoYNineBox _tela = new Avaliacao_de_desempenho.EixoYNineBox();

            _tela.cargosPanel.Visible = false;
            _tela.colaboradorPanel.Visible = true;
            _tela.ShowDialog();
            NomePadrao();
        }
        #endregion

        #endregion

        #endregion

        #endregion

        #region SubMenu Biblioteca
        private void BibliotecaSetaLabel_Click(object sender, EventArgs e)
        {
            BibliotecaSetaLabel.Text = "3";

            if (!Publicas._TemaBlack)
            {
                BibliotecaSetaLabel.ForeColor = Publicas._bordaEntrada;
                BibliotecaLabel.ForeColor = Publicas._bordaEntrada;
            }
            else
            {
                BibliotecaSetaLabel.ForeColor = Publicas._fonteMenuSelecionado;
                BibliotecaLabel.ForeColor = Publicas._fonteMenuSelecionado;
            }
            BibliotecaSetaLabel.BackColor = _corFundoMenu;

            FechaSubMenuAvaliacaoDesempenho();

            if (SubMenuBiblioteca != null)
            {
                FechaSubMenuBiblioteca();
                return;
            }

            #region Cria estrutura 

            // Menu de fundo (onde agrupa os demais itens)
            SubMenuBiblioteca = new Panel();
            SubMenuBiblioteca.Size = new Size(155, _heidthMenuSistema * 8);
            SubMenuBiblioteca.Location = new Point(MenuSistemaPanel.Width + SubMenuRecursosHumanos.Width + 4, AcessoAoMenuPanel.Height);
            SubMenuBiblioteca.BackColor = _corFundoDivisao;
            this.Controls.Add(SubMenuBiblioteca);
            SubMenuBiblioteca.BringToFront();
            SubMenuBiblioteca.Visible = true;
            #endregion

            // Os ultimos SubMenus deve ser incluidos primeiros
            #region Acompanhamento
            AcompanhamentoPanel = new Panel();
            AcompanhamentoPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            AcompanhamentoPanel.Dock = DockStyle.Top;
            AcompanhamentoPanel.BackColor = _corFundoMenu;
            AcompanhamentoPanel.Enabled = Publicas._usuario.IdEmpresa == 1 || Publicas._usuario.IdEmpresa == 19 || Publicas._usuario.UsuarioAcesso == "ELSILVA" || Publicas._usuario.UsuarioAcesso == "VBSANTOS";

            AcompanhamentoPanel.Name = "AcompanhamentoPanel";

            DivisoriaAcompanhamentoImagem = new PictureBox();
            DivisoriaAcompanhamentoImagem.Size = new Size(0, 4);
            DivisoriaAcompanhamentoImagem.Dock = DockStyle.Bottom;
            DivisoriaAcompanhamentoImagem.BackColor = _corFundoDivisao;

            AcompanhamentoLabel = new Label();
            AcompanhamentoLabel.AutoSize = false;
            AcompanhamentoLabel.Size = new Size(_widthLabelMenuSistema, 0);
            AcompanhamentoLabel.Dock = DockStyle.Fill;
            AcompanhamentoLabel.Text = "Acompanhamento";
            AcompanhamentoLabel.Font = CorFontepadraoLabel.Font;
            AcompanhamentoLabel.ForeColor = Color.WhiteSmoke;
            AcompanhamentoLabel.TextAlign = ContentAlignment.MiddleRight;
            AcompanhamentoLabel.Click += new System.EventHandler(this.AcompanhamentoPanel_Click);
            AcompanhamentoLabel.MouseHover += new EventHandler(this.CadastroBibliotecaLabel_MouseHover);
            AcompanhamentoLabel.Name = "AcompanhamentoLabel";

            FavoritoAcompanhamentoImagem = new PictureBox();
            FavoritoAcompanhamentoImagem.Size = new Size(10, 10);
            FavoritoAcompanhamentoImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoAcompanhamentoImagem.Name = AcompanhamentoLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoAcompanhamentoImagem.Name))
            {
                FavoritoAcompanhamentoImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoAcompanhamentoImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoAcompanhamentoImagem.Top = 35;
            FavoritoAcompanhamentoImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoAcompanhamentoImagem.Tag = AcompanhamentoLabel.Text;
            FavoritoAcompanhamentoImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoAcompanhamentoImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoAcompanhamentoImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoAcompanhamentoImagem.AccessibleName = "Biblioteca";

            AcompanhamentoPanel.Controls.Add(AcompanhamentoLabel);
            AcompanhamentoPanel.Controls.Add(DivisoriaAcompanhamentoImagem);
            AcompanhamentoPanel.Controls.Add(FavoritoAcompanhamentoImagem);
            FavoritoAcompanhamentoImagem.BringToFront();
            SubMenuBiblioteca.Controls.Add(AcompanhamentoPanel);
            #endregion

            #region PontuacaoLivros
            PontuacaoLivrosPanel = new Panel();
            PontuacaoLivrosPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            PontuacaoLivrosPanel.Dock = DockStyle.Top;
            PontuacaoLivrosPanel.BackColor = _corFundoMenu;
            PontuacaoLivrosPanel.Name = "PontuacaoLivrosPanel";

            DivisoriaPontuacaoLivrosImagem = new PictureBox();
            DivisoriaPontuacaoLivrosImagem.Size = new Size(0, 4);
            DivisoriaPontuacaoLivrosImagem.Dock = DockStyle.Bottom;
            DivisoriaPontuacaoLivrosImagem.BackColor = _corFundoDivisao;

            PontuacaoLivrosLabel = new Label();
            PontuacaoLivrosLabel.AutoSize = false;
            PontuacaoLivrosLabel.Size = new Size(_widthLabelMenuSistema, 0);
            PontuacaoLivrosLabel.Dock = DockStyle.Fill;
            PontuacaoLivrosLabel.Text = "Pontuação";
            PontuacaoLivrosLabel.Font = CorFontepadraoLabel.Font;
            PontuacaoLivrosLabel.ForeColor = Color.WhiteSmoke;
            PontuacaoLivrosLabel.TextAlign = ContentAlignment.MiddleRight;
            PontuacaoLivrosLabel.Click += new System.EventHandler(this.PontuacaoLivrosPanel_Click);
            PontuacaoLivrosLabel.MouseHover += new EventHandler(this.CadastroBibliotecaLabel_MouseHover);
            PontuacaoLivrosLabel.Name = "PontuacaoLivrosLabel";

            FavoritoPontuacaoLivrosImagem = new PictureBox();
            FavoritoPontuacaoLivrosImagem.Size = new Size(10, 10);
            FavoritoPontuacaoLivrosImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoPontuacaoLivrosImagem.Name = PontuacaoLivrosLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoPontuacaoLivrosImagem.Name))
            {
                FavoritoPontuacaoLivrosImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoPontuacaoLivrosImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoPontuacaoLivrosImagem.Top = 35;
            FavoritoPontuacaoLivrosImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoPontuacaoLivrosImagem.Tag = PontuacaoLivrosLabel.Text;
            FavoritoPontuacaoLivrosImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoPontuacaoLivrosImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoPontuacaoLivrosImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoPontuacaoLivrosImagem.AccessibleName = "Biblioteca";

            PontuacaoLivrosPanel.Controls.Add(PontuacaoLivrosLabel);
            PontuacaoLivrosPanel.Controls.Add(DivisoriaPontuacaoLivrosImagem);
            PontuacaoLivrosPanel.Controls.Add(FavoritoPontuacaoLivrosImagem);
            FavoritoPontuacaoLivrosImagem.BringToFront();

            SubMenuBiblioteca.Controls.Add(PontuacaoLivrosPanel);
            #endregion

            #region Respostas
            RespostasPanel = new Panel();
            RespostasPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            RespostasPanel.Dock = DockStyle.Top;
            RespostasPanel.BackColor = _corFundoMenu;
            RespostasPanel.Name = "RespostasPanel";
            //RespostasPanel.Enabled = false;

            DivisoriaRespostasImagem = new PictureBox();
            DivisoriaRespostasImagem.Size = new Size(0, 4);
            DivisoriaRespostasImagem.Dock = DockStyle.Bottom;
            DivisoriaRespostasImagem.BackColor = _corFundoDivisao;

            RespostasLabel = new Label();
            RespostasLabel.AutoSize = false;
            RespostasLabel.Size = new Size(_widthLabelMenuSistema, 0);
            RespostasLabel.Dock = DockStyle.Fill;
            RespostasLabel.Text = "Respostas";
            RespostasLabel.Font = CorFontepadraoLabel.Font;
            RespostasLabel.ForeColor = Color.WhiteSmoke;
            RespostasLabel.TextAlign = ContentAlignment.MiddleRight;
            RespostasLabel.Click += new System.EventHandler(this.RespostasPanel_Click);
            RespostasLabel.MouseHover += new EventHandler(this.CadastroBibliotecaLabel_MouseHover);
            RespostasLabel.Name = "RespostasLabel";

            FavoritoRespostasImagem = new PictureBox();
            FavoritoRespostasImagem.Size = new Size(10, 10);
            FavoritoRespostasImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoRespostasImagem.Name = RespostasLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoRespostasImagem.Name))
            {
                FavoritoRespostasImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoRespostasImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoRespostasImagem.Top = 35;
            FavoritoRespostasImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoRespostasImagem.Tag = RespostasLabel.Text;
            FavoritoRespostasImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoRespostasImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoRespostasImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoRespostasImagem.AccessibleName = "Biblioteca";

            RespostasPanel.Controls.Add(RespostasLabel);
            RespostasPanel.Controls.Add(DivisoriaRespostasImagem);
            RespostasPanel.Controls.Add(FavoritoRespostasImagem);
            FavoritoRespostasImagem.BringToFront();

            SubMenuBiblioteca.Controls.Add(RespostasPanel);
            #endregion

            #region Perguntas
            PerguntasPanel = new Panel();
            PerguntasPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            PerguntasPanel.Dock = DockStyle.Top;
            PerguntasPanel.BackColor = _corFundoMenu;
            PerguntasPanel.Name = "PerguntasPanel";
            //PerguntasPanel.Enabled = false;

            DivisoriaPerguntasImagem = new PictureBox();
            DivisoriaPerguntasImagem.Size = new Size(0, 4);
            DivisoriaPerguntasImagem.Dock = DockStyle.Bottom;
            DivisoriaPerguntasImagem.BackColor = _corFundoDivisao;

            PerguntasLabel = new Label();
            PerguntasLabel.AutoSize = false;
            PerguntasLabel.Size = new Size(_widthLabelMenuSistema, 0);
            PerguntasLabel.Dock = DockStyle.Fill;
            PerguntasLabel.Text = "Resenha e Perguntas";
            PerguntasLabel.Font = CorFontepadraoLabel.Font;
            PerguntasLabel.ForeColor = Color.WhiteSmoke;
            PerguntasLabel.TextAlign = ContentAlignment.MiddleRight;
            PerguntasLabel.Click += new System.EventHandler(this.PerguntasPanel_Click);
            PerguntasLabel.MouseHover += new EventHandler(this.CadastroBibliotecaLabel_MouseHover);
            PerguntasLabel.Name = "PerguntasLabel";

            FavoritoPerguntasImagem = new PictureBox();
            FavoritoPerguntasImagem.Size = new Size(10, 10);
            FavoritoPerguntasImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoPerguntasImagem.Name = PerguntasLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoPerguntasImagem.Name))
            {
                FavoritoPerguntasImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoPerguntasImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoPerguntasImagem.Top = 35;
            FavoritoPerguntasImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoPerguntasImagem.Tag = PerguntasLabel.Text;
            FavoritoPerguntasImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoPerguntasImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoPerguntasImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoPerguntasImagem.AccessibleName = "Biblioteca";

            PerguntasPanel.Controls.Add(PerguntasLabel);
            PerguntasPanel.Controls.Add(DivisoriaPerguntasImagem);
            PerguntasPanel.Controls.Add(FavoritoPerguntasImagem);
            FavoritoPerguntasImagem.BringToFront();

            SubMenuBiblioteca.Controls.Add(PerguntasPanel);
            #endregion

            #region Devolucao
            DevolucaoPanel = new Panel();
            DevolucaoPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            DevolucaoPanel.Dock = DockStyle.Top;
            DevolucaoPanel.BackColor = _corFundoMenu;
            DevolucaoPanel.Name = "DevolucaoPanel";
            DevolucaoPanel.Enabled = Publicas._usuario.AdministraBiblioteca;

            DivisoriaDevolucaoImagem = new PictureBox();
            DivisoriaDevolucaoImagem.Size = new Size(0, 4);
            DivisoriaDevolucaoImagem.Dock = DockStyle.Bottom;
            DivisoriaDevolucaoImagem.BackColor = _corFundoDivisao;

            DevolucaoLabel = new Label();
            DevolucaoLabel.AutoSize = false;
            DevolucaoLabel.Size = new Size(_widthLabelMenuSistema, 0);
            DevolucaoLabel.Dock = DockStyle.Fill;
            DevolucaoLabel.Text = "Devolução";
            DevolucaoLabel.Font = CorFontepadraoLabel.Font;
            DevolucaoLabel.ForeColor = Color.WhiteSmoke;
            DevolucaoLabel.TextAlign = ContentAlignment.MiddleRight;
            DevolucaoLabel.Click += new System.EventHandler(this.DevolucaoPanel_Click);
            DevolucaoLabel.MouseHover += new EventHandler(this.CadastroBibliotecaLabel_MouseHover);
            DevolucaoLabel.Name = "DevolucaoLabel";

            FavoritoDevolucaoImagem = new PictureBox();
            FavoritoDevolucaoImagem.Size = new Size(10, 10);
            FavoritoDevolucaoImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoDevolucaoImagem.Name = DevolucaoLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoDevolucaoImagem.Name))
            {
                FavoritoDevolucaoImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoDevolucaoImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoDevolucaoImagem.Top = 35;
            FavoritoDevolucaoImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoDevolucaoImagem.Tag = DevolucaoLabel.Text;
            FavoritoDevolucaoImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoDevolucaoImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoDevolucaoImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoDevolucaoImagem.AccessibleName = "Biblioteca";

            DevolucaoPanel.Controls.Add(DevolucaoLabel);
            DevolucaoPanel.Controls.Add(DivisoriaDevolucaoImagem);
            DevolucaoPanel.Controls.Add(FavoritoDevolucaoImagem);
            FavoritoDevolucaoImagem.BringToFront();

            SubMenuBiblioteca.Controls.Add(DevolucaoPanel);
            #endregion

            #region Reserva
            ReservaPanel = new Panel();
            ReservaPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            ReservaPanel.Dock = DockStyle.Top;
            ReservaPanel.BackColor = _corFundoMenu;
            ReservaPanel.Name = "ReservaPanel";

            DivisoriaReservaImagem = new PictureBox();
            DivisoriaReservaImagem.Size = new Size(0, 4);
            DivisoriaReservaImagem.Dock = DockStyle.Bottom;
            DivisoriaReservaImagem.BackColor = _corFundoDivisao;

            ReservaLabel = new Label();
            ReservaLabel.AutoSize = false;
            ReservaLabel.Size = new Size(_widthLabelMenuSistema, 0);
            ReservaLabel.Dock = DockStyle.Fill;
            ReservaLabel.Text = "Reserva";
            ReservaLabel.Font = CorFontepadraoLabel.Font;
            ReservaLabel.ForeColor = Color.WhiteSmoke;
            ReservaLabel.TextAlign = ContentAlignment.MiddleRight;
            ReservaLabel.Click += new System.EventHandler(this.ReservaPanel_Click);
            ReservaLabel.MouseHover += new EventHandler(this.CadastroBibliotecaLabel_MouseHover);
            ReservaLabel.Name = "ReservaLabel";

            FavoritoReservaImagem = new PictureBox();
            FavoritoReservaImagem.Size = new Size(10, 10);
            FavoritoReservaImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoReservaImagem.Name = ReservaLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoReservaImagem.Name))
            {
                FavoritoReservaImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoReservaImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoReservaImagem.Top = 35;
            FavoritoReservaImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoReservaImagem.Tag = ReservaLabel.Text;
            FavoritoReservaImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoReservaImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoReservaImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoReservaImagem.AccessibleName = "Biblioteca";

            ReservaPanel.Controls.Add(ReservaLabel);
            ReservaPanel.Controls.Add(DivisoriaReservaImagem);
            ReservaPanel.Controls.Add(FavoritoReservaImagem);
            FavoritoReservaImagem.BringToFront();
            SubMenuBiblioteca.Controls.Add(ReservaPanel);
            #endregion

            #region Emprestimo
            EmprestimoPanel = new Panel();
            EmprestimoPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            EmprestimoPanel.Dock = DockStyle.Top;
            EmprestimoPanel.BackColor = _corFundoMenu;
            EmprestimoPanel.Name = "EmprestimoPanel";
            EmprestimoPanel.Enabled = Publicas._usuario.AdministraBiblioteca;

            DivisoriaEmprestimoImagem = new PictureBox();
            DivisoriaEmprestimoImagem.Size = new Size(0, 4);
            DivisoriaEmprestimoImagem.Dock = DockStyle.Bottom;
            DivisoriaEmprestimoImagem.BackColor = _corFundoDivisao;

            EmprestimoLabel = new Label();
            EmprestimoLabel.AutoSize = false;
            EmprestimoLabel.Size = new Size(_widthLabelMenuSistema, 0);
            EmprestimoLabel.Dock = DockStyle.Fill;
            EmprestimoLabel.Text = "Emprestimo";
            EmprestimoLabel.Font = CorFontepadraoLabel.Font;
            EmprestimoLabel.ForeColor = Color.WhiteSmoke;
            EmprestimoLabel.TextAlign = ContentAlignment.MiddleRight;
            EmprestimoLabel.Click += new System.EventHandler(this.EmprestimoPanel_Click);
            EmprestimoLabel.MouseHover += new EventHandler(this.CadastroBibliotecaLabel_MouseHover);
            EmprestimoLabel.Name = "EmprestimoLabel";

            FavoritoEmprestimoImagem = new PictureBox();
            FavoritoEmprestimoImagem.Size = new Size(10, 10);
            FavoritoEmprestimoImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoEmprestimoImagem.Name = EmprestimoLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoEmprestimoImagem.Name))
            {
                FavoritoEmprestimoImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoEmprestimoImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoEmprestimoImagem.Top = 35;
            FavoritoEmprestimoImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoEmprestimoImagem.Tag = EmprestimoLabel.Text;
            FavoritoEmprestimoImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoEmprestimoImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoEmprestimoImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoEmprestimoImagem.AccessibleName = "Biblioteca";

            EmprestimoPanel.Controls.Add(EmprestimoLabel);
            EmprestimoPanel.Controls.Add(DivisoriaEmprestimoImagem);
            EmprestimoPanel.Controls.Add(FavoritoEmprestimoImagem);
            FavoritoEmprestimoImagem.BringToFront();
            SubMenuBiblioteca.Controls.Add(EmprestimoPanel);
            #endregion

            #region CadastroBiblioteca
            CadastroBibliotecaPanel = new Panel();
            CadastroBibliotecaPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            CadastroBibliotecaPanel.Dock = DockStyle.Top;
            CadastroBibliotecaPanel.BackColor = _corFundoMenu;
            CadastroBibliotecaPanel.Name = "CadastroBibliotecaPanel";
            CadastroBibliotecaPanel.Enabled = Publicas._usuario.AdministraBiblioteca;

            DivisoriaCadastroBibliotecaImagem = new PictureBox();
            DivisoriaCadastroBibliotecaImagem.Size = new Size(0, 4);
            DivisoriaCadastroBibliotecaImagem.Dock = DockStyle.Bottom;
            DivisoriaCadastroBibliotecaImagem.BackColor = _corFundoDivisao;

            Divisoria2CadastroBibliotecaImagem = new PictureBox();
            Divisoria2CadastroBibliotecaImagem.Size = new Size(1, 2);
            Divisoria2CadastroBibliotecaImagem.Dock = DockStyle.Right;
            Divisoria2CadastroBibliotecaImagem.BackColor = _corFundoDivisao; 

            CadastroBibliotecaSetaLabel = new Label();
            CadastroBibliotecaSetaLabel.AutoSize = false;
            CadastroBibliotecaSetaLabel.Size = new Size(20, 59);
            CadastroBibliotecaSetaLabel.Dock = DockStyle.Right;
            CadastroBibliotecaSetaLabel.Text = "6";
            CadastroBibliotecaSetaLabel.Font = new Font("Webdings", (float)12);
            CadastroBibliotecaSetaLabel.TextAlign = ContentAlignment.MiddleCenter;
            CadastroBibliotecaSetaLabel.Click += new System.EventHandler(this.CadastroBibliotecaSeta_Click);
            CadastroBibliotecaSetaLabel.MouseHover += new EventHandler(this.CadastroBibliotecaSetaLabel_MouseHover);
            CadastroBibliotecaSetaLabel.Name = "CadastroBibliotecaSetaLabel";
            CadastroBibliotecaSetaLabel.ForeColor = Color.WhiteSmoke;

            CadastroBibliotecaLabel = new Label();
            CadastroBibliotecaLabel.AutoSize = false;
            CadastroBibliotecaLabel.Size = new Size(_widthLabelMenuSistema, 0);
            CadastroBibliotecaLabel.Dock = DockStyle.Fill;
            CadastroBibliotecaLabel.Text = "Cadastros";
            CadastroBibliotecaLabel.Font = CorFontepadraoLabel.Font;
            CadastroBibliotecaLabel.ForeColor = Color.WhiteSmoke;
            CadastroBibliotecaLabel.TextAlign = ContentAlignment.MiddleRight;
            CadastroBibliotecaLabel.MouseHover += new EventHandler(this.CadastroBibliotecaLabel_MouseHover);
            CadastroBibliotecaLabel.Click += new System.EventHandler(this.CadastroBibliotecaSeta_Click);
            CadastroBibliotecaLabel.Name = "CadastroBibliotecaLabel";

            CadastroBibliotecaPanel.Controls.Add(CadastroBibliotecaLabel);
            CadastroBibliotecaPanel.Controls.Add(Divisoria2CadastroBibliotecaImagem);
            CadastroBibliotecaPanel.Controls.Add(CadastroBibliotecaSetaLabel);
            CadastroBibliotecaPanel.Controls.Add(DivisoriaCadastroBibliotecaImagem);

            SubMenuBiblioteca.Controls.Add(CadastroBibliotecaPanel);
            #endregion
        }

        private void FechaSubMenuBiblioteca()
        {
            FechaSubMenuCadastroBiblioteca();
            if (SubMenuBiblioteca != null)
            {
                SubMenuBiblioteca.Visible = false;
                this.Controls.Remove(SubMenuBiblioteca);
                SubMenuBiblioteca.Dispose();
                SubMenuBiblioteca = null;
            }
        }

        private void MudaSelecaoDeCoresSubMenuBiblioteca()
        {
            CadastroBibliotecaLabel.Font = new Font(CadastroBibliotecaLabel.Font, CadastroBibliotecaLabel.Font.Style & ~FontStyle.Bold);
            EmprestimoLabel.Font = new Font(EmprestimoLabel.Font, EmprestimoLabel.Font.Style & ~FontStyle.Bold);
            ReservaLabel.Font = new Font(ReservaLabel.Font, ReservaLabel.Font.Style & ~FontStyle.Bold);
            DevolucaoLabel.Font = new Font(DevolucaoLabel.Font, DevolucaoLabel.Font.Style & ~FontStyle.Bold);
            PerguntasLabel.Font = new Font(PerguntasLabel.Font, PerguntasLabel.Font.Style & ~FontStyle.Bold);
            AcompanhamentoLabel.Font = new Font(AcompanhamentoLabel.Font, AcompanhamentoLabel.Font.Style & ~FontStyle.Bold);
            RespostasLabel.Font = new Font(RespostasLabel.Font, RespostasLabel.Font.Style & ~FontStyle.Bold);
            PontuacaoLivrosLabel.Font = new Font(PontuacaoLivrosLabel.Font, PontuacaoLivrosLabel.Font.Style & ~FontStyle.Bold);

            CadastroBibliotecaLabel.BackColor = _corFundoMenu;
            EmprestimoLabel.BackColor = CadastroBibliotecaLabel.BackColor;
            ReservaLabel.BackColor = CadastroBibliotecaLabel.BackColor;
            DevolucaoLabel.BackColor = CadastroBibliotecaLabel.BackColor;
            PerguntasLabel.BackColor = CadastroBibliotecaLabel.BackColor;
            AcompanhamentoLabel.BackColor = CadastroBibliotecaLabel.BackColor;
            RespostasLabel.BackColor = CadastroBibliotecaLabel.BackColor;
            PontuacaoLivrosLabel.BackColor = CadastroBibliotecaLabel.BackColor;

            FavoritoAcompanhamentoImagem.BackColor = CadastroBibliotecaLabel.BackColor;
            FavoritoEmprestimoImagem.BackColor = CadastroBibliotecaLabel.BackColor;
            FavoritoReservaImagem.BackColor = CadastroBibliotecaLabel.BackColor;
            FavoritoDevolucaoImagem.BackColor = CadastroBibliotecaLabel.BackColor;
            FavoritoPerguntasImagem.BackColor = CadastroBibliotecaLabel.BackColor;
            FavoritoRespostasImagem.BackColor = CadastroBibliotecaLabel.BackColor;
            FavoritoPontuacaoLivrosImagem.BackColor = CadastroBibliotecaLabel.BackColor;

            CadastroBibliotecaSetaLabel.ForeColor = Color.WhiteSmoke;

            CadastroBibliotecaLabel.ForeColor = Color.WhiteSmoke;
            EmprestimoLabel.ForeColor = Color.WhiteSmoke;
            ReservaLabel.ForeColor = Color.WhiteSmoke;
            DevolucaoLabel.ForeColor = Color.WhiteSmoke;
            PerguntasLabel.ForeColor = Color.WhiteSmoke;
            AcompanhamentoLabel.ForeColor = Color.WhiteSmoke;
            RespostasLabel.ForeColor = Color.WhiteSmoke;
            PontuacaoLivrosLabel.ForeColor = Color.WhiteSmoke;

            CadastroBibliotecaSetaLabel.Text = "6";

        }

        private void CadastroBibliotecaLabel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubMenuBiblioteca();
            FechaSubMenuAvaliacaoDesempenho();
            FechaSubMenuCadastroBiblioteca();

            if (((Control)sender).Name.Contains("Acompanhamento"))
            {
                AcompanhamentoLabel.Font = new Font(AcompanhamentoLabel.Font, FontStyle.Bold);
                AcompanhamentoLabel.ForeColor = Publicas._fonteBotaoFocado;
                AcompanhamentoLabel.BackColor = _corMenuSelecionado;
                FavoritoAcompanhamentoImagem.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("CadastroBiblioteca"))
            {
                CadastroBibliotecaLabel.Font = new Font(CadastroBibliotecaLabel.Font, FontStyle.Bold);
                CadastroBibliotecaLabel.ForeColor = Publicas._fonteBotaoFocado;
                CadastroBibliotecaLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Emprestimo"))
            {
                EmprestimoLabel.Font = new Font(EmprestimoLabel.Font, FontStyle.Bold);
                EmprestimoLabel.ForeColor = Publicas._fonteBotaoFocado;
                EmprestimoLabel.BackColor = _corMenuSelecionado;
                FavoritoEmprestimoImagem.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Reserva"))
            {
                ReservaLabel.Font = new Font(ReservaLabel.Font, FontStyle.Bold);
                ReservaLabel.ForeColor = Publicas._fonteBotaoFocado;
                ReservaLabel.BackColor = _corMenuSelecionado;
                FavoritoReservaImagem.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Devolucao"))
            {
                DevolucaoLabel.Font = new Font(DevolucaoLabel.Font, FontStyle.Bold);
                DevolucaoLabel.ForeColor = Publicas._fonteBotaoFocado;
                DevolucaoLabel.BackColor = _corMenuSelecionado;
                FavoritoDevolucaoImagem.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Perguntas"))
            {
                PerguntasLabel.Font = new Font(PerguntasLabel.Font, FontStyle.Bold);
                PerguntasLabel.ForeColor = Publicas._fonteBotaoFocado;
                PerguntasLabel.BackColor = _corMenuSelecionado;
                FavoritoPerguntasImagem.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Respostas"))
            {
                RespostasLabel.Font = new Font(RespostasLabel.Font, FontStyle.Bold);
                RespostasLabel.ForeColor = Publicas._fonteBotaoFocado;
                RespostasLabel.BackColor = _corMenuSelecionado;
                FavoritoRespostasImagem.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Pontuacao"))
            {
                PontuacaoLivrosLabel.Font = new Font(PontuacaoLivrosLabel.Font, FontStyle.Bold);
                PontuacaoLivrosLabel.ForeColor = Publicas._fonteBotaoFocado;
                PontuacaoLivrosLabel.BackColor = _corMenuSelecionado;
                FavoritoPontuacaoLivrosImagem.BackColor = _corMenuSelecionado;
                return;
            }
        }

        private void CadastroBibliotecaSetaLabel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubMenuBiblioteca();
            FechaSubMenuAvaliacaoDesempenho();
            FechaSubMenuCadastroBiblioteca();

            if (((Control)sender).Name.Contains("CadastroBiblioteca"))
            {
                CadastroBibliotecaSetaLabel.ForeColor = Publicas._fonteBotaoFocado;
                CadastroBibliotecaSetaLabel.BackColor = _corMenuSelecionado;
                return;
            }
        }

        private void AcompanhamentoPanel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaBiblioteca;
            Biblioteca.Acompanhamento _tela = new Biblioteca.Acompanhamento();
            if (!Publicas._usuario.AdministraBiblioteca)
            {
                _tela.tabControlAdv1.TabPages[0].TabVisible = false;
                _tela.tabControlAdv1.TabPages[1].TabVisible = false;
                _tela.tabControlAdv1.TabPages[3].TabVisible = false;
            }
            _tela.ShowDialog();
            NomePadrao();

            //AtivaTimer(sender, e);
        }

        private void PontuacaoLivrosPanel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaBiblioteca;
            Biblioteca.Pontuacao _tela = new Biblioteca.Pontuacao();
            _tela.ColaboradorTextBox.Text = Publicas._idColaborador.ToString();

            _tela.ShowDialog();
            NomePadrao();
        }

        private void RespostasPanel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaBiblioteca;
            Biblioteca.Respostas _tela = new Biblioteca.Respostas();

            _tela.ShowDialog();
            NomePadrao();
        }

        private void PerguntasPanel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaBiblioteca;
            Biblioteca.Perguntas _tela = new Biblioteca.Perguntas();

            _tela.ShowDialog();
            NomePadrao();
        }

        private void DevolucaoPanel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaBiblioteca;
            Biblioteca.Devolucao _tela = new Biblioteca.Devolucao();

            _tela.ShowDialog();
            NomePadrao();
            //AtivaTimer(sender, e);
        }

        private void ReservaPanel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaBiblioteca;
            Biblioteca.Reserva _tela = new Biblioteca.Reserva();

            _tela.ShowDialog();
            NomePadrao();
            //AtivaTimer(sender, e);
        }

        private void EmprestimoPanel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaBiblioteca;
            Biblioteca.Emprestimos _tela = new Biblioteca.Emprestimos();

            _tela.ShowDialog();
            NomePadrao();
            //AtivaTimer(sender, e);
        }

        #region SubMenu Cadastro Biblioteca
        private void CadastroBibliotecaSeta_Click(object sender, EventArgs e)
        {
            CadastroBibliotecaSetaLabel.Text = "3";

            if (!Publicas._TemaBlack)
            {
                CadastroBibliotecaSetaLabel.ForeColor = Publicas._bordaEntrada;
                CadastroBibliotecaLabel.ForeColor = Publicas._bordaEntrada;
            }
            else
            {
                CadastroBibliotecaSetaLabel.ForeColor = Publicas._fonteMenuSelecionado;
                CadastroBibliotecaLabel.ForeColor = Publicas._fonteMenuSelecionado;
            }
            CadastroBibliotecaSetaLabel.BackColor = _corFundoMenu;

            if (SubMenuCadastroBiblioteca != null)
            {
                FechaSubMenuCadastroBiblioteca();
                return;
            }

            #region Cria estrutura 

            // Menu de fundo (onde agrupa os demais itens)
            SubMenuCadastroBiblioteca = new Panel();
            SubMenuCadastroBiblioteca.Size = new Size(155, _heidthMenuSistema * 2);
            SubMenuCadastroBiblioteca.Location = new Point(MenuSistemaPanel.Width + SubMenuRecursosHumanos.Width + SubMenuBiblioteca.Width + 6, AcessoAoMenuPanel.Height);
            SubMenuCadastroBiblioteca.BackColor = _corFundoDivisao;
            this.Controls.Add(SubMenuCadastroBiblioteca);
            SubMenuCadastroBiblioteca.BringToFront();
            SubMenuCadastroBiblioteca.Visible = true;
            #endregion

            #region Livros
            LivrosPanel = new Panel();
            LivrosPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            LivrosPanel.Dock = DockStyle.Top;
            LivrosPanel.BackColor = _corFundoMenu;

            LivrosPanel.Name = "LivrosPanel";

            DivisoriaLivrosImagem = new PictureBox();
            DivisoriaLivrosImagem.Size = new Size(0, 4);
            DivisoriaLivrosImagem.Dock = DockStyle.Bottom;
            DivisoriaLivrosImagem.BackColor = _corFundoDivisao;

            LivrosLabel = new Label();
            LivrosLabel.AutoSize = false;
            LivrosLabel.Size = new Size(_widthLabelMenuSistema, 0);
            LivrosLabel.Dock = DockStyle.Fill;
            LivrosLabel.Text = "Livros";
            LivrosLabel.Font = CorFontepadraoLabel.Font;
            LivrosLabel.ForeColor = Color.WhiteSmoke;
            LivrosLabel.TextAlign = ContentAlignment.MiddleRight;
            LivrosLabel.Click += new System.EventHandler(this.LivrosPanel_Click);
            LivrosLabel.MouseHover += new EventHandler(this.CategoriasLabel_MouseHover);
            LivrosLabel.Name = "LivrosLabel";

            FavoritoLivrosImagem = new PictureBox();
            FavoritoLivrosImagem.Size = new Size(10, 10);
            FavoritoLivrosImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoLivrosImagem.Name = LivrosLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoLivrosImagem.Name))
            {
                FavoritoLivrosImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoLivrosImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoLivrosImagem.Top = 35;
            FavoritoLivrosImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoLivrosImagem.Tag = LivrosLabel.Text;
            FavoritoLivrosImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoLivrosImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoLivrosImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoLivrosImagem.AccessibleName = "Biblioteca";

            LivrosPanel.Controls.Add(LivrosLabel);
            LivrosPanel.Controls.Add(DivisoriaLivrosImagem);
            LivrosPanel.Controls.Add(FavoritoLivrosImagem);
            FavoritoLivrosImagem.BringToFront();

            SubMenuCadastroBiblioteca.Controls.Add(LivrosPanel);
            #endregion

            #region Categorias
            CategoriasPanel = new Panel();
            CategoriasPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            CategoriasPanel.Dock = DockStyle.Top;
            CategoriasPanel.BackColor = _corFundoMenu;

            CategoriasPanel.Name = "CategoriasPanel";

            DivisoriaCategoriasImagem = new PictureBox();
            DivisoriaCategoriasImagem.Size = new Size(0, 4);
            DivisoriaCategoriasImagem.Dock = DockStyle.Bottom;
            DivisoriaCategoriasImagem.BackColor = _corFundoDivisao;

            CategoriasLabel = new Label();
            CategoriasLabel.AutoSize = false;
            CategoriasLabel.Size = new Size(_widthLabelMenuSistema, 0);
            CategoriasLabel.Dock = DockStyle.Fill;
            CategoriasLabel.Text = "Categorias";
            CategoriasLabel.Font = CorFontepadraoLabel.Font;
            CategoriasLabel.ForeColor = Color.WhiteSmoke;
            CategoriasLabel.TextAlign = ContentAlignment.MiddleRight;
            CategoriasLabel.Click += new System.EventHandler(this.CategoriasPanel_Click);
            CategoriasLabel.MouseHover += new EventHandler(this.CategoriasLabel_MouseHover);
            CategoriasLabel.Name = "CategoriasLabel";

            FavoritoCategoriaLivrosImagem = new PictureBox();
            FavoritoCategoriaLivrosImagem.Size = new Size(10, 10);
            FavoritoCategoriaLivrosImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoCategoriaLivrosImagem.Name = CategoriasLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoCategoriaLivrosImagem.Name))
            {
                FavoritoCategoriaLivrosImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoCategoriaLivrosImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoCategoriaLivrosImagem.Top = 35;
            FavoritoCategoriaLivrosImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoCategoriaLivrosImagem.Tag = CategoriasLabel.Text;
            FavoritoCategoriaLivrosImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoCategoriaLivrosImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoCategoriaLivrosImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoCategoriaLivrosImagem.AccessibleName = "Biblioteca";

            CategoriasPanel.Controls.Add(CategoriasLabel);
            CategoriasPanel.Controls.Add(DivisoriaCategoriasImagem);
            CategoriasPanel.Controls.Add(FavoritoCategoriaLivrosImagem);
            FavoritoCategoriaLivrosImagem.BringToFront();

            SubMenuCadastroBiblioteca.Controls.Add(CategoriasPanel);
            #endregion
        }

        private void FechaSubMenuCadastroBiblioteca()
        {
            if (SubMenuCadastroBiblioteca != null)
            {
                SubMenuCadastroBiblioteca.Visible = false;
                this.Controls.Remove(SubMenuCadastroBiblioteca);
                SubMenuCadastroBiblioteca.Dispose();
                SubMenuCadastroBiblioteca = null;
            }
        }

        private void MudaSelecaoDeCoresSubMenuCadastroBiblioteca()
        {
            CategoriasLabel.Font = new Font(CategoriasLabel.Font, CategoriasLabel.Font.Style & ~FontStyle.Bold);
            LivrosLabel.Font = new Font(LivrosLabel.Font, LivrosLabel.Font.Style & ~FontStyle.Bold);

            CategoriasLabel.BackColor = _corFundoMenu;
            LivrosLabel.BackColor = CategoriasLabel.BackColor;

            FavoritoCategoriaLivrosImagem.BackColor = CategoriasLabel.BackColor;
            FavoritoLivrosImagem.BackColor = CategoriasLabel.BackColor;

            CategoriasLabel.ForeColor = Color.WhiteSmoke;
            LivrosLabel.ForeColor = Color.WhiteSmoke;
        }

        private void CategoriasLabel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubMenuCadastroBiblioteca();
            FechaSubMenuAvaliacaoDesempenho();

            if (((Control)sender).Name.Contains("Categorias"))
            {
                CategoriasLabel.Font = new Font(CategoriasLabel.Font, FontStyle.Bold);
                CategoriasLabel.ForeColor = Publicas._fonteBotaoFocado;
                CategoriasLabel.BackColor = _corMenuSelecionado;
                FavoritoCategoriaLivrosImagem.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Livros"))
            {
                LivrosLabel.Font = new Font(LivrosLabel.Font, FontStyle.Bold);
                LivrosLabel.ForeColor = Publicas._fonteBotaoFocado;
                LivrosLabel.BackColor = _corMenuSelecionado;
                FavoritoLivrosImagem.BackColor = _corMenuSelecionado;
                return;
            }

        }

        private void CategoriasPanel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaBiblioteca;
            Biblioteca.Categorias _tela = new Biblioteca.Categorias();

            _tela.ShowDialog();
            NomePadrao();
            //AtivaTimer(sender, e);
        }

        private void LivrosPanel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaBiblioteca;
            Biblioteca.Livros _tela = new Biblioteca.Livros();

            _tela.ShowDialog();
            NomePadrao();
            //AtivaTimer(sender, e);
        }

        private void PontuacaoBibliotecaPanel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            //
            //AtivaTimer(sender, e);
        }
        #endregion

        #endregion

        #region SubMenu Curriculo
        private void CurriculoSetaLabel_Click(object sender, EventArgs e)
        {
            CurriculoSetaLabel.Text = "3";

            if (!Publicas._TemaBlack)
            {
                CurriculoSetaLabel.ForeColor = Publicas._bordaEntrada;
                CurriculoLabel.ForeColor = Publicas._bordaEntrada;
            }
            else
            {
                CurriculoSetaLabel.ForeColor = Publicas._fonteMenuSelecionado;
                CurriculoLabel.ForeColor = Publicas._fonteMenuSelecionado;
            }
            CurriculoSetaLabel.BackColor = _corFundoMenu;

            FechaSubMenuAvaliacaoDesempenho();

            if (SubMenuCurriculo != null)
            {
                FechaSubMenuCurriculo();
                return;
            }

            #region Cria estrutura 

            // Menu de fundo (onde agrupa os demais itens)
            SubMenuCurriculo = new Panel();
            SubMenuCurriculo.Size = new Size(155, _heidthMenuSistema * 2);
            SubMenuCurriculo.Location = new Point(MenuSistemaPanel.Width + SubMenuRecursosHumanos.Width + 4, AcessoAoMenuPanel.Height);
            SubMenuCurriculo.BackColor = _corFundoDivisao;
            this.Controls.Add(SubMenuCurriculo);
            SubMenuCurriculo.BringToFront();
            SubMenuCurriculo.Visible = true;
            #endregion

            // Os ultimos SubMenus deve ser incluidos primeiros
            #region Agenda
            AgendaCurriculoPanel = new Panel();
            AgendaCurriculoPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            AgendaCurriculoPanel.Dock = DockStyle.Top;
            AgendaCurriculoPanel.BackColor = _corFundoMenu;
            //AgendaCurriculoPanel.Enabled = Publicas._usuario.Administrador || Publicas._usuario.Departamento.Contains("RH") || Publicas._usuario.Departamento.ToUpper().Contains("Recursos Humanos".ToUpper());

            AgendaCurriculoPanel.Name = "AgendaCurriculoPanel";

            DivisoriaAgendaCurriculoImagem = new PictureBox();
            DivisoriaAgendaCurriculoImagem.Size = new Size(0, 4);
            DivisoriaAgendaCurriculoImagem.Dock = DockStyle.Bottom;
            DivisoriaAgendaCurriculoImagem.BackColor = _corFundoDivisao;

            AgendaCurriculoLabel = new Label();
            AgendaCurriculoLabel.AutoSize = false;
            AgendaCurriculoLabel.Size = new Size(_widthLabelMenuSistema, 0);
            AgendaCurriculoLabel.Dock = DockStyle.Fill;
            AgendaCurriculoLabel.Text = "Seleção";
            AgendaCurriculoLabel.Font = CorFontepadraoLabel.Font;
            AgendaCurriculoLabel.ForeColor = Color.WhiteSmoke;
            AgendaCurriculoLabel.TextAlign = ContentAlignment.MiddleRight;
            AgendaCurriculoLabel.Click += new System.EventHandler(this.AgendaCurriculoPanel_Click);
            AgendaCurriculoLabel.MouseHover += new EventHandler(this.CadastroCurriculoLabel_MouseHover);
            AgendaCurriculoLabel.Name = "AgendaCurriculoLabel";

            FavoritoAgendaCurriculoImagem = new PictureBox();
            FavoritoAgendaCurriculoImagem.Size = new Size(10, 10);
            FavoritoAgendaCurriculoImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoAgendaCurriculoImagem.Name = AgendaCurriculoLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoAgendaCurriculoImagem.Name))
            {
                FavoritoAgendaCurriculoImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoAgendaCurriculoImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoAgendaCurriculoImagem.Top = 35;
            FavoritoAgendaCurriculoImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoAgendaCurriculoImagem.Tag = AgendaCurriculoLabel.Text;
            FavoritoAgendaCurriculoImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoAgendaCurriculoImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoAgendaCurriculoImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoAgendaCurriculoImagem.AccessibleName = "Recursos Humanos";

            AgendaCurriculoPanel.Controls.Add(AgendaCurriculoLabel);
            AgendaCurriculoPanel.Controls.Add(DivisoriaAgendaCurriculoImagem);
            AgendaCurriculoPanel.Controls.Add(FavoritoAgendaCurriculoImagem);
            FavoritoAgendaCurriculoImagem.BringToFront();
            SubMenuCurriculo.Controls.Add(AgendaCurriculoPanel);
            #endregion

            #region CadastroCurriculo
            CadastroCurriculoPanel = new Panel();
            CadastroCurriculoPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            CadastroCurriculoPanel.Dock = DockStyle.Top;
            CadastroCurriculoPanel.BackColor = _corFundoMenu;
            CadastroCurriculoPanel.Name = "CadastroCurriculoPanel";
            //CadastroCurriculoPanel.Enabled = Publicas._usuario.Administrador;

            DivisoriaCadastroCurriculoImagem = new PictureBox();
            DivisoriaCadastroCurriculoImagem.Size = new Size(0, 4);
            DivisoriaCadastroCurriculoImagem.Dock = DockStyle.Bottom;
            DivisoriaCadastroCurriculoImagem.BackColor = _corFundoDivisao;

            Divisoria2CadastroCurriculoImagem = new PictureBox();
            Divisoria2CadastroCurriculoImagem.Size = new Size(1, 2);
            Divisoria2CadastroCurriculoImagem.Dock = DockStyle.Right;
            Divisoria2CadastroCurriculoImagem.BackColor = _corFundoDivisao; 

            CadastroCurriculoSetaLabel = new Label();
            CadastroCurriculoSetaLabel.AutoSize = false;
            CadastroCurriculoSetaLabel.Size = new Size(20, 59);
            CadastroCurriculoSetaLabel.Dock = DockStyle.Right;
            CadastroCurriculoSetaLabel.Text = "6";
            CadastroCurriculoSetaLabel.Font = new Font("Webdings", (float)12);
            CadastroCurriculoSetaLabel.TextAlign = ContentAlignment.MiddleCenter;
            CadastroCurriculoSetaLabel.Click += new System.EventHandler(this.CadastroCurriculoSeta_Click);
            CadastroCurriculoSetaLabel.MouseHover += new EventHandler(this.CadastroCurriculoSetaLabel_MouseHover);
            CadastroCurriculoSetaLabel.Name = "CadastroCurriculoSetaLabel";
            CadastroCurriculoSetaLabel.ForeColor = Color.WhiteSmoke;

            CadastroCurriculoLabel = new Label();
            CadastroCurriculoLabel.AutoSize = false;
            CadastroCurriculoLabel.Size = new Size(_widthLabelMenuSistema, 0);
            CadastroCurriculoLabel.Dock = DockStyle.Fill;
            CadastroCurriculoLabel.Text = "Cadastros";
            CadastroCurriculoLabel.Font = CorFontepadraoLabel.Font;
            CadastroCurriculoLabel.ForeColor = Color.WhiteSmoke;
            CadastroCurriculoLabel.TextAlign = ContentAlignment.MiddleRight;
            CadastroCurriculoLabel.MouseHover += new EventHandler(this.CadastroCurriculoLabel_MouseHover);
            CadastroCurriculoLabel.Click += new System.EventHandler(this.CadastroCurriculoSeta_Click);
            CadastroCurriculoLabel.Name = "CadastroCurriculoLabel";

            CadastroCurriculoPanel.Controls.Add(CadastroCurriculoLabel);
            CadastroCurriculoPanel.Controls.Add(Divisoria2CadastroCurriculoImagem);
            CadastroCurriculoPanel.Controls.Add(CadastroCurriculoSetaLabel);
            CadastroCurriculoPanel.Controls.Add(DivisoriaCadastroCurriculoImagem);

            SubMenuCurriculo.Controls.Add(CadastroCurriculoPanel);
            #endregion
        }

        private void FechaSubMenuCurriculo()
        {
            FechaSubMenuCadastroCurriculo();
            if (SubMenuCurriculo != null)
            {
                SubMenuCurriculo.Visible = false;
                this.Controls.Remove(SubMenuCurriculo);
                SubMenuCurriculo.Dispose();
                SubMenuCurriculo = null;
            }
        }

        private void MudaSelecaoDeCoresSubMenuCurriculo()
        {
            CadastroCurriculoLabel.Font = new Font(CadastroCurriculoLabel.Font, CadastroCurriculoLabel.Font.Style & ~FontStyle.Bold);
            AgendaCurriculoLabel.Font = new Font(AgendaCurriculoLabel.Font, AgendaCurriculoLabel.Font.Style & ~FontStyle.Bold);

            CadastroCurriculoLabel.BackColor = _corFundoMenu;
            AgendaCurriculoLabel.BackColor = CadastroCurriculoLabel.BackColor;
            CadastroCurriculoSetaLabel.BackColor = CadastroCurriculoLabel.BackColor;

            FavoritoAgendaCurriculoImagem.BackColor = CadastroCurriculoLabel.BackColor;

            CadastroCurriculoSetaLabel.ForeColor = Color.WhiteSmoke;
            CadastroCurriculoLabel.ForeColor = Color.WhiteSmoke;
            AgendaCurriculoLabel.ForeColor = Color.WhiteSmoke;

            CadastroCurriculoSetaLabel.Text = "6";

        }

        private void CadastroCurriculoLabel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubMenuCurriculo();
            FechaSubMenuAvaliacaoDesempenho();
            FechaSubMenuCadastroCurriculo();

            if (((Control)sender).Name.Contains("Agenda"))
            {
                AgendaCurriculoLabel.Font = new Font(AgendaCurriculoLabel.Font, FontStyle.Bold);
                AgendaCurriculoLabel.ForeColor = Publicas._fonteBotaoFocado;
                AgendaCurriculoLabel.BackColor = _corMenuSelecionado;
                FavoritoAgendaCurriculoImagem.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Cadastro"))
            {
                CadastroCurriculoLabel.Font = new Font(CadastroCurriculoLabel.Font, FontStyle.Bold);
                CadastroCurriculoLabel.ForeColor = Publicas._fonteBotaoFocado;
                CadastroCurriculoLabel.BackColor = _corMenuSelecionado;
                return;
            }
        }

        private void CadastroCurriculoSetaLabel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubMenuCurriculo();
            FechaSubMenuAvaliacaoDesempenho();
            FechaSubMenuCadastroCurriculo();

            if (((Control)sender).Name.Contains("Cadastro"))
            {
                CadastroCurriculoSetaLabel.ForeColor = Publicas._fonteBotaoFocado;
                CadastroCurriculoSetaLabel.BackColor = _corMenuSelecionado;
                return;
            }
        }

        private void AgendaCurriculoPanel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaProcessoSeletivo;
            ProcessoSeletivo.AcompanhamentoSelecao _tela = new ProcessoSeletivo.AcompanhamentoSelecao();
            _tela.Size = new Size(this.Width - 5, this.Height - (tituloPanel.Height + panel2.Height + 2));

            _tela.ShowDialog();
            NomePadrao();

        }

        private void CadastroCurriculoSeta_Click(object sender, EventArgs e)
        {
            CadastroCurriculoSetaLabel.Text = "3";

            if (!Publicas._TemaBlack)
            {
                CadastroCurriculoSetaLabel.ForeColor = Publicas._bordaEntrada;
                CadastroCurriculoLabel.ForeColor = Publicas._bordaEntrada;
            }
            else
            {
                CadastroCurriculoSetaLabel.ForeColor = Publicas._fonteMenuSelecionado;
                CadastroCurriculoLabel.ForeColor = Publicas._fonteMenuSelecionado;
            }
            CadastroCurriculoSetaLabel.BackColor = _corFundoMenu;

            if (SubMenuCadastroCurriculo != null)
            {
                FechaSubMenuCadastroCurriculo();
                return;
            }

            #region Cria estrutura 

            // Menu de fundo (onde agrupa os demais itens)
            SubMenuCadastroCurriculo = new Panel();
            SubMenuCadastroCurriculo.Size = new Size(155, _heidthMenuSistema * 2);
            SubMenuCadastroCurriculo.Location = new Point(MenuSistemaPanel.Width + SubMenuRecursosHumanos.Width + SubMenuCurriculo.Width + 6, AcessoAoMenuPanel.Height);
            SubMenuCadastroCurriculo.BackColor = _corFundoDivisao;
            this.Controls.Add(SubMenuCadastroCurriculo);
            SubMenuCadastroCurriculo.BringToFront();
            SubMenuCadastroCurriculo.Visible = true;
            #endregion

            #region Vagas
            VagasPanel = new Panel();
            VagasPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            VagasPanel.Dock = DockStyle.Top;
            VagasPanel.BackColor = _corFundoMenu;

            VagasPanel.Name = "VagasPanel";

            DivisoriaVagasImagem = new PictureBox();
            DivisoriaVagasImagem.Size = new Size(0, 4);
            DivisoriaVagasImagem.Dock = DockStyle.Bottom;
            DivisoriaVagasImagem.BackColor = _corFundoDivisao;

            VagasLabel = new Label();
            VagasLabel.AutoSize = false;
            VagasLabel.Size = new Size(_widthLabelMenuSistema, 0);
            VagasLabel.Dock = DockStyle.Fill;
            VagasLabel.Text = "Vagas";
            VagasLabel.Font = CorFontepadraoLabel.Font;
            VagasLabel.ForeColor = Color.WhiteSmoke;
            VagasLabel.TextAlign = ContentAlignment.MiddleRight;
            VagasLabel.Click += new System.EventHandler(this.VagasPanel_Click);
            VagasLabel.MouseHover += new EventHandler(this.VagasLabel_MouseHover);
            VagasLabel.Name = "VagasLabel";

            FavoritoVagasImagem = new PictureBox();
            FavoritoVagasImagem.Size = new Size(10, 10);
            FavoritoVagasImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoVagasImagem.Name = VagasLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoVagasImagem.Name))
            {
                FavoritoVagasImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoVagasImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoVagasImagem.Top = 35;
            FavoritoVagasImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoVagasImagem.Tag = VagasLabel.Text;
            FavoritoVagasImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoVagasImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoVagasImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoVagasImagem.AccessibleName = "Recursos Humanos";

            VagasPanel.Controls.Add(VagasLabel);
            VagasPanel.Controls.Add(DivisoriaVagasImagem);
            VagasPanel.Controls.Add(FavoritoVagasImagem);
            FavoritoVagasImagem.BringToFront();

            SubMenuCadastroCurriculo.Controls.Add(VagasPanel);
            #endregion

            #region Candidatos
            CandidatosPanel = new Panel();
            CandidatosPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            CandidatosPanel.Dock = DockStyle.Top;
            CandidatosPanel.BackColor = _corFundoMenu;

            CandidatosPanel.Name = "CandidatosPanel";

            DivisoriaCandidatosImagem = new PictureBox();
            DivisoriaCandidatosImagem.Size = new Size(0, 4);
            DivisoriaCandidatosImagem.Dock = DockStyle.Bottom;
            DivisoriaCandidatosImagem.BackColor = _corFundoDivisao;

            CandidatosLabel = new Label();
            CandidatosLabel.AutoSize = false;
            CandidatosLabel.Size = new Size(_widthLabelMenuSistema, 0);
            CandidatosLabel.Dock = DockStyle.Fill;
            CandidatosLabel.Text = "Candidatos";
            CandidatosLabel.Font = CorFontepadraoLabel.Font;
            CandidatosLabel.ForeColor = Color.WhiteSmoke;
            CandidatosLabel.TextAlign = ContentAlignment.MiddleRight;
            CandidatosLabel.Click += new System.EventHandler(this.CandidatosPanel_Click);
            CandidatosLabel.MouseHover += new EventHandler(this.VagasLabel_MouseHover);
            CandidatosLabel.Name = "CandidatosLabel";

            FavoritoCandidatosImagem = new PictureBox();
            FavoritoCandidatosImagem.Size = new Size(10, 10);
            FavoritoCandidatosImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoCandidatosImagem.Name = CandidatosLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoCandidatosImagem.Name))
            {
                FavoritoCandidatosImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoCandidatosImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoCandidatosImagem.Top = 35;
            FavoritoCandidatosImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoCandidatosImagem.Tag = CandidatosLabel.Text;
            FavoritoCandidatosImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoCandidatosImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoCandidatosImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoCandidatosImagem.AccessibleName = "Recursos Humanos";

            CandidatosPanel.Controls.Add(CandidatosLabel);
            CandidatosPanel.Controls.Add(DivisoriaCandidatosImagem);
            CandidatosPanel.Controls.Add(FavoritoCandidatosImagem);
            FavoritoCandidatosImagem.BringToFront();

            SubMenuCadastroCurriculo.Controls.Add(CandidatosPanel);
            #endregion
        }

        #region SubMenu Cadastro
        private void FechaSubMenuCadastroCurriculo()
        {
            if (SubMenuCadastroCurriculo != null)
            {
                SubMenuCadastroCurriculo.Visible = false;
                this.Controls.Remove(SubMenuCadastroCurriculo);
                SubMenuCadastroCurriculo.Dispose();
                SubMenuCadastroCurriculo = null;
            }
        }

        private void VagasLabel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubMenuCadastro();

            if (((Control)sender).Name.Contains("Candidatos"))
            {
                CandidatosLabel.Font = new Font(CandidatosLabel.Font, FontStyle.Bold);
                CandidatosLabel.ForeColor = Publicas._fonteBotaoFocado;
                CandidatosLabel.BackColor = _corMenuSelecionado;
                FavoritoCandidatosImagem.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Vagas"))
            {
                VagasLabel.Font = new Font(VagasLabel.Font, FontStyle.Bold);
                VagasLabel.ForeColor = Publicas._fonteBotaoFocado;
                VagasLabel.BackColor = _corMenuSelecionado;
                return;
            }
        }

        private void MudaSelecaoDeCoresSubMenuCadastro()
        {
            VagasLabel.Font = new Font(VagasLabel.Font, VagasLabel.Font.Style & ~FontStyle.Bold);
            CandidatosLabel.Font = new Font(CandidatosLabel.Font, CandidatosLabel.Font.Style & ~FontStyle.Bold);

            VagasLabel.BackColor = _corFundoMenu;
            CandidatosLabel.BackColor = VagasLabel.BackColor;

            FavoritoCandidatosImagem.BackColor = VagasLabel.BackColor;

            VagasLabel.ForeColor = Color.WhiteSmoke;
            CandidatosLabel.ForeColor = Color.WhiteSmoke;
        }

        private void VagasPanel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaProcessoSeletivo;
            ProcessoSeletivo.Vagas _tela = new ProcessoSeletivo.Vagas();

            _tela.ShowDialog();
            NomePadrao();

            //AtivaTimer(sender, e);
        }

        private void CandidatosPanel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaProcessoSeletivo;
            ProcessoSeletivo.Candidatos _tela = new ProcessoSeletivo.Candidatos();
            _tela.ShowDialog();
            NomePadrao();

            //AtivaTimer(sender, e);
        }
        #endregion
        #endregion

        #region SubMenu Corridas
        private void CorridasSetaLabel_Click(object sender, EventArgs e)
        {
            CorridasSetaLabel.Text = "3";

            if (!Publicas._TemaBlack)
            {
                CorridasSetaLabel.ForeColor = Publicas._bordaEntrada;
                CorridasLabel.ForeColor = Publicas._bordaEntrada;
            }
            else
            {
                CorridasSetaLabel.ForeColor = Publicas._fonteMenuSelecionado;
                CorridasLabel.ForeColor = Publicas._fonteMenuSelecionado;
            }
            CorridasSetaLabel.BackColor = _corFundoMenu;

            FechaSubMenuAvaliacaoDesempenho();
            FechaSubMenuBiblioteca();
            FechaSubMenuCurriculo();
            FechaSubMenuFerias();

            if (SubMenuCorridas != null)
            {
                FechaSubMenuCorridas();
                return;
            }

            #region Cria estrutura 

            // Menu de fundo (onde agrupa os demais itens)
            SubMenuCorridas = new Panel();
            SubMenuCorridas.Size = new Size(155, _heidthMenuSistema * 3);
            SubMenuCorridas.Location = new Point(MenuSistemaPanel.Width + MenuTIPanel.Width + 5, AcessoAoMenuPanel.Height);
            SubMenuCorridas.BackColor = _corFundoDivisao;
            this.Controls.Add(SubMenuCorridas);
            SubMenuCorridas.BringToFront();
            SubMenuCorridas.Visible = true;
            #endregion

            // Os ultimos SubMenus deve ser incluidos primeiros
            #region Resultado
            ResultadoPanel = new Panel();
            ResultadoPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            ResultadoPanel.Dock = DockStyle.Top;
            ResultadoPanel.BackColor = _corFundoMenu;

            ResultadoPanel.Name = "ResultadoPanel";

            DivisoriaResultadoImagem = new PictureBox();
            DivisoriaResultadoImagem.Size = new Size(0, 4);
            DivisoriaResultadoImagem.Dock = DockStyle.Bottom;
            DivisoriaResultadoImagem.BackColor = _corFundoDivisao;

            ResultadoLabel = new Label();
            ResultadoLabel.AutoSize = false;
            ResultadoLabel.Size = new Size(_widthLabelMenuSistema, 0);
            ResultadoLabel.Dock = DockStyle.Fill;
            ResultadoLabel.Text = "Resultados";
            ResultadoLabel.Font = CorFontepadraoLabel.Font;
            ResultadoLabel.ForeColor = Color.WhiteSmoke;
            ResultadoLabel.TextAlign = ContentAlignment.MiddleRight;
            ResultadoLabel.Click += new System.EventHandler(this.ResultadoPanel_Click);
            ResultadoLabel.MouseHover += new EventHandler(this.CadastroCorridasLabel_MouseHover);
            ResultadoLabel.Name = "ResultadoLabel";

            ResultadoPanel.Controls.Add(ResultadoLabel);
            ResultadoPanel.Controls.Add(DivisoriaResultadoImagem);

            SubMenuCorridas.Controls.Add(ResultadoPanel);
            #endregion

            #region Participantes
            ParticipantesPanel = new Panel();
            ParticipantesPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            ParticipantesPanel.Dock = DockStyle.Top;
            ParticipantesPanel.BackColor = _corFundoMenu;
            ParticipantesPanel.Name = "ParticipantesPanel";
            ParticipantesPanel.Enabled = Publicas._usuario.AdministraCorridas;

            DivisoriaParticipantesImagem = new PictureBox();
            DivisoriaParticipantesImagem.Size = new Size(0, 4);
            DivisoriaParticipantesImagem.Dock = DockStyle.Bottom;
            DivisoriaParticipantesImagem.BackColor = _corFundoDivisao;

            ParticipantesLabel = new Label();
            ParticipantesLabel.AutoSize = false;
            ParticipantesLabel.Size = new Size(_widthLabelMenuSistema, 0);
            ParticipantesLabel.Dock = DockStyle.Fill;
            ParticipantesLabel.Text = "Participantes";
            ParticipantesLabel.Font = CorFontepadraoLabel.Font;
            ParticipantesLabel.ForeColor = Color.WhiteSmoke;
            ParticipantesLabel.TextAlign = ContentAlignment.MiddleRight;
            ParticipantesLabel.Click += new System.EventHandler(this.ParticipantesPanel_Click);
            ParticipantesLabel.MouseHover += new EventHandler(this.CadastroCorridasLabel_MouseHover);
            ParticipantesLabel.Name = "ParticipantesLabel";

            ParticipantesPanel.Controls.Add(ParticipantesLabel);
            //ParticipantesPanel.Controls.Add(ParticipantesImagem);
            ParticipantesPanel.Controls.Add(DivisoriaParticipantesImagem);

            SubMenuCorridas.Controls.Add(ParticipantesPanel);
            #endregion

            #region Cadastro
            CadastroCorridasPanel = new Panel();
            CadastroCorridasPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            CadastroCorridasPanel.Dock = DockStyle.Top;
            CadastroCorridasPanel.BackColor = _corFundoMenu;
            CadastroCorridasPanel.Name = "CadastroCorridasPanel";
            CadastroCorridasPanel.Enabled = Publicas._usuario.AdministraCorridas;

            DivisoriaCadastroCorridasImagem = new PictureBox();
            DivisoriaCadastroCorridasImagem.Size = new Size(0, 4);
            DivisoriaCadastroCorridasImagem.Dock = DockStyle.Bottom;
            DivisoriaCadastroCorridasImagem.BackColor = _corFundoDivisao;

            CadastroCorridasLabel = new Label();
            CadastroCorridasLabel.AutoSize = false;
            CadastroCorridasLabel.Size = new Size(_widthLabelMenuSistema, 0);
            CadastroCorridasLabel.Dock = DockStyle.Fill;
            CadastroCorridasLabel.Text = "Cadastro";
            CadastroCorridasLabel.Font = CorFontepadraoLabel.Font;
            CadastroCorridasLabel.ForeColor = Color.WhiteSmoke;
            CadastroCorridasLabel.TextAlign = ContentAlignment.MiddleRight;
            CadastroCorridasLabel.Click += new System.EventHandler(this.CadastroCorridasPanel_Click);
            CadastroCorridasLabel.MouseHover += new EventHandler(this.CadastroCorridasLabel_MouseHover);
            CadastroCorridasLabel.Name = "CadastroCorridasLabel";

            CadastroCorridasPanel.Controls.Add(CadastroCorridasLabel);
            //CadastroCorridasPanel.Controls.Add(CadastroCorridasImagem);
            CadastroCorridasPanel.Controls.Add(DivisoriaCadastroCorridasImagem);

            SubMenuCorridas.Controls.Add(CadastroCorridasPanel);
            #endregion
        }

        private void FechaSubMenuCorridas()
        {
            if (SubMenuCorridas != null)
            {
                SubMenuCorridas.Visible = false;
                this.Controls.Remove(SubMenuCorridas);
                SubMenuCorridas.Dispose();
                SubMenuCorridas = null;
            }
        }

        private void MudaSelecaoDeCoresSubMenuCorridas()
        {
            CadastroCorridasLabel.Font = new Font(CadastroCorridasLabel.Font, CadastroCorridasLabel.Font.Style & ~FontStyle.Bold);
            ParticipantesLabel.Font = new Font(ParticipantesLabel.Font, ParticipantesLabel.Font.Style & ~FontStyle.Bold);
            ResultadoLabel.Font = new Font(ResultadoLabel.Font, ResultadoLabel.Font.Style & ~FontStyle.Bold);

            CadastroCorridasLabel.BackColor = _corFundoMenu;
            ParticipantesLabel.BackColor = CadastroCorridasLabel.BackColor;
            ResultadoLabel.BackColor = CadastroCorridasLabel.BackColor;

            CadastroCorridasLabel.ForeColor = Color.WhiteSmoke;
            ParticipantesLabel.ForeColor = Color.WhiteSmoke;
            ResultadoLabel.ForeColor = Color.WhiteSmoke;
        }

        private void CadastroCorridasLabel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubMenuCorridas();
            FechaSubMenuAvaliacaoDesempenho();
            FechaSubMenuBiblioteca();
            FechaSubMenuCurriculo();
            FechaSubMenuFerias();

            if (((Control)sender).Name.Contains("Cadastro"))
            {
                CadastroCorridasLabel.Font = new Font(CadastroCorridasLabel.Font, FontStyle.Bold);
                CadastroCorridasLabel.ForeColor = Publicas._fonteBotaoFocado;
                CadastroCorridasLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Participantes"))
            {
                ParticipantesLabel.Font = new Font(ParticipantesLabel.Font, FontStyle.Bold);
                ParticipantesLabel.ForeColor = Publicas._fonteBotaoFocado;
                ParticipantesLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Resultado"))
            {
                ResultadoLabel.Font = new Font(ResultadoLabel.Font, FontStyle.Bold);
                ResultadoLabel.ForeColor = Publicas._fonteBotaoFocado;
                ResultadoLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Reserva"))
            {
                ReservaLabel.Font = new Font(ReservaLabel.Font, FontStyle.Bold);
                ReservaLabel.ForeColor = Publicas._fonteBotaoFocado;
                ReservaLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Devolucao"))
            {
                DevolucaoLabel.Font = new Font(DevolucaoLabel.Font, FontStyle.Bold);
                DevolucaoLabel.ForeColor = Publicas._fonteBotaoFocado;
                DevolucaoLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Perguntas"))
            {
                PerguntasLabel.Font = new Font(PerguntasLabel.Font, FontStyle.Bold);
                PerguntasLabel.ForeColor = Publicas._fonteBotaoFocado;
                PerguntasLabel.BackColor = _corMenuSelecionado;
                return;
            }
        }

        private void CadastroCorridasPanel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaCorridas;
            new Cadastros.Corridas().ShowDialog();
            NomePadrao();

            //AtivaTimer(sender, e);
        }

        private void ParticipantesPanel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaCorridas;
            new Cadastros.Participantes().ShowDialog();
            NomePadrao();

            //AtivaTimer(sender, e);
        }

        private void ResultadoPanel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaCorridas;
            new Cadastros.ResultadoDasCorridas().ShowDialog();
            NomePadrao();

            //AtivaTimer(sender, e);
        }
        #endregion

        #region SubMenu Torneios
        private void TorneiosSetaLabel_Click(object sender, EventArgs e)
        {
            TorneiosSetaLabel.Text = "3";

            if (!Publicas._TemaBlack)
            {
                TorneiosSetaLabel.ForeColor = Publicas._bordaEntrada;
                TorneiosLabel.ForeColor = Publicas._bordaEntrada;
            }
            else
            {
                TorneiosSetaLabel.ForeColor = Publicas._fonteMenuSelecionado;
                TorneiosLabel.ForeColor = Publicas._fonteMenuSelecionado;
            }

            FechaSubMenuAvaliacaoDesempenho();
            FechaSubMenuBiblioteca();

            if (SubMenuTorneios != null)
            {
                FechaSubMenuTorneios();
                return;
            }

            #region Cria estrutura 

            // Menu de fundo (onde agrupa os demais itens)
            SubMenuTorneios = new Panel();
            SubMenuTorneios.Size = new Size(155, _heidthMenuSistema * 2);
            SubMenuTorneios.Location = new Point(MenuSistemaPanel.Width + SubMenuRecursosHumanos.Width + 4, AcessoAoMenuPanel.Height);
            SubMenuTorneios.BackColor = _corFundoDivisao;
            this.Controls.Add(SubMenuTorneios);
            SubMenuTorneios.BringToFront();
            SubMenuTorneios.Visible = true;
            #endregion

            // Os ultimos SubMenus deve ser incluidos primeiros
            //#region Resultado
            //ResultadoPanel = new Panel();
            //ResultadoPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            //ResultadoPanel.Dock = DockStyle.Top;
            //ResultadoPanel.BackColor = _corFundoMenu;

            //ResultadoPanel.Name = "ResultadoPanel";

            //DivisoriaResultadoImagem = new PictureBox();
            //DivisoriaResultadoImagem.Size = new Size(0, 4);
            //DivisoriaResultadoImagem.Dock = DockStyle.Bottom; 
            //DivisoriaResultadoImagem.BackColor = _corFundoDivisao;

            //ResultadoLabel = new Label();
            //ResultadoLabel.AutoSize = false;
            //ResultadoLabel.Size = new Size(_widthLabelMenuSistema, 0);
            //ResultadoLabel.Dock = DockStyle.Fill;
            //ResultadoLabel.Text = "Resultados";
            //ResultadoLabel.Font = CorFontepadraoLabel.Font;
            //ResultadoLabel.ForeColor = Color.WhiteSmoke;
            //ResultadoLabel.TextAlign = ContentAlignment.MiddleRight;
            //ResultadoLabel.Click += new System.EventHandler(this.ResultadoPanel_Click);
            //ResultadoLabel.MouseHover += new EventHandler(this.CadastroTorneiosLabel_MouseHover);
            //ResultadoLabel.Name = "ResultadoLabel";

            //ResultadoPanel.Controls.Add(ResultadoLabel);
            //ResultadoPanel.Controls.Add(DivisoriaResultadoImagem);

            //SubMenuTorneios.Controls.Add(ResultadoPanel);
            //#endregion

            #region Posição Torneio
            ParticipantesTorneioPanel = new Panel();
            ParticipantesTorneioPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            ParticipantesTorneioPanel.Dock = DockStyle.Top;
            ParticipantesTorneioPanel.BackColor = _corFundoMenu;
            ParticipantesTorneioPanel.Name = "ParticipantesTorneioPanel";
            //ParticipantesTorneioPanel.Enabled = Publicas._usuario.AdministraTorneios;

            DivisoriaParticipantesTorneioImagem = new PictureBox();
            DivisoriaParticipantesTorneioImagem.Size = new Size(0, 4);
            DivisoriaParticipantesTorneioImagem.Dock = DockStyle.Bottom;
            DivisoriaParticipantesTorneioImagem.BackColor = _corFundoDivisao;

            ParticipantesTorneioLabel = new Label();
            ParticipantesTorneioLabel.AutoSize = false;
            ParticipantesTorneioLabel.Size = new Size(_widthLabelMenuSistema, 0);
            ParticipantesTorneioLabel.Dock = DockStyle.Fill;
            ParticipantesTorneioLabel.Text = "Participantes";
            ParticipantesTorneioLabel.Font = CorFontepadraoLabel.Font;
            ParticipantesTorneioLabel.ForeColor = Color.WhiteSmoke;
            ParticipantesTorneioLabel.TextAlign = ContentAlignment.MiddleRight;
            ParticipantesTorneioLabel.Click += new System.EventHandler(this.ParticipantesTorneioPanel_Click);
            ParticipantesTorneioLabel.MouseHover += new EventHandler(this.CadastroTorneiosLabel_MouseHover);
            ParticipantesTorneioLabel.Name = "ParticipantesTorneioLabel";

            ParticipantesTorneioPanel.Controls.Add(ParticipantesTorneioLabel);
            //ParticipantesTorneioPanel.Controls.Add(ParticipantesTorneioImagem);
            ParticipantesTorneioPanel.Controls.Add(DivisoriaParticipantesTorneioImagem);

            SubMenuTorneios.Controls.Add(ParticipantesTorneioPanel);
            #endregion

            #region Cadastro
            CadastroTorneiosPanel = new Panel();
            CadastroTorneiosPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            CadastroTorneiosPanel.Dock = DockStyle.Top;
            CadastroTorneiosPanel.BackColor = _corFundoMenu;
            CadastroTorneiosPanel.Name = "CadastroTorneiosPanel";
            CadastroTorneiosPanel.Enabled = Publicas._usuario.AdministraCorridas;

            DivisoriaCadastroTorneiosImagem = new PictureBox();
            DivisoriaCadastroTorneiosImagem.Size = new Size(0, 4);
            DivisoriaCadastroTorneiosImagem.Dock = DockStyle.Bottom;
            DivisoriaCadastroTorneiosImagem.BackColor = _corFundoDivisao;

            CadastroTorneiosLabel = new Label();
            CadastroTorneiosLabel.AutoSize = false;
            CadastroTorneiosLabel.Size = new Size(_widthLabelMenuSistema, 0);
            CadastroTorneiosLabel.Dock = DockStyle.Fill;
            CadastroTorneiosLabel.Text = "Cadastro";
            CadastroTorneiosLabel.Font = CorFontepadraoLabel.Font;
            CadastroTorneiosLabel.ForeColor = Color.WhiteSmoke;
            CadastroTorneiosLabel.TextAlign = ContentAlignment.MiddleRight;
            CadastroTorneiosLabel.Click += new System.EventHandler(this.CadastroTorneiosPanel_Click);
            CadastroTorneiosLabel.MouseHover += new EventHandler(this.CadastroTorneiosLabel_MouseHover);
            CadastroTorneiosLabel.Name = "CadastroTorneiosLabel";

            CadastroTorneiosPanel.Controls.Add(CadastroTorneiosLabel);
            //CadastroTorneiosPanel.Controls.Add(CadastroTorneiosImagem);
            CadastroTorneiosPanel.Controls.Add(DivisoriaCadastroTorneiosImagem);

            SubMenuTorneios.Controls.Add(CadastroTorneiosPanel);
            #endregion
        }

        private void FechaSubMenuTorneios()
        {
            if (SubMenuTorneios != null)
            {
                SubMenuTorneios.Visible = false;
                this.Controls.Remove(SubMenuTorneios);
                SubMenuTorneios.Dispose();
                SubMenuTorneios = null;
            }
        }

        private void MudaSelecaoDeCoresSubMenuTorneios()
        {
            CadastroTorneiosLabel.Font = new Font(CadastroTorneiosLabel.Font, CadastroTorneiosLabel.Font.Style & ~FontStyle.Bold);
            ParticipantesTorneioLabel.Font = new Font(ParticipantesTorneioLabel.Font, ParticipantesTorneioLabel.Font.Style & ~FontStyle.Bold);
            //ResultadoLabel.Font = new Font(ResultadoLabel.Font, ResultadoLabel.Font.Style & ~FontStyle.Bold);

            CadastroTorneiosLabel.BackColor = _corFundoMenu;
            ParticipantesTorneioLabel.BackColor = CadastroTorneiosLabel.BackColor;
            //ResultadoLabel.BackColor = CadastroTorneiosLabel.BackColor;

            CadastroTorneiosLabel.ForeColor = Color.WhiteSmoke;
            ParticipantesTorneioLabel.ForeColor = Color.WhiteSmoke;
            //ResultadoLabel.ForeColor = Color.WhiteSmoke;
        }

        private void CadastroTorneiosLabel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubMenuTorneios();
            FechaSubMenuAvaliacaoDesempenho();
            FechaSubMenuBiblioteca();

            if (((Control)sender).Name.Contains("Cadastro"))
            {
                CadastroTorneiosLabel.Font = new Font(CadastroTorneiosLabel.Font, FontStyle.Bold);
                CadastroTorneiosLabel.ForeColor = Publicas._fonteBotaoFocado;
                CadastroTorneiosLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Participantes"))
            {
                ParticipantesTorneioLabel.Font = new Font(ParticipantesTorneioLabel.Font, FontStyle.Bold);
                ParticipantesTorneioLabel.ForeColor = Publicas._fonteBotaoFocado;
                ParticipantesTorneioLabel.BackColor = _corMenuSelecionado;
                return;
            }

            //if (((Control)sender).Name.Contains("Resultado"))
            //{
            //    ResultadoLabel.Font = new Font(ResultadoLabel.Font, FontStyle.Bold);
            //    ResultadoLabel.ForeColor = Publicas._fonteBotaoFocado;
            //    ResultadoLabel.BackColor = _corMenuSelecionado;
            //    return;
            //}

        }

        private void CadastroTorneiosPanel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaTorneios;
            Cadastros.Campeonato _tela = new Cadastros.Campeonato();
            _tela.ShowDialog();
            NomePadrao();

            //AtivaTimer(sender, e);
        }

        private void ParticipantesTorneioPanel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaTorneios;
            BolaoCopadoMundo.Campeonato _tela = new BolaoCopadoMundo.Campeonato();
            _tela.ShowDialog();
            NomePadrao();

            //AtivaTimer(sender, e);
        }


        //private void ResultadoPanel_Click(object sender, EventArgs e)
        //{
        //    FechaMenuUsuario();
        //    FechaMenuSistema();
        //    MensagemSistema();

        //    tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaTorneios;
        //    new Cadastros.ResultadoDasTorneios().ShowDialog();
        //    NomePadrao();

        //    //AtivaTimer(sender, e);
        //}
        #endregion
        #endregion

        #region SubMenu Juridico
        private void JuridicoSetaLabel_Click(object sender, EventArgs e)
        {
            // abrir o SubMenu do RecursosHumanos
            JuridicoSetaLabel.Text = "3";

            if (!Publicas._TemaBlack)
            {
                JuridicoSetaLabel.ForeColor = Publicas._bordaEntrada;
                JuridicoLabel.ForeColor = Publicas._bordaEntrada;
            }
            else
            {
                JuridicoSetaLabel.ForeColor = Publicas._fonteMenuSelecionado;
                JuridicoLabel.ForeColor = Publicas._fonteMenuSelecionado;
            }
            JuridicoSetaLabel.BackColor = _corFundoMenu;

            if (SubMenuJuridico != null)
            {
                FechaSubMenuJuridico();
                return;
            }

            if (SubMenuFavoritos != null)
            {
                FechaSubMenuFavoritos();
                return;
            }

            #region Cria estrutura 

            // Menu de fundo (onde agrupa os demais itens)
            SubMenuJuridico = new Panel();
            SubMenuJuridico.Size = new Size(155, _heidthMenuSistema * 2);
            SubMenuJuridico.Location = new Point(MenuSistemaPanel.Width + 2, AcessoAoMenuPanel.Height);
            SubMenuJuridico.BackColor = _corFundoDivisao;
            this.Controls.Add(SubMenuJuridico);
            SubMenuJuridico.BringToFront();
            SubMenuJuridico.Visible = true;
            #endregion

            #region AbrirComunicado
            AbrirComunicadoPanel = new Panel();
            AbrirComunicadoPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            AbrirComunicadoPanel.Dock = DockStyle.Top;
            AbrirComunicadoPanel.BackColor = _corFundoMenu;
            AbrirComunicadoPanel.Name = "AbrirComunicadoPanel";

            DivisoriaAbrirComunicadoImagem = new PictureBox();
            DivisoriaAbrirComunicadoImagem.Size = new Size(0, 4);
            DivisoriaAbrirComunicadoImagem.Dock = DockStyle.Bottom;
            DivisoriaAbrirComunicadoImagem.BackColor = _corFundoDivisao;

            AbrirComunicadoLabel = new Label();
            AbrirComunicadoLabel.AutoSize = false;
            AbrirComunicadoLabel.Size = new Size(_widthLabelMenuSistema, 0);
            AbrirComunicadoLabel.Dock = DockStyle.Fill;
            AbrirComunicadoLabel.Text = "Abrir" + Environment.NewLine + "Comunicado";
            AbrirComunicadoLabel.Font = CorFontepadraoLabel.Font;
            AbrirComunicadoLabel.ForeColor = Color.WhiteSmoke;
            AbrirComunicadoLabel.TextAlign = ContentAlignment.MiddleRight;
            AbrirComunicadoLabel.MouseHover += new EventHandler(this.CadastroJuridicoSetaPanel_MouseHover);
            AbrirComunicadoLabel.Click += new System.EventHandler(this.AbrirComunicadoPanel_Click);
            AbrirComunicadoLabel.Name = "AbrirComunicadoLabel";

            FavoritoAbrirComunicadoImagem = new PictureBox();
            FavoritoAbrirComunicadoImagem.Size = new Size(10, 10);
            FavoritoAbrirComunicadoImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoAbrirComunicadoImagem.Name = AbrirComunicadoLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoAbrirComunicadoImagem.Name))
            {
                FavoritoAbrirComunicadoImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoAbrirComunicadoImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoAbrirComunicadoImagem.Top = 35;
            FavoritoAbrirComunicadoImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoAbrirComunicadoImagem.Tag = AbrirComunicadoLabel.Text;
            FavoritoAbrirComunicadoImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoAbrirComunicadoImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoAbrirComunicadoImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoAbrirComunicadoImagem.AccessibleName = "Juridico";

            AbrirComunicadoPanel.Controls.Add(AbrirComunicadoLabel);
            AbrirComunicadoPanel.Controls.Add(DivisoriaAbrirComunicadoImagem);
            AbrirComunicadoPanel.Controls.Add(FavoritoAbrirComunicadoImagem);
            FavoritoAbrirComunicadoImagem.BringToFront();

            SubMenuJuridico.Controls.Add(AbrirComunicadoPanel);
            #endregion

            #region CadastroJuridico 
            CadastroJuridicoPanel = new Panel();
            CadastroJuridicoPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            CadastroJuridicoPanel.Dock = DockStyle.Top;
            CadastroJuridicoPanel.BackColor = _corFundoMenu;
            CadastroJuridicoPanel.Name = "CadastroJuridicoPanel";
            CadastroJuridicoPanel.Enabled = Publicas._usuario.AcessaCadastroJuridico;

            DivisoriaCadastroJuridicoImagem = new PictureBox();
            DivisoriaCadastroJuridicoImagem.Size = new Size(0, 4);
            DivisoriaCadastroJuridicoImagem.Dock = DockStyle.Bottom;
            DivisoriaCadastroJuridicoImagem.BackColor = _corFundoDivisao;

            Divisoria2CadastroJuridicoImagem = new PictureBox();
            Divisoria2CadastroJuridicoImagem.Size = new Size(1, 2);
            Divisoria2CadastroJuridicoImagem.Dock = DockStyle.Right;
            Divisoria2CadastroJuridicoImagem.BackColor = _corFundoDivisao; //System.Drawing.Color.FromArgb(2, 91, 149);

            CadastroJuridicoSetaLabel = new Label();
            CadastroJuridicoSetaLabel.AutoSize = false;
            CadastroJuridicoSetaLabel.Size = new Size(20, 59);
            CadastroJuridicoSetaLabel.Dock = DockStyle.Right;
            CadastroJuridicoSetaLabel.Text = "6";
            CadastroJuridicoSetaLabel.Font = new Font("Webdings", (float)12);
            CadastroJuridicoSetaLabel.TextAlign = ContentAlignment.MiddleCenter;
            CadastroJuridicoSetaLabel.Click += new System.EventHandler(this.CadastroJuridicoSetaLabel_Click);
            CadastroJuridicoSetaLabel.MouseHover += new EventHandler(this.CadastroJuridicoSetaPanel_MouseHover);
            CadastroJuridicoSetaLabel.Name = "CadastroJuridicoSetaLabel";
            CadastroJuridicoSetaLabel.ForeColor = Color.WhiteSmoke;

            CadastroJuridicoLabel = new Label();
            CadastroJuridicoLabel.AutoSize = false;
            CadastroJuridicoLabel.Size = new Size(_widthLabelMenuSistema, 0);
            CadastroJuridicoLabel.Dock = DockStyle.Fill;
            CadastroJuridicoLabel.Text = "Cadastros";
            CadastroJuridicoLabel.Font = CorFontepadraoLabel.Font;
            CadastroJuridicoLabel.ForeColor = Color.WhiteSmoke;
            CadastroJuridicoLabel.TextAlign = ContentAlignment.MiddleRight;
            CadastroJuridicoLabel.MouseHover += new EventHandler(this.CadastroJuridicoPanel_MouseHover);
            CadastroJuridicoLabel.Click += new System.EventHandler(this.CadastroJuridicoSetaLabel_Click);
            CadastroJuridicoLabel.Name = "CadastroJuridicoLabel";

            CadastroJuridicoPanel.Controls.Add(CadastroJuridicoLabel);
            //CadastroJuridicoPanel.Controls.Add(CadastroJuridicoImagem);
            CadastroJuridicoPanel.Controls.Add(Divisoria2CadastroJuridicoImagem);
            CadastroJuridicoPanel.Controls.Add(CadastroJuridicoSetaLabel);
            CadastroJuridicoPanel.Controls.Add(DivisoriaCadastroJuridicoImagem);

            SubMenuJuridico.Controls.Add(CadastroJuridicoPanel);
            #endregion
        }

        private void FechaSubMenuJuridico()
        {
            FechaSubMenuCadastroJuridico();

            if (SubMenuJuridico != null)
            {
                SubMenuJuridico.Visible = false;
                this.Controls.Remove(SubMenuJuridico);
                SubMenuJuridico.Dispose();
                SubMenuJuridico = null;
            }
        }

        private void MudaSelecaoDeCoresSubMenuJuridico()
        {
            CadastroJuridicoLabel.Font = new Font(CadastroJuridicoLabel.Font, CadastroJuridicoLabel.Font.Style & ~FontStyle.Bold);
            AbrirComunicadoLabel.Font = new Font(AbrirComunicadoLabel.Font, AbrirComunicadoLabel.Font.Style & ~FontStyle.Bold);

            CadastroJuridicoLabel.BackColor = _corFundoMenu;
            AbrirComunicadoLabel.BackColor = CadastroJuridicoLabel.BackColor;
            CadastroJuridicoSetaLabel.BackColor = CadastroJuridicoLabel.BackColor;
            FavoritoAbrirComunicadoImagem.BackColor = CadastroJuridicoLabel.BackColor;

            CadastroJuridicoLabel.ForeColor = Color.WhiteSmoke;
            CadastroJuridicoSetaLabel.ForeColor = Color.WhiteSmoke;
            AbrirComunicadoLabel.ForeColor = Color.WhiteSmoke;

            CadastroJuridicoSetaLabel.Text = "6";
        }

        private void CadastroJuridicoPanel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubMenuJuridico();
            FechaSubMenuAvaliacaoDesempenho();
            FechaSubMenuBiblioteca();
            FechaSubMenuCorridas();
            FechaSubMenuCurriculo();
            FechaSubMenuCadastroJuridico();
            FechaSubMenuFerias();

            if (((Control)sender).Name.Contains("Cadastro"))
            {
                CadastroJuridicoLabel.Font = new Font(CadastroJuridicoLabel.Font, FontStyle.Bold);
                CadastroJuridicoLabel.ForeColor = Publicas._fonteBotaoFocado;
                CadastroJuridicoLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("AbrirComunicado"))
            {
                AbrirComunicadoLabel.Font = new Font(AbrirComunicadoLabel.Font, FontStyle.Bold);
                AbrirComunicadoLabel.ForeColor = Publicas._fonteBotaoFocado;
                AbrirComunicadoLabel.BackColor = _corMenuSelecionado;
                return;
            }
        }

        private void CadastroJuridicoSetaPanel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubMenuJuridico();
            FechaSubMenuAvaliacaoDesempenho();
            FechaSubMenuBiblioteca();
            FechaSubMenuCorridas();
            FechaSubMenuCurriculo();
            FechaSubMenuCadastroJuridico();
            FechaSubMenuFerias();

            if (((Control)sender).Name.Contains("Cadastro"))
            {
                CadastroJuridicoSetaLabel.Font = new Font(CadastroJuridicoSetaLabel.Font, FontStyle.Bold);
                CadastroJuridicoSetaLabel.ForeColor = Publicas._fonteBotaoFocado;
                CadastroJuridicoSetaLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("AbrirComunicado"))
            {
                AbrirComunicadoLabel.Font = new Font(AbrirComunicadoLabel.Font, FontStyle.Bold);
                AbrirComunicadoLabel.ForeColor = Publicas._fonteBotaoFocado;
                AbrirComunicadoLabel.BackColor = _corMenuSelecionado;
                FavoritoAbrirComunicadoImagem.BackColor = _corMenuSelecionado;
                return;
            }
        }

        private void AbrirComunicadoPanel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaJuridico;
            Publicas._chamadoPeloMenuDeComunicado = Publicas.StatusComunicado.Novo;
            Juridico.Comunicado _tela = new Juridico.Comunicado();
            _tela.ShowDialog();
            NomePadrao();
            //AtivaTimer(sender, e);
        }

        #region Cadastros
        private void CadastroJuridicoSetaLabel_Click(object sender, EventArgs e)
        {
            CadastroJuridicoSetaLabel.Text = "3";

            if (!Publicas._TemaBlack)
            {
                CadastroJuridicoSetaLabel.ForeColor = Publicas._bordaEntrada;
                CadastroJuridicoLabel.ForeColor = Publicas._bordaEntrada;
            }
            else
            {
                CadastroJuridicoSetaLabel.ForeColor = Publicas._fonteMenuSelecionado;
                CadastroJuridicoLabel.ForeColor = Publicas._fonteMenuSelecionado;
            }
            CadastroJuridicoSetaLabel.BackColor = _corFundoMenu;

            if (SubMenuCadastroJuridico != null)
            {
                FechaSubMenuCadastroJuridico();
                return;
            }

            #region Cria estrutura 

            // Menu de fundo (onde agrupa os demais itens)
            SubMenuCadastroJuridico = new Panel();
            SubMenuCadastroJuridico.Size = new Size(155, _heidthMenuSistema * 2);
            SubMenuCadastroJuridico.Location = new Point(MenuSistemaPanel.Width + SubMenuJuridico.Width + 4, AcessoAoMenuPanel.Height);
            SubMenuCadastroJuridico.BackColor = _corFundoDivisao;
            this.Controls.Add(SubMenuCadastroJuridico);
            SubMenuCadastroJuridico.BringToFront();
            SubMenuCadastroJuridico.Visible = true;
            #endregion

            #region TiposPagamento
            TiposPagamentoPanel = new Panel();
            TiposPagamentoPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            TiposPagamentoPanel.Dock = DockStyle.Top;
            TiposPagamentoPanel.BackColor = _corFundoMenu;
            TiposPagamentoPanel.Name = "TiposPagamentoPanel";

            DivisoriaTiposPagamentoImagem = new PictureBox();
            DivisoriaTiposPagamentoImagem.Size = new Size(0, 4);
            DivisoriaTiposPagamentoImagem.Dock = DockStyle.Bottom;
            DivisoriaTiposPagamentoImagem.BackColor = _corFundoDivisao;

            TiposPagamentoLabel = new Label();
            TiposPagamentoLabel.AutoSize = false;
            TiposPagamentoLabel.Size = new Size(_widthLabelMenuSistema, 0);
            TiposPagamentoLabel.Dock = DockStyle.Fill;
            TiposPagamentoLabel.Text = "Tipos de Pagamento";
            TiposPagamentoLabel.Font = CorFontepadraoLabel.Font;
            TiposPagamentoLabel.ForeColor = Color.WhiteSmoke;
            TiposPagamentoLabel.TextAlign = ContentAlignment.MiddleRight;
            TiposPagamentoLabel.MouseHover += new EventHandler(this.TiposPagamentoPanel_MouseHover);
            TiposPagamentoLabel.Click += new System.EventHandler(this.TiposPagamentoPanel_Click);
            TiposPagamentoLabel.Name = "TiposPagamentoLabel";

            FavoritoTiposPagamentoImagem = new PictureBox();
            FavoritoTiposPagamentoImagem.Size = new Size(10, 10);
            FavoritoTiposPagamentoImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoTiposPagamentoImagem.Name = TiposPagamentoLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoTiposPagamentoImagem.Name))
            {
                FavoritoTiposPagamentoImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoTiposPagamentoImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoTiposPagamentoImagem.Top = 35;
            FavoritoTiposPagamentoImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoTiposPagamentoImagem.Tag = TiposPagamentoLabel.Text;
            FavoritoTiposPagamentoImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoTiposPagamentoImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoTiposPagamentoImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoTiposPagamentoImagem.AccessibleName = "Juridico";

            TiposPagamentoPanel.Controls.Add(TiposPagamentoLabel);
            TiposPagamentoPanel.Controls.Add(DivisoriaTiposPagamentoImagem);
            TiposPagamentoPanel.Controls.Add(FavoritoTiposPagamentoImagem);
            FavoritoTiposPagamentoImagem.BringToFront();

            SubMenuCadastroJuridico.Controls.Add(TiposPagamentoPanel);
            #endregion

            #region Vara
            VaraPanel = new Panel();
            VaraPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            VaraPanel.Dock = DockStyle.Top;
            VaraPanel.BackColor = _corFundoMenu;
            VaraPanel.Name = "VaraPanel";

            DivisoriaVaraImagem = new PictureBox();
            DivisoriaVaraImagem.Size = new Size(0, 4);
            DivisoriaVaraImagem.Dock = DockStyle.Bottom;
            DivisoriaVaraImagem.BackColor = _corFundoDivisao;

            VaraLabel = new Label();
            VaraLabel.AutoSize = false;
            VaraLabel.Size = new Size(_widthLabelMenuSistema, 0);
            VaraLabel.Dock = DockStyle.Fill;
            VaraLabel.Text = "Vara";
            VaraLabel.Font = CorFontepadraoLabel.Font;
            VaraLabel.ForeColor = Color.WhiteSmoke;
            VaraLabel.TextAlign = ContentAlignment.MiddleRight;
            VaraLabel.MouseHover += new EventHandler(this.TiposPagamentoPanel_MouseHover);
            VaraLabel.Click += new System.EventHandler(this.VaraPanel_Click);
            VaraLabel.Name = "VaraLabel";

            FavoritoVaraImagem = new PictureBox();
            FavoritoVaraImagem.Size = new Size(10, 10);
            FavoritoVaraImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoVaraImagem.Name = VaraLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoVaraImagem.Name))
            {
                FavoritoVaraImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoVaraImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoVaraImagem.Top = 35;
            FavoritoVaraImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoVaraImagem.Tag = VaraLabel.Text;
            FavoritoVaraImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoVaraImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoVaraImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoVaraImagem.AccessibleName = "Juridico";

            VaraPanel.Controls.Add(VaraLabel);
            VaraPanel.Controls.Add(DivisoriaVaraImagem);
            VaraPanel.Controls.Add(FavoritoVaraImagem);
            FavoritoVaraImagem.BringToFront();

            SubMenuCadastroJuridico.Controls.Add(VaraPanel);
            #endregion
        }

        private void FechaSubMenuCadastroJuridico()
        {
            if (SubMenuCadastroJuridico != null)
            {
                SubMenuCadastroJuridico.Visible = false;
                this.Controls.Remove(SubMenuCadastroJuridico);
                SubMenuCadastroJuridico.Dispose();
                SubMenuCadastroJuridico = null;
            }
        }

        private void MudaSelecaoDeCoresSubMenuCadastroJuridico()
        {
            TiposPagamentoLabel.Font = new Font(TiposPagamentoLabel.Font, TiposPagamentoLabel.Font.Style & ~FontStyle.Bold);
            VaraLabel.Font = new Font(VaraLabel.Font, VaraLabel.Font.Style & ~FontStyle.Bold);

            TiposPagamentoLabel.BackColor = _corFundoMenu;
            VaraLabel.BackColor = TiposPagamentoLabel.BackColor;
            FavoritoTiposPagamentoImagem.BackColor = TiposPagamentoLabel.BackColor;
            FavoritoVaraImagem.BackColor = TiposPagamentoLabel.BackColor;

            TiposPagamentoLabel.ForeColor = Color.WhiteSmoke;
            VaraLabel.ForeColor = Color.WhiteSmoke;
        }

        private void TiposPagamentoPanel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubMenuCadastroJuridico();
            FechaSubMenuAvaliacaoDesempenho();
            FechaSubMenuBiblioteca();
            FechaSubMenuCurriculo();
            FechaSubMenuCorridas();
            FechaSubMenuFerias();

            if (((Control)sender).Name.Contains("TiposPagamento"))
            {
                TiposPagamentoLabel.Font = new Font(TiposPagamentoLabel.Font, FontStyle.Bold);
                TiposPagamentoLabel.ForeColor = Publicas._fonteBotaoFocado;
                TiposPagamentoLabel.BackColor = _corMenuSelecionado;
                FavoritoTiposPagamentoImagem.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Vara"))
            {
                VaraLabel.Font = new Font(VaraLabel.Font, FontStyle.Bold);
                VaraLabel.ForeColor = Publicas._fonteBotaoFocado;
                VaraLabel.BackColor = _corMenuSelecionado;
                FavoritoVaraImagem.BackColor = _corMenuSelecionado;
                return;
            }
        }

        private void TiposPagamentoPanel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaJuridico;
            Cadastros.TiposDePagamento _tela = new Cadastros.TiposDePagamento();
            _tela.ShowDialog();
            NomePadrao();
            //AtivaTimer(sender, e);
        }

        private void VaraPanel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaJuridico;
            Cadastros.Vara _tela = new Cadastros.Vara();
            _tela.ShowDialog();
            NomePadrao();
            //AtivaTimer(sender, e);
        }
        #endregion

        #endregion
          
        #region Controladoria
        private void ControladoriaSetaLabel_Click(object sender, EventArgs e)
        {
            // abrir o SubMenu 
            ControladoriaSetaLabel.Text = "3";

            if (!Publicas._TemaBlack)
            {
                ControladoriaSetaLabel.ForeColor = Publicas._bordaEntrada;
                ControladoriaLabel.ForeColor = Publicas._bordaEntrada;
            }
            else
            {
                ControladoriaSetaLabel.ForeColor = Publicas._fonteMenuSelecionado;
                ControladoriaLabel.ForeColor = Publicas._fonteMenuSelecionado;
            }
            ControladoriaSetaLabel.BackColor = _corFundoMenu;

            if (SubMenuControladoria != null)
            {
                FechaSubMenuControladoria();
                return;
            }

            if (SubMenuFavoritos != null)
            {
                FechaSubMenuFavoritos();
                return;
            }

            #region Cria estrutura 

            // Menu de fundo (onde agrupa os demais itens)
            SubMenuControladoria = new Panel();
            SubMenuControladoria.Size = new Size(155, _heidthMenuSistema * 2); //(Publicas._usuario.Administrador ? 3 : 2));
            SubMenuControladoria.Location = new Point(MenuSistemaPanel.Width + 2, AcessoAoMenuPanel.Height);
            SubMenuControladoria.BackColor = _corFundoDivisao;
            this.Controls.Add(SubMenuControladoria);
            SubMenuControladoria.BringToFront();
            SubMenuControladoria.Visible = true;
            #endregion


            #region Escrituração Fiscal
            EscrituracaoFiscalPanel = new Panel();
            EscrituracaoFiscalPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            EscrituracaoFiscalPanel.Dock = DockStyle.Top;
            EscrituracaoFiscalPanel.BackColor = _corFundoMenu;
            EscrituracaoFiscalPanel.Name = "EscrituracaoFiscalPanel";
            EscrituracaoFiscalPanel.Enabled = Publicas._usuario.Administrador || Publicas._usuario.AcessaEscrituracaoFiscal;


            DivisoriaEscrituracaoFiscalImagem = new PictureBox();
            DivisoriaEscrituracaoFiscalImagem.Size = new Size(0, 4);
            DivisoriaEscrituracaoFiscalImagem.Dock = DockStyle.Bottom;
            DivisoriaEscrituracaoFiscalImagem.BackColor = _corFundoDivisao;

            Divisoria2EscrituracaoFiscalImagem = new PictureBox();
            Divisoria2EscrituracaoFiscalImagem.Size = new Size(1, 2);
            Divisoria2EscrituracaoFiscalImagem.Dock = DockStyle.Right;
            Divisoria2EscrituracaoFiscalImagem.BackColor = _corFundoDivisao; //System.Drawing.Color.FromArgb(2, 91, 149);

            EscrituracaoFiscalSetaLabel = new Label();
            EscrituracaoFiscalSetaLabel.AutoSize = false;
            EscrituracaoFiscalSetaLabel.Size = new Size(20, 59);
            EscrituracaoFiscalSetaLabel.Dock = DockStyle.Right;
            EscrituracaoFiscalSetaLabel.Text = "6";
            EscrituracaoFiscalSetaLabel.Font = new Font("Webdings", (float)12);
            EscrituracaoFiscalSetaLabel.TextAlign = ContentAlignment.MiddleCenter;
            EscrituracaoFiscalSetaLabel.Click += new System.EventHandler(this.EscrituracaoFiscalSetaLabel_Click);
            EscrituracaoFiscalSetaLabel.MouseHover += new EventHandler(this.ContabilidadeSetaLabel_MouseHover);
            EscrituracaoFiscalSetaLabel.Name = "EscrituracaoFiscalSetaLabel";
            EscrituracaoFiscalSetaLabel.ForeColor = Color.WhiteSmoke;

            EscrituracaoFiscalLabel = new Label();
            EscrituracaoFiscalLabel.AutoSize = false;
            EscrituracaoFiscalLabel.Size = new Size(_widthLabelMenuSistema, 0);
            EscrituracaoFiscalLabel.Dock = DockStyle.Fill;
            EscrituracaoFiscalLabel.Text = "Escrituração" + Environment.NewLine + "Fiscal";
            EscrituracaoFiscalLabel.Font = CorFontepadraoLabel.Font;
            EscrituracaoFiscalLabel.ForeColor = Color.WhiteSmoke;
            EscrituracaoFiscalLabel.TextAlign = ContentAlignment.MiddleRight;
            EscrituracaoFiscalLabel.MouseHover += new EventHandler(this.ContabilidadeLabel_MouseHover);
            EscrituracaoFiscalLabel.Click += new System.EventHandler(this.EscrituracaoFiscalSetaLabel_Click);
            EscrituracaoFiscalLabel.Name = "EscrituracaoFiscalLabel";

            EscrituracaoFiscalPanel.Controls.Add(EscrituracaoFiscalLabel);
            //EscrituracaoFiscalPanel.Controls.Add(EscrituracaoFiscalImagem);
            EscrituracaoFiscalPanel.Controls.Add(Divisoria2EscrituracaoFiscalImagem);
            EscrituracaoFiscalPanel.Controls.Add(EscrituracaoFiscalSetaLabel);
            EscrituracaoFiscalPanel.Controls.Add(DivisoriaEscrituracaoFiscalImagem);

            SubMenuControladoria.Controls.Add(EscrituracaoFiscalPanel);
            #endregion
            
            #region Contabilidade
            ContabilidadePanel = new Panel();
            ContabilidadePanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            ContabilidadePanel.Dock = DockStyle.Top;
            ContabilidadePanel.BackColor = _corFundoMenu;
            ContabilidadePanel.Name = "ContabilidadePanel";
            ContabilidadePanel.Enabled = Publicas._usuario.Administrador || Publicas._usuario.AcessaContabilidade;

            DivisoriaContabilidadeImagem = new PictureBox();
            DivisoriaContabilidadeImagem.Size = new Size(0, 4);
            DivisoriaContabilidadeImagem.Dock = DockStyle.Bottom;
            DivisoriaContabilidadeImagem.BackColor = _corFundoDivisao;

            Divisoria2ContabilidadeImagem = new PictureBox();
            Divisoria2ContabilidadeImagem.Size = new Size(1, 2);
            Divisoria2ContabilidadeImagem.Dock = DockStyle.Right;
            Divisoria2ContabilidadeImagem.BackColor = _corFundoDivisao; //System.Drawing.Color.FromArgb(2, 91, 149);

            ContabilidadeSetaLabel = new Label();
            ContabilidadeSetaLabel.AutoSize = false;
            ContabilidadeSetaLabel.Size = new Size(20, 59);
            ContabilidadeSetaLabel.Dock = DockStyle.Right;
            ContabilidadeSetaLabel.Text = "6";
            ContabilidadeSetaLabel.Font = new Font("Webdings", (float)12);
            ContabilidadeSetaLabel.TextAlign = ContentAlignment.MiddleCenter;
            ContabilidadeSetaLabel.Click += new System.EventHandler(this.ContabilidadeSetaLabel_Click);
            ContabilidadeSetaLabel.MouseHover += new EventHandler(this.ContabilidadeSetaLabel_MouseHover);
            ContabilidadeSetaLabel.Name = "ContabilidadeSetaLabel";
            ContabilidadeSetaLabel.ForeColor = Color.WhiteSmoke;

            ContabilidadeLabel = new Label();
            ContabilidadeLabel.AutoSize = false;
            ContabilidadeLabel.Size = new Size(_widthLabelMenuSistema, 0);
            ContabilidadeLabel.Dock = DockStyle.Fill;
            ContabilidadeLabel.Text = "Contabilidade";
            ContabilidadeLabel.Font = CorFontepadraoLabel.Font;
            ContabilidadeLabel.ForeColor = Color.WhiteSmoke;
            ContabilidadeLabel.TextAlign = ContentAlignment.MiddleRight;
            ContabilidadeLabel.MouseHover += new EventHandler(this.ContabilidadeLabel_MouseHover);
            ContabilidadeLabel.Click += new System.EventHandler(this.ContabilidadeSetaLabel_Click);
            ContabilidadeLabel.Name = "ContabilidadeLabel";

            ContabilidadePanel.Controls.Add(ContabilidadeLabel);
            //ContabilidadePanel.Controls.Add(ContabilidadeImagem);
            ContabilidadePanel.Controls.Add(Divisoria2ContabilidadeImagem);
            ContabilidadePanel.Controls.Add(ContabilidadeSetaLabel);
            ContabilidadePanel.Controls.Add(DivisoriaContabilidadeImagem);

            SubMenuControladoria.Controls.Add(ContabilidadePanel);
            #endregion
            

            // old
            #region DeMetasBI
            //DeMetasBIPanel = new Panel();
            //DeMetasBIPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            //DeMetasBIPanel.Dock = DockStyle.Top;
            //DeMetasBIPanel.BackColor = _corFundoMenu;
            //DeMetasBIPanel.Name = "DeMetasBIPanel";

            //DivisoriaDeMetasBIImagem = new PictureBox();
            //DivisoriaDeMetasBIImagem.Size = new Size(0, 4);
            //DivisoriaDeMetasBIImagem.Dock = DockStyle.Bottom;
            //DivisoriaDeMetasBIImagem.BackColor = _corFundoDivisao;

            //DeMetasBILabel = new Label();
            //DeMetasBILabel.AutoSize = false;
            //DeMetasBILabel.Size = new Size(_widthLabelMenuSistema, 0);
            //DeMetasBILabel.Dock = DockStyle.Fill;
            //DeMetasBILabel.Text = "Cálculo de" + Environment.NewLine + "Metas";
            //DeMetasBILabel.Font = CorFontepadraoLabel.Font;
            //DeMetasBILabel.ForeColor = Color.WhiteSmoke;
            //DeMetasBILabel.TextAlign = ContentAlignment.MiddleRight;
            //DeMetasBILabel.MouseHover += new EventHandler(this.RadarPanel_MouseHover);
            //DeMetasBILabel.Click += new System.EventHandler(this.DeMetasBIPanel_Click);
            //DeMetasBILabel.Name = "DeMetasBILabel";

            //FavoritoDeMetasBIImagem = new PictureBox();
            //FavoritoDeMetasBIImagem.Size = new Size(10, 10);
            //FavoritoDeMetasBIImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            //FavoritoDeMetasBIImagem.Name = DeMetasBILabel.Name + "Pic";
            //foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoDeMetasBIImagem.Name))
            //{
            //    FavoritoDeMetasBIImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            //}
            //FavoritoDeMetasBIImagem.Left = 5;//NotasLabel.Width - 10;
            //FavoritoDeMetasBIImagem.Top = 35;
            //FavoritoDeMetasBIImagem.SizeMode = PictureBoxSizeMode.Zoom;
            //FavoritoDeMetasBIImagem.Tag = DeMetasBILabel.Text;
            //FavoritoDeMetasBIImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            //FavoritoDeMetasBIImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            //FavoritoDeMetasBIImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            //FavoritoDeMetasBIImagem.AccessibleName = "Controladoria";

            //DeMetasBIPanel.Controls.Add(DeMetasBILabel);
            //DeMetasBIPanel.Controls.Add(DivisoriaDeMetasBIImagem);
            //DeMetasBIPanel.Controls.Add(FavoritoDeMetasBIImagem);
            //FavoritoDeMetasBIImagem.BringToFront();

            //SubMenuControladoria.Controls.Add(DeMetasBIPanel);
            #endregion
            #region VisoesBI
            //VisoesBIPanel = new Panel();
            //VisoesBIPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            //VisoesBIPanel.Dock = DockStyle.Top;
            //VisoesBIPanel.BackColor = _corFundoMenu;
            //VisoesBIPanel.Name = "VisoesBIPanel";
            //VisoesBIPanel.Visible = false;// Publicas._usuario.Administrador;

            //DivisoriaVisoesBIImagem = new PictureBox();
            //DivisoriaVisoesBIImagem.Size = new Size(0, 4);
            //DivisoriaVisoesBIImagem.Dock = DockStyle.Bottom;
            //DivisoriaVisoesBIImagem.BackColor = _corFundoDivisao;

            //VisoesBILabel = new Label();
            //VisoesBILabel.AutoSize = false;
            //VisoesBILabel.Size = new Size(_widthLabelMenuSistema, 0);
            //VisoesBILabel.Dock = DockStyle.Fill;
            //VisoesBILabel.Text = "Visões PowerBI";
            //VisoesBILabel.Font = CorFontepadraoLabel.Font;
            //VisoesBILabel.ForeColor = Color.WhiteSmoke;
            //VisoesBILabel.TextAlign = ContentAlignment.MiddleRight;
            //VisoesBILabel.MouseHover += new EventHandler(this.RadarPanel_MouseHover);
            //VisoesBILabel.Click += new System.EventHandler(this.VisoesBIPanel_Click);
            //VisoesBILabel.Name = "VisoesBILabel";

            //FavoritoVisoesBIImagem = new PictureBox();
            //FavoritoVisoesBIImagem.Size = new Size(10, 10);
            //FavoritoVisoesBIImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            //FavoritoVisoesBIImagem.Name = VisoesBILabel.Name + "Pic";
            //foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoVisoesBIImagem.Name))
            //{
            //    FavoritoVisoesBIImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            //}
            //FavoritoVisoesBIImagem.Left = 5;//NotasLabel.Width - 10;
            //FavoritoVisoesBIImagem.Top = 35;
            //FavoritoVisoesBIImagem.SizeMode = PictureBoxSizeMode.Zoom;
            //FavoritoVisoesBIImagem.Tag = VisoesBILabel.Text;
            //FavoritoVisoesBIImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            //FavoritoVisoesBIImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            //FavoritoVisoesBIImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            //FavoritoVisoesBIImagem.AccessibleName = "Controladoria";

            //VisoesBIPanel.Controls.Add(VisoesBILabel);
            //VisoesBIPanel.Controls.Add(DivisoriaVisoesBIImagem);
            //VisoesBIPanel.Controls.Add(FavoritoVisoesBIImagem);
            //FavoritoVisoesBIImagem.BringToFront();

            //SubMenuControladoria.Controls.Add(VisoesBIPanel);
            #endregion
            #region RadarBI
            //RadarBIPanel = new Panel();
            //RadarBIPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            //RadarBIPanel.Dock = DockStyle.Top;
            //RadarBIPanel.BackColor = _corFundoMenu;
            //RadarBIPanel.Name = "RadarBIPanel";
            //RadarBIPanel.Visible = true;

            //DivisoriaRadarBIImagem = new PictureBox();
            //DivisoriaRadarBIImagem.Size = new Size(0, 4);
            //DivisoriaRadarBIImagem.Dock = DockStyle.Bottom;
            //DivisoriaRadarBIImagem.BackColor = _corFundoDivisao;

            //RadarBILabel = new Label();
            //RadarBILabel.AutoSize = false;
            //RadarBILabel.Size = new Size(_widthLabelMenuSistema, 0);
            //RadarBILabel.Dock = DockStyle.Fill;
            //RadarBILabel.Text = "Radar PowerBI";
            //RadarBILabel.Font = CorFontepadraoLabel.Font;
            //RadarBILabel.ForeColor = Color.WhiteSmoke;
            //RadarBILabel.TextAlign = ContentAlignment.MiddleRight;
            //RadarBILabel.MouseHover += new EventHandler(this.RadarPanel_MouseHover);
            //RadarBILabel.Click += new System.EventHandler(this.RadarBIPanel_Click);
            //RadarBILabel.Name = "RadarBILabel";

            //FavoritoRadarBIImagem = new PictureBox();
            //FavoritoRadarBIImagem.Size = new Size(10, 10);
            //FavoritoRadarBIImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            //FavoritoRadarBIImagem.Name = RadarBILabel.Name + "Pic";
            //foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoRadarBIImagem.Name))
            //{
            //    FavoritoRadarBIImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            //}
            //FavoritoRadarBIImagem.Left = 5;//NotasLabel.Width - 10;
            //FavoritoRadarBIImagem.Top = 35;
            //FavoritoRadarBIImagem.SizeMode = PictureBoxSizeMode.Zoom;
            //FavoritoRadarBIImagem.Tag = RadarBILabel.Text;
            //FavoritoRadarBIImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            //FavoritoRadarBIImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            //FavoritoRadarBIImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            //FavoritoRadarBIImagem.AccessibleName = "Controladoria";

            //RadarBIPanel.Controls.Add(RadarBILabel);
            //RadarBIPanel.Controls.Add(DivisoriaRadarBIImagem);
            //RadarBIPanel.Controls.Add(FavoritoRadarBIImagem);
            //FavoritoRadarBIImagem.BringToFront();

            //SubMenuControladoria.Controls.Add(RadarBIPanel);
            #endregion

        }

        private void MudaSelecaoDeCoresSubMenuControladoria()
        {
            FechaSubMenuContabilidade();

            ContabilidadeLabel.Font = new Font(ContabilidadeLabel.Font, ContabilidadeLabel.Font.Style & ~FontStyle.Bold);
            ContabilidadeLabel.ForeColor = Color.WhiteSmoke;
            ContabilidadeSetaLabel.ForeColor = Color.WhiteSmoke;
            ContabilidadeSetaLabel.Text = "6";
            ContabilidadeLabel.BackColor = ControladoriaPanel.BackColor;
            ContabilidadeSetaLabel.BackColor = ControladoriaPanel.BackColor;

            EscrituracaoFiscalLabel.Font = new Font(EscrituracaoFiscalLabel.Font, EscrituracaoFiscalLabel.Font.Style & ~FontStyle.Bold);
            EscrituracaoFiscalLabel.ForeColor = Color.WhiteSmoke;
            EscrituracaoFiscalSetaLabel.ForeColor = Color.WhiteSmoke;
            EscrituracaoFiscalSetaLabel.Text = "6";
            EscrituracaoFiscalLabel.BackColor = ControladoriaPanel.BackColor;
            EscrituracaoFiscalSetaLabel.BackColor = ControladoriaPanel.BackColor;


            //RadarBILabel.Font = new Font(RadarBILabel.Font, RadarBILabel.Font.Style & ~FontStyle.Bold);
            //VisoesBILabel.Font = new Font(VisoesBILabel.Font, VisoesBILabel.Font.Style & ~FontStyle.Bold);
            //DeMetasBILabel.Font = new Font(DeMetasBILabel.Font, DeMetasBILabel.Font.Style & ~FontStyle.Bold);

            //RadarBILabel.BackColor = _corFundoMenu;
            //VisoesBILabel.BackColor = _corFundoMenu;
            //DeMetasBILabel.BackColor = _corFundoMenu;

            //RadarBILabel.ForeColor = Color.WhiteSmoke;
            //VisoesBILabel.ForeColor = Color.WhiteSmoke;
            //DeMetasBILabel.ForeColor = Color.WhiteSmoke;

            //FavoritoRadarBIImagem.BackColor = RadarBILabel.BackColor;
            //FavoritoVisoesBIImagem.BackColor = RadarBILabel.BackColor;
            //FavoritoDeMetasBIImagem.BackColor = RadarBILabel.BackColor;
        }

        private void ContabilidadeSetaLabel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubMenuControladoria();
            FechaSubMenuAvaliacaoDesempenho();
            FechaSubMenuBiblioteca();
            FechaSubMenuCurriculo();
            FechaSubMenuCorridas();
            FechaSubMenuCadastroJuridico();
            FechaSubMenuESFArquivei();
            FechaSubMenuFerias();

            if (((Control)sender).Name.Contains("Contabilidade"))
            {
                ContabilidadeSetaLabel.ForeColor = Publicas._fonteBotaoFocado;
                ContabilidadeSetaLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Escrituracao"))
            {
                EscrituracaoFiscalSetaLabel.ForeColor = Publicas._fonteBotaoFocado;
                EscrituracaoFiscalSetaLabel.BackColor = _corMenuSelecionado;
                return;
            }
        }

        private void ContabilidadeLabel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubMenuControladoria();
            FechaSubMenuAvaliacaoDesempenho();
            FechaSubMenuBiblioteca();
            FechaSubMenuCurriculo();
            FechaSubMenuCorridas();
            FechaSubMenuCadastroJuridico();
            FechaSubMenuEscrituracaoFiscal();
            FechaSubMenuFerias();
            FechaSubMenuESFArquiveiSaida();

            if (((Control)sender).Name.Contains("Contabilidade"))
            {
                ContabilidadeLabel.Font = new Font(ContabilidadeLabel.Font, FontStyle.Bold);
                ContabilidadeLabel.ForeColor = Publicas._fonteBotaoFocado;
                ContabilidadeLabel.BackColor = _corMenuSelecionado;
                return;
            }


            if (((Control)sender).Name.Contains("Escrituracao"))
            {
                EscrituracaoFiscalLabel.Font = new Font(ContabilidadeLabel.Font, FontStyle.Bold);
                EscrituracaoFiscalLabel.ForeColor = Publicas._fonteBotaoFocado;
                EscrituracaoFiscalLabel.BackColor = _corMenuSelecionado;
                return;
            }

        }

        private void RadarPanel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubMenuControladoria();
            FechaSubMenuAvaliacaoDesempenho();
            FechaSubMenuBiblioteca();
            FechaSubMenuCurriculo();
            FechaSubMenuCorridas();
            FechaSubMenuCadastroJuridico();
            FechaSubMenuFerias();
            //FechaSubMenuContabilidade();


            //if (((Control)sender).Name.Contains("RadarBI"))
            //{
            //    RadarBILabel.Font = new Font(RadarBILabel.Font, FontStyle.Bold);
            //    RadarBILabel.ForeColor = Publicas._fonteBotaoFocado;
            //    RadarBILabel.BackColor = _corMenuSelecionado;
            //    FavoritoRadarBIImagem.BackColor = _corMenuSelecionado;
            //    return;
            //}

            //if (((Control)sender).Name.Contains("VisoesBI"))
            //{
            //    VisoesBILabel.Font = new Font(VisoesBILabel.Font, FontStyle.Bold);
            //    VisoesBILabel.ForeColor = Publicas._fonteBotaoFocado;
            //    VisoesBILabel.BackColor = _corMenuSelecionado;
            //    FavoritoVisoesBIImagem.BackColor = _corMenuSelecionado;
            //    return;
            //}

            //if (((Control)sender).Name.Contains(""))
            //{
            //    DeMetasBILabel.Font = new Font(DeMetasBILabel.Font, FontStyle.Bold);
            //    DeMetasBILabel.ForeColor = Publicas._fonteBotaoFocado;
            //    DeMetasBILabel.BackColor = _corMenuSelecionado;
            //    FavoritoDeMetasBIImagem.BackColor = _corMenuSelecionado;
            //    return;
            //}
        }

        private void FechaSubMenuControladoria()
        {
            FechaSubMenuContabilidade();

            if (SubMenuControladoria != null)
            {
                SubMenuControladoria.Visible = false;
                this.Controls.Remove(SubMenuControladoria);
                SubMenuControladoria.Dispose();
                SubMenuControladoria = null;
            }
        }

        #region SubMenu Contabilidade

        private void ContabilidadeSetaLabel_Click(object sender, EventArgs e)
        {
            // abrir o SubMenu 
            ContabilidadeSetaLabel.Text = "3";

            if (!Publicas._TemaBlack)
            {
                ContabilidadeSetaLabel.ForeColor = Publicas._bordaEntrada;
                ContabilidadeLabel.ForeColor = Publicas._bordaEntrada;
            }
            else
            {
                ContabilidadeSetaLabel.ForeColor = Publicas._fonteMenuSelecionado;
                ContabilidadeLabel.ForeColor = Publicas._fonteMenuSelecionado;
            }
            ContabilidadeSetaLabel.BackColor = _corFundoMenu;

            if (SubMenuContabilidade != null)
            {
                FechaSubMenuContabilidade();
                return;
            }

            #region Cria estrutura 

            // Menu de fundo (onde agrupa os demais itens)
            SubMenuContabilidade = new Panel();
            SubMenuContabilidade.Size = new Size(155, _heidthMenuSistema * 8);
            SubMenuContabilidade.Location = new Point(MenuSistemaPanel.Width + SubMenuControladoria.Width + 4, AcessoAoMenuPanel.Height);
            SubMenuContabilidade.BackColor = _corFundoDivisao;
            this.Controls.Add(SubMenuContabilidade);
            SubMenuContabilidade.BringToFront();
            #endregion

            #region Cigam 
            //tem que ser sempre o ultimo
            CigamPanel = new Panel();
            CigamPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            CigamPanel.Dock = DockStyle.Top;
            CigamPanel.BackColor = _corFundoMenu;
            CigamPanel.Name = "CigamPanel";
            CigamPanel.Enabled = Publicas._usuario.Desenvolvedor || Publicas._usuario.AcessaCigam;

            DivisoriaCigamImagem = new PictureBox();
            DivisoriaCigamImagem.Size = new Size(0, 4);
            DivisoriaCigamImagem.Dock = DockStyle.Bottom;
            DivisoriaCigamImagem.BackColor = _corFundoDivisao;

            Divisoria2CigamImagem = new PictureBox();
            Divisoria2CigamImagem.Size = new Size(1, 2);
            Divisoria2CigamImagem.Dock = DockStyle.Right;
            Divisoria2CigamImagem.BackColor = _corFundoDivisao; //System.Drawing.Color.FromArgb(2, 91, 149);

            CigamSetaLabel = new Label();
            CigamSetaLabel.AutoSize = false;
            CigamSetaLabel.Size = new Size(20, 59);
            CigamSetaLabel.Dock = DockStyle.Right;
            CigamSetaLabel.Text = "6";
            CigamSetaLabel.Font = new Font("Webdings", (float)12);
            CigamSetaLabel.TextAlign = ContentAlignment.MiddleCenter;
            CigamSetaLabel.MouseHover += new EventHandler(this.RateioCTBSetaLabel_MouseHover);
            CigamSetaLabel.Click += new System.EventHandler(this.CigamSetaPanel_Click);
            CigamSetaLabel.Name = "CigamSetaLabel";
            CigamSetaLabel.ForeColor = Color.WhiteSmoke;

            CigamLabel = new Label();
            CigamLabel.AutoSize = false;
            CigamLabel.Size = new Size(_widthLabelMenuSistema, 0);
            CigamLabel.Dock = DockStyle.Fill;
            CigamLabel.Text = "Cigam";
            CigamLabel.Font = CorFontepadraoLabel.Font;
            CigamLabel.ForeColor = Color.WhiteSmoke;
            CigamLabel.TextAlign = ContentAlignment.MiddleRight;
            CigamLabel.MouseHover += new EventHandler(this.RateioCTBLabel_MouseHover);
            CigamLabel.Click += new System.EventHandler(this.CigamSetaPanel_Click);
            CigamLabel.Name = "CigamLabel";

            CigamPanel.Controls.Add(CigamLabel);
            CigamPanel.Controls.Add(Divisoria2CigamImagem);
            CigamPanel.Controls.Add(CigamSetaLabel);
            CigamPanel.Controls.Add(DivisoriaCigamImagem);
            SubMenuContabilidade.Controls.Add(CigamPanel);
            #endregion

            #region Conciliacao
            ConciliacaoPanel = new Panel();
            ConciliacaoPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            ConciliacaoPanel.Dock = DockStyle.Top;
            ConciliacaoPanel.BackColor = _corFundoMenu;
            ConciliacaoPanel.Name = "ConciliacaoPanel";
            ConciliacaoPanel.Enabled = Publicas._usuario.Desenvolvedor || Publicas._usuario.AcessaConciliacaoContabil;

            DivisoriaConciliacaoImagem = new PictureBox();
            DivisoriaConciliacaoImagem.Size = new Size(0, 4);
            DivisoriaConciliacaoImagem.Dock = DockStyle.Bottom;
            DivisoriaConciliacaoImagem.BackColor = _corFundoDivisao;

            Divisoria2ConciliacaoImagem = new PictureBox();
            Divisoria2ConciliacaoImagem.Size = new Size(1, 2);
            Divisoria2ConciliacaoImagem.Dock = DockStyle.Right;
            Divisoria2ConciliacaoImagem.BackColor = _corFundoDivisao; //System.Drawing.Color.FromArgb(2, 91, 149);

            ConciliacaoSetaLabel = new Label();
            ConciliacaoSetaLabel.AutoSize = false;
            ConciliacaoSetaLabel.Size = new Size(20, 59);
            ConciliacaoSetaLabel.Dock = DockStyle.Right;
            ConciliacaoSetaLabel.Text = "6";
            ConciliacaoSetaLabel.Font = new Font("Webdings", (float)12);
            ConciliacaoSetaLabel.TextAlign = ContentAlignment.MiddleCenter;
            ConciliacaoSetaLabel.MouseHover += new EventHandler(this.RateioCTBSetaLabel_MouseHover);
            ConciliacaoSetaLabel.Click += new System.EventHandler(this.ConciliacaoSetaPanel_Click);
            ConciliacaoSetaLabel.Name = "ConciliacaoSetaLabel";
            ConciliacaoSetaLabel.ForeColor = Color.WhiteSmoke;

            ConciliacaoLabel = new Label();
            ConciliacaoLabel.AutoSize = false;
            ConciliacaoLabel.Size = new Size(_widthLabelMenuSistema, 0);
            ConciliacaoLabel.Dock = DockStyle.Fill;
            ConciliacaoLabel.Text = "Conciliações";
            ConciliacaoLabel.Font = CorFontepadraoLabel.Font;
            ConciliacaoLabel.ForeColor = Color.WhiteSmoke;
            ConciliacaoLabel.TextAlign = ContentAlignment.MiddleRight;
            ConciliacaoLabel.MouseHover += new EventHandler(this.RateioCTBLabel_MouseHover);
            ConciliacaoLabel.Click += new System.EventHandler(this.ConciliacaoSetaPanel_Click);
            ConciliacaoLabel.Name = "ConciliacaoLabel";

            ConciliacaoPanel.Controls.Add(ConciliacaoLabel);
            ConciliacaoPanel.Controls.Add(Divisoria2ConciliacaoImagem);
            ConciliacaoPanel.Controls.Add(ConciliacaoSetaLabel);
            ConciliacaoPanel.Controls.Add(DivisoriaConciliacaoImagem);
            SubMenuContabilidade.Controls.Add(ConciliacaoPanel);
            #endregion

            #region NotasFiscais
            NotasFiscaisPanel = new Panel();
            NotasFiscaisPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            NotasFiscaisPanel.Dock = DockStyle.Top;
            NotasFiscaisPanel.BackColor = _corFundoMenu;
            NotasFiscaisPanel.Name = "NotasFiscaisPanel";
            NotasFiscaisPanel.Enabled = Publicas._usuario.Desenvolvedor || Publicas._usuario.AcessaCTBNotasFicais;

            DivisoriaNotasFiscaisImagem = new PictureBox();
            DivisoriaNotasFiscaisImagem.Size = new Size(0, 4);
            DivisoriaNotasFiscaisImagem.Dock = DockStyle.Bottom;
            DivisoriaNotasFiscaisImagem.BackColor = _corFundoDivisao;

            Divisoria2NotasFiscaisImagem = new PictureBox();
            Divisoria2NotasFiscaisImagem.Size = new Size(1, 2);
            Divisoria2NotasFiscaisImagem.Dock = DockStyle.Right;
            Divisoria2NotasFiscaisImagem.BackColor = _corFundoDivisao; //System.Drawing.Color.FromArgb(2, 91, 149);

            NotasFiscaisSetaLabel = new Label();
            NotasFiscaisSetaLabel.AutoSize = false;
            NotasFiscaisSetaLabel.Size = new Size(20, 59);
            NotasFiscaisSetaLabel.Dock = DockStyle.Right;
            NotasFiscaisSetaLabel.Text = "6";
            NotasFiscaisSetaLabel.Font = new Font("Webdings", (float)12);
            NotasFiscaisSetaLabel.TextAlign = ContentAlignment.MiddleCenter;
            NotasFiscaisSetaLabel.MouseHover += new EventHandler(this.RateioCTBSetaLabel_MouseHover);
            NotasFiscaisSetaLabel.Click += new System.EventHandler(this.NotasFiscaisSetaPanel_Click);
            NotasFiscaisSetaLabel.Name = "NotasFiscaisSetaLabel";
            NotasFiscaisSetaLabel.ForeColor = Color.WhiteSmoke;

            NotasFiscaisLabel = new Label();
            NotasFiscaisLabel.AutoSize = false;
            NotasFiscaisLabel.Size = new Size(_widthLabelMenuSistema, 0);
            NotasFiscaisLabel.Dock = DockStyle.Fill;
            NotasFiscaisLabel.Text = "Notas Fiscais";
            NotasFiscaisLabel.Font = CorFontepadraoLabel.Font;
            NotasFiscaisLabel.ForeColor = Color.WhiteSmoke;
            NotasFiscaisLabel.TextAlign = ContentAlignment.MiddleRight;
            NotasFiscaisLabel.MouseHover += new EventHandler(this.RateioCTBLabel_MouseHover);
            NotasFiscaisLabel.Click += new System.EventHandler(this.NotasFiscaisSetaPanel_Click);
            NotasFiscaisLabel.Name = "NotasFiscaisLabel";

            NotasFiscaisPanel.Controls.Add(NotasFiscaisLabel);
            NotasFiscaisPanel.Controls.Add(Divisoria2NotasFiscaisImagem);
            NotasFiscaisPanel.Controls.Add(NotasFiscaisSetaLabel);
            NotasFiscaisPanel.Controls.Add(DivisoriaNotasFiscaisImagem);
            SubMenuContabilidade.Controls.Add(NotasFiscaisPanel);
            #endregion

            #region Parcelamento
            ParcelamentoCTBPanel = new Panel();
            ParcelamentoCTBPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            ParcelamentoCTBPanel.Dock = DockStyle.Top;
            ParcelamentoCTBPanel.BackColor = _corFundoMenu;
            ParcelamentoCTBPanel.Name = "ParcelamentoCTBPanel";
            ParcelamentoCTBPanel.Enabled = Publicas._usuario.Desenvolvedor || Publicas._usuario.AcessaParcelamento;

            DivisoriaParcelamentoCTBImagem = new PictureBox();
            DivisoriaParcelamentoCTBImagem.Size = new Size(0, 4);
            DivisoriaParcelamentoCTBImagem.Dock = DockStyle.Bottom;
            DivisoriaParcelamentoCTBImagem.BackColor = _corFundoDivisao;

            Divisoria2ParcelamentoCTBImagem = new PictureBox();
            Divisoria2ParcelamentoCTBImagem.Size = new Size(1, 2);
            Divisoria2ParcelamentoCTBImagem.Dock = DockStyle.Right;
            Divisoria2ParcelamentoCTBImagem.BackColor = _corFundoDivisao;

            ParcelamentoCTBSetaLabel = new Label();
            ParcelamentoCTBSetaLabel.AutoSize = false;
            ParcelamentoCTBSetaLabel.Size = new Size(20, 59);
            ParcelamentoCTBSetaLabel.Dock = DockStyle.Right;
            ParcelamentoCTBSetaLabel.Text = "6";
            ParcelamentoCTBSetaLabel.Font = new Font("Webdings", (float)12);
            ParcelamentoCTBSetaLabel.TextAlign = ContentAlignment.MiddleCenter;
            ParcelamentoCTBSetaLabel.MouseHover += new EventHandler(this.RateioCTBSetaLabel_MouseHover);
            ParcelamentoCTBSetaLabel.Click += new System.EventHandler(this.ParcelamentoCTBSetaPanel_Click);
            ParcelamentoCTBSetaLabel.Name = "ParcelamentoCTBSetaLabel";
            ParcelamentoCTBSetaLabel.ForeColor = Color.WhiteSmoke;

            ParcelamentoCTBLabel = new Label();
            ParcelamentoCTBLabel.AutoSize = false;
            ParcelamentoCTBLabel.Size = new Size(_widthLabelMenuSistema, 0);
            ParcelamentoCTBLabel.Dock = DockStyle.Fill;
            ParcelamentoCTBLabel.Text = "Parcelamento";
            ParcelamentoCTBLabel.Font = CorFontepadraoLabel.Font;
            ParcelamentoCTBLabel.ForeColor = Color.WhiteSmoke;
            ParcelamentoCTBLabel.TextAlign = ContentAlignment.MiddleRight;
            ParcelamentoCTBLabel.MouseHover += new EventHandler(this.RateioCTBLabel_MouseHover);
            ParcelamentoCTBLabel.Click += new System.EventHandler(this.ParcelamentoCTBSetaPanel_Click);
            ParcelamentoCTBLabel.Name = "ParcelamentoCTBLabel";

            ParcelamentoCTBPanel.Controls.Add(ParcelamentoCTBLabel);
            ParcelamentoCTBPanel.Controls.Add(Divisoria2ParcelamentoCTBImagem);
            ParcelamentoCTBPanel.Controls.Add(ParcelamentoCTBSetaLabel);
            ParcelamentoCTBPanel.Controls.Add(DivisoriaParcelamentoCTBImagem);
            SubMenuContabilidade.Controls.Add(ParcelamentoCTBPanel);
            #endregion

            #region Endividamento
            EndividamentoCTBPanel = new Panel();
            EndividamentoCTBPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            EndividamentoCTBPanel.Dock = DockStyle.Top;
            EndividamentoCTBPanel.BackColor = _corFundoMenu;
            EndividamentoCTBPanel.Name = "EndividamentoCTBPanel";
            EndividamentoCTBPanel.Enabled = Publicas._usuario.Desenvolvedor || Publicas._usuario.AcessaEndividamento;

            DivisoriaEndividamentoCTBImagem = new PictureBox();
            DivisoriaEndividamentoCTBImagem.Size = new Size(0, 4);
            DivisoriaEndividamentoCTBImagem.Dock = DockStyle.Bottom;
            DivisoriaEndividamentoCTBImagem.BackColor = _corFundoDivisao;

            Divisoria2EndividamentoCTBImagem = new PictureBox();
            Divisoria2EndividamentoCTBImagem.Size = new Size(1, 2);
            Divisoria2EndividamentoCTBImagem.Dock = DockStyle.Right;
            Divisoria2EndividamentoCTBImagem.BackColor = _corFundoDivisao; //System.Drawing.Color.FromArgb(2, 91, 149);

            EndividamentoCTBSetaLabel = new Label();
            EndividamentoCTBSetaLabel.AutoSize = false;
            EndividamentoCTBSetaLabel.Size = new Size(20, 59);
            EndividamentoCTBSetaLabel.Dock = DockStyle.Right;
            EndividamentoCTBSetaLabel.Text = "6";
            EndividamentoCTBSetaLabel.Font = new Font("Webdings", (float)12);
            EndividamentoCTBSetaLabel.TextAlign = ContentAlignment.MiddleCenter;
            EndividamentoCTBSetaLabel.MouseHover += new EventHandler(this.RateioCTBSetaLabel_MouseHover);
            EndividamentoCTBSetaLabel.Click += new System.EventHandler(this.EndividamentoCTBSetaPanel_Click);
            EndividamentoCTBSetaLabel.Name = "EndividamentoCTBSetaLabel";
            EndividamentoCTBSetaLabel.ForeColor = Color.WhiteSmoke;

            EndividamentoCTBLabel = new Label();
            EndividamentoCTBLabel.AutoSize = false;
            EndividamentoCTBLabel.Size = new Size(_widthLabelMenuSistema, 0);
            EndividamentoCTBLabel.Dock = DockStyle.Fill;
            EndividamentoCTBLabel.Text = "Endividamento";
            EndividamentoCTBLabel.Font = CorFontepadraoLabel.Font;
            EndividamentoCTBLabel.ForeColor = Color.WhiteSmoke;
            EndividamentoCTBLabel.TextAlign = ContentAlignment.MiddleRight;
            EndividamentoCTBLabel.MouseHover += new EventHandler(this.RateioCTBLabel_MouseHover);
            EndividamentoCTBLabel.Click += new System.EventHandler(this.EndividamentoCTBSetaPanel_Click);
            EndividamentoCTBLabel.Name = "EndividamentoCTBLabel";

            EndividamentoCTBPanel.Controls.Add(EndividamentoCTBLabel);
            EndividamentoCTBPanel.Controls.Add(Divisoria2EndividamentoCTBImagem);
            EndividamentoCTBPanel.Controls.Add(EndividamentoCTBSetaLabel);
            EndividamentoCTBPanel.Controls.Add(DivisoriaEndividamentoCTBImagem);
            SubMenuContabilidade.Controls.Add(EndividamentoCTBPanel);
            #endregion

            #region Lalur
            LalurCTBPanel = new Panel();
            LalurCTBPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            LalurCTBPanel.Dock = DockStyle.Top;
            LalurCTBPanel.BackColor = _corFundoMenu;
            LalurCTBPanel.Name = "LalurCTBPanel";
            LalurCTBPanel.Enabled = Publicas._usuario.Desenvolvedor || Publicas._usuario.AcessaLalur;

            DivisoriaLalurCTBImagem = new PictureBox();
            DivisoriaLalurCTBImagem.Size = new Size(0, 4);
            DivisoriaLalurCTBImagem.Dock = DockStyle.Bottom;
            DivisoriaLalurCTBImagem.BackColor = _corFundoDivisao;

            Divisoria2LalurCTBImagem = new PictureBox();
            Divisoria2LalurCTBImagem.Size = new Size(1, 2);
            Divisoria2LalurCTBImagem.Dock = DockStyle.Right;
            Divisoria2LalurCTBImagem.BackColor = _corFundoDivisao; //System.Drawing.Color.FromArgb(2, 91, 149);

            LalurCTBSetaLabel = new Label();
            LalurCTBSetaLabel.AutoSize = false;
            LalurCTBSetaLabel.Size = new Size(20, 59);
            LalurCTBSetaLabel.Dock = DockStyle.Right;
            LalurCTBSetaLabel.Text = "6";
            LalurCTBSetaLabel.Font = new Font("Webdings", (float)12);
            LalurCTBSetaLabel.TextAlign = ContentAlignment.MiddleCenter;
            LalurCTBSetaLabel.MouseHover += new EventHandler(this.RateioCTBSetaLabel_MouseHover);
            LalurCTBSetaLabel.Click += new System.EventHandler(this.LalurCTBSetaPanel_Click);
            LalurCTBSetaLabel.Name = "LalurCTBSetaLabel";
            LalurCTBSetaLabel.ForeColor = Color.WhiteSmoke;

            LalurCTBLabel = new Label();
            LalurCTBLabel.AutoSize = false;
            LalurCTBLabel.Size = new Size(_widthLabelMenuSistema, 0);
            LalurCTBLabel.Dock = DockStyle.Fill;
            LalurCTBLabel.Text = "Lalur";
            LalurCTBLabel.Font = CorFontepadraoLabel.Font;
            LalurCTBLabel.ForeColor = Color.WhiteSmoke;
            LalurCTBLabel.TextAlign = ContentAlignment.MiddleRight;
            LalurCTBLabel.MouseHover += new EventHandler(this.RateioCTBLabel_MouseHover);
            LalurCTBLabel.Click += new System.EventHandler(this.LalurCTBSetaPanel_Click);
            LalurCTBLabel.Name = "LalurCTBLabel";

            LalurCTBPanel.Controls.Add(LalurCTBLabel);
            LalurCTBPanel.Controls.Add(Divisoria2LalurCTBImagem);
            LalurCTBPanel.Controls.Add(LalurCTBSetaLabel);
            LalurCTBPanel.Controls.Add(DivisoriaLalurCTBImagem);
            SubMenuContabilidade.Controls.Add(LalurCTBPanel);
            #endregion

            #region DRE
            DRECTBPanel = new Panel();
            DRECTBPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            DRECTBPanel.Dock = DockStyle.Top;
            DRECTBPanel.BackColor = _corFundoMenu;
            DRECTBPanel.Name = "DRECTBPanel";
            DRECTBPanel.Enabled = Publicas._usuario.Desenvolvedor || Publicas._usuario.AcessaDRE;

            DivisoriaDRECTBImagem = new PictureBox();
            DivisoriaDRECTBImagem.Size = new Size(0, 4);
            DivisoriaDRECTBImagem.Dock = DockStyle.Bottom;
            DivisoriaDRECTBImagem.BackColor = _corFundoDivisao;

            Divisoria2DRECTBImagem = new PictureBox();
            Divisoria2DRECTBImagem.Size = new Size(1, 2);
            Divisoria2DRECTBImagem.Dock = DockStyle.Right;
            Divisoria2DRECTBImagem.BackColor = _corFundoDivisao; //System.Drawing.Color.FromArgb(2, 91, 149);

            DRECTBSetaLabel = new Label();
            DRECTBSetaLabel.AutoSize = false;
            DRECTBSetaLabel.Size = new Size(20, 59);
            DRECTBSetaLabel.Dock = DockStyle.Right;
            DRECTBSetaLabel.Text = "6";
            DRECTBSetaLabel.Font = new Font("Webdings", (float)12);
            DRECTBSetaLabel.TextAlign = ContentAlignment.MiddleCenter;
            DRECTBSetaLabel.MouseHover += new EventHandler(this.RateioCTBSetaLabel_MouseHover);
            DRECTBSetaLabel.Click += new System.EventHandler(this.DRECTBSetaPanel_Click);
            DRECTBSetaLabel.Name = "DRECTBSetaLabel";
            DRECTBSetaLabel.ForeColor = Color.WhiteSmoke;

            DRECTBLabel = new Label();
            DRECTBLabel.AutoSize = false;
            DRECTBLabel.Size = new Size(_widthLabelMenuSistema, 0);
            DRECTBLabel.Dock = DockStyle.Fill;
            DRECTBLabel.Text = "DRE";
            DRECTBLabel.Font = CorFontepadraoLabel.Font;
            DRECTBLabel.ForeColor = Color.WhiteSmoke;
            DRECTBLabel.TextAlign = ContentAlignment.MiddleRight;
            DRECTBLabel.MouseHover += new EventHandler(this.RateioCTBLabel_MouseHover);
            DRECTBLabel.Click += new System.EventHandler(this.DRECTBSetaPanel_Click);
            DRECTBLabel.Name = "DRECTBLabel";

            DRECTBPanel.Controls.Add(DRECTBLabel);
            DRECTBPanel.Controls.Add(Divisoria2DRECTBImagem);
            DRECTBPanel.Controls.Add(DRECTBSetaLabel);
            DRECTBPanel.Controls.Add(DivisoriaDRECTBImagem);
            SubMenuContabilidade.Controls.Add(DRECTBPanel);
            #endregion

            #region Rateio
            RateioCTBPanel = new Panel();
            RateioCTBPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            RateioCTBPanel.Dock = DockStyle.Top;
            RateioCTBPanel.BackColor = _corFundoMenu;
            RateioCTBPanel.Name = "RateioCTBPanel";
            RateioCTBPanel.Enabled = Publicas._usuario.Desenvolvedor || Publicas._usuario.AcessaRateioCTB;

            DivisoriaRateioCTBImagem = new PictureBox();
            DivisoriaRateioCTBImagem.Size = new Size(0, 4);
            DivisoriaRateioCTBImagem.Dock = DockStyle.Bottom;
            DivisoriaRateioCTBImagem.BackColor = _corFundoDivisao;

            Divisoria2RateioCTBImagem = new PictureBox();
            Divisoria2RateioCTBImagem.Size = new Size(1, 2);
            Divisoria2RateioCTBImagem.Dock = DockStyle.Right;
            Divisoria2RateioCTBImagem.BackColor = _corFundoDivisao; //System.Drawing.Color.FromArgb(2, 91, 149);

            RateioCTBSetaLabel = new Label();
            RateioCTBSetaLabel.AutoSize = false;
            RateioCTBSetaLabel.Size = new Size(20, 59);
            RateioCTBSetaLabel.Dock = DockStyle.Right;
            RateioCTBSetaLabel.Text = "6";
            RateioCTBSetaLabel.Font = new Font("Webdings", (float)12);
            RateioCTBSetaLabel.TextAlign = ContentAlignment.MiddleCenter;
            RateioCTBSetaLabel.MouseHover += new EventHandler(this.RateioCTBSetaLabel_MouseHover);
            RateioCTBSetaLabel.Click += new System.EventHandler(this.RateioCTBSetaPanel_Click);
            RateioCTBSetaLabel.Name = "RateioCTBSetaLabel";
            RateioCTBSetaLabel.ForeColor = Color.WhiteSmoke;

            RateioCTBLabel = new Label();
            RateioCTBLabel.AutoSize = false;
            RateioCTBLabel.Size = new Size(_widthLabelMenuSistema, 0);
            RateioCTBLabel.Dock = DockStyle.Fill;
            RateioCTBLabel.Text = "Rateio";
            RateioCTBLabel.Font = CorFontepadraoLabel.Font;
            RateioCTBLabel.ForeColor = Color.WhiteSmoke;
            RateioCTBLabel.TextAlign = ContentAlignment.MiddleRight;
            RateioCTBLabel.MouseHover += new EventHandler(this.RateioCTBLabel_MouseHover);
            RateioCTBLabel.Click += new System.EventHandler(this.RateioCTBSetaPanel_Click);
            RateioCTBLabel.Name = "RateioCTBLabel";

            RateioCTBPanel.Controls.Add(RateioCTBLabel);
            RateioCTBPanel.Controls.Add(Divisoria2RateioCTBImagem);
            RateioCTBPanel.Controls.Add(RateioCTBSetaLabel);
            RateioCTBPanel.Controls.Add(DivisoriaRateioCTBImagem);
            SubMenuContabilidade.Controls.Add(RateioCTBPanel);
            #endregion
        }

        private void ConciliacaoSetaPanel_Click(object sender, EventArgs e)
        {
            // abrir o SubMenu 
            ConciliacaoSetaLabel.Text = "3";

            if (!Publicas._TemaBlack)
            {
                ConciliacaoSetaLabel.ForeColor = Publicas._bordaEntrada;
                ConciliacaoLabel.ForeColor = Publicas._bordaEntrada;
            }
            else
            {
                ConciliacaoSetaLabel.ForeColor = Publicas._fonteMenuSelecionado;
                ConciliacaoLabel.ForeColor = Publicas._fonteMenuSelecionado;
            }
            ConciliacaoSetaLabel.BackColor = _corFundoMenu;

            if (SubMenuConciliacao != null)
            {
                FechaSubMenuConciliacao();
                return;
            }

            #region Cria estrutura 

            // Menu de fundo (onde agrupa os demais itens)
            SubMenuConciliacao = new Panel();
            SubMenuConciliacao.Size = new Size(155, _heidthMenuSistema * 5);
            SubMenuConciliacao.Location = new Point(MenuSistemaPanel.Width + SubMenuControladoria.Width + SubMenuContabilidade.Width + 6, AcessoAoMenuPanel.Height);
            SubMenuConciliacao.BackColor = _corFundoDivisao;
            this.Controls.Add(SubMenuConciliacao);
            SubMenuConciliacao.BringToFront();
            #endregion

            #region Folha 
            ConciliacaoFolhaPanel = new Panel();
            ConciliacaoFolhaPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            ConciliacaoFolhaPanel.Dock = DockStyle.Top;
            ConciliacaoFolhaPanel.BackColor = _corFundoMenu;
            ConciliacaoFolhaPanel.Name = "ConciliacaoFolhaPanel";
            ConciliacaoFolhaPanel.Enabled = false;
            //ConciliacaoFolhaPanel.Enabled = (Publicas._usuario.AcessaConciliacaoContabil && !Publicas._usuario.AcessaConciliacaoBCOApenasConsulta) || Publicas._usuario.Desenvolvedor;

            DivisoriaConciliacaoFolhaImagem = new PictureBox();
            DivisoriaConciliacaoFolhaImagem.Size = new Size(0, 4);
            DivisoriaConciliacaoFolhaImagem.Dock = DockStyle.Bottom;
            DivisoriaConciliacaoFolhaImagem.BackColor = _corFundoDivisao;

            Divisoria2ConciliacaoFolhaImagem = new PictureBox();
            Divisoria2ConciliacaoFolhaImagem.Size = new Size(1, 2);
            Divisoria2ConciliacaoFolhaImagem.Dock = DockStyle.Right;
            Divisoria2ConciliacaoFolhaImagem.BackColor = _corFundoDivisao; //System.Drawing.Color.FromArgb(2, 91, 149);

            ConciliacaoFolhaSetaLabel = new Label();
            ConciliacaoFolhaSetaLabel.AutoSize = false;
            ConciliacaoFolhaSetaLabel.Size = new Size(20, 59);
            ConciliacaoFolhaSetaLabel.Dock = DockStyle.Right;
            ConciliacaoFolhaSetaLabel.Text = "6";
            ConciliacaoFolhaSetaLabel.Font = new Font("Webdings", (float)12);
            ConciliacaoFolhaSetaLabel.TextAlign = ContentAlignment.MiddleCenter;
            //ConciliacaoFolhaSetaLabel.Click += new System.EventHandler(this.ConciliacaoFolhaSetaLabel_Click);
            ConciliacaoFolhaSetaLabel.MouseHover += new EventHandler(this.ConciliacaoBancariaSetaLabel_MouseHover);
            ConciliacaoFolhaSetaLabel.Name = "ConciliacaoFolhaSetaLabel";
            ConciliacaoFolhaSetaLabel.ForeColor = Color.WhiteSmoke;

            ConciliacaoFolhaLabel = new Label();
            ConciliacaoFolhaLabel.AutoSize = false;
            ConciliacaoFolhaLabel.Size = new Size(_widthLabelMenuSistema, 0);
            ConciliacaoFolhaLabel.Dock = DockStyle.Fill;
            ConciliacaoFolhaLabel.Text = "Folha de" + Environment.NewLine + "Pagamento";
            ConciliacaoFolhaLabel.Font = CorFontepadraoLabel.Font;
            ConciliacaoFolhaLabel.ForeColor = Color.WhiteSmoke;
            ConciliacaoFolhaLabel.TextAlign = ContentAlignment.MiddleRight;
            ConciliacaoFolhaLabel.MouseHover += new EventHandler(this.ConciliacaoBancariaLabel_MouseHover);
            //ConciliacaoFolhaLabel.Click += new System.EventHandler(this.ConciliacaoFolhaSetaLabel_Click);
            ConciliacaoFolhaLabel.Name = "ConciliacaoFolhaLabel";

            ConciliacaoFolhaPanel.Controls.Add(ConciliacaoFolhaLabel);
            ConciliacaoFolhaPanel.Controls.Add(Divisoria2ConciliacaoFolhaImagem);
            ConciliacaoFolhaPanel.Controls.Add(ConciliacaoFolhaSetaLabel);
            ConciliacaoFolhaPanel.Controls.Add(DivisoriaConciliacaoFolhaImagem);

            SubMenuConciliacao.Controls.Add(ConciliacaoFolhaPanel);
            #endregion                        

            #region Ativo 
            ConciliacaoAtivoPanel = new Panel();
            ConciliacaoAtivoPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            ConciliacaoAtivoPanel.Dock = DockStyle.Top;
            ConciliacaoAtivoPanel.BackColor = _corFundoMenu;
            ConciliacaoAtivoPanel.Name = "ConciliacaoAtivoPanel";
            ConciliacaoAtivoPanel.Enabled = (Publicas._usuario.AcessaConciliacaoContabil && !Publicas._usuario.AcessaConciliacaoBCOApenasConsulta) || Publicas._usuario.Desenvolvedor;

            DivisoriaConciliacaoAtivoImagem = new PictureBox();
            DivisoriaConciliacaoAtivoImagem.Size = new Size(0, 4);
            DivisoriaConciliacaoAtivoImagem.Dock = DockStyle.Bottom;
            DivisoriaConciliacaoAtivoImagem.BackColor = _corFundoDivisao;

            Divisoria2ConciliacaoAtivoImagem = new PictureBox();
            Divisoria2ConciliacaoAtivoImagem.Size = new Size(1, 2);
            Divisoria2ConciliacaoAtivoImagem.Dock = DockStyle.Right;
            Divisoria2ConciliacaoAtivoImagem.BackColor = _corFundoDivisao; //System.Drawing.Color.FromArgb(2, 91, 149);

            ConciliacaoAtivoSetaLabel = new Label();
            ConciliacaoAtivoSetaLabel.AutoSize = false;
            ConciliacaoAtivoSetaLabel.Size = new Size(20, 59);
            ConciliacaoAtivoSetaLabel.Dock = DockStyle.Right;
            ConciliacaoAtivoSetaLabel.Text = "6";
            ConciliacaoAtivoSetaLabel.Font = new Font("Webdings", (float)12);
            ConciliacaoAtivoSetaLabel.TextAlign = ContentAlignment.MiddleCenter;
            ConciliacaoAtivoSetaLabel.Click += new System.EventHandler(this.ConciliacaoAtivoSetaLabel_Click);
            ConciliacaoAtivoSetaLabel.MouseHover += new EventHandler(this.ConciliacaoBancariaSetaLabel_MouseHover);
            ConciliacaoAtivoSetaLabel.Name = "ConciliacaoAtivoSetaLabel";
            ConciliacaoAtivoSetaLabel.ForeColor = Color.WhiteSmoke;

            ConciliacaoAtivoLabel = new Label();
            ConciliacaoAtivoLabel.AutoSize = false;
            ConciliacaoAtivoLabel.Size = new Size(_widthLabelMenuSistema, 0);
            ConciliacaoAtivoLabel.Dock = DockStyle.Fill;
            ConciliacaoAtivoLabel.Text = "Ativo";
            ConciliacaoAtivoLabel.Font = CorFontepadraoLabel.Font;
            ConciliacaoAtivoLabel.ForeColor = Color.WhiteSmoke;
            ConciliacaoAtivoLabel.TextAlign = ContentAlignment.MiddleRight;
            ConciliacaoAtivoLabel.MouseHover += new EventHandler(this.ConciliacaoBancariaLabel_MouseHover);
            ConciliacaoAtivoLabel.Click += new System.EventHandler(this.ConciliacaoAtivoSetaLabel_Click);
            ConciliacaoAtivoLabel.Name = "ConciliacaoAtivoLabel";

            ConciliacaoAtivoPanel.Controls.Add(ConciliacaoAtivoLabel);
            ConciliacaoAtivoPanel.Controls.Add(Divisoria2ConciliacaoAtivoImagem);
            ConciliacaoAtivoPanel.Controls.Add(ConciliacaoAtivoSetaLabel);
            ConciliacaoAtivoPanel.Controls.Add(DivisoriaConciliacaoAtivoImagem);

            SubMenuConciliacao.Controls.Add(ConciliacaoAtivoPanel);
            #endregion                        

            #region Fornecedores 
            ConciliacaoFornecedoresPanel = new Panel();
            ConciliacaoFornecedoresPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            ConciliacaoFornecedoresPanel.Dock = DockStyle.Top;
            ConciliacaoFornecedoresPanel.BackColor = _corFundoMenu;
            ConciliacaoFornecedoresPanel.Name = "ConciliacaoFornecedoresPanel";
            ConciliacaoFornecedoresPanel.Enabled = (Publicas._usuario.AcessaConciliacaoContabil && !Publicas._usuario.AcessaConciliacaoBCOApenasConsulta) || Publicas._usuario.Desenvolvedor;


            DivisoriaConciliacaoFornecedoresImagem = new PictureBox();
            DivisoriaConciliacaoFornecedoresImagem.Size = new Size(0, 4);
            DivisoriaConciliacaoFornecedoresImagem.Dock = DockStyle.Bottom;
            DivisoriaConciliacaoFornecedoresImagem.BackColor = _corFundoDivisao;

            ConciliacaoFornecedoresLabel = new Label();
            ConciliacaoFornecedoresLabel.AutoSize = false;
            ConciliacaoFornecedoresLabel.Size = new Size(_widthLabelMenuSistema, 0);
            ConciliacaoFornecedoresLabel.Dock = DockStyle.Fill;
            ConciliacaoFornecedoresLabel.Text = "Fornecedores";
            ConciliacaoFornecedoresLabel.Font = CorFontepadraoLabel.Font;
            ConciliacaoFornecedoresLabel.ForeColor = Color.WhiteSmoke;
            ConciliacaoFornecedoresLabel.TextAlign = ContentAlignment.MiddleRight;
            ConciliacaoFornecedoresLabel.MouseHover += new EventHandler(this.ConciliacaoBancariaLabel_MouseHover);
            ConciliacaoFornecedoresLabel.Click += new System.EventHandler(this.ConciliacaoFornecedoresLabel_Click);
            ConciliacaoFornecedoresLabel.Name = "ConciliacaoFornecedoresLabel";

            FavoritoConciliacaoFornecedores = new PictureBox();
            FavoritoConciliacaoFornecedores.Size = new Size(10, 10);
            FavoritoConciliacaoFornecedores.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoConciliacaoFornecedores.Name = "ConciliacaoFornecedoresLabelPic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoConciliacaoFornecedores.Name))
            {
                FavoritoConciliacaoFornecedores.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoConciliacaoFornecedores.Left = 5;//TiposDePedidosLabel.Width - 10;
            FavoritoConciliacaoFornecedores.Top = 35;
            FavoritoConciliacaoFornecedores.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoConciliacaoFornecedores.Tag = "Conciliação " + ConciliacaoFornecedoresLabel.Text;
            FavoritoConciliacaoFornecedores.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoConciliacaoFornecedores.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoConciliacaoFornecedores.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoConciliacaoFornecedores.AccessibleName = "Contabilidade";

            ConciliacaoFornecedoresPanel.Controls.Add(ConciliacaoFornecedoresLabel);
            ConciliacaoFornecedoresPanel.Controls.Add(DivisoriaConciliacaoFornecedoresImagem);
            ConciliacaoFornecedoresPanel.Controls.Add(FavoritoConciliacaoFornecedores);
            FavoritoConciliacaoFornecedores.BringToFront();

            SubMenuConciliacao.Controls.Add(ConciliacaoFornecedoresPanel);
            #endregion                        
                 
            #region Clientes 
            ConciliacaoClientesPanel = new Panel();
            ConciliacaoClientesPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            ConciliacaoClientesPanel.Dock = DockStyle.Top;
            ConciliacaoClientesPanel.BackColor = _corFundoMenu;
            ConciliacaoClientesPanel.Name = "ConciliacaoClientesPanel";
            ConciliacaoClientesPanel.Enabled = (Publicas._usuario.AcessaConciliacaoContabil && !Publicas._usuario.AcessaConciliacaoBCOApenasConsulta) || Publicas._usuario.Desenvolvedor;

            DivisoriaConciliacaoClientesImagem = new PictureBox();
            DivisoriaConciliacaoClientesImagem.Size = new Size(0, 4);
            DivisoriaConciliacaoClientesImagem.Dock = DockStyle.Bottom;
            DivisoriaConciliacaoClientesImagem.BackColor = _corFundoDivisao;

            ConciliacaoClientesLabel = new Label();
            ConciliacaoClientesLabel.AutoSize = false;
            ConciliacaoClientesLabel.Size = new Size(_widthLabelMenuSistema, 0);
            ConciliacaoClientesLabel.Dock = DockStyle.Fill;
            ConciliacaoClientesLabel.Text = "Clientes";
            ConciliacaoClientesLabel.Font = CorFontepadraoLabel.Font;
            ConciliacaoClientesLabel.ForeColor = Color.WhiteSmoke;
            ConciliacaoClientesLabel.TextAlign = ContentAlignment.MiddleRight;
            ConciliacaoClientesLabel.MouseHover += new EventHandler(this.ConciliacaoBancariaLabel_MouseHover);
            ConciliacaoClientesLabel.Click += new System.EventHandler(this.ConciliacaoClientesSetaLabel_Click);
            ConciliacaoClientesLabel.Name = "ConciliacaoClientesLabel";
            
            FavoritoConciliacaoCliente = new PictureBox();
            FavoritoConciliacaoCliente.Size = new Size(10, 10);
            FavoritoConciliacaoCliente.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoConciliacaoCliente.Name = "ConciliacaoClientesLabelPic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoConciliacaoCliente.Name))
            {
                FavoritoConciliacaoCliente.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoConciliacaoCliente.Left = 5;//TiposDePedidosLabel.Width - 10;
            FavoritoConciliacaoCliente.Top = 35;
            FavoritoConciliacaoCliente.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoConciliacaoCliente.Tag = "Conciliação " + ConciliacaoClientesLabel.Text;
            FavoritoConciliacaoCliente.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoConciliacaoCliente.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoConciliacaoCliente.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoConciliacaoCliente.AccessibleName = "Contabilidade";
            
            ConciliacaoClientesPanel.Controls.Add(ConciliacaoClientesLabel);
            ConciliacaoClientesPanel.Controls.Add(DivisoriaConciliacaoClientesImagem);
            ConciliacaoClientesPanel.Controls.Add(FavoritoConciliacaoCliente);
            FavoritoConciliacaoCliente.BringToFront();

            SubMenuConciliacao.Controls.Add(ConciliacaoClientesPanel);
            #endregion                        

            #region Bancaria 
            ConciliacaoBancariaPanel = new Panel();
            ConciliacaoBancariaPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            ConciliacaoBancariaPanel.Dock = DockStyle.Top;
            ConciliacaoBancariaPanel.BackColor = _corFundoMenu;
            ConciliacaoBancariaPanel.Name = "ConciliacaoBancariaPanel";

            DivisoriaConciliacaoBancariaImagem = new PictureBox();
            DivisoriaConciliacaoBancariaImagem.Size = new Size(0, 4);
            DivisoriaConciliacaoBancariaImagem.Dock = DockStyle.Bottom;
            DivisoriaConciliacaoBancariaImagem.BackColor = _corFundoDivisao;

            ConciliacaoBancariaLabel = new Label();
            ConciliacaoBancariaLabel.AutoSize = false;
            ConciliacaoBancariaLabel.Size = new Size(_widthLabelMenuSistema, 0);
            ConciliacaoBancariaLabel.Dock = DockStyle.Fill;
            ConciliacaoBancariaLabel.Text = "Bancária";
            ConciliacaoBancariaLabel.Font = CorFontepadraoLabel.Font;
            ConciliacaoBancariaLabel.ForeColor = Color.WhiteSmoke;
            ConciliacaoBancariaLabel.TextAlign = ContentAlignment.MiddleRight;
            ConciliacaoBancariaLabel.MouseHover += new EventHandler(this.ConciliacaoBancariaLabel_MouseHover);
            ConciliacaoBancariaLabel.Click += new System.EventHandler(this.ConciliacaoBancariaLabel_Click);
            ConciliacaoBancariaLabel.Name = "ConciliacaoBancariaLabel";

            FavoritoConciliacaoBancaria = new PictureBox();
            FavoritoConciliacaoBancaria.Size = new Size(10, 10);
            FavoritoConciliacaoBancaria.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoConciliacaoBancaria.Name = "ConciliacaoBancariaLabelPic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoConciliacaoBancaria.Name))
            {
                FavoritoConciliacaoBancaria.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoConciliacaoBancaria.Left = 5;//TiposDePedidosLabel.Width - 10;
            FavoritoConciliacaoBancaria.Top = 35;
            FavoritoConciliacaoBancaria.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoConciliacaoBancaria.Tag = "Conciliação " + ConciliacaoBancariaLabel.Text;
            FavoritoConciliacaoBancaria.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoConciliacaoBancaria.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoConciliacaoBancaria.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoConciliacaoBancaria.AccessibleName = "Contabilidade";
            
            ConciliacaoBancariaPanel.Controls.Add(ConciliacaoBancariaLabel);
            ConciliacaoBancariaPanel.Controls.Add(DivisoriaConciliacaoBancariaImagem);
            ConciliacaoBancariaPanel.Controls.Add(FavoritoConciliacaoBancaria);
            FavoritoConciliacaoBancaria.BringToFront();

            SubMenuConciliacao.Controls.Add(ConciliacaoBancariaPanel);
            #endregion                        
            
        }

        private void ConciliacaoClientesSetaLabel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaContabil;
            Contabilidade.ConciliacaoClientes _tela = new Contabilidade.ConciliacaoClientes();
            _tela.Size = new Size(this.Width - 5, this.Height - (tituloPanel.Height + panel2.Height + 2));
            _tela.ShowDialog();
            NomePadrao();
        }

        private void ConciliacaoAtivoSetaLabel_Click(object sender, EventArgs e)
        {
            // abrir o SubMenu 
            ConciliacaoAtivoSetaLabel.Text = "3";

            if (!Publicas._TemaBlack)
            {
                ConciliacaoAtivoSetaLabel.ForeColor = Publicas._bordaEntrada;
                ConciliacaoAtivoLabel.ForeColor = Publicas._bordaEntrada;
            }
            else
            {
                ConciliacaoAtivoSetaLabel.ForeColor = Publicas._fonteMenuSelecionado;
                ConciliacaoAtivoLabel.ForeColor = Publicas._fonteMenuSelecionado;
            }
            ConciliacaoAtivoSetaLabel.BackColor = _corFundoMenu;

            if (SubMenuConciliacaoAtivoFolha != null)
            {
                FechaSubMenuConciliacaoAtivoFolha();
                return;
            }

            #region Cria estrutura 

            // Menu de fundo (onde agrupa os demais itens)
            SubMenuConciliacaoAtivoFolha = new Panel();
            SubMenuConciliacaoAtivoFolha.Size = new Size(155, _heidthMenuSistema * 2);
            SubMenuConciliacaoAtivoFolha.Location = new Point(MenuSistemaPanel.Width + SubMenuControladoria.Width + SubMenuContabilidade.Width + SubMenuConciliacao.Width + 8, AcessoAoMenuPanel.Height);
            SubMenuConciliacaoAtivoFolha.BackColor = _corFundoDivisao;
            this.Controls.Add(SubMenuConciliacaoAtivoFolha);
            SubMenuConciliacaoAtivoFolha.BringToFront();
            #endregion

            #region Conciliacao Tela 
            ConciliacaoAtivoTelaPanel = new Panel();
            ConciliacaoAtivoTelaPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            ConciliacaoAtivoTelaPanel.Dock = DockStyle.Top;
            ConciliacaoAtivoTelaPanel.BackColor = _corFundoMenu;
            ConciliacaoAtivoTelaPanel.Name = "ConciliacaoAtivoTelaPanel";

            DivisoriaConciliacaoAtivoTelaImagem = new PictureBox();
            DivisoriaConciliacaoAtivoTelaImagem.Size = new Size(0, 4);
            DivisoriaConciliacaoAtivoTelaImagem.Dock = DockStyle.Bottom;
            DivisoriaConciliacaoAtivoTelaImagem.BackColor = _corFundoDivisao;

            ConciliacaoAtivoTelaLabel = new Label();
            ConciliacaoAtivoTelaLabel.AutoSize = false;
            ConciliacaoAtivoTelaLabel.Size = new Size(_widthLabelMenuSistema, 0);
            ConciliacaoAtivoTelaLabel.Dock = DockStyle.Fill;
            ConciliacaoAtivoTelaLabel.Text = "Conciliação";
            ConciliacaoAtivoTelaLabel.Font = CorFontepadraoLabel.Font;
            ConciliacaoAtivoTelaLabel.ForeColor = Color.WhiteSmoke;
            ConciliacaoAtivoTelaLabel.TextAlign = ContentAlignment.MiddleRight;
            ConciliacaoAtivoTelaLabel.MouseHover += new EventHandler(this.ConciliacaoAtivoParametrosLabel_MouseHover);
            ConciliacaoAtivoTelaLabel.Click += new System.EventHandler(this.ConciliacaoAtivoTelaLabel_Click);
            ConciliacaoAtivoTelaLabel.Name = "ConciliacaoAtivoTelaLabel";

            FavoritoConciliacaoAtivoTela = new PictureBox();
            FavoritoConciliacaoAtivoTela.Size = new Size(10, 10);
            FavoritoConciliacaoAtivoTela.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoConciliacaoAtivoTela.Name = "ConciliacaoAtivoTelaLabelPic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoConciliacaoAtivoTela.Name))
            {
                FavoritoConciliacaoAtivoTela.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoConciliacaoAtivoTela.Left = 5;//TiposDePedidosLabel.Width - 10;
            FavoritoConciliacaoAtivoTela.Top = 35;
            FavoritoConciliacaoAtivoTela.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoConciliacaoAtivoTela.Tag = ConciliacaoAtivoTelaLabel.Text + " do ativo";
            FavoritoConciliacaoAtivoTela.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoConciliacaoAtivoTela.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoConciliacaoAtivoTela.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoConciliacaoAtivoTela.AccessibleName = "Contabilidade";

            ConciliacaoAtivoTelaPanel.Controls.Add(ConciliacaoAtivoTelaLabel);
            ConciliacaoAtivoTelaPanel.Controls.Add(DivisoriaConciliacaoAtivoTelaImagem);
            ConciliacaoAtivoTelaPanel.Controls.Add(FavoritoConciliacaoAtivoTela);
            FavoritoConciliacaoAtivoTela.BringToFront();

            SubMenuConciliacaoAtivoFolha.Controls.Add(ConciliacaoAtivoTelaPanel);
            #endregion                        

            #region AtivoParametros 
            ConciliacaoAtivoParametrosPanel = new Panel();
            ConciliacaoAtivoParametrosPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            ConciliacaoAtivoParametrosPanel.Dock = DockStyle.Top;
            ConciliacaoAtivoParametrosPanel.BackColor = _corFundoMenu;
            ConciliacaoAtivoParametrosPanel.Name = "ConciliacaoAtivoParametrosPanel";

            DivisoriaConciliacaoAtivoParametrosImagem = new PictureBox();
            DivisoriaConciliacaoAtivoParametrosImagem.Size = new Size(0, 4);
            DivisoriaConciliacaoAtivoParametrosImagem.Dock = DockStyle.Bottom;
            DivisoriaConciliacaoAtivoParametrosImagem.BackColor = _corFundoDivisao;

            ConciliacaoAtivoParametrosLabel = new Label();
            ConciliacaoAtivoParametrosLabel.AutoSize = false;
            ConciliacaoAtivoParametrosLabel.Size = new Size(_widthLabelMenuSistema, 0);
            ConciliacaoAtivoParametrosLabel.Dock = DockStyle.Fill;
            ConciliacaoAtivoParametrosLabel.Text = "Parâmetros";
            ConciliacaoAtivoParametrosLabel.Font = CorFontepadraoLabel.Font;
            ConciliacaoAtivoParametrosLabel.ForeColor = Color.WhiteSmoke;
            ConciliacaoAtivoParametrosLabel.TextAlign = ContentAlignment.MiddleRight;
            ConciliacaoAtivoParametrosLabel.MouseHover += new EventHandler(this.ConciliacaoAtivoParametrosLabel_MouseHover);
            ConciliacaoAtivoParametrosLabel.Click += new System.EventHandler(this.ConciliacaoAtivoParametrosLabel_Click);
            ConciliacaoAtivoParametrosLabel.Name = "ConciliacaoAtivoParametrosLabel";

            FavoritoConciliacaoAtivoParametros = new PictureBox();
            FavoritoConciliacaoAtivoParametros.Size = new Size(10, 10);
            FavoritoConciliacaoAtivoParametros.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoConciliacaoAtivoParametros.Name = "ConciliacaoAtivoParametrosLabelPic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoConciliacaoAtivoParametros.Name))
            {
                FavoritoConciliacaoAtivoParametros.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoConciliacaoAtivoParametros.Left = 5;//TiposDePedidosLabel.Width - 10;
            FavoritoConciliacaoAtivoParametros.Top = 35;
            FavoritoConciliacaoAtivoParametros.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoConciliacaoAtivoParametros.Tag = ConciliacaoAtivoParametrosLabel.Text + " do ativo";
            FavoritoConciliacaoAtivoParametros.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoConciliacaoAtivoParametros.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoConciliacaoAtivoParametros.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoConciliacaoAtivoParametros.AccessibleName = "Contabilidade";

            ConciliacaoAtivoParametrosPanel.Controls.Add(ConciliacaoAtivoParametrosLabel);
            ConciliacaoAtivoParametrosPanel.Controls.Add(DivisoriaConciliacaoAtivoParametrosImagem);
            ConciliacaoAtivoParametrosPanel.Controls.Add(FavoritoConciliacaoAtivoParametros);
            FavoritoConciliacaoAtivoParametros.BringToFront();

            SubMenuConciliacaoAtivoFolha.Controls.Add(ConciliacaoAtivoParametrosPanel);
            #endregion                        
        }

        private void ConciliacaoAtivoTelaLabel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaContabil;
            Contabilidade.ConciliacaoAtivo _tela = new Contabilidade.ConciliacaoAtivo();
            _tela.Size = new Size(this.Width - 5, this.Height - (tituloPanel.Height + panel2.Height + 2));
            _tela.ShowDialog();
            NomePadrao();
        }

        private void ConciliacaoAtivoParametrosLabel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaContabil;
            Contabilidade.ParametrosConciliacaoAtivo _tela = new Contabilidade.ParametrosConciliacaoAtivo();
            _tela.ShowDialog();
            NomePadrao();
        }

        private void ConciliacaoAtivoParametrosLabel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubConciliacaoAtivoFolha();
            FechaSubMenuAvaliacaoDesempenho();
            FechaSubMenuBiblioteca();
            FechaSubMenuCurriculo();
            FechaSubMenuCorridas();
            FechaSubMenuCadastroJuridico();
            FechaSubMenuESFArquivei();

            if (((Control)sender).Name.Contains("Parametros"))
            {
                ConciliacaoAtivoParametrosLabel.Font = new Font(ConciliacaoAtivoParametrosLabel.Font, FontStyle.Bold);
                ConciliacaoAtivoParametrosLabel.ForeColor = Publicas._fonteBotaoFocado;
                ConciliacaoAtivoParametrosLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Tela"))
            {
                ConciliacaoAtivoTelaLabel.Font = new Font(ConciliacaoAtivoTelaLabel.Font, FontStyle.Bold);
                ConciliacaoAtivoTelaLabel.ForeColor = Publicas._fonteBotaoFocado;
                ConciliacaoAtivoTelaLabel.BackColor = _corMenuSelecionado;
                return;
            }
        }

        private void MudaSelecaoDeCoresSubConciliacaoAtivoFolha()
        {
            ConciliacaoAtivoTelaLabel.Font = new Font(ConciliacaoAtivoTelaLabel.Font, ConciliacaoAtivoTelaLabel.Font.Style & ~FontStyle.Bold);
            ConciliacaoAtivoTelaLabel.BackColor = _corFundoMenu;
            ConciliacaoAtivoTelaLabel.ForeColor = Color.WhiteSmoke;

            ConciliacaoAtivoParametrosLabel.Font = new Font(ConciliacaoAtivoParametrosLabel.Font, ConciliacaoAtivoParametrosLabel.Font.Style & ~FontStyle.Bold);
            ConciliacaoAtivoParametrosLabel.BackColor = _corFundoMenu;
            ConciliacaoAtivoParametrosLabel.ForeColor = Color.WhiteSmoke;

        }

        private void FechaSubMenuConciliacaoAtivoFolha()
        {
            if (SubMenuConciliacaoAtivoFolha != null)
            {
                SubMenuConciliacaoAtivoFolha.Visible = false;
                this.Controls.Remove(SubMenuConciliacaoAtivoFolha);
                SubMenuConciliacaoAtivoFolha.Dispose();
                SubMenuConciliacaoAtivoFolha = null;
            }
        }

        private void ConciliacaoFornecedoresLabel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaContabil;
            Contabilidade.ConciliacaoFornecedores _tela = new Contabilidade.ConciliacaoFornecedores();
            _tela.Size = new Size(this.Width - 5, this.Height - (tituloPanel.Height + panel2.Height + 2));
            _tela.ShowDialog();
            NomePadrao();
        }

        private void ConciliacaoBancariaLabel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaContabil;
            Contabilidade.ConciliacaoBancaria _tela = new Contabilidade.ConciliacaoBancaria();
            _tela.Size = new Size(this.Width - 5, this.Height - (tituloPanel.Height + panel2.Height + 2));
            _tela.ShowDialog();
            NomePadrao();
        }

        private void ConciliacaoBancariaLabel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubConciliacao();
            FechaSubMenuAvaliacaoDesempenho();
            FechaSubMenuBiblioteca();
            FechaSubMenuCurriculo();
            FechaSubMenuCorridas();
            FechaSubMenuCadastroJuridico();
            FechaSubMenuESFArquivei();

            if (((Control)sender).Name.Contains("Bancaria"))
            {
                ConciliacaoBancariaLabel.Font = new Font(ConciliacaoBancariaLabel.Font, FontStyle.Bold);
                ConciliacaoBancariaLabel.ForeColor = Publicas._fonteBotaoFocado;
                ConciliacaoBancariaLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Cliente"))
            {
                ConciliacaoClientesLabel.Font = new Font(ConciliacaoClientesLabel.Font, FontStyle.Bold);
                ConciliacaoClientesLabel.ForeColor = Publicas._fonteBotaoFocado;
                ConciliacaoClientesLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Fornecedor"))
            {
                ConciliacaoFornecedoresLabel.Font = new Font(ConciliacaoFornecedoresLabel.Font, FontStyle.Bold);
                ConciliacaoFornecedoresLabel.ForeColor = Publicas._fonteBotaoFocado;
                ConciliacaoFornecedoresLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Ativo"))
            {
                ConciliacaoAtivoLabel.Font = new Font(ConciliacaoAtivoLabel.Font, FontStyle.Bold);
                ConciliacaoAtivoLabel.ForeColor = Publicas._fonteBotaoFocado;
                ConciliacaoAtivoLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Folha"))
            {
                ConciliacaoFolhaLabel.Font = new Font(ConciliacaoFolhaLabel.Font, FontStyle.Bold);
                ConciliacaoFolhaLabel.ForeColor = Publicas._fonteBotaoFocado;
                ConciliacaoFolhaLabel.BackColor = _corMenuSelecionado;
                return;
            }
        }

        private void ConciliacaoBancariaSetaLabel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubConciliacao();
            FechaSubMenuAvaliacaoDesempenho();
            FechaSubMenuBiblioteca();
            FechaSubMenuCurriculo();
            FechaSubMenuCorridas();
            FechaSubMenuCadastroJuridico();
            FechaSubMenuESFArquivei();

            if (((Control)sender).Name.Contains("Folha"))
            {
                ConciliacaoFolhaSetaLabel.Font = new Font(ConciliacaoFolhaSetaLabel.Font, FontStyle.Bold);
                ConciliacaoFolhaSetaLabel.ForeColor = Publicas._fonteBotaoFocado;
                ConciliacaoFolhaSetaLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Ativo"))
            {
                ConciliacaoAtivoSetaLabel.Font = new Font(ConciliacaoAtivoSetaLabel.Font, FontStyle.Bold);
                ConciliacaoAtivoSetaLabel.ForeColor = Publicas._fonteBotaoFocado;
                ConciliacaoAtivoSetaLabel.BackColor = _corMenuSelecionado;
                return;
            }
        }

        private void MudaSelecaoDeCoresSubConciliacao()
        {
            FechaSubMenuCadastrosCTB();
            FechaSubMenuConciliacaoAtivoFolha();

            ConciliacaoAtivoSetaLabel.Font = new Font(ConciliacaoAtivoSetaLabel.Font, ConciliacaoAtivoSetaLabel.Font.Style & ~FontStyle.Bold);
            ConciliacaoAtivoLabel.Font = new Font(ConciliacaoAtivoLabel.Font, ConciliacaoAtivoLabel.Font.Style & ~FontStyle.Bold);

            ConciliacaoAtivoSetaLabel.BackColor = _corFundoMenu;
            ConciliacaoAtivoLabel.BackColor = _corFundoMenu;

            ConciliacaoAtivoSetaLabel.ForeColor = Color.WhiteSmoke;
            ConciliacaoAtivoLabel.ForeColor = Color.WhiteSmoke;

            ConciliacaoAtivoSetaLabel.Text = "6";

            ConciliacaoFolhaSetaLabel.Font = new Font(ConciliacaoFolhaSetaLabel.Font, ConciliacaoFolhaSetaLabel.Font.Style & ~FontStyle.Bold);
            ConciliacaoFolhaLabel.Font = new Font(ConciliacaoFolhaLabel.Font, ConciliacaoFolhaLabel.Font.Style & ~FontStyle.Bold);
            
            ConciliacaoFolhaSetaLabel.BackColor = _corFundoMenu;
            ConciliacaoFolhaLabel.BackColor = _corFundoMenu;

            ConciliacaoFolhaSetaLabel.ForeColor = Color.WhiteSmoke;
            ConciliacaoFolhaLabel.ForeColor = Color.WhiteSmoke;

            ConciliacaoFolhaSetaLabel.Text = "6";

            ConciliacaoBancariaLabel.Font = new Font(ConciliacaoBancariaLabel.Font, ConciliacaoBancariaLabel.Font.Style & ~FontStyle.Bold);
            ConciliacaoBancariaLabel.BackColor = _corFundoMenu;
            ConciliacaoBancariaLabel.ForeColor = Color.WhiteSmoke;

            ConciliacaoFornecedoresLabel.Font = new Font(ConciliacaoFornecedoresLabel.Font, ConciliacaoFornecedoresLabel.Font.Style & ~FontStyle.Bold);
            ConciliacaoFornecedoresLabel.BackColor = _corFundoMenu;
            ConciliacaoFornecedoresLabel.ForeColor = Color.WhiteSmoke;

            
            ConciliacaoClientesLabel.Font = new Font(ConciliacaoClientesLabel.Font, ConciliacaoClientesLabel.Font.Style & ~FontStyle.Bold);
            ConciliacaoClientesLabel.BackColor = _corFundoMenu;
            ConciliacaoClientesLabel.ForeColor = Color.WhiteSmoke;
        }

        private void FechaSubMenuConciliacao()
        {
            FechaSubMenuConciliacaoAtivoFolha();
            
            if (SubMenuConciliacao != null)
            {
                SubMenuConciliacao.Visible = false;
                this.Controls.Remove(SubMenuConciliacao);
                SubMenuConciliacao.Dispose();
                SubMenuConciliacao = null;
            }
        }

        private void NotasFiscaisSetaPanel_Click(object sender, EventArgs e)
        {
            // abrir o SubMenu 
            NotasFiscaisSetaLabel.Text = "3";

            if (!Publicas._TemaBlack)
            {
                NotasFiscaisSetaLabel.ForeColor = Publicas._bordaEntrada;
                NotasFiscaisLabel.ForeColor = Publicas._bordaEntrada;
            }
            else
            {
                NotasFiscaisSetaLabel.ForeColor = Publicas._fonteMenuSelecionado;
                NotasFiscaisLabel.ForeColor = Publicas._fonteMenuSelecionado;
            }
            NotasFiscaisSetaLabel.BackColor = _corFundoMenu;

            if (SubMenuNotasFiscais != null)
            {
                FechaSubMenuNotasFiscais();
                return;
            }

            #region Cria estrutura 

            // Menu de fundo (onde agrupa os demais itens)
            SubMenuNotasFiscais = new Panel();
            SubMenuNotasFiscais.Size = new Size(155, _heidthMenuSistema * 2);
            SubMenuNotasFiscais.Location = new Point(MenuSistemaPanel.Width + SubMenuControladoria.Width + SubMenuContabilidade.Width + 6, AcessoAoMenuPanel.Height);
            SubMenuNotasFiscais.BackColor = _corFundoDivisao;
            this.Controls.Add(SubMenuNotasFiscais);
            SubMenuNotasFiscais.BringToFront();
            #endregion

            #region Conciliacao NotasFiscais
            ConciliacaoNotasFiscaisPanel = new Panel();
            ConciliacaoNotasFiscaisPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            ConciliacaoNotasFiscaisPanel.Dock = DockStyle.Top;
            ConciliacaoNotasFiscaisPanel.BackColor = _corFundoMenu;
            ConciliacaoNotasFiscaisPanel.Name = "ConciliacaoNotasFiscaisPanel";
            //ConciliacaoNotasFiscaisPanel.Enabled = Publicas._usuario.Desenvolvedor || Publicas._usuario;

            DivisoriaConciliacaoNotasFiscaisImagem = new PictureBox();
            DivisoriaConciliacaoNotasFiscaisImagem.Size = new Size(0, 4);
            DivisoriaConciliacaoNotasFiscaisImagem.Dock = DockStyle.Bottom;
            DivisoriaConciliacaoNotasFiscaisImagem.BackColor = _corFundoDivisao;

            ConciliacaoNotasFiscaisLabel = new Label();
            ConciliacaoNotasFiscaisLabel.AutoSize = false;
            ConciliacaoNotasFiscaisLabel.Size = new Size(_widthLabelMenuSistema, 0);
            ConciliacaoNotasFiscaisLabel.Dock = DockStyle.Fill;
            ConciliacaoNotasFiscaisLabel.Text = "Conferência";
            ConciliacaoNotasFiscaisLabel.Font = CorFontepadraoLabel.Font;
            ConciliacaoNotasFiscaisLabel.ForeColor = Color.WhiteSmoke;
            ConciliacaoNotasFiscaisLabel.TextAlign = ContentAlignment.MiddleRight;
            ConciliacaoNotasFiscaisLabel.MouseHover += new EventHandler(this.CadastrosNotasFiscaisSetaLabel_MouseHover);
            ConciliacaoNotasFiscaisLabel.Click += new System.EventHandler(this.ConciliacaoNotasFiscaisLabel_Click);
            ConciliacaoNotasFiscaisLabel.Name = "ConciliacaoNotasFiscaisLabel";

            FavoritoConciliacaoNotasFiscaisImagem = new PictureBox();
            FavoritoConciliacaoNotasFiscaisImagem.Size = new Size(10, 10);
            FavoritoConciliacaoNotasFiscaisImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoConciliacaoNotasFiscaisImagem.Name = ConciliacaoNotasFiscaisLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoConciliacaoNotasFiscaisImagem.Name))
            {
                FavoritoConciliacaoNotasFiscaisImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoConciliacaoNotasFiscaisImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoConciliacaoNotasFiscaisImagem.Top = 35;
            FavoritoConciliacaoNotasFiscaisImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoConciliacaoNotasFiscaisImagem.Tag = ConciliacaoNotasFiscaisLabel.Text + " das Notas Fiscais";
            FavoritoConciliacaoNotasFiscaisImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoConciliacaoNotasFiscaisImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoConciliacaoNotasFiscaisImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoConciliacaoNotasFiscaisImagem.AccessibleName = "Contabilidade";

            ConciliacaoNotasFiscaisPanel.Controls.Add(ConciliacaoNotasFiscaisLabel);
            ConciliacaoNotasFiscaisPanel.Controls.Add(DivisoriaConciliacaoNotasFiscaisImagem);
            ConciliacaoNotasFiscaisPanel.Controls.Add(FavoritoConciliacaoNotasFiscaisImagem);
            FavoritoConciliacaoNotasFiscaisImagem.BringToFront();

            SubMenuNotasFiscais.Controls.Add(ConciliacaoNotasFiscaisPanel);
            #endregion

            #region Cadastros 
            CadastrosNotasFiscaisPanel = new Panel();
            CadastrosNotasFiscaisPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            CadastrosNotasFiscaisPanel.Dock = DockStyle.Top;
            CadastrosNotasFiscaisPanel.BackColor = _corFundoMenu;
            CadastrosNotasFiscaisPanel.Name = "CadastrosNotasFiscaisPanel";
            CadastrosNotasFiscaisPanel.Enabled = Publicas._usuario.AcessaCadastrosCTBNotasFiscais || Publicas._usuario.Desenvolvedor;

            DivisoriaCadastrosNotasFiscaisImagem = new PictureBox();
            DivisoriaCadastrosNotasFiscaisImagem.Size = new Size(0, 4);
            DivisoriaCadastrosNotasFiscaisImagem.Dock = DockStyle.Bottom;
            DivisoriaCadastrosNotasFiscaisImagem.BackColor = _corFundoDivisao;

            Divisoria2CadastrosNotasFiscaisImagem = new PictureBox();
            Divisoria2CadastrosNotasFiscaisImagem.Size = new Size(1, 2);
            Divisoria2CadastrosNotasFiscaisImagem.Dock = DockStyle.Right;
            Divisoria2CadastrosNotasFiscaisImagem.BackColor = _corFundoDivisao; //System.Drawing.Color.FromArgb(2, 91, 149);

            CadastrosNotasFiscaisSetaLabel = new Label();
            CadastrosNotasFiscaisSetaLabel.AutoSize = false;
            CadastrosNotasFiscaisSetaLabel.Size = new Size(20, 59);
            CadastrosNotasFiscaisSetaLabel.Dock = DockStyle.Right;
            CadastrosNotasFiscaisSetaLabel.Text = "6";
            CadastrosNotasFiscaisSetaLabel.Font = new Font("Webdings", (float)12);
            CadastrosNotasFiscaisSetaLabel.TextAlign = ContentAlignment.MiddleCenter;
            CadastrosNotasFiscaisSetaLabel.Click += new System.EventHandler(this.CadastrosNotasFiscaisSetaLabel_Click);
            CadastrosNotasFiscaisSetaLabel.MouseHover += new EventHandler(this.CadastrosNotasFiscaisSetaLabel_MouseHover);
            CadastrosNotasFiscaisSetaLabel.Name = "CadastrosNotasFiscaisSetaLabel";
            CadastrosNotasFiscaisSetaLabel.ForeColor = Color.WhiteSmoke;

            CadastrosNotasFiscaisLabel = new Label();
            CadastrosNotasFiscaisLabel.AutoSize = false;
            CadastrosNotasFiscaisLabel.Size = new Size(_widthLabelMenuSistema, 0);
            CadastrosNotasFiscaisLabel.Dock = DockStyle.Fill;
            CadastrosNotasFiscaisLabel.Text = "Cadastros";
            CadastrosNotasFiscaisLabel.Font = CorFontepadraoLabel.Font;
            CadastrosNotasFiscaisLabel.ForeColor = Color.WhiteSmoke;
            CadastrosNotasFiscaisLabel.TextAlign = ContentAlignment.MiddleRight;
            CadastrosNotasFiscaisLabel.MouseHover += new EventHandler(this.CadastrosNotasFiscaisLabel_MouseHover);
            CadastrosNotasFiscaisLabel.Click += new System.EventHandler(this.CadastrosNotasFiscaisSetaLabel_Click);
            CadastrosNotasFiscaisLabel.Name = "CadastrosNotasFiscaisLabel";

            CadastrosNotasFiscaisPanel.Controls.Add(CadastrosNotasFiscaisLabel);
            CadastrosNotasFiscaisPanel.Controls.Add(Divisoria2CadastrosNotasFiscaisImagem);
            CadastrosNotasFiscaisPanel.Controls.Add(CadastrosNotasFiscaisSetaLabel);
            CadastrosNotasFiscaisPanel.Controls.Add(DivisoriaCadastrosNotasFiscaisImagem);

            SubMenuNotasFiscais.Controls.Add(CadastrosNotasFiscaisPanel);
            #endregion                        
        }

        private void ConciliacaoNotasFiscaisLabel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaContabil;
            Contabilidade.ConferenciaContabilNotas _tela = new Contabilidade.ConferenciaContabilNotas();
            _tela.Size = new Size(this.Width - 5, this.Height - (tituloPanel.Height + panel2.Height + 2));
            _tela.ShowDialog();
            NomePadrao();
        }

        private void CadastrosNotasFiscaisSetaLabel_Click(object sender, EventArgs e)
        {
            // abrir o SubMenu 
            CadastrosNotasFiscaisSetaLabel.Text = "3";

            if (!Publicas._TemaBlack)
            {
                CadastrosNotasFiscaisSetaLabel.ForeColor = Publicas._bordaEntrada;
                CadastrosNotasFiscaisLabel.ForeColor = Publicas._bordaEntrada;
            }
            else
            {
                CadastrosNotasFiscaisSetaLabel.ForeColor = Publicas._fonteMenuSelecionado;
                CadastrosNotasFiscaisLabel.ForeColor = Publicas._fonteMenuSelecionado;
            }
            CadastrosNotasFiscaisSetaLabel.BackColor = _corFundoMenu;

            if (SubMenuCadastrosCTB != null)
            {
                FechaSubMenuCadastrosCTB();
                return;
            }

            #region Cria estrutura 

            // Menu de fundo (onde agrupa os demais itens)
            SubMenuCadastrosCTB = new Panel();
            SubMenuCadastrosCTB.Size = new Size(155, _heidthMenuSistema * 1);
            SubMenuCadastrosCTB.Location = new Point(MenuSistemaPanel.Width + SubMenuControladoria.Width + SubMenuContabilidade.Width + SubMenuNotasFiscais.Width + 8, AcessoAoMenuPanel.Height);
            SubMenuCadastrosCTB.BackColor = _corFundoDivisao;
            this.Controls.Add(SubMenuCadastrosCTB);
            SubMenuCadastrosCTB.BringToFront();
            SubMenuCadastrosCTB.Visible = true;
            #endregion

            #region ParametrosNotasFiscais
            ParametrosNotasFiscaisPanel = new Panel();
            ParametrosNotasFiscaisPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            ParametrosNotasFiscaisPanel.Dock = DockStyle.Top;
            ParametrosNotasFiscaisPanel.BackColor = _corFundoMenu;
            ParametrosNotasFiscaisPanel.Name = "ParametrosNotasFiscaisPanel";

            DivisoriaParametrosNotasFiscaisImagem = new PictureBox();
            DivisoriaParametrosNotasFiscaisImagem.Size = new Size(0, 4);
            DivisoriaParametrosNotasFiscaisImagem.Dock = DockStyle.Bottom;
            DivisoriaParametrosNotasFiscaisImagem.BackColor = _corFundoDivisao;

            ParametrosNotasFiscaisLabel = new Label();
            ParametrosNotasFiscaisLabel.AutoSize = false;
            ParametrosNotasFiscaisLabel.Size = new Size(_widthLabelMenuSistema, 0);
            ParametrosNotasFiscaisLabel.Dock = DockStyle.Fill;
            ParametrosNotasFiscaisLabel.Text = "Parâmetros";
            ParametrosNotasFiscaisLabel.Font = CorFontepadraoLabel.Font;
            ParametrosNotasFiscaisLabel.ForeColor = Color.WhiteSmoke;
            ParametrosNotasFiscaisLabel.TextAlign = ContentAlignment.MiddleRight;
            ParametrosNotasFiscaisLabel.MouseHover += new EventHandler(this.ParametrosNotasFiscaisLabel_MouseHover);
            ParametrosNotasFiscaisLabel.Click += new System.EventHandler(this.ParametrosNotasFiscaisLabel_Click); 
            ParametrosNotasFiscaisLabel.Name = "ParametrosNotasFiscaisLabel";

            FavoritoParametrosNotasFiscaisImagem = new PictureBox();
            FavoritoParametrosNotasFiscaisImagem.Size = new Size(10, 10);
            FavoritoParametrosNotasFiscaisImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoParametrosNotasFiscaisImagem.Name = ParametrosNotasFiscaisLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoParametrosNotasFiscaisImagem.Name))
            {
                FavoritoParametrosNotasFiscaisImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoParametrosNotasFiscaisImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoParametrosNotasFiscaisImagem.Top = 35;
            FavoritoParametrosNotasFiscaisImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoParametrosNotasFiscaisImagem.Tag = ParametrosNotasFiscaisLabel.Text;
            FavoritoParametrosNotasFiscaisImagem.Tag = ParametrosNotasFiscaisLabel.Text + " Notas Fiscais";
            FavoritoParametrosNotasFiscaisImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoParametrosNotasFiscaisImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoParametrosNotasFiscaisImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoParametrosNotasFiscaisImagem.AccessibleName = "Contabilidade";

            ParametrosNotasFiscaisPanel.Controls.Add(ParametrosNotasFiscaisLabel);
            ParametrosNotasFiscaisPanel.Controls.Add(DivisoriaParametrosNotasFiscaisImagem);
            ParametrosNotasFiscaisPanel.Controls.Add(FavoritoParametrosNotasFiscaisImagem);
            FavoritoParametrosNotasFiscaisImagem.BringToFront();

            SubMenuCadastrosCTB.Controls.Add(ParametrosNotasFiscaisPanel);
            #endregion
        }

        private void ParametrosNotasFiscaisLabel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaContabil;
            Contabilidade.ParametrosConferenciaContabilNotas _tela = new Contabilidade.ParametrosConferenciaContabilNotas();
            _tela.ShowDialog();
            NomePadrao();
        }

        private void ParametrosNotasFiscaisLabel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubCadastroParametros();
            FechaSubMenuAvaliacaoDesempenho();
            FechaSubMenuBiblioteca();
            FechaSubMenuCurriculo();
            FechaSubMenuCorridas();
            FechaSubMenuCadastroJuridico();
            FechaSubMenuESFArquivei();
            
            if (((Control)sender).Name.StartsWith("ParametrosNotasFiscais"))
            {
                ParametrosNotasFiscaisLabel.Font = new Font(ParametrosNotasFiscaisLabel.Font, FontStyle.Bold);
                ParametrosNotasFiscaisLabel.ForeColor = Publicas._fonteBotaoFocado;
                ParametrosNotasFiscaisLabel.BackColor = _corMenuSelecionado;
                FavoritoParametrosNotasFiscaisImagem.BackColor = _corMenuSelecionado;
                return;
            }

        }

        private void MudaSelecaoDeCoresSubCadastroParametros()
        {
            ParametrosNotasFiscaisLabel.Font = new Font(ParametrosNotasFiscaisLabel.Font, ParametrosNotasFiscaisLabel.Font.Style & ~FontStyle.Bold);

            ParametrosNotasFiscaisLabel.BackColor = _corFundoMenu;

            ParametrosNotasFiscaisLabel.ForeColor = Color.WhiteSmoke;

            FavoritoParametrosNotasFiscaisImagem.BackColor = _corFundoMenu;
        }
        
        private void CadastrosNotasFiscaisLabel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubNotasFiscais();
            FechaSubMenuAvaliacaoDesempenho();
            FechaSubMenuBiblioteca();
            FechaSubMenuCurriculo();
            FechaSubMenuCorridas();
            FechaSubMenuCadastroJuridico();
            FechaSubMenuESFArquivei();

            if (((Control)sender).Name.StartsWith("Cadastros"))
            {
                CadastrosNotasFiscaisLabel.Font = new Font(CadastrosNotasFiscaisLabel.Font, FontStyle.Bold);
                CadastrosNotasFiscaisLabel.ForeColor = Publicas._fonteBotaoFocado;
                CadastrosNotasFiscaisLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.StartsWith("Conciliacao"))
            {
                ConciliacaoNotasFiscaisLabel.Font = new Font(ConciliacaoNotasFiscaisLabel.Font, FontStyle.Bold);
                ConciliacaoNotasFiscaisLabel.ForeColor = Publicas._fonteBotaoFocado;
                ConciliacaoNotasFiscaisLabel.BackColor = _corMenuSelecionado;
                FavoritoConciliacaoNotasFiscaisImagem.BackColor = _corMenuSelecionado;
                return;
            }
        }

        private void CadastrosNotasFiscaisSetaLabel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubNotasFiscais();
            FechaSubMenuAvaliacaoDesempenho();
            FechaSubMenuBiblioteca();
            FechaSubMenuCurriculo();
            FechaSubMenuCorridas();
            FechaSubMenuCadastroJuridico();
            FechaSubMenuESFArquivei();

            if (((Control)sender).Name.StartsWith("Cadastros"))
            {
                CadastrosNotasFiscaisSetaLabel.Font = new Font(CadastrosNotasFiscaisSetaLabel.Font, FontStyle.Bold);
                CadastrosNotasFiscaisSetaLabel.ForeColor = Publicas._fonteBotaoFocado;
                CadastrosNotasFiscaisSetaLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.StartsWith("Conciliacao"))
            {
                ConciliacaoNotasFiscaisLabel.Font = new Font(ConciliacaoNotasFiscaisLabel.Font, FontStyle.Bold);
                ConciliacaoNotasFiscaisLabel.ForeColor = Publicas._fonteBotaoFocado;
                ConciliacaoNotasFiscaisLabel.BackColor = _corMenuSelecionado;
                FavoritoConciliacaoNotasFiscaisImagem.BackColor = _corMenuSelecionado;
                return;
            }
        }
        
        private void MudaSelecaoDeCoresSubNotasFiscais()
        {
            FechaSubMenuCadastrosCTB();

            CadastrosNotasFiscaisSetaLabel.Font = new Font(CadastrosNotasFiscaisSetaLabel.Font, CadastrosNotasFiscaisSetaLabel.Font.Style & ~FontStyle.Bold);
            CadastrosNotasFiscaisLabel.Font = new Font(CadastrosNotasFiscaisLabel.Font, CadastrosNotasFiscaisLabel.Font.Style & ~FontStyle.Bold);
            ConciliacaoNotasFiscaisLabel.Font = new Font(ConciliacaoNotasFiscaisLabel.Font, ConciliacaoNotasFiscaisLabel.Font.Style & ~FontStyle.Bold);

            CadastrosNotasFiscaisSetaLabel.BackColor = _corFundoMenu;
            ConciliacaoNotasFiscaisLabel.BackColor = _corFundoMenu;
            CadastrosNotasFiscaisLabel.BackColor = _corFundoMenu;

            CadastrosNotasFiscaisSetaLabel.ForeColor = Color.WhiteSmoke;
            CadastrosNotasFiscaisLabel.ForeColor = Color.WhiteSmoke;
            ConciliacaoNotasFiscaisLabel.ForeColor = Color.WhiteSmoke;

            FavoritoConciliacaoNotasFiscaisImagem.BackColor = _corFundoMenu;
            CadastrosNotasFiscaisSetaLabel.Text = "6";
        }

        private void FechaSubMenuNotasFiscais()
        {
            FechaSubMenuBeneficioCTB();
            FechaSubMenuCadastrosCTB();

            if (SubMenuNotasFiscais != null)
            {
                SubMenuNotasFiscais.Visible = false;
                this.Controls.Remove(SubMenuNotasFiscais);
                SubMenuNotasFiscais.Dispose();
                SubMenuNotasFiscais = null;
            }
        }

        private void CigamSetaPanel_Click(object sender, EventArgs e)
        {
            // abrir o SubMenu 
            CigamSetaLabel.Text = "3";

            if (!Publicas._TemaBlack)
            {
                CigamSetaLabel.ForeColor = Publicas._bordaEntrada;
                CigamLabel.ForeColor = Publicas._bordaEntrada;
            }
            else
            {
                CigamSetaLabel.ForeColor = Publicas._fonteMenuSelecionado;
                CigamLabel.ForeColor = Publicas._fonteMenuSelecionado;
            }
            CigamSetaLabel.BackColor = _corFundoMenu;

            if (SubMenuCigam != null)
            {
                FechaSubMenuCigam();
                return;
            }

            #region Cria estrutura 

            // Menu de fundo (onde agrupa os demais itens)
            SubMenuCigam = new Panel();
            SubMenuCigam.Size = new Size(155, _heidthMenuSistema * 2);
            SubMenuCigam.Location = new Point(MenuSistemaPanel.Width + SubMenuControladoria.Width + SubMenuContabilidade.Width + 6, AcessoAoMenuPanel.Height);
            SubMenuCigam.BackColor = _corFundoDivisao;
            this.Controls.Add(SubMenuCigam);
            SubMenuCigam.BringToFront();
            #endregion

            #region Importar
            ImportacaoCigamPanel = new Panel();
            ImportacaoCigamPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            ImportacaoCigamPanel.Dock = DockStyle.Top;
            ImportacaoCigamPanel.BackColor = _corFundoMenu;
            ImportacaoCigamPanel.Name = "ImportacaoCigamPanel";
            //ImportacaoCigamPanel.Enabled = Publicas._usuario.Desenvolvedor;

            DivisoriaImportacaoCigamImagem = new PictureBox();
            DivisoriaImportacaoCigamImagem.Size = new Size(0, 4);
            DivisoriaImportacaoCigamImagem.Dock = DockStyle.Bottom;
            DivisoriaImportacaoCigamImagem.BackColor = _corFundoDivisao;

            ImportacaoCigamLabel = new Label();
            ImportacaoCigamLabel.AutoSize = false;
            ImportacaoCigamLabel.Size = new Size(_widthLabelMenuSistema, 0);
            ImportacaoCigamLabel.Dock = DockStyle.Fill;
            ImportacaoCigamLabel.Text = "Importar";
            ImportacaoCigamLabel.Font = CorFontepadraoLabel.Font;
            ImportacaoCigamLabel.ForeColor = Color.WhiteSmoke;
            ImportacaoCigamLabel.TextAlign = ContentAlignment.MiddleRight;
            ImportacaoCigamLabel.MouseHover += new EventHandler(this.ImportacaoCigamLabel_MouseHover);
            ImportacaoCigamLabel.Click += new System.EventHandler(this.ImportacaoCigamLabel_Click);
            ImportacaoCigamLabel.Name = "ImportacaoCigamLabel";

            FavoritoImportacaoCigamImagem = new PictureBox();
            FavoritoImportacaoCigamImagem.Size = new Size(10, 10);
            FavoritoImportacaoCigamImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoImportacaoCigamImagem.Name = ImportacaoCigamLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoImportacaoCigamImagem.Name))
            {
                FavoritoImportacaoCigamImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoImportacaoCigamImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoImportacaoCigamImagem.Top = 35;
            FavoritoImportacaoCigamImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoImportacaoCigamImagem.Tag = ImportacaoCigamLabel.Text + " da Cigam";
            FavoritoImportacaoCigamImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoImportacaoCigamImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoImportacaoCigamImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoImportacaoCigamImagem.AccessibleName = "Contabilidade";

            ImportacaoCigamPanel.Controls.Add(ImportacaoCigamLabel);
            ImportacaoCigamPanel.Controls.Add(DivisoriaImportacaoCigamImagem);
            ImportacaoCigamPanel.Controls.Add(FavoritoImportacaoCigamImagem);
            FavoritoImportacaoCigamImagem.BringToFront();

            SubMenuCigam.Controls.Add(ImportacaoCigamPanel);
            #endregion

            #region Limpar
            LimparCigamPanel = new Panel();
            LimparCigamPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            LimparCigamPanel.Dock = DockStyle.Top;
            LimparCigamPanel.BackColor = _corFundoMenu;
            LimparCigamPanel.Name = "LimparCigamPanel";
            LimparCigamPanel.Enabled = Publicas._usuario.Desenvolvedor;

            DivisoriaLimparCigamImagem = new PictureBox();
            DivisoriaLimparCigamImagem.Size = new Size(0, 4);
            DivisoriaLimparCigamImagem.Dock = DockStyle.Bottom;
            DivisoriaLimparCigamImagem.BackColor = _corFundoDivisao;

            LimparCigamLabel = new Label();
            LimparCigamLabel.AutoSize = false;
            LimparCigamLabel.Size = new Size(_widthLabelMenuSistema, 0);
            LimparCigamLabel.Dock = DockStyle.Fill;
            LimparCigamLabel.Text = "Limpar";
            LimparCigamLabel.Font = CorFontepadraoLabel.Font;
            LimparCigamLabel.ForeColor = Color.WhiteSmoke;
            LimparCigamLabel.TextAlign = ContentAlignment.MiddleRight;
            LimparCigamLabel.MouseHover += new EventHandler(this.ImportacaoCigamLabel_MouseHover);
            LimparCigamLabel.Click += new System.EventHandler(this.LimparCigamLabel_Click);
            LimparCigamLabel.Name = "LimparCigamLabel";

            FavoritoLimparCigamImagem = new PictureBox();
            FavoritoLimparCigamImagem.Size = new Size(10, 10);
            FavoritoLimparCigamImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoLimparCigamImagem.Name = LimparCigamLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoLimparCigamImagem.Name))
            {
                FavoritoLimparCigamImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoLimparCigamImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoLimparCigamImagem.Top = 35;
            FavoritoLimparCigamImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoLimparCigamImagem.Tag = LimparCigamLabel.Text + " da Cigam";
            FavoritoLimparCigamImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoLimparCigamImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoLimparCigamImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoLimparCigamImagem.AccessibleName = "Contabilidade";

            LimparCigamPanel.Controls.Add(LimparCigamLabel);
            LimparCigamPanel.Controls.Add(DivisoriaLimparCigamImagem);
            LimparCigamPanel.Controls.Add(FavoritoLimparCigamImagem);
            FavoritoLimparCigamImagem.BringToFront();

            SubMenuCigam.Controls.Add(LimparCigamPanel);
            #endregion
        }

        private void LimparCigamLabel_Click(object sender, EventArgs e)
        {

            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaContabil;
            Cigam.LimparTabela _tela = new Cigam.LimparTabela();
            _tela.ShowDialog();
            NomePadrao();
        }

        private void ImportacaoCigamLabel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaContabil;
            Cigam.ImportacaoManual _tela = new Cigam.ImportacaoManual();
            _tela.ShowDialog();
            NomePadrao();
        }

        private void ImportacaoCigamLabel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubCigam();
            FechaSubMenuAvaliacaoDesempenho();
            FechaSubMenuBiblioteca();
            FechaSubMenuCurriculo();
            FechaSubMenuCorridas();
            FechaSubMenuCadastroJuridico();
            FechaSubMenuESFArquivei();

            if (((Control)sender).Name.StartsWith("Importacao"))
            {
                ImportacaoCigamLabel.Font = new Font(ImportacaoCigamLabel.Font, FontStyle.Bold);
                ImportacaoCigamLabel.ForeColor = Publicas._fonteBotaoFocado;
                ImportacaoCigamLabel.BackColor = _corMenuSelecionado;
                FavoritoImportacaoCigamImagem.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.StartsWith("Limpar"))
            {
                LimparCigamLabel.Font = new Font(LimparCigamLabel.Font, FontStyle.Bold);
                LimparCigamLabel.ForeColor = Publicas._fonteBotaoFocado;
                LimparCigamLabel.BackColor = _corMenuSelecionado;
                FavoritoLimparCigamImagem.BackColor = _corMenuSelecionado;
                return;
            }
        }

        private void MudaSelecaoDeCoresSubCigam()
        {
            FechaSubMenuCadastrosCTB();

            LimparCigamLabel.Font = new Font(LimparCigamLabel.Font, LimparCigamLabel.Font.Style & ~FontStyle.Bold);
            ImportacaoCigamLabel.Font = new Font(ImportacaoCigamLabel.Font, ImportacaoCigamLabel.Font.Style & ~FontStyle.Bold);

            LimparCigamLabel.BackColor = _corFundoMenu;
            ImportacaoCigamLabel.BackColor = _corFundoMenu;

            LimparCigamLabel.ForeColor = Color.WhiteSmoke;
            ImportacaoCigamLabel.ForeColor = Color.WhiteSmoke;

            FavoritoLimparCigamImagem.BackColor = _corFundoMenu;
            FavoritoImportacaoCigamImagem.BackColor = _corFundoMenu;

        }

        private void FechaSubMenuCigam()
        {
            FechaSubMenuBeneficioCTB();
            FechaSubMenuCadastrosCTB();

            if (SubMenuCigam != null)
            {
                SubMenuCigam.Visible = false;
                this.Controls.Remove(SubMenuCigam);
                SubMenuCigam.Dispose();
                SubMenuCigam = null;
            }
        }

        private void ParcelamentoCTBSetaPanel_Click(object sender, EventArgs e)
        {
            // abrir o SubMenu 
            ParcelamentoCTBSetaLabel.Text = "3";

            if (!Publicas._TemaBlack)
            {
                ParcelamentoCTBSetaLabel.ForeColor = Publicas._bordaEntrada;
                ParcelamentoCTBLabel.ForeColor = Publicas._bordaEntrada;
            }
            else
            {
                ParcelamentoCTBSetaLabel.ForeColor = Publicas._fonteMenuSelecionado;
                ParcelamentoCTBLabel.ForeColor = Publicas._fonteMenuSelecionado;
            }
            ParcelamentoCTBSetaLabel.BackColor = _corFundoMenu;

            if (SubMenuRateioCTB != null)
            {
                FechaSubMenuRateioCTB();
                return;
            }

            #region Cria estrutura 
            // Menu de fundo (onde agrupa os demais itens)
            SubMenuRateioCTB = new Panel();
            SubMenuRateioCTB.Size = new Size(155, _heidthMenuSistema * 2);
            SubMenuRateioCTB.Location = new Point(MenuSistemaPanel.Width + SubMenuControladoria.Width + SubMenuContabilidade.Width + 6, AcessoAoMenuPanel.Height);
            SubMenuRateioCTB.BackColor = _corFundoDivisao;
            this.Controls.Add(SubMenuRateioCTB);
            SubMenuRateioCTB.BringToFront();
            #endregion

            #region Conciliacao Parcelamento
            ConciliacaoParcelamentoPanel = new Panel();
            ConciliacaoParcelamentoPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            ConciliacaoParcelamentoPanel.Dock = DockStyle.Top;
            ConciliacaoParcelamentoPanel.BackColor = _corFundoMenu;
            ConciliacaoParcelamentoPanel.Name = "ConciliacaoParcelamentoPanel";
            //ConciliacaoParcelamentoPanel.Enabled = Publicas._usuario.Desenvolvedor;

            DivisoriaConciliacaoParcelamentoImagem = new PictureBox();
            DivisoriaConciliacaoParcelamentoImagem.Size = new Size(0, 4);
            DivisoriaConciliacaoParcelamentoImagem.Dock = DockStyle.Bottom;
            DivisoriaConciliacaoParcelamentoImagem.BackColor = _corFundoDivisao;

            ConciliacaoParcelamentoLabel = new Label();
            ConciliacaoParcelamentoLabel.AutoSize = false;
            ConciliacaoParcelamentoLabel.Size = new Size(_widthLabelMenuSistema, 0);
            ConciliacaoParcelamentoLabel.Dock = DockStyle.Fill;
            ConciliacaoParcelamentoLabel.Text = "Conciliação";
            ConciliacaoParcelamentoLabel.Font = CorFontepadraoLabel.Font;
            ConciliacaoParcelamentoLabel.ForeColor = Color.WhiteSmoke;
            ConciliacaoParcelamentoLabel.TextAlign = ContentAlignment.MiddleRight;
            ConciliacaoParcelamentoLabel.MouseHover += new EventHandler(this.CadastrosParcelamentoSetaLabel_MouseHover);
            ConciliacaoParcelamentoLabel.Click += new System.EventHandler(this.ConciliacaoParcelamentoLabel_Click);
            ConciliacaoParcelamentoLabel.Name = "ConciliacaoParcelamentoLabel";

            FavoritoConciliacaoParcelamentoImagem = new PictureBox();
            FavoritoConciliacaoParcelamentoImagem.Size = new Size(10, 10);
            FavoritoConciliacaoParcelamentoImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoConciliacaoParcelamentoImagem.Name = ConciliacaoParcelamentoLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoConciliacaoParcelamentoImagem.Name))
            {
                FavoritoConciliacaoParcelamentoImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoConciliacaoParcelamentoImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoConciliacaoParcelamentoImagem.Top = 35;
            FavoritoConciliacaoParcelamentoImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoConciliacaoParcelamentoImagem.Tag = ConciliacaoParcelamentoLabel.Text + " do Parcelamento";
            FavoritoConciliacaoParcelamentoImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoConciliacaoParcelamentoImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoConciliacaoParcelamentoImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoConciliacaoParcelamentoImagem.AccessibleName = "Contabilidade";

            ConciliacaoParcelamentoPanel.Controls.Add(ConciliacaoParcelamentoLabel);
            ConciliacaoParcelamentoPanel.Controls.Add(DivisoriaConciliacaoParcelamentoImagem);
            ConciliacaoParcelamentoPanel.Controls.Add(FavoritoConciliacaoParcelamentoImagem);
            FavoritoConciliacaoParcelamentoImagem.BringToFront();

            SubMenuRateioCTB.Controls.Add(ConciliacaoParcelamentoPanel);
            #endregion

            #region Cadastros 
            CadastrosParcelamentoPanel = new Panel();
            CadastrosParcelamentoPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            CadastrosParcelamentoPanel.Dock = DockStyle.Top;
            CadastrosParcelamentoPanel.BackColor = _corFundoMenu;
            CadastrosParcelamentoPanel.Name = "CadastrosParcelamentoPanel";

            DivisoriaCadastrosParcelamentoImagem = new PictureBox();
            DivisoriaCadastrosParcelamentoImagem.Size = new Size(0, 4);
            DivisoriaCadastrosParcelamentoImagem.Dock = DockStyle.Bottom;
            DivisoriaCadastrosParcelamentoImagem.BackColor = _corFundoDivisao;

            Divisoria2CadastrosParcelamentoImagem = new PictureBox();
            Divisoria2CadastrosParcelamentoImagem.Size = new Size(1, 2);
            Divisoria2CadastrosParcelamentoImagem.Dock = DockStyle.Right;
            Divisoria2CadastrosParcelamentoImagem.BackColor = _corFundoDivisao; //System.Drawing.Color.FromArgb(2, 91, 149);

            CadastrosParcelamentoSetaLabel = new Label();
            CadastrosParcelamentoSetaLabel.AutoSize = false;
            CadastrosParcelamentoSetaLabel.Size = new Size(20, 59);
            CadastrosParcelamentoSetaLabel.Dock = DockStyle.Right;
            CadastrosParcelamentoSetaLabel.Text = "6";
            CadastrosParcelamentoSetaLabel.Font = new Font("Webdings", (float)12);
            CadastrosParcelamentoSetaLabel.TextAlign = ContentAlignment.MiddleCenter;
            CadastrosParcelamentoSetaLabel.Click += new System.EventHandler(this.CadastrosParcelamentoSetaLabel_Click);
            CadastrosParcelamentoSetaLabel.MouseHover += new EventHandler(this.CadastrosParcelamentoSetaLabel_MouseHover);
            CadastrosParcelamentoSetaLabel.Name = "CadastrosParcelamentoSetaLabel";
            CadastrosParcelamentoSetaLabel.ForeColor = Color.WhiteSmoke;

            CadastrosParcelamentoLabel = new Label();
            CadastrosParcelamentoLabel.AutoSize = false;
            CadastrosParcelamentoLabel.Size = new Size(_widthLabelMenuSistema, 0);
            CadastrosParcelamentoLabel.Dock = DockStyle.Fill;
            CadastrosParcelamentoLabel.Text = "Cadastros";
            CadastrosParcelamentoLabel.Font = CorFontepadraoLabel.Font;
            CadastrosParcelamentoLabel.ForeColor = Color.WhiteSmoke;
            CadastrosParcelamentoLabel.TextAlign = ContentAlignment.MiddleRight;
            CadastrosParcelamentoLabel.MouseHover += new EventHandler(this.CadastrosParcelamentoLabel_MouseHover);
            CadastrosParcelamentoLabel.Click += new System.EventHandler(this.CadastrosParcelamentoSetaLabel_Click);
            CadastrosParcelamentoLabel.Name = "CadastrosParcelamentoLabel";

            CadastrosParcelamentoPanel.Controls.Add(CadastrosParcelamentoLabel);
            CadastrosParcelamentoPanel.Controls.Add(Divisoria2CadastrosParcelamentoImagem);
            CadastrosParcelamentoPanel.Controls.Add(CadastrosParcelamentoSetaLabel);
            CadastrosParcelamentoPanel.Controls.Add(DivisoriaCadastrosParcelamentoImagem);

            SubMenuRateioCTB.Controls.Add(CadastrosParcelamentoPanel);
            #endregion                        
        }

        private void ConciliacaoParcelamentoLabel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaContabil;
            Contabilidade.ConciliacaoParcelamento _tela = new Contabilidade.ConciliacaoParcelamento();
            _tela.Size = new Size(this.Width - 5, this.Height - (tituloPanel.Height + panel2.Height + 2));
            _tela.ShowDialog();
            NomePadrao();
        }

        private void CadastrosParcelamentoLabel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubParcelamento();
            FechaSubMenuAvaliacaoDesempenho();
            FechaSubMenuBiblioteca();
            FechaSubMenuCurriculo();
            FechaSubMenuCorridas();
            FechaSubMenuCadastroJuridico();
            FechaSubMenuESFArquivei();

            if (((Control)sender).Name.StartsWith("Cadastros"))
            {
                CadastrosParcelamentoLabel.Font = new Font(CadastrosParcelamentoLabel.Font, FontStyle.Bold);
                CadastrosParcelamentoLabel.ForeColor = Publicas._fonteBotaoFocado;
                CadastrosParcelamentoLabel.BackColor = _corMenuSelecionado;
                return;
            }
            
            if (((Control)sender).Name.StartsWith("ConciliacaoParcelamento"))
            {
                ConciliacaoParcelamentoLabel.Font = new Font(ConciliacaoParcelamentoLabel.Font, FontStyle.Bold);
                ConciliacaoParcelamentoLabel.ForeColor = Publicas._fonteBotaoFocado;
                ConciliacaoParcelamentoLabel.BackColor = _corMenuSelecionado;
                FavoritoConciliacaoParcelamentoImagem.BackColor = _corMenuSelecionado;
                return;
            }
        }

        private void CadastrosParcelamentoSetaLabel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubParcelamento();
            FechaSubMenuAvaliacaoDesempenho();
            FechaSubMenuBiblioteca();
            FechaSubMenuCurriculo();
            FechaSubMenuCorridas();
            FechaSubMenuCadastroJuridico();
            FechaSubMenuESFArquivei();

            if (((Control)sender).Name.StartsWith("Cadastros"))
            {
                CadastrosParcelamentoSetaLabel.Font = new Font(CadastrosParcelamentoSetaLabel.Font, FontStyle.Bold);
                CadastrosParcelamentoSetaLabel.ForeColor = Publicas._fonteBotaoFocado;
                CadastrosParcelamentoSetaLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.StartsWith("ConciliacaoParcelamento"))
            {
                ConciliacaoParcelamentoLabel.Font = new Font(ConciliacaoParcelamentoLabel.Font, FontStyle.Bold);
                ConciliacaoParcelamentoLabel.ForeColor = Publicas._fonteBotaoFocado;
                ConciliacaoParcelamentoLabel.BackColor = _corMenuSelecionado;
                FavoritoConciliacaoParcelamentoImagem.BackColor = _corMenuSelecionado;
                return;
            }

        }

        private void MudaSelecaoDeCoresSubParcelamento()
        {
            FechaSubMenuCadastrosCTB();

            CadastrosParcelamentoSetaLabel.Font = new Font(CadastrosParcelamentoSetaLabel.Font, CadastrosParcelamentoSetaLabel.Font.Style & ~FontStyle.Bold);
            CadastrosParcelamentoLabel.Font = new Font(CadastrosParcelamentoLabel.Font, CadastrosParcelamentoLabel.Font.Style & ~FontStyle.Bold);
            ConciliacaoParcelamentoLabel.Font = new Font(ConciliacaoParcelamentoLabel.Font, ConciliacaoParcelamentoLabel.Font.Style & ~FontStyle.Bold);

            CadastrosParcelamentoSetaLabel.BackColor = _corFundoMenu;
            ConciliacaoParcelamentoLabel.BackColor = _corFundoMenu;
            CadastrosParcelamentoLabel.BackColor = _corFundoMenu;

            CadastrosParcelamentoSetaLabel.ForeColor = Color.WhiteSmoke;
            CadastrosParcelamentoLabel.ForeColor = Color.WhiteSmoke;
            ConciliacaoParcelamentoLabel.ForeColor = Color.WhiteSmoke;

            FavoritoConciliacaoParcelamentoImagem.BackColor = _corFundoMenu;
            CadastrosParcelamentoSetaLabel.Text = "6";
        }

        private void CadastrosParcelamentoSetaLabel_Click(object sender, EventArgs e)
        {

            // abrir o SubMenu 
            CadastrosParcelamentoSetaLabel.Text = "3";

            if (!Publicas._TemaBlack)
            {
                CadastrosParcelamentoSetaLabel.ForeColor = Publicas._bordaEntrada;
                CadastrosParcelamentoLabel.ForeColor = Publicas._bordaEntrada;
            }
            else
            {
                CadastrosParcelamentoSetaLabel.ForeColor = Publicas._fonteMenuSelecionado;
                CadastrosParcelamentoLabel.ForeColor = Publicas._fonteMenuSelecionado;
            }
            CadastrosParcelamentoSetaLabel.BackColor = _corFundoMenu;

            if (SubMenuCadastrosCTB != null)
            {
                FechaSubMenuCadastrosCTB();
                return;
            }

            #region Cria estrutura 

            // Menu de fundo (onde agrupa os demais itens)
            SubMenuCadastrosCTB = new Panel();
            SubMenuCadastrosCTB.Size = new Size(155, _heidthMenuSistema * 2);
            SubMenuCadastrosCTB.Location = new Point(MenuSistemaPanel.Width + SubMenuControladoria.Width + SubMenuContabilidade.Width + SubMenuRateioCTB.Width + 8, AcessoAoMenuPanel.Height);
            SubMenuCadastrosCTB.BackColor = _corFundoDivisao;
            this.Controls.Add(SubMenuCadastrosCTB);
            SubMenuCadastrosCTB.BringToFront();
            SubMenuCadastrosCTB.Visible = true;
            #endregion
                      
            #region Calculo Parcelamento
            CalculoParcelamentoPanel = new Panel();
            CalculoParcelamentoPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            CalculoParcelamentoPanel.Dock = DockStyle.Top;
            CalculoParcelamentoPanel.BackColor = _corFundoMenu;
            CalculoParcelamentoPanel.Name = "CalculoParcelamentoPanel";

            DivisoriaCalculoParcelamentoImagem = new PictureBox();
            DivisoriaCalculoParcelamentoImagem.Size = new Size(0, 4);
            DivisoriaCalculoParcelamentoImagem.Dock = DockStyle.Bottom;
            DivisoriaCalculoParcelamentoImagem.BackColor = _corFundoDivisao;

            CalculoParcelamentoLabel = new Label();
            CalculoParcelamentoLabel.AutoSize = false;
            CalculoParcelamentoLabel.Size = new Size(_widthLabelMenuSistema, 0);
            CalculoParcelamentoLabel.Dock = DockStyle.Fill;
            CalculoParcelamentoLabel.Text = "Parcelamento";
            CalculoParcelamentoLabel.Font = CorFontepadraoLabel.Font;
            CalculoParcelamentoLabel.ForeColor = Color.WhiteSmoke;
            CalculoParcelamentoLabel.TextAlign = ContentAlignment.MiddleRight;
            CalculoParcelamentoLabel.MouseHover += new EventHandler(this.SelicLabel_MouseHover);
            CalculoParcelamentoLabel.Click += new System.EventHandler(this.CalculoParcelamentoLabel_Click);
            CalculoParcelamentoLabel.Name = "CalculoParcelamentoLabel";

            FavoritoCalculoParcelamentoImagem = new PictureBox();
            FavoritoCalculoParcelamentoImagem.Size = new Size(10, 10);
            FavoritoCalculoParcelamentoImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoCalculoParcelamentoImagem.Name = CalculoParcelamentoLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoCalculoParcelamentoImagem.Name))
            {
                FavoritoCalculoParcelamentoImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoCalculoParcelamentoImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoCalculoParcelamentoImagem.Top = 35;
            FavoritoCalculoParcelamentoImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoCalculoParcelamentoImagem.Tag = CalculoParcelamentoLabel.Text;
            FavoritoCalculoParcelamentoImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoCalculoParcelamentoImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoCalculoParcelamentoImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoCalculoParcelamentoImagem.AccessibleName = "Contabilidade";

            CalculoParcelamentoPanel.Controls.Add(CalculoParcelamentoLabel);
            CalculoParcelamentoPanel.Controls.Add(DivisoriaCalculoParcelamentoImagem);
            CalculoParcelamentoPanel.Controls.Add(FavoritoCalculoParcelamentoImagem);
            FavoritoCalculoParcelamentoImagem.BringToFront();

            SubMenuCadastrosCTB.Controls.Add(CalculoParcelamentoPanel);
            #endregion

            #region Selic
            SelicPanel = new Panel();
            SelicPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            SelicPanel.Dock = DockStyle.Top;
            SelicPanel.BackColor = _corFundoMenu;
            SelicPanel.Name = "SelicPanel";

            DivisoriaSelicImagem = new PictureBox();
            DivisoriaSelicImagem.Size = new Size(0, 4);
            DivisoriaSelicImagem.Dock = DockStyle.Bottom;
            DivisoriaSelicImagem.BackColor = _corFundoDivisao;

            SelicLabel = new Label();
            SelicLabel.AutoSize = false;
            SelicLabel.Size = new Size(_widthLabelMenuSistema, 0);
            SelicLabel.Dock = DockStyle.Fill;
            SelicLabel.Text = "Selic";
            SelicLabel.Font = CorFontepadraoLabel.Font;
            SelicLabel.ForeColor = Color.WhiteSmoke;
            SelicLabel.TextAlign = ContentAlignment.MiddleRight;
            SelicLabel.MouseHover += new EventHandler(this.SelicLabel_MouseHover);
            SelicLabel.Click += new System.EventHandler(this.SelicLabel_Click);
            SelicLabel.Name = "SelicLabel";

            FavoritoSelicImagem = new PictureBox();
            FavoritoSelicImagem.Size = new Size(10, 10);
            FavoritoSelicImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoSelicImagem.Name = SelicLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoSelicImagem.Name))
            {
                FavoritoSelicImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoSelicImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoSelicImagem.Top = 35;
            FavoritoSelicImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoSelicImagem.Tag = SelicLabel.Text;
            FavoritoSelicImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoSelicImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoSelicImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoSelicImagem.AccessibleName = "Contabilidade";

            SelicPanel.Controls.Add(SelicLabel);
            SelicPanel.Controls.Add(DivisoriaSelicImagem);
            SelicPanel.Controls.Add(FavoritoSelicImagem);
            FavoritoSelicImagem.BringToFront();

            SubMenuCadastrosCTB.Controls.Add(SelicPanel);
            #endregion
        }

        private void CalculoParcelamentoLabel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema(); 

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaContabil;
            Contabilidade.Parcelamento _tela = new Contabilidade.Parcelamento();
            _tela.Size = new Size(this.Width - 5, this.Height - (tituloPanel.Height + panel2.Height + 2));
            _tela.ShowDialog();
            NomePadrao();
        }

        private void SelicLabel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaContabil;
            Contabilidade.Selic _tela = new Contabilidade.Selic();
            _tela.ShowDialog();
            NomePadrao();
        }

        private void SelicLabel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubCadastroParcelamento();
            FechaSubMenuAvaliacaoDesempenho();
            FechaSubMenuBiblioteca();
            FechaSubMenuCurriculo();
            FechaSubMenuCorridas();
            FechaSubMenuCadastroJuridico();
            FechaSubMenuESFArquivei();


            if (((Control)sender).Name.StartsWith("Selic"))
            {
                SelicLabel.Font = new Font(SelicLabel.Font, FontStyle.Bold);
                SelicLabel.ForeColor = Publicas._fonteBotaoFocado;
                SelicLabel.BackColor = _corMenuSelecionado;
                FavoritoSelicImagem.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.StartsWith("Calculo"))
            {
                CalculoParcelamentoLabel.Font = new Font(SelicLabel.Font, FontStyle.Bold);
                CalculoParcelamentoLabel.ForeColor = Publicas._fonteBotaoFocado;
                CalculoParcelamentoLabel.BackColor = _corMenuSelecionado;
                FavoritoCalculoParcelamentoImagem.BackColor = _corMenuSelecionado;
                return;
            }
        }
        
        private void MudaSelecaoDeCoresSubCadastroParcelamento()
        {
            CalculoParcelamentoLabel.Font = new Font(CalculoParcelamentoLabel.Font, CalculoParcelamentoLabel.Font.Style & ~FontStyle.Bold);
            SelicLabel.Font = new Font(SelicLabel.Font, SelicLabel.Font.Style & ~FontStyle.Bold);

            CalculoParcelamentoLabel.BackColor = _corFundoMenu;
            SelicLabel.BackColor = _corFundoMenu;

            CalculoParcelamentoLabel.ForeColor = Color.WhiteSmoke;
            SelicLabel.ForeColor = Color.WhiteSmoke;

            FavoritoCalculoParcelamentoImagem.BackColor = _corFundoMenu;
            FavoritoSelicImagem.BackColor = _corFundoMenu;
        }

        private void EndividamentoCTBSetaPanel_Click(object sender, EventArgs e)
        {
            // abrir o SubMenu 
            EndividamentoCTBSetaLabel.Text = "3";

            if (!Publicas._TemaBlack)
            {
                EndividamentoCTBSetaLabel.ForeColor = Publicas._bordaEntrada;
                EndividamentoCTBLabel.ForeColor = Publicas._bordaEntrada;
            }
            else
            {
                EndividamentoCTBSetaLabel.ForeColor = Publicas._fonteMenuSelecionado;
                EndividamentoCTBLabel.ForeColor = Publicas._fonteMenuSelecionado;
            }
            EndividamentoCTBSetaLabel.BackColor = _corFundoMenu;

            if (SubMenuRateioCTB != null)
            {
                FechaSubMenuRateioCTB();
                return;
            }

            #region Cria estrutura 
            // Menu de fundo (onde agrupa os demais itens)
            SubMenuRateioCTB = new Panel();
            SubMenuRateioCTB.Size = new Size(155, _heidthMenuSistema * 1);
            SubMenuRateioCTB.Location = new Point(MenuSistemaPanel.Width + SubMenuControladoria.Width + SubMenuContabilidade.Width + 6, AcessoAoMenuPanel.Height);
            SubMenuRateioCTB.BackColor = _corFundoDivisao;
            this.Controls.Add(SubMenuRateioCTB);
            SubMenuRateioCTB.BringToFront();
            #endregion

            #region Cadastros 
            CadastrosEndividamentoPanel = new Panel();
            CadastrosEndividamentoPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            CadastrosEndividamentoPanel.Dock = DockStyle.Top;
            CadastrosEndividamentoPanel.BackColor = _corFundoMenu;
            CadastrosEndividamentoPanel.Name = "CadastrosEndividamentoPanel";
            
            DivisoriaCadastrosEndividamentoImagem = new PictureBox();
            DivisoriaCadastrosEndividamentoImagem.Size = new Size(0, 4);
            DivisoriaCadastrosEndividamentoImagem.Dock = DockStyle.Bottom;
            DivisoriaCadastrosEndividamentoImagem.BackColor = _corFundoDivisao;

            Divisoria2CadastrosEndividamentoImagem = new PictureBox();
            Divisoria2CadastrosEndividamentoImagem.Size = new Size(1, 2);
            Divisoria2CadastrosEndividamentoImagem.Dock = DockStyle.Right;
            Divisoria2CadastrosEndividamentoImagem.BackColor = _corFundoDivisao; //System.Drawing.Color.FromArgb(2, 91, 149);

            CadastrosEndividamentoSetaLabel = new Label();
            CadastrosEndividamentoSetaLabel.AutoSize = false;
            CadastrosEndividamentoSetaLabel.Size = new Size(20, 59);
            CadastrosEndividamentoSetaLabel.Dock = DockStyle.Right;
            CadastrosEndividamentoSetaLabel.Text = "6";
            CadastrosEndividamentoSetaLabel.Font = new Font("Webdings", (float)12);
            CadastrosEndividamentoSetaLabel.TextAlign = ContentAlignment.MiddleCenter;
            CadastrosEndividamentoSetaLabel.Click += new System.EventHandler(this.CadastrosEndividamentoSetaLabel_Click);
            CadastrosEndividamentoSetaLabel.MouseHover += new EventHandler(this.CadastrosEndividamentoSetaLabel_MouseHover);
            CadastrosEndividamentoSetaLabel.Name = "CadastrosEndividamentoSetaLabel";
            CadastrosEndividamentoSetaLabel.ForeColor = Color.WhiteSmoke;

            CadastrosEndividamentoLabel = new Label();
            CadastrosEndividamentoLabel.AutoSize = false;
            CadastrosEndividamentoLabel.Size = new Size(_widthLabelMenuSistema, 0);
            CadastrosEndividamentoLabel.Dock = DockStyle.Fill;
            CadastrosEndividamentoLabel.Text = "Cadastros";
            CadastrosEndividamentoLabel.Font = CorFontepadraoLabel.Font;
            CadastrosEndividamentoLabel.ForeColor = Color.WhiteSmoke;
            CadastrosEndividamentoLabel.TextAlign = ContentAlignment.MiddleRight;
            CadastrosEndividamentoLabel.MouseHover += new EventHandler(this.CadastrosEndividamentoLabel_MouseHover);
            CadastrosEndividamentoLabel.Click += new System.EventHandler(this.CadastrosEndividamentoSetaLabel_Click);
            CadastrosEndividamentoLabel.Name = "CadastrosEndividamentoLabel";

            CadastrosEndividamentoPanel.Controls.Add(CadastrosEndividamentoLabel);
            CadastrosEndividamentoPanel.Controls.Add(Divisoria2CadastrosEndividamentoImagem);
            CadastrosEndividamentoPanel.Controls.Add(CadastrosEndividamentoSetaLabel);
            CadastrosEndividamentoPanel.Controls.Add(DivisoriaCadastrosEndividamentoImagem);

            SubMenuRateioCTB.Controls.Add(CadastrosEndividamentoPanel);
            #endregion
        }

        private void CadastrosEndividamentoSetaLabel_Click(object sender, EventArgs e)
        {
            // abrir o SubMenu 
            CadastrosEndividamentoSetaLabel.Text = "3";

            if (!Publicas._TemaBlack)
            {
                CadastrosEndividamentoSetaLabel.ForeColor = Publicas._bordaEntrada;
                CadastrosEndividamentoLabel.ForeColor = Publicas._bordaEntrada;
            }
            else
            {
                CadastrosEndividamentoSetaLabel.ForeColor = Publicas._fonteMenuSelecionado;
                CadastrosEndividamentoLabel.ForeColor = Publicas._fonteMenuSelecionado;
            }
            CadastrosEndividamentoSetaLabel.BackColor = _corFundoMenu;

            if (SubMenuCadastrosCTB != null)
            {
                FechaSubMenuCadastrosCTB();
                return;
            }

            #region Cria estrutura 

            // Menu de fundo (onde agrupa os demais itens)
            SubMenuCadastrosCTB = new Panel();
            SubMenuCadastrosCTB.Size = new Size(155, _heidthMenuSistema * 2);
            SubMenuCadastrosCTB.Location = new Point(MenuSistemaPanel.Width + SubMenuControladoria.Width + SubMenuContabilidade.Width + SubMenuRateioCTB.Width + 8, AcessoAoMenuPanel.Height);
            SubMenuCadastrosCTB.BackColor = _corFundoDivisao;
            this.Controls.Add(SubMenuCadastrosCTB);
            SubMenuCadastrosCTB.BringToFront();
            SubMenuCadastrosCTB.Visible = true;
            #endregion

            #region Valores
            ValoresEndividamentoPanel = new Panel();
            ValoresEndividamentoPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            ValoresEndividamentoPanel.Dock = DockStyle.Top;
            ValoresEndividamentoPanel.BackColor = _corFundoMenu;
            ValoresEndividamentoPanel.Name = "ValoresEndividamentoPanel";

            DivisoriaValoresEndividamentoImagem = new PictureBox();
            DivisoriaValoresEndividamentoImagem.Size = new Size(0, 4);
            DivisoriaValoresEndividamentoImagem.Dock = DockStyle.Bottom;
            DivisoriaValoresEndividamentoImagem.BackColor = _corFundoDivisao;

            ValoresEndividamentoLabel = new Label();
            ValoresEndividamentoLabel.AutoSize = false;
            ValoresEndividamentoLabel.Size = new Size(_widthLabelMenuSistema, 0);
            ValoresEndividamentoLabel.Dock = DockStyle.Fill;
            ValoresEndividamentoLabel.Text = "Valores";
            ValoresEndividamentoLabel.Font = CorFontepadraoLabel.Font;
            ValoresEndividamentoLabel.ForeColor = Color.WhiteSmoke;
            ValoresEndividamentoLabel.TextAlign = ContentAlignment.MiddleRight;
            ValoresEndividamentoLabel.MouseHover += new EventHandler(this.ParametrosEndividamentoLabel_MouseHover);
            ValoresEndividamentoLabel.Click += new System.EventHandler(this.ValoresEndividamentoLabel_Click);
            ValoresEndividamentoLabel.Name = "ValoresEndividamentoLabel";

            FavoritoValoresEndividamentoImagem = new PictureBox();
            FavoritoValoresEndividamentoImagem.Size = new Size(10, 10);
            FavoritoValoresEndividamentoImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoValoresEndividamentoImagem.Name = ValoresEndividamentoLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoValoresEndividamentoImagem.Name))
            {
                FavoritoValoresEndividamentoImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoValoresEndividamentoImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoValoresEndividamentoImagem.Top = 35;
            FavoritoValoresEndividamentoImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoValoresEndividamentoImagem.Tag = ValoresEndividamentoLabel.Text + " Endividamento";
            FavoritoValoresEndividamentoImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoValoresEndividamentoImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoValoresEndividamentoImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoValoresEndividamentoImagem.AccessibleName = "Contabilidade";

            ValoresEndividamentoPanel.Controls.Add(ValoresEndividamentoLabel);
            ValoresEndividamentoPanel.Controls.Add(DivisoriaValoresEndividamentoImagem);
            ValoresEndividamentoPanel.Controls.Add(FavoritoValoresEndividamentoImagem);
            FavoritoValoresEndividamentoImagem.BringToFront();

            SubMenuCadastrosCTB.Controls.Add(ValoresEndividamentoPanel);
            #endregion

            #region Parametros 
            ParametrosEndividamentoPanel = new Panel();
            ParametrosEndividamentoPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            ParametrosEndividamentoPanel.Dock = DockStyle.Top;
            ParametrosEndividamentoPanel.BackColor = _corFundoMenu;
            ParametrosEndividamentoPanel.Name = "ParametrosEndividamentoPanel";

            DivisoriaParametrosEndividamentoImagem = new PictureBox();
            DivisoriaParametrosEndividamentoImagem.Size = new Size(0, 4);
            DivisoriaParametrosEndividamentoImagem.Dock = DockStyle.Bottom;
            DivisoriaParametrosEndividamentoImagem.BackColor = _corFundoDivisao;

            ParametrosEndividamentoLabel = new Label();
            ParametrosEndividamentoLabel.AutoSize = false;
            ParametrosEndividamentoLabel.Size = new Size(_widthLabelMenuSistema, 0);
            ParametrosEndividamentoLabel.Dock = DockStyle.Fill;
            ParametrosEndividamentoLabel.Text = "Parâmetros";
            ParametrosEndividamentoLabel.Font = CorFontepadraoLabel.Font;
            ParametrosEndividamentoLabel.ForeColor = Color.WhiteSmoke;
            ParametrosEndividamentoLabel.TextAlign = ContentAlignment.MiddleRight;
            ParametrosEndividamentoLabel.MouseHover += new EventHandler(this.ParametrosEndividamentoLabel_MouseHover);
            ParametrosEndividamentoLabel.Click += new System.EventHandler(this.ParametrosEndividamentoLabel_Click);
            ParametrosEndividamentoLabel.Name = "ParametrosEndividamentoLabel";

            FavoritoParametrosEndividamentoImagem = new PictureBox();
            FavoritoParametrosEndividamentoImagem.Size = new Size(10, 10);
            FavoritoParametrosEndividamentoImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoParametrosEndividamentoImagem.Name = ParametrosEndividamentoLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoParametrosEndividamentoImagem.Name))
            {
                FavoritoParametrosEndividamentoImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoParametrosEndividamentoImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoParametrosEndividamentoImagem.Top = 35;
            FavoritoParametrosEndividamentoImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoParametrosEndividamentoImagem.Tag = ParametrosEndividamentoLabel.Text + " Endividamento";
            FavoritoParametrosEndividamentoImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoParametrosEndividamentoImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoParametrosEndividamentoImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoParametrosEndividamentoImagem.AccessibleName = "Contabilidade";

            ParametrosEndividamentoPanel.Controls.Add(ParametrosEndividamentoLabel);
            ParametrosEndividamentoPanel.Controls.Add(DivisoriaParametrosEndividamentoImagem);
            ParametrosEndividamentoPanel.Controls.Add(FavoritoParametrosEndividamentoImagem);
            FavoritoParametrosEndividamentoImagem.BringToFront();

            SubMenuCadastrosCTB.Controls.Add(ParametrosEndividamentoPanel);
            #endregion
        }

        private void ValoresEndividamentoLabel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaContabil;
            Contabilidade.Endividamento _tela = new Contabilidade.Endividamento();
            _tela.Size = new Size(this.Width - 5, this.Height - (tituloPanel.Height + panel2.Height + 2));
            _tela.ShowDialog();
            NomePadrao();
        }

        private void ParametrosEndividamentoLabel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubCadastroEndividamentoCTB();
            FechaSubMenuAvaliacaoDesempenho();
            FechaSubMenuBiblioteca();
            FechaSubMenuCurriculo();
            FechaSubMenuCorridas();
            FechaSubMenuCadastroJuridico();
            FechaSubMenuESFArquivei();


            if (((Control)sender).Name.Contains("Parametros"))
            {
                ParametrosEndividamentoLabel.Font = new Font(ParametrosEndividamentoLabel.Font, FontStyle.Bold);
                ParametrosEndividamentoLabel.ForeColor = Publicas._fonteBotaoFocado;
                ParametrosEndividamentoLabel.BackColor = _corMenuSelecionado;
                FavoritoParametrosEndividamentoImagem.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.StartsWith("Valores"))
            {
                ValoresEndividamentoLabel.Font = new Font(ValoresEndividamentoLabel.Font, FontStyle.Bold);
                ValoresEndividamentoLabel.ForeColor = Publicas._fonteBotaoFocado;
                ValoresEndividamentoLabel.BackColor = _corMenuSelecionado;
                FavoritoValoresEndividamentoImagem.BackColor = _corMenuSelecionado;
                return;
            }

        }

        private void MudaSelecaoDeCoresSubCadastroEndividamentoCTB()
        {
            ParametrosEndividamentoLabel.Font = new Font(ParametrosEndividamentoLabel.Font, ParametrosEndividamentoLabel.Font.Style & ~FontStyle.Bold);
            ValoresEndividamentoLabel.Font = new Font(ValoresEndividamentoLabel.Font, ValoresEndividamentoLabel.Font.Style & ~FontStyle.Bold);

            ParametrosEndividamentoLabel.BackColor = _corFundoMenu;
            ValoresEndividamentoLabel.BackColor = _corFundoMenu;

            ParametrosEndividamentoLabel.ForeColor = Color.WhiteSmoke;
            ValoresEndividamentoLabel.ForeColor = Color.WhiteSmoke;

            FavoritoParametrosEndividamentoImagem.BackColor = _corFundoMenu;
            FavoritoValoresEndividamentoImagem.BackColor = _corFundoMenu;
        }

        private void ParametrosEndividamentoLabel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaContabil;
            Contabilidade.ParametrosEndividamentos _tela = new Contabilidade.ParametrosEndividamentos();
            _tela.ShowDialog();
            NomePadrao();
        }

        private void CadastrosEndividamentoSetaLabel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubEndividamentoCTB();
            FechaSubMenuAvaliacaoDesempenho();
            FechaSubMenuBiblioteca();
            FechaSubMenuCurriculo();
            FechaSubMenuCorridas();
            FechaSubMenuCadastroJuridico();
            FechaSubMenuESFArquivei();

            if (((Control)sender).Name.StartsWith("Cadastros"))
            {
                CadastrosEndividamentoSetaLabel.Font = new Font(CadastrosEndividamentoSetaLabel.Font, FontStyle.Bold);
                CadastrosEndividamentoSetaLabel.ForeColor = Publicas._fonteBotaoFocado;
                CadastrosEndividamentoSetaLabel.BackColor = _corMenuSelecionado;
                return;
            }

            //if (((Control)sender).Name.Contains("Endividamento"))
            //{
            //    EndividamentoLabel.Font = new Font(EndividamentoLabel.Font, FontStyle.Bold);
            //    EndividamentoLabel.ForeColor = Publicas._fonteBotaoFocado;
            //    EndividamentoLabel.BackColor = _corMenuSelecionado;
            //    FavoritoEndividamentoImagem.BackColor = _corMenuSelecionado;
            //    return;
            //}
        }

        private void CadastrosEndividamentoLabel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubEndividamentoCTB();
            FechaSubMenuAvaliacaoDesempenho();
            FechaSubMenuBiblioteca();
            FechaSubMenuCurriculo();
            FechaSubMenuCorridas();
            FechaSubMenuCadastroJuridico();
            FechaSubMenuESFArquivei();

            if (((Control)sender).Name.StartsWith("Cadastros"))
            {
                CadastrosEndividamentoLabel.Font = new Font(CadastrosEndividamentoLabel.Font, FontStyle.Bold);
                CadastrosEndividamentoLabel.ForeColor = Publicas._fonteBotaoFocado;
                CadastrosEndividamentoLabel.BackColor = _corMenuSelecionado;
                return;
            }

            //if (((Control)sender).Name.Contains("Endividamento"))
            //{
            //    EndividamentoLabel.Font = new Font(EndividamentoLabel.Font, FontStyle.Bold);
            //    EndividamentoLabel.ForeColor = Publicas._fonteBotaoFocado;
            //    EndividamentoLabel.BackColor = _corMenuSelecionado;
            //    FavoritoEndividamentoImagem.BackColor = _corMenuSelecionado;
            //    return;
            //}
        }

        private void MudaSelecaoDeCoresSubEndividamentoCTB()
        {
            FechaSubMenuCadastrosCTB();

            CadastrosEndividamentoSetaLabel.Font = new Font(CadastrosEndividamentoSetaLabel.Font, CadastrosEndividamentoSetaLabel.Font.Style & ~FontStyle.Bold);
            CadastrosEndividamentoLabel.Font = new Font(CadastrosEndividamentoLabel.Font, CadastrosEndividamentoLabel.Font.Style & ~FontStyle.Bold);
            //EndividamentoLabel.Font = new Font(EndividamentoLabel.Font, EndividamentoLabel.Font.Style & ~FontStyle.Bold);

            CadastrosEndividamentoSetaLabel.BackColor = _corFundoMenu;
            //EndividamentoLabel.BackColor = _corFundoMenu;
            CadastrosEndividamentoLabel.BackColor = _corFundoMenu;

            CadastrosEndividamentoSetaLabel.ForeColor = Color.WhiteSmoke;
            CadastrosEndividamentoLabel.ForeColor = Color.WhiteSmoke;
            //EndividamentoLabel.ForeColor = Color.WhiteSmoke;

            //FavoritoEndividamentoImagem.BackColor = _corFundoMenu;
            CadastrosEndividamentoSetaLabel.Text = "6";
        }

        private void LalurCTBSetaPanel_Click(object sender, EventArgs e)
        {
            // abrir o SubMenu 
            LalurCTBSetaLabel.Text = "3";

            if (!Publicas._TemaBlack)
            {
                LalurCTBSetaLabel.ForeColor = Publicas._bordaEntrada;
                LalurCTBLabel.ForeColor = Publicas._bordaEntrada;
            }
            else
            {
                LalurCTBSetaLabel.ForeColor = Publicas._fonteMenuSelecionado;
                LalurCTBLabel.ForeColor = Publicas._fonteMenuSelecionado;
            }
            LalurCTBSetaLabel.BackColor = _corFundoMenu;

            if (SubMenuRateioCTB != null)
            {
                FechaSubMenuRateioCTB();
                return;
            }

            #region Cria estrutura 
            // Menu de fundo (onde agrupa os demais itens)
            SubMenuRateioCTB = new Panel();
            SubMenuRateioCTB.Size = new Size(155, _heidthMenuSistema * 2);
            SubMenuRateioCTB.Location = new Point(MenuSistemaPanel.Width + SubMenuControladoria.Width + SubMenuContabilidade.Width + 6, AcessoAoMenuPanel.Height);
            SubMenuRateioCTB.BackColor = _corFundoDivisao;
            this.Controls.Add(SubMenuRateioCTB);
            SubMenuRateioCTB.BringToFront();
            #endregion

            #region  Lalur
            LalurPanel = new Panel();
            LalurPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            LalurPanel.Dock = DockStyle.Top;
            LalurPanel.BackColor = _corFundoMenu;
            LalurPanel.Name = "LalurPanel";
            LalurPanel.Enabled = Publicas._usuario.Desenvolvedor || Publicas._usuario.AcessaCalculoLalur;

            DivisoriaLalurImagem = new PictureBox();
            DivisoriaLalurImagem.Size = new Size(0, 4);
            DivisoriaLalurImagem.Dock = DockStyle.Bottom;
            DivisoriaLalurImagem.BackColor = _corFundoDivisao;

            LalurLabel = new Label();
            LalurLabel.AutoSize = false;
            LalurLabel.Size = new Size(_widthLabelMenuSistema, 0);
            LalurLabel.Dock = DockStyle.Fill;
            LalurLabel.Text = "Apuração";
            LalurLabel.Font = CorFontepadraoLabel.Font;
            LalurLabel.ForeColor = Color.WhiteSmoke;
            LalurLabel.TextAlign = ContentAlignment.MiddleRight;
            LalurLabel.MouseHover += new EventHandler(this.CadastrosLalurLabel_MouseHover);
            LalurLabel.Click += new System.EventHandler(this.LalurLabel_Click);
            LalurLabel.Name = "LalurLabel";

            FavoritoLalurImagem = new PictureBox();
            FavoritoLalurImagem.Size = new Size(10, 10);
            FavoritoLalurImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoLalurImagem.Name = LalurLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoLalurImagem.Name))
            {
                FavoritoLalurImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoLalurImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoLalurImagem.Top = 35;
            FavoritoLalurImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoLalurImagem.Tag = LalurLabel.Text;
            FavoritoLalurImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoLalurImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoLalurImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoLalurImagem.AccessibleName = "Contabilidade";

            LalurPanel.Controls.Add(LalurLabel);
            LalurPanel.Controls.Add(DivisoriaLalurImagem);
            LalurPanel.Controls.Add(FavoritoLalurImagem);
            FavoritoLalurImagem.BringToFront();

            SubMenuRateioCTB.Controls.Add(LalurPanel);
            #endregion

            #region Cadastros 
            CadastrosLalurPanel = new Panel();
            CadastrosLalurPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            CadastrosLalurPanel.Dock = DockStyle.Top;
            CadastrosLalurPanel.BackColor = _corFundoMenu;
            CadastrosLalurPanel.Name = "CadastrosLalurPanel";
            CadastrosLalurPanel.Enabled = Publicas._usuario.Desenvolvedor || Publicas._usuario.AcessaCadastroLalur;

            DivisoriaCadastrosLalurImagem = new PictureBox();
            DivisoriaCadastrosLalurImagem.Size = new Size(0, 4);
            DivisoriaCadastrosLalurImagem.Dock = DockStyle.Bottom;
            DivisoriaCadastrosLalurImagem.BackColor = _corFundoDivisao;

            Divisoria2CadastrosLalurImagem = new PictureBox();
            Divisoria2CadastrosLalurImagem.Size = new Size(1, 2);
            Divisoria2CadastrosLalurImagem.Dock = DockStyle.Right;
            Divisoria2CadastrosLalurImagem.BackColor = _corFundoDivisao; //System.Drawing.Color.FromArgb(2, 91, 149);

            CadastrosLalurSetaLabel = new Label();
            CadastrosLalurSetaLabel.AutoSize = false;
            CadastrosLalurSetaLabel.Size = new Size(20, 59);
            CadastrosLalurSetaLabel.Dock = DockStyle.Right;
            CadastrosLalurSetaLabel.Text = "6";
            CadastrosLalurSetaLabel.Font = new Font("Webdings", (float)12);
            CadastrosLalurSetaLabel.TextAlign = ContentAlignment.MiddleCenter;
            CadastrosLalurSetaLabel.Click += new System.EventHandler(this.CadastrosLalurSetaLabel_Click);
            CadastrosLalurSetaLabel.MouseHover += new EventHandler(this.CadastrosLalurSetaLabel_MouseHover);
            CadastrosLalurSetaLabel.Name = "CadastrosLalurSetaLabel";
            CadastrosLalurSetaLabel.ForeColor = Color.WhiteSmoke;

            CadastrosLalurLabel = new Label();
            CadastrosLalurLabel.AutoSize = false;
            CadastrosLalurLabel.Size = new Size(_widthLabelMenuSistema, 0);
            CadastrosLalurLabel.Dock = DockStyle.Fill;
            CadastrosLalurLabel.Text = "Cadastros";
            CadastrosLalurLabel.Font = CorFontepadraoLabel.Font;
            CadastrosLalurLabel.ForeColor = Color.WhiteSmoke;
            CadastrosLalurLabel.TextAlign = ContentAlignment.MiddleRight;
            CadastrosLalurLabel.MouseHover += new EventHandler(this.CadastrosLalurLabel_MouseHover);
            CadastrosLalurLabel.Click += new System.EventHandler(this.CadastrosLalurSetaLabel_Click);
            CadastrosLalurLabel.Name = "CadastrosLalurLabel";

            CadastrosLalurPanel.Controls.Add(CadastrosLalurLabel);
            CadastrosLalurPanel.Controls.Add(Divisoria2CadastrosLalurImagem);
            CadastrosLalurPanel.Controls.Add(CadastrosLalurSetaLabel);
            CadastrosLalurPanel.Controls.Add(DivisoriaCadastrosLalurImagem);

            SubMenuRateioCTB.Controls.Add(CadastrosLalurPanel);
            #endregion
        }

        private void LalurLabel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaContabil;
            Contabilidade.ApuracaoLalur _tela = new Contabilidade.ApuracaoLalur();
            _tela.Size = new Size(this.Width - 5, this.Height - (tituloPanel.Height + panel2.Height + 2));
            _tela.ShowDialog(); 
            NomePadrao();
        }

        private void CadastrosLalurLabel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubLalurCTB();
            FechaSubMenuAvaliacaoDesempenho();
            FechaSubMenuBiblioteca();
            FechaSubMenuCurriculo();
            FechaSubMenuCorridas();
            FechaSubMenuCadastroJuridico();
            FechaSubMenuESFArquivei();

            if (((Control)sender).Name.StartsWith("Cadastros"))
            {
                CadastrosLalurLabel.Font = new Font(CadastrosLalurLabel.Font, FontStyle.Bold);
                CadastrosLalurLabel.ForeColor = Publicas._fonteBotaoFocado;
                CadastrosLalurLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Lalur"))
            {
                LalurLabel.Font = new Font(LalurLabel.Font, FontStyle.Bold);
                LalurLabel.ForeColor = Publicas._fonteBotaoFocado;
                LalurLabel.BackColor = _corMenuSelecionado;
                FavoritoLalurImagem.BackColor = _corMenuSelecionado;
                return;
            }
        }

        private void CadastrosLalurSetaLabel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubLalurCTB();
            FechaSubMenuAvaliacaoDesempenho();
            FechaSubMenuBiblioteca();
            FechaSubMenuCurriculo();
            FechaSubMenuCorridas();
            FechaSubMenuCadastroJuridico();
            FechaSubMenuESFArquivei();

            if (((Control)sender).Name.StartsWith("Cadastros"))
            {
                CadastrosLalurSetaLabel.Font = new Font(CadastrosLalurSetaLabel.Font, FontStyle.Bold);
                CadastrosLalurSetaLabel.ForeColor = Publicas._fonteBotaoFocado;
                CadastrosLalurSetaLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Lalur"))
            {
                LalurLabel.Font = new Font(LalurLabel.Font, FontStyle.Bold);
                LalurLabel.ForeColor = Publicas._fonteBotaoFocado;
                LalurLabel.BackColor = _corMenuSelecionado;
                FavoritoLalurImagem.BackColor = _corMenuSelecionado;
                return;
            }
        }

        private void MudaSelecaoDeCoresSubLalurCTB()
        {
            FechaSubMenuCadastrosCTB();

            CadastrosLalurSetaLabel.Font = new Font(CadastrosLalurSetaLabel.Font, CadastrosLalurSetaLabel.Font.Style & ~FontStyle.Bold);
            CadastrosLalurLabel.Font = new Font(CadastrosLalurLabel.Font, CadastrosLalurLabel.Font.Style & ~FontStyle.Bold);
            LalurLabel.Font = new Font(LalurLabel.Font, LalurLabel.Font.Style & ~FontStyle.Bold);

            CadastrosLalurSetaLabel.BackColor = _corFundoMenu;
            LalurLabel.BackColor = _corFundoMenu;
            CadastrosLalurLabel.BackColor = _corFundoMenu;

            CadastrosLalurSetaLabel.ForeColor = Color.WhiteSmoke;
            CadastrosLalurLabel.ForeColor = Color.WhiteSmoke;
            LalurLabel.ForeColor = Color.WhiteSmoke;

            FavoritoLalurImagem.BackColor = _corFundoMenu;
            CadastrosLalurSetaLabel.Text = "6";
        }

        private void CadastrosLalurSetaLabel_Click(object sender, EventArgs e)
        {
            // abrir o SubMenu 
            CadastrosLalurSetaLabel.Text = "3";

            if (!Publicas._TemaBlack)
            {
                CadastrosLalurSetaLabel.ForeColor = Publicas._bordaEntrada;
                CadastrosLalurLabel.ForeColor = Publicas._bordaEntrada;
            }
            else
            {
                CadastrosLalurSetaLabel.ForeColor = Publicas._fonteMenuSelecionado;
                CadastrosLalurLabel.ForeColor = Publicas._fonteMenuSelecionado;
            }
            CadastrosLalurSetaLabel.BackColor = _corFundoMenu;

            if (SubMenuCadastrosCTB != null)
            {
                FechaSubMenuCadastrosCTB();
                return;
            }

            #region Cria estrutura 

            // Menu de fundo (onde agrupa os demais itens)
            SubMenuCadastrosCTB = new Panel();
            SubMenuCadastrosCTB.Size = new Size(155, _heidthMenuSistema * 2);
            SubMenuCadastrosCTB.Location = new Point(MenuSistemaPanel.Width + SubMenuControladoria.Width + SubMenuContabilidade.Width + SubMenuRateioCTB.Width + 8, AcessoAoMenuPanel.Height);
            SubMenuCadastrosCTB.BackColor = _corFundoDivisao;
            this.Controls.Add(SubMenuCadastrosCTB);
            SubMenuCadastrosCTB.BringToFront();
            SubMenuCadastrosCTB.Visible = true;
            #endregion

            #region Formulas 
            FormulasLalurPanel = new Panel();
            FormulasLalurPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            FormulasLalurPanel.Dock = DockStyle.Top;
            FormulasLalurPanel.BackColor = _corFundoMenu;
            FormulasLalurPanel.Name = "FormulasLalurPanel";

            DivisoriaFormulasLalurImagem = new PictureBox();
            DivisoriaFormulasLalurImagem.Size = new Size(0, 4);
            DivisoriaFormulasLalurImagem.Dock = DockStyle.Bottom;
            DivisoriaFormulasLalurImagem.BackColor = _corFundoDivisao;

            FormulasLalurLabel = new Label();
            FormulasLalurLabel.AutoSize = false;
            FormulasLalurLabel.Size = new Size(_widthLabelMenuSistema, 0);
            FormulasLalurLabel.Dock = DockStyle.Fill;
            FormulasLalurLabel.Text = "Fórmulas";
            FormulasLalurLabel.Font = CorFontepadraoLabel.Font;
            FormulasLalurLabel.ForeColor = Color.WhiteSmoke;
            FormulasLalurLabel.TextAlign = ContentAlignment.MiddleRight;
            FormulasLalurLabel.MouseHover += new EventHandler(this.FormulasLalurLabel_MouseHover);
            FormulasLalurLabel.Click += new System.EventHandler(this.FormulasLalurLabel_Click);
            FormulasLalurLabel.Name = "FormulasLalurLabel";

            FavoritoFormulasLalurImagem = new PictureBox();
            FavoritoFormulasLalurImagem.Size = new Size(10, 10);
            FavoritoFormulasLalurImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoFormulasLalurImagem.Name = FormulasLalurLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoFormulasLalurImagem.Name))
            {
                FavoritoFormulasLalurImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoFormulasLalurImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoFormulasLalurImagem.Top = 35;
            FavoritoFormulasLalurImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoFormulasLalurImagem.Tag = FormulasLalurLabel.Text;
            FavoritoFormulasLalurImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoFormulasLalurImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoFormulasLalurImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoFormulasLalurImagem.AccessibleName = "Contabilidade";

            FormulasLalurPanel.Controls.Add(FormulasLalurLabel);
            FormulasLalurPanel.Controls.Add(DivisoriaFormulasLalurImagem);
            FormulasLalurPanel.Controls.Add(FavoritoFormulasLalurImagem);
            FavoritoFormulasLalurImagem.BringToFront();

            SubMenuCadastrosCTB.Controls.Add(FormulasLalurPanel);
            #endregion

            #region Parametros 
            ParametrosLalurPanel = new Panel();
            ParametrosLalurPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            ParametrosLalurPanel.Dock = DockStyle.Top;
            ParametrosLalurPanel.BackColor = _corFundoMenu;
            ParametrosLalurPanel.Name = "ParametrosLalurPanel";

            DivisoriaParametrosLalurImagem = new PictureBox();
            DivisoriaParametrosLalurImagem.Size = new Size(0, 4);
            DivisoriaParametrosLalurImagem.Dock = DockStyle.Bottom;
            DivisoriaParametrosLalurImagem.BackColor = _corFundoDivisao;

            ParametrosLalurLabel = new Label();
            ParametrosLalurLabel.AutoSize = false;
            ParametrosLalurLabel.Size = new Size(_widthLabelMenuSistema, 0);
            ParametrosLalurLabel.Dock = DockStyle.Fill;
            ParametrosLalurLabel.Text = "Parâmetros";
            ParametrosLalurLabel.Font = CorFontepadraoLabel.Font;
            ParametrosLalurLabel.ForeColor = Color.WhiteSmoke;
            ParametrosLalurLabel.TextAlign = ContentAlignment.MiddleRight;
            ParametrosLalurLabel.MouseHover += new EventHandler(this.FormulasLalurLabel_MouseHover);
            ParametrosLalurLabel.Click += new System.EventHandler(this.ParametrosLalurLabel_Click);
            ParametrosLalurLabel.Name = "ParametrosLalurLabel";

            FavoritoParametrosLalurImagem = new PictureBox();
            FavoritoParametrosLalurImagem.Size = new Size(10, 10);
            FavoritoParametrosLalurImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoParametrosLalurImagem.Name = ParametrosLalurLabel.Name + "Pic"; 
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoParametrosLalurImagem.Name))
            {
                FavoritoParametrosLalurImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoParametrosLalurImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoParametrosLalurImagem.Top = 35;
            FavoritoParametrosLalurImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoParametrosLalurImagem.Tag = ParametrosLalurLabel.Text + " Lalur";
            FavoritoParametrosLalurImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoParametrosLalurImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoParametrosLalurImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoParametrosLalurImagem.AccessibleName = "Contabilidade";

            ParametrosLalurPanel.Controls.Add(ParametrosLalurLabel);
            ParametrosLalurPanel.Controls.Add(DivisoriaParametrosLalurImagem);
            ParametrosLalurPanel.Controls.Add(FavoritoParametrosLalurImagem);
            FavoritoParametrosLalurImagem.BringToFront();

            SubMenuCadastrosCTB.Controls.Add(ParametrosLalurPanel);
            #endregion
        }

        private void ParametrosLalurLabel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaContabil;
            Contabilidade.ParametrosLalur _tela = new Contabilidade.ParametrosLalur();
            _tela.ShowDialog();
            NomePadrao();
        }

        private void FormulasLalurLabel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaContabil;
            Contabilidade.FormulasLalur _tela = new Contabilidade.FormulasLalur();
            _tela.ShowDialog();
            NomePadrao();
        }

        private void FormulasLalurLabel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubCadastroLalurCTB();
            FechaSubMenuAvaliacaoDesempenho();
            FechaSubMenuBiblioteca();
            FechaSubMenuCurriculo();
            FechaSubMenuCorridas();
            FechaSubMenuCadastroJuridico();
            FechaSubMenuESFArquivei();

            if (((Control)sender).Name.StartsWith("Formulas"))
            {
                FormulasLalurLabel.Font = new Font(FormulasLalurLabel.Font, FontStyle.Bold);
                FormulasLalurLabel.ForeColor = Publicas._fonteBotaoFocado;
                FormulasLalurLabel.BackColor = _corMenuSelecionado;
                FavoritoFormulasLalurImagem.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Parametros"))
            {
                ParametrosLalurLabel.Font = new Font(ParametrosLalurLabel.Font, FontStyle.Bold);
                ParametrosLalurLabel.ForeColor = Publicas._fonteBotaoFocado;
                ParametrosLalurLabel.BackColor = _corMenuSelecionado;
                FavoritoParametrosLalurImagem.BackColor = _corMenuSelecionado;
                return;
            }
        }

        private void MudaSelecaoDeCoresSubCadastroLalurCTB()
        {
            ParametrosLalurLabel.Font = new Font(ParametrosLalurLabel.Font, ParametrosLalurLabel.Font.Style & ~FontStyle.Bold);
            FormulasLalurLabel.Font = new Font(FormulasLalurLabel.Font, FormulasLalurLabel.Font.Style & ~FontStyle.Bold);

            ParametrosLalurLabel.BackColor = _corFundoMenu;
            FormulasLalurLabel.BackColor = _corFundoMenu;

            ParametrosLalurLabel.ForeColor = Color.WhiteSmoke;
            FormulasLalurLabel.ForeColor = Color.WhiteSmoke;

            FavoritoParametrosLalurImagem.BackColor = _corFundoMenu;
            FavoritoFormulasLalurImagem.BackColor = _corFundoMenu;
        }

        private void DRECTBSetaPanel_Click(object sender, EventArgs e)
        {
            // abrir o SubMenu 
            DRECTBSetaLabel.Text = "3";

            if (!Publicas._TemaBlack)
            {
                DRECTBSetaLabel.ForeColor = Publicas._bordaEntrada;
                DRECTBLabel.ForeColor = Publicas._bordaEntrada;
            }
            else
            {
                DRECTBSetaLabel.ForeColor = Publicas._fonteMenuSelecionado;
                DRECTBLabel.ForeColor = Publicas._fonteMenuSelecionado;
            }
            DRECTBSetaLabel.BackColor = _corFundoMenu;

            if (SubMenuRateioCTB != null)
            {
                FechaSubMenuRateioCTB();
                return;
            }

            #region Cria estrutura 

            // Menu de fundo (onde agrupa os demais itens)
            SubMenuRateioCTB = new Panel();
            SubMenuRateioCTB.Size = new Size(155, _heidthMenuSistema * 2);
            SubMenuRateioCTB.Location = new Point(MenuSistemaPanel.Width + SubMenuControladoria.Width + SubMenuContabilidade.Width + 6, AcessoAoMenuPanel.Height);
            SubMenuRateioCTB.BackColor = _corFundoDivisao;
            this.Controls.Add(SubMenuRateioCTB);
            SubMenuRateioCTB.BringToFront();
            #endregion

            #region  Dre
            DREPanel = new Panel();
            DREPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            DREPanel.Dock = DockStyle.Top;
            DREPanel.BackColor = _corFundoMenu;
            DREPanel.Name = "DREPanel";
            DREPanel.Enabled = Publicas._usuario.Desenvolvedor || Publicas._usuario.AcessaDRE;

            DivisoriaDREImagem = new PictureBox();
            DivisoriaDREImagem.Size = new Size(0, 4);
            DivisoriaDREImagem.Dock = DockStyle.Bottom;
            DivisoriaDREImagem.BackColor = _corFundoDivisao;

            DRELabel = new Label();
            DRELabel.AutoSize = false;
            DRELabel.Size = new Size(_widthLabelMenuSistema, 0);
            DRELabel.Dock = DockStyle.Fill;
            DRELabel.Text = "DRE";
            DRELabel.Font = CorFontepadraoLabel.Font;
            DRELabel.ForeColor = Color.WhiteSmoke;
            DRELabel.TextAlign = ContentAlignment.MiddleRight;
            DRELabel.MouseHover += new EventHandler(this.DRELabel_MouseHover);
            DRELabel.Click += new System.EventHandler(this.DRELabel_Click);
            DRELabel.Name = "DRELabel";

            FavoritoDREImagem = new PictureBox();
            FavoritoDREImagem.Size = new Size(10, 10);
            FavoritoDREImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoDREImagem.Name = DRELabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoDREImagem.Name))
            {
                FavoritoDREImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoDREImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoDREImagem.Top = 35;
            FavoritoDREImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoDREImagem.Tag = DRELabel.Text;
            FavoritoDREImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoDREImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoDREImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoDREImagem.AccessibleName = "Contabilidade";

            DREPanel.Controls.Add(DRELabel);
            DREPanel.Controls.Add(DivisoriaDREImagem);
            DREPanel.Controls.Add(FavoritoDREImagem);
            FavoritoDREImagem.BringToFront();

            SubMenuRateioCTB.Controls.Add(DREPanel);
            #endregion

            #region  Metas
            MetasDREPanel = new Panel();
            MetasDREPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            MetasDREPanel.Dock = DockStyle.Top;
            MetasDREPanel.BackColor = _corFundoMenu;
            MetasDREPanel.Name = "MetasDREPanel";
            MetasDREPanel.Enabled = Publicas._usuario.Desenvolvedor || Publicas._usuario.AcessaCadastroMetas;

            DivisoriaMetasDREImagem = new PictureBox();
            DivisoriaMetasDREImagem.Size = new Size(0, 4);
            DivisoriaMetasDREImagem.Dock = DockStyle.Bottom;
            DivisoriaMetasDREImagem.BackColor = _corFundoDivisao;

            MetasDRELabel = new Label();
            MetasDRELabel.AutoSize = false;
            MetasDRELabel.Size = new Size(_widthLabelMenuSistema, 0);
            MetasDRELabel.Dock = DockStyle.Fill;
            MetasDRELabel.Text = "Metas";
            MetasDRELabel.Font = CorFontepadraoLabel.Font;
            MetasDRELabel.ForeColor = Color.WhiteSmoke;
            MetasDRELabel.TextAlign = ContentAlignment.MiddleRight;
            MetasDRELabel.MouseHover += new EventHandler(this.DRELabel_MouseHover);
            MetasDRELabel.Click += new System.EventHandler(this.MetasPanel_Click);
            MetasDRELabel.Name = "MetasDRELabel";

            FavoritoMetasDREImagem = new PictureBox();
            FavoritoMetasDREImagem.Size = new Size(10, 10);
            FavoritoMetasDREImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoMetasDREImagem.Name = MetasDRELabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoMetasDREImagem.Name))
            {
                FavoritoMetasDREImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoMetasDREImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoMetasDREImagem.Top = 35;
            FavoritoMetasDREImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoMetasDREImagem.Tag = MetasDRELabel.Text;
            FavoritoMetasDREImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoMetasDREImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoMetasDREImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoMetasDREImagem.AccessibleName = "Contabilidade";

            MetasDREPanel.Controls.Add(MetasDRELabel);
            MetasDREPanel.Controls.Add(DivisoriaMetasDREImagem);
            MetasDREPanel.Controls.Add(FavoritoMetasDREImagem);
            FavoritoMetasDREImagem.BringToFront();

            SubMenuRateioCTB.Controls.Add(MetasDREPanel);
            
            #endregion

        }

        private void DRELabel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubDRECTB();
            FechaSubMenuAvaliacaoDesempenho();
            FechaSubMenuBiblioteca();
            FechaSubMenuCurriculo();
            FechaSubMenuCorridas();
            FechaSubMenuCadastroJuridico();
            FechaSubMenuESFArquivei();

            if (((Control)sender).Name.StartsWith("DRELabel"))
            {
                DRELabel.Font = new Font(DRELabel.Font, FontStyle.Bold);
                DRELabel.ForeColor = Publicas._fonteBotaoFocado;
                DRELabel.BackColor = _corMenuSelecionado;
                FavoritoDREImagem.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("MetasDRELabel"))
            {
                MetasDRELabel.Font = new Font(MetasDRELabel.Font, FontStyle.Bold);
                MetasDRELabel.ForeColor = Publicas._fonteBotaoFocado;
                MetasDRELabel.BackColor = _corMenuSelecionado;
                FavoritoMetasDREImagem.BackColor = _corMenuSelecionado;
                return;
            }
        }

        private void MudaSelecaoDeCoresSubDRECTB()
        {
            FechaSubMenuCadastrosCTB();

            DRELabel.Font = new Font(DRELabel.Font, DRELabel.Font.Style & ~FontStyle.Bold);
            MetasDRELabel.Font = new Font(MetasDRELabel.Font, MetasDRELabel.Font.Style & ~FontStyle.Bold);

            DRELabel.BackColor = _corFundoMenu;
            MetasDRELabel.BackColor = DRELabel.BackColor;

            DRELabel.ForeColor = Color.WhiteSmoke;
            MetasDRELabel.ForeColor = Color.WhiteSmoke;

            FavoritoMetasDREImagem.BackColor = _corFundoMenu;
            FavoritoDREImagem.BackColor = _corFundoMenu;
        }
        
        private void DRELabel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaContabil;
            Contabilidade.DemonstrativoDoResultadoDoExercicio _tela = new Contabilidade.DemonstrativoDoResultadoDoExercicio();
            _tela.Size = new Size(this.Width - 5, this.Height - (tituloPanel.Height + panel2.Height + 2));

            _tela.ShowDialog();
            NomePadrao();
        }

        private void RateioCTBSetaPanel_Click(object sender, EventArgs e)
        {
            // abrir o SubMenu 
            RateioCTBSetaLabel.Text = "3";

            if (!Publicas._TemaBlack)
            {
                RateioCTBSetaLabel.ForeColor = Publicas._bordaEntrada;
                RateioCTBLabel.ForeColor = Publicas._bordaEntrada;
            }
            else
            {
                RateioCTBSetaLabel.ForeColor = Publicas._fonteMenuSelecionado;
                RateioCTBLabel.ForeColor = Publicas._fonteMenuSelecionado;
            }
            RateioCTBSetaLabel.BackColor = _corFundoMenu;

            if (SubMenuRateioCTB != null)
            {
                FechaSubMenuRateioCTB();
                return;
            }

            #region Cria estrutura 

            // Menu de fundo (onde agrupa os demais itens)
            SubMenuRateioCTB = new Panel();
            SubMenuRateioCTB.Size = new Size(155, _heidthMenuSistema * 1);
            SubMenuRateioCTB.Location = new Point(MenuSistemaPanel.Width + SubMenuControladoria.Width + SubMenuContabilidade.Width + 6, AcessoAoMenuPanel.Height);
            SubMenuRateioCTB.BackColor = _corFundoDivisao;
            this.Controls.Add(SubMenuRateioCTB);
            SubMenuRateioCTB.BringToFront();
            #endregion

            #region Rateio
            BeneficiosCTBPanel = new Panel();
            BeneficiosCTBPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            BeneficiosCTBPanel.Dock = DockStyle.Top;
            BeneficiosCTBPanel.BackColor = _corFundoMenu;
            BeneficiosCTBPanel.Name = "BeneficiosCTBPanel";
            BeneficiosCTBPanel.Enabled = Publicas._usuario.Desenvolvedor || Publicas._usuario.AcessaBeneficioRateio;

            DivisoriaBeneficiosCTBImagem = new PictureBox();
            DivisoriaBeneficiosCTBImagem.Size = new Size(0, 4);
            DivisoriaBeneficiosCTBImagem.Dock = DockStyle.Bottom;
            DivisoriaBeneficiosCTBImagem.BackColor = _corFundoDivisao;

            Divisoria2BeneficiosCTBImagem = new PictureBox();
            Divisoria2BeneficiosCTBImagem.Size = new Size(1, 2);
            Divisoria2BeneficiosCTBImagem.Dock = DockStyle.Right;
            Divisoria2BeneficiosCTBImagem.BackColor = _corFundoDivisao; //System.Drawing.Color.FromArgb(2, 91, 149);

            BeneficiosCTBSetaLabel = new Label();
            BeneficiosCTBSetaLabel.AutoSize = false;
            BeneficiosCTBSetaLabel.Size = new Size(20, 59);
            BeneficiosCTBSetaLabel.Dock = DockStyle.Right;
            BeneficiosCTBSetaLabel.Text = "6";
            BeneficiosCTBSetaLabel.Font = new Font("Webdings", (float)12);
            BeneficiosCTBSetaLabel.TextAlign = ContentAlignment.MiddleCenter;
            BeneficiosCTBSetaLabel.MouseHover += new EventHandler(this.BeneficiosCTBSetaLabel_MouseHover);
            BeneficiosCTBSetaLabel.Click += new System.EventHandler(this.BeneficiosCTBSetaPanel_Click);
            BeneficiosCTBSetaLabel.Name = "BeneficiosCTBSetaLabel";
            BeneficiosCTBSetaLabel.ForeColor = Color.WhiteSmoke;

            BeneficiosCTBLabel = new Label();
            BeneficiosCTBLabel.AutoSize = false;
            BeneficiosCTBLabel.Size = new Size(_widthLabelMenuSistema, 0);
            BeneficiosCTBLabel.Dock = DockStyle.Fill;
            BeneficiosCTBLabel.Text = "Benefícios";
            BeneficiosCTBLabel.Font = CorFontepadraoLabel.Font;
            BeneficiosCTBLabel.ForeColor = Color.WhiteSmoke;
            BeneficiosCTBLabel.TextAlign = ContentAlignment.MiddleRight;
            BeneficiosCTBLabel.MouseHover += new EventHandler(this.BeneficiosCTBLabel_MouseHover);
            BeneficiosCTBLabel.Click += new System.EventHandler(this.BeneficiosCTBSetaPanel_Click);
            BeneficiosCTBLabel.Name = "BeneficiosCTBLabel";

            BeneficiosCTBPanel.Controls.Add(BeneficiosCTBLabel);
            BeneficiosCTBPanel.Controls.Add(Divisoria2BeneficiosCTBImagem);
            BeneficiosCTBPanel.Controls.Add(BeneficiosCTBSetaLabel);
            BeneficiosCTBPanel.Controls.Add(DivisoriaBeneficiosCTBImagem);
            SubMenuRateioCTB.Controls.Add(BeneficiosCTBPanel);
            #endregion
        }

        private void BeneficiosCTBSetaPanel_Click(object sender, EventArgs e)
        {
            // abrir o SubMenu 
            BeneficiosCTBSetaLabel.Text = "3";

            if (!Publicas._TemaBlack)
            {
                BeneficiosCTBSetaLabel.ForeColor = Publicas._bordaEntrada;
                BeneficiosCTBLabel.ForeColor = Publicas._bordaEntrada;
            }
            else
            {
                BeneficiosCTBSetaLabel.ForeColor = Publicas._fonteMenuSelecionado;
                BeneficiosCTBLabel.ForeColor = Publicas._fonteMenuSelecionado;
            }
            BeneficiosCTBSetaLabel.BackColor = _corFundoMenu;

            if (SubMenuBeneficioCTB != null)
            {
                FechaSubMenuCadastrosCTB();
                return;
            }

            #region Cria estrutura 

            // Menu de fundo (onde agrupa os demais itens)
            SubMenuBeneficioCTB = new Panel();
            SubMenuBeneficioCTB.Size = new Size(155, _heidthMenuSistema * 2);
            SubMenuBeneficioCTB.Location = new Point(MenuSistemaPanel.Width + SubMenuControladoria.Width + SubMenuContabilidade.Width + SubMenuRateioCTB.Width + 8, AcessoAoMenuPanel.Height);
            SubMenuBeneficioCTB.BackColor = _corFundoDivisao;
            this.Controls.Add(SubMenuBeneficioCTB);
            SubMenuBeneficioCTB.BringToFront();
            SubMenuBeneficioCTB.Visible = true;
            #endregion

            #region Calculo 
            CalculoRateioBeneficioPanel = new Panel();
            CalculoRateioBeneficioPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            CalculoRateioBeneficioPanel.Dock = DockStyle.Top;
            CalculoRateioBeneficioPanel.BackColor = _corFundoMenu;
            CalculoRateioBeneficioPanel.Name = "CalculoRateioBeneficioPanel";
            CalculoRateioBeneficioPanel.Enabled = Publicas._usuario.Desenvolvedor || Publicas._usuario.AcessaCalculoRateio;

            DivisoriaCalculoRateioBeneficioImagem = new PictureBox();
            DivisoriaCalculoRateioBeneficioImagem.Size = new Size(0, 4);
            DivisoriaCalculoRateioBeneficioImagem.Dock = DockStyle.Bottom;
            DivisoriaCalculoRateioBeneficioImagem.BackColor = _corFundoDivisao;

            CalculoRateioBeneficioLabel = new Label();
            CalculoRateioBeneficioLabel.AutoSize = false;
            CalculoRateioBeneficioLabel.Size = new Size(_widthLabelMenuSistema, 0);
            CalculoRateioBeneficioLabel.Dock = DockStyle.Fill;
            CalculoRateioBeneficioLabel.Text = "Cálculo" + Environment.NewLine + "do Percentual";
            CalculoRateioBeneficioLabel.Font = CorFontepadraoLabel.Font;
            CalculoRateioBeneficioLabel.ForeColor = Color.WhiteSmoke;
            CalculoRateioBeneficioLabel.TextAlign = ContentAlignment.MiddleRight;
            CalculoRateioBeneficioLabel.MouseHover += new EventHandler(this.CadastrosBeneficiosLabel_MouseHover);
            CalculoRateioBeneficioLabel.Click += new System.EventHandler(this.CalculoRateioBeneficioLabel_Click);
            CalculoRateioBeneficioLabel.Name = "CalculoRateioBeneficioLabel";

            FavoritoCalculoRateioBeneficioImagem = new PictureBox();
            FavoritoCalculoRateioBeneficioImagem.Size = new Size(10, 10);
            FavoritoCalculoRateioBeneficioImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoCalculoRateioBeneficioImagem.Name = CalculoRateioBeneficioLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoCalculoRateioBeneficioImagem.Name))
            {
                FavoritoCalculoRateioBeneficioImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoCalculoRateioBeneficioImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoCalculoRateioBeneficioImagem.Top = 35;
            FavoritoCalculoRateioBeneficioImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoCalculoRateioBeneficioImagem.Tag = CalculoRateioBeneficioLabel.Text;
            FavoritoCalculoRateioBeneficioImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoCalculoRateioBeneficioImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoCalculoRateioBeneficioImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoCalculoRateioBeneficioImagem.AccessibleName = "Contabilidade";

            CalculoRateioBeneficioPanel.Controls.Add(CalculoRateioBeneficioLabel);
            CalculoRateioBeneficioPanel.Controls.Add(DivisoriaCalculoRateioBeneficioImagem);
            CalculoRateioBeneficioPanel.Controls.Add(FavoritoCalculoRateioBeneficioImagem);
            FavoritoCalculoRateioBeneficioImagem.BringToFront();

            SubMenuBeneficioCTB.Controls.Add(CalculoRateioBeneficioPanel);
            #endregion

            #region Cadastro
            CadastrosBeneficiosPanel = new Panel();
            CadastrosBeneficiosPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            CadastrosBeneficiosPanel.Dock = DockStyle.Top;
            CadastrosBeneficiosPanel.BackColor = _corFundoMenu;
            CadastrosBeneficiosPanel.Name = "CadastrosBeneficiosPanel";
            CadastrosBeneficiosPanel.Enabled = Publicas._usuario.Desenvolvedor || Publicas._usuario.AcessaCadastroBeneficioRateio;

            DivisoriaCadastrosBeneficiosImagem = new PictureBox();
            DivisoriaCadastrosBeneficiosImagem.Size = new Size(0, 4);
            DivisoriaCadastrosBeneficiosImagem.Dock = DockStyle.Bottom;
            DivisoriaCadastrosBeneficiosImagem.BackColor = _corFundoDivisao;

            Divisoria2CadastrosBeneficiosImagem = new PictureBox();
            Divisoria2CadastrosBeneficiosImagem.Size = new Size(1, 2);
            Divisoria2CadastrosBeneficiosImagem.Dock = DockStyle.Right;
            Divisoria2CadastrosBeneficiosImagem.BackColor = _corFundoDivisao; //System.Drawing.Color.FromArgb(2, 91, 149);

            CadastrosBeneficiosSetaLabel = new Label();
            CadastrosBeneficiosSetaLabel.AutoSize = false;
            CadastrosBeneficiosSetaLabel.Size = new Size(20, 59);
            CadastrosBeneficiosSetaLabel.Dock = DockStyle.Right;
            CadastrosBeneficiosSetaLabel.Text = "6";
            CadastrosBeneficiosSetaLabel.Font = new Font("Webdings", (float)12);
            CadastrosBeneficiosSetaLabel.TextAlign = ContentAlignment.MiddleCenter;
            CadastrosBeneficiosSetaLabel.MouseHover += new EventHandler(this.CadastrosBeneficiosSetaLabel_MouseHover);
            CadastrosBeneficiosSetaLabel.Click += new System.EventHandler(this.CadastrosBeneficiosSetaPanel_Click);
            CadastrosBeneficiosSetaLabel.Name = "CadastrosBeneficiosSetaLabel";
            CadastrosBeneficiosSetaLabel.ForeColor = Color.WhiteSmoke;

            CadastrosBeneficiosLabel = new Label();
            CadastrosBeneficiosLabel.AutoSize = false;
            CadastrosBeneficiosLabel.Size = new Size(_widthLabelMenuSistema, 0);
            CadastrosBeneficiosLabel.Dock = DockStyle.Fill;
            CadastrosBeneficiosLabel.Text = "Cadastros";
            CadastrosBeneficiosLabel.Font = CorFontepadraoLabel.Font;
            CadastrosBeneficiosLabel.ForeColor = Color.WhiteSmoke;
            CadastrosBeneficiosLabel.TextAlign = ContentAlignment.MiddleRight;
            CadastrosBeneficiosLabel.MouseHover += new EventHandler(this.CadastrosBeneficiosLabel_MouseHover);
            CadastrosBeneficiosLabel.Click += new System.EventHandler(this.CadastrosBeneficiosSetaPanel_Click);
            CadastrosBeneficiosLabel.Name = "CadastrosBeneficiosLabel";

            CadastrosBeneficiosPanel.Controls.Add(CadastrosBeneficiosLabel);
            CadastrosBeneficiosPanel.Controls.Add(Divisoria2CadastrosBeneficiosImagem);
            CadastrosBeneficiosPanel.Controls.Add(CadastrosBeneficiosSetaLabel);
            CadastrosBeneficiosPanel.Controls.Add(DivisoriaCadastrosBeneficiosImagem);
            SubMenuBeneficioCTB.Controls.Add(CadastrosBeneficiosPanel);
            #endregion
        }

        private void CalculoRateioBeneficioLabel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaContabil;
            Contabilidade.RateioDeBeneficios _tela = new Contabilidade.RateioDeBeneficios();
            _tela.Size = new Size(this.Width - 5, this.Height - (tituloPanel.Height + panel2.Height + 2));

            _tela.ShowDialog();
            NomePadrao();
        }

        private void CadastrosBeneficiosSetaPanel_Click(object sender, EventArgs e)
        {
            // abrir o SubMenu 
            CadastrosBeneficiosSetaLabel.Text = "3";

            if (!Publicas._TemaBlack)
            {
                CadastrosBeneficiosSetaLabel.ForeColor = Publicas._bordaEntrada;
                CadastrosBeneficiosLabel.ForeColor = Publicas._bordaEntrada;
            }
            else
            {
                CadastrosBeneficiosSetaLabel.ForeColor = Publicas._fonteMenuSelecionado;
                CadastrosBeneficiosLabel.ForeColor = Publicas._fonteMenuSelecionado;
            }
            CadastrosBeneficiosSetaLabel.BackColor = _corFundoMenu;

            if (SubMenuCadastrosCTB != null)
            {
                FechaSubMenuCadastrosCTB();
                return;
            }

            #region Cria estrutura 

            // Menu de fundo (onde agrupa os demais itens)
            SubMenuCadastrosCTB = new Panel();
            SubMenuCadastrosCTB.Size = new Size(155, _heidthMenuSistema * 2);
            SubMenuCadastrosCTB.Location = new Point(MenuSistemaPanel.Width + SubMenuControladoria.Width + SubMenuContabilidade.Width + SubMenuRateioCTB.Width + SubMenuBeneficioCTB.Width + 10, AcessoAoMenuPanel.Height);
            SubMenuCadastrosCTB.BackColor = _corFundoDivisao;
            this.Controls.Add(SubMenuCadastrosCTB);
            SubMenuCadastrosCTB.BringToFront();
            SubMenuCadastrosCTB.Visible = true;
            #endregion

            #region Associa 
            AssociaCustosSetorPanel = new Panel();
            AssociaCustosSetorPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            AssociaCustosSetorPanel.Dock = DockStyle.Top;
            AssociaCustosSetorPanel.BackColor = _corFundoMenu;
            AssociaCustosSetorPanel.Name = "AssociaCustosSetorPanel";

            DivisoriaAssociaCustosSetorImagem = new PictureBox();
            DivisoriaAssociaCustosSetorImagem.Size = new Size(0, 4);
            DivisoriaAssociaCustosSetorImagem.Dock = DockStyle.Bottom;
            DivisoriaAssociaCustosSetorImagem.BackColor = _corFundoDivisao;

            AssociaCustosSetorLabel = new Label();
            AssociaCustosSetorLabel.AutoSize = false;
            AssociaCustosSetorLabel.Size = new Size(_widthLabelMenuSistema, 0);
            AssociaCustosSetorLabel.Dock = DockStyle.Fill;
            AssociaCustosSetorLabel.Text = "Associa Centro de" + Environment.NewLine + "Custos ao Setor";
            AssociaCustosSetorLabel.Font = CorFontepadraoLabel.Font;
            AssociaCustosSetorLabel.ForeColor = Color.WhiteSmoke;
            AssociaCustosSetorLabel.TextAlign = ContentAlignment.MiddleRight;
            AssociaCustosSetorLabel.MouseHover += new EventHandler(this.AssociaCustosSetorLabel_MouseHover);
            AssociaCustosSetorLabel.Click += new System.EventHandler(this.AssociaCustosSetorLabel_Click);
            AssociaCustosSetorLabel.Name = "AssociaCustosSetorLabel";

            FavoritoAssociaCustosSetorImagem = new PictureBox();
            FavoritoAssociaCustosSetorImagem.Size = new Size(10, 10);
            FavoritoAssociaCustosSetorImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoAssociaCustosSetorImagem.Name = AssociaCustosSetorLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoAssociaCustosSetorImagem.Name))
            {
                FavoritoAssociaCustosSetorImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoAssociaCustosSetorImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoAssociaCustosSetorImagem.Top = 35;
            FavoritoAssociaCustosSetorImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoAssociaCustosSetorImagem.Tag = AssociaCustosSetorLabel.Text;
            FavoritoAssociaCustosSetorImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoAssociaCustosSetorImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoAssociaCustosSetorImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoAssociaCustosSetorImagem.AccessibleName = "Contabilidade";

            AssociaCustosSetorPanel.Controls.Add(AssociaCustosSetorLabel);
            AssociaCustosSetorPanel.Controls.Add(DivisoriaAssociaCustosSetorImagem);
            AssociaCustosSetorPanel.Controls.Add(FavoritoAssociaCustosSetorImagem);
            FavoritoAssociaCustosSetorImagem.BringToFront();

            SubMenuCadastrosCTB.Controls.Add(AssociaCustosSetorPanel);
            #endregion

            #region Parametros 
            ParametrosBeneficiosCTBPanel = new Panel();
            ParametrosBeneficiosCTBPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            ParametrosBeneficiosCTBPanel.Dock = DockStyle.Top;
            ParametrosBeneficiosCTBPanel.BackColor = _corFundoMenu;
            ParametrosBeneficiosCTBPanel.Name = "ParametrosBeneficiosCTBPanel";

            DivisoriaParametrosBeneficiosCTBImagem = new PictureBox();
            DivisoriaParametrosBeneficiosCTBImagem.Size = new Size(0, 4);
            DivisoriaParametrosBeneficiosCTBImagem.Dock = DockStyle.Bottom;
            DivisoriaParametrosBeneficiosCTBImagem.BackColor = _corFundoDivisao;

            ParametrosBeneficiosCTBLabel = new Label();
            ParametrosBeneficiosCTBLabel.AutoSize = false;
            ParametrosBeneficiosCTBLabel.Size = new Size(_widthLabelMenuSistema, 0);
            ParametrosBeneficiosCTBLabel.Dock = DockStyle.Fill;
            ParametrosBeneficiosCTBLabel.Text = "Parâmetros";
            ParametrosBeneficiosCTBLabel.Font = CorFontepadraoLabel.Font;
            ParametrosBeneficiosCTBLabel.ForeColor = Color.WhiteSmoke;
            ParametrosBeneficiosCTBLabel.TextAlign = ContentAlignment.MiddleRight;
            ParametrosBeneficiosCTBLabel.MouseHover += new EventHandler(this.AssociaCustosSetorLabel_MouseHover);
            ParametrosBeneficiosCTBLabel.Click += new System.EventHandler(this.ParametrosBeneficiosCTBLabel_Click);
            ParametrosBeneficiosCTBLabel.Name = "ParametrosBeneficiosCTBLabel";

            FavoritoParametrosBeneficiosCTBImagem = new PictureBox();
            FavoritoParametrosBeneficiosCTBImagem.Size = new Size(10, 10);
            FavoritoParametrosBeneficiosCTBImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoParametrosBeneficiosCTBImagem.Name = ParametrosBeneficiosCTBLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoParametrosBeneficiosCTBImagem.Name))
            {
                FavoritoParametrosBeneficiosCTBImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoParametrosBeneficiosCTBImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoParametrosBeneficiosCTBImagem.Top = 35;
            FavoritoParametrosBeneficiosCTBImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoParametrosBeneficiosCTBImagem.Tag = ParametrosBeneficiosCTBLabel.Text + " Rateios";
            FavoritoParametrosBeneficiosCTBImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoParametrosBeneficiosCTBImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoParametrosBeneficiosCTBImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoParametrosBeneficiosCTBImagem.AccessibleName = "Contabilidade";

            ParametrosBeneficiosCTBPanel.Controls.Add(ParametrosBeneficiosCTBLabel);
            ParametrosBeneficiosCTBPanel.Controls.Add(DivisoriaParametrosBeneficiosCTBImagem);
            ParametrosBeneficiosCTBPanel.Controls.Add(FavoritoParametrosBeneficiosCTBImagem);
            FavoritoParametrosBeneficiosCTBImagem.BringToFront();

            SubMenuCadastrosCTB.Controls.Add(ParametrosBeneficiosCTBPanel);
            #endregion
        }

        private void AssociaCustosSetorLabel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaContabil;
            Contabilidade.AssociaCentroCustoASetor _tela = new Contabilidade.AssociaCentroCustoASetor();
            _tela.ShowDialog();
            NomePadrao();
        }

        private void ParametrosBeneficiosCTBLabel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaContabil;
            Contabilidade.ParametrosRateio _tela = new Contabilidade.ParametrosRateio();
            _tela.ShowDialog();
            NomePadrao();
        }

        private void AssociaCustosSetorLabel_MouseHover(object sender, EventArgs e)
        { 
            MudaSelecaoDeCoresSubMenuCadastros();
            FechaSubMenuAvaliacaoDesempenho();
            FechaSubMenuBiblioteca();
            FechaSubMenuCurriculo();
            FechaSubMenuCorridas();
            FechaSubMenuCadastroJuridico();
            FechaSubMenuESFArquivei();
            FechaSubMenuFerias();

            if (((Control)sender).Name.Contains("Associa"))
            {
                AssociaCustosSetorLabel.Font = new Font(CadastrosBeneficiosLabel.Font, FontStyle.Bold);
                AssociaCustosSetorLabel.ForeColor = Publicas._fonteBotaoFocado;
                AssociaCustosSetorLabel.BackColor = _corMenuSelecionado;
                FavoritoAssociaCustosSetorImagem.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Parametro"))
            {
                ParametrosBeneficiosCTBLabel.Font = new Font(ParametrosBeneficiosCTBLabel.Font, FontStyle.Bold);
                ParametrosBeneficiosCTBLabel.ForeColor = Publicas._fonteBotaoFocado;
                ParametrosBeneficiosCTBLabel.BackColor = _corMenuSelecionado;
                FavoritoParametrosBeneficiosCTBImagem.BackColor = _corMenuSelecionado;
                return;
            }
        }

        private void MudaSelecaoDeCoresSubMenuCadastros()
        {
            ParametrosBeneficiosCTBLabel.Font = new Font(ParametrosBeneficiosCTBLabel.Font, ParametrosBeneficiosCTBLabel.Font.Style & ~FontStyle.Bold);
            AssociaCustosSetorLabel.Font = new Font(AssociaCustosSetorLabel.Font, AssociaCustosSetorLabel.Font.Style & ~FontStyle.Bold);

            ParametrosBeneficiosCTBLabel.BackColor = _corFundoMenu;
            AssociaCustosSetorLabel.BackColor = ParametrosBeneficiosCTBLabel.BackColor;

            ParametrosBeneficiosCTBLabel.ForeColor = Color.WhiteSmoke;
            AssociaCustosSetorLabel.ForeColor = Color.WhiteSmoke;

            FavoritoParametrosBeneficiosCTBImagem.BackColor = _corFundoMenu;
            FavoritoAssociaCustosSetorImagem.BackColor = _corFundoMenu;
        }

        private void FechaSubMenuCadastrosCTB()
        {
            if (SubMenuCadastrosCTB != null)
            {
                SubMenuCadastrosCTB.Visible = false;
                this.Controls.Remove(SubMenuCadastrosCTB);
                SubMenuCadastrosCTB.Dispose();
                SubMenuCadastrosCTB = null;
            }
        }

        private void CadastrosBeneficiosSetaLabel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubMenuBeneficiosCTB();
            
            FechaSubMenuAvaliacaoDesempenho();
            FechaSubMenuBiblioteca();
            FechaSubMenuCurriculo();
            FechaSubMenuCorridas();
            FechaSubMenuCadastroJuridico();
            FechaSubMenuESFArquivei();
            FechaSubMenuFerias();

            if (((Control)sender).Name.Contains("Cadastros"))
            {
                CadastrosBeneficiosSetaLabel.Font = new Font(CadastrosBeneficiosSetaLabel.Font, FontStyle.Bold);
                CadastrosBeneficiosSetaLabel.ForeColor = Publicas._fonteBotaoFocado;
                CadastrosBeneficiosSetaLabel.BackColor = _corMenuSelecionado;
                return;
            }
        }

        private void MudaSelecaoDeCoresSubMenuBeneficiosCTB()
        {
            FechaSubMenuCadastrosCTB();

            CalculoRateioBeneficioLabel.Font = new Font(CalculoRateioBeneficioLabel.Font, CalculoRateioBeneficioLabel.Font.Style & ~FontStyle.Bold);
            CadastrosBeneficiosSetaLabel.Font = new Font(CadastrosBeneficiosSetaLabel.Font, CadastrosBeneficiosSetaLabel.Font.Style & ~FontStyle.Bold);
            CadastrosBeneficiosLabel.Font = new Font(CadastrosBeneficiosLabel.Font, CadastrosBeneficiosLabel.Font.Style & ~FontStyle.Bold);

            CalculoRateioBeneficioLabel.BackColor = _corFundoMenu;
            CadastrosBeneficiosSetaLabel.BackColor = CalculoRateioBeneficioLabel.BackColor;
            CadastrosBeneficiosLabel.BackColor = CalculoRateioBeneficioLabel.BackColor;

            CalculoRateioBeneficioLabel.ForeColor = Color.WhiteSmoke;
            CadastrosBeneficiosSetaLabel.ForeColor = Color.WhiteSmoke;
            CadastrosBeneficiosLabel.ForeColor = Color.WhiteSmoke;

            FavoritoCalculoRateioBeneficioImagem.BackColor = _corFundoMenu;

            CadastrosBeneficiosSetaLabel.Text = "6";
        }

        private void CadastrosBeneficiosLabel_MouseHover(object sender, EventArgs e) 
        {
            MudaSelecaoDeCoresSubMenuBeneficiosCTB();
            FechaSubMenuAvaliacaoDesempenho();
            FechaSubMenuBiblioteca();
            FechaSubMenuCurriculo();
            FechaSubMenuCorridas();
            FechaSubMenuCadastroJuridico();
            FechaSubMenuESFArquivei();

            if (((Control)sender).Name.Contains("Cadastros"))
            { 
                CadastrosBeneficiosLabel.Font = new Font(CadastrosBeneficiosLabel.Font, FontStyle.Bold);
                CadastrosBeneficiosLabel.ForeColor = Publicas._fonteBotaoFocado;
                CadastrosBeneficiosLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("CalculoRateioBeneficio"))
            {
                CalculoRateioBeneficioLabel.Font = new Font(CalculoRateioBeneficioLabel.Font, FontStyle.Bold);
                CalculoRateioBeneficioLabel.ForeColor = Publicas._fonteBotaoFocado;
                CalculoRateioBeneficioLabel.BackColor = _corMenuSelecionado;
                FavoritoCalculoRateioBeneficioImagem.BackColor = _corMenuSelecionado;
                return;
            }
        }

        private void FechaSubMenuBeneficioCTB()
        {
            if (SubMenuBeneficioCTB != null)
            {
                SubMenuBeneficioCTB.Visible = false;
                this.Controls.Remove(SubMenuBeneficioCTB);
                SubMenuBeneficioCTB.Dispose();
                SubMenuBeneficioCTB = null;
            }
        }

        private void BeneficiosCTBSetaLabel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresBeneficiosCTB();
            FechaSubMenuAvaliacaoDesempenho();
            FechaSubMenuBiblioteca();
            FechaSubMenuCurriculo();
            FechaSubMenuCorridas();
            FechaSubMenuCadastroJuridico();
            FechaSubMenuESFArquivei();

            if (((Control)sender).Name.Contains("Beneficio"))
            {
                BeneficiosCTBSetaLabel.Font = new Font(BeneficiosCTBSetaLabel.Font, FontStyle.Bold);
                BeneficiosCTBSetaLabel.ForeColor = Publicas._fonteBotaoFocado;
                BeneficiosCTBSetaLabel.BackColor = _corMenuSelecionado;
                return;
            }
        }

        private void BeneficiosCTBLabel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresBeneficiosCTB();
            FechaSubMenuAvaliacaoDesempenho();
            FechaSubMenuBiblioteca();
            FechaSubMenuCurriculo();
            FechaSubMenuCorridas();
            FechaSubMenuCadastroJuridico();
            FechaSubMenuESFArquivei();

            if (((Control)sender).Name.Contains("Beneficio"))
            {
                BeneficiosCTBLabel.Font = new Font(BeneficiosCTBLabel.Font, FontStyle.Bold);
                BeneficiosCTBLabel.ForeColor = Publicas._fonteBotaoFocado;
                BeneficiosCTBLabel.BackColor = _corMenuSelecionado;
                return;
            }
        }

        private void MudaSelecaoDeCoresBeneficiosCTB()
        {
            FechaSubMenuBeneficioCTB();
            BeneficiosCTBLabel.Font = new Font(BeneficiosCTBLabel.Font, BeneficiosCTBLabel.Font.Style & ~FontStyle.Bold);
            BeneficiosCTBSetaLabel.Font = new Font(BeneficiosCTBSetaLabel.Font, BeneficiosCTBSetaLabel.Font.Style & ~FontStyle.Bold);

            BeneficiosCTBLabel.BackColor = _corFundoMenu;
            BeneficiosCTBSetaLabel.BackColor = BeneficiosCTBLabel.BackColor;

            BeneficiosCTBLabel.ForeColor = Color.WhiteSmoke;
            BeneficiosCTBSetaLabel.ForeColor = Color.WhiteSmoke;

            BeneficiosCTBSetaLabel.Text = "6";
        }

        private void FechaSubMenuRateioCTB()
        {
            FechaSubMenuBeneficioCTB();
            FechaSubMenuCadastrosCTB();

            if (SubMenuRateioCTB != null)
            {
                SubMenuRateioCTB.Visible = false;
                this.Controls.Remove(SubMenuRateioCTB);
                SubMenuRateioCTB.Dispose();
                SubMenuRateioCTB = null;
            }
        }

        private void RateioCTBLabel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubMenuRateioCTB();
            FechaSubMenuAvaliacaoDesempenho();
            FechaSubMenuBiblioteca();
            FechaSubMenuCurriculo();
            FechaSubMenuCorridas();
            FechaSubMenuCadastroJuridico();
            FechaSubMenuESFArquivei();
            FechaSubMenuCigam();
            FechaSubMenuNotasFiscais();
            FechaSubMenuConciliacao();

            if (((Control)sender).Name.Contains("Rateio"))
            {
                RateioCTBLabel.Font = new Font(RateioCTBLabel.Font, FontStyle.Bold);
                RateioCTBLabel.ForeColor = Publicas._fonteBotaoFocado;
                RateioCTBLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("DRE"))
            {
                DRECTBLabel.Font = new Font(DRECTBLabel.Font, FontStyle.Bold);
                DRECTBLabel.ForeColor = Publicas._fonteBotaoFocado;
                DRECTBLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Lalur"))
            {
                LalurCTBLabel.Font = new Font(LalurCTBLabel.Font, FontStyle.Bold);
                LalurCTBLabel.ForeColor = Publicas._fonteBotaoFocado;
                LalurCTBLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Endividamento"))
            {
                EndividamentoCTBLabel.Font = new Font(EndividamentoCTBLabel.Font, FontStyle.Bold);
                EndividamentoCTBLabel.ForeColor = Publicas._fonteBotaoFocado;
                EndividamentoCTBLabel.BackColor = _corMenuSelecionado;
                return;
            }
            
            if (((Control)sender).Name.Contains("Parcelamento"))
            {
                ParcelamentoCTBLabel.Font = new Font(ParcelamentoCTBLabel.Font, FontStyle.Bold);
                ParcelamentoCTBLabel.ForeColor = Publicas._fonteBotaoFocado;
                ParcelamentoCTBLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Cigam"))
            {
                CigamLabel.Font = new Font(CigamLabel.Font, FontStyle.Bold);
                CigamLabel.ForeColor = Publicas._fonteBotaoFocado;
                CigamLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("NotasFiscais"))
            {
                NotasFiscaisLabel.Font = new Font(NotasFiscaisLabel.Font, FontStyle.Bold);
                NotasFiscaisLabel.ForeColor = Publicas._fonteBotaoFocado;
                NotasFiscaisLabel.BackColor = _corMenuSelecionado;
                return;
            }
        }

        private void RateioCTBSetaLabel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubMenuRateioCTB();
            FechaSubMenuAvaliacaoDesempenho();
            FechaSubMenuBiblioteca();
            FechaSubMenuCurriculo();
            FechaSubMenuCorridas();
            FechaSubMenuCadastroJuridico();
            FechaSubMenuESFArquivei();
            FechaSubMenuCigam();
            FechaSubMenuNotasFiscais();
            FechaSubMenuConciliacao();


            if (((Control)sender).Name.Contains("Rateio"))
            {
                RateioCTBSetaLabel.Font = new Font(RateioCTBSetaLabel.Font, FontStyle.Bold);
                RateioCTBSetaLabel.ForeColor = Publicas._fonteBotaoFocado;
                RateioCTBSetaLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("DRE"))
            {
                DRECTBSetaLabel.Font = new Font(DRECTBSetaLabel.Font, FontStyle.Bold);
                DRECTBSetaLabel.ForeColor = Publicas._fonteBotaoFocado;
                DRECTBSetaLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Lalur"))
            {
                LalurCTBSetaLabel.Font = new Font(LalurCTBSetaLabel.Font, FontStyle.Bold);
                LalurCTBSetaLabel.ForeColor = Publicas._fonteBotaoFocado;
                LalurCTBSetaLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Endividamento"))
            {
                EndividamentoCTBSetaLabel.Font = new Font(EndividamentoCTBSetaLabel.Font, FontStyle.Bold);
                EndividamentoCTBSetaLabel.ForeColor = Publicas._fonteBotaoFocado;
                EndividamentoCTBSetaLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Parcelamento"))
            {
                ParcelamentoCTBSetaLabel.Font = new Font(ParcelamentoCTBSetaLabel.Font, FontStyle.Bold);
                ParcelamentoCTBSetaLabel.ForeColor = Publicas._fonteBotaoFocado;
                ParcelamentoCTBSetaLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Cigam"))
            {
                CigamSetaLabel.Font = new Font(CigamSetaLabel.Font, FontStyle.Bold);
                CigamSetaLabel.ForeColor = Publicas._fonteBotaoFocado;
                CigamSetaLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("NotasFiscais"))
            {
                NotasFiscaisSetaLabel.Font = new Font(NotasFiscaisSetaLabel.Font, FontStyle.Bold);
                NotasFiscaisSetaLabel.ForeColor = Publicas._fonteBotaoFocado;
                NotasFiscaisSetaLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Conciliacao"))
            {
                ConciliacaoSetaLabel.Font = new Font(ConciliacaoSetaLabel.Font, FontStyle.Bold);
                ConciliacaoSetaLabel.ForeColor = Publicas._fonteBotaoFocado;
                ConciliacaoSetaLabel.BackColor = _corMenuSelecionado;
                return;
            }
        }

        private void MudaSelecaoDeCoresSubMenuRateioCTB()
        {
            FechaSubMenuRateioCTB();

            RateioCTBLabel.Font = new Font(RateioCTBLabel.Font, RateioCTBLabel.Font.Style & ~FontStyle.Bold);
            RateioCTBSetaLabel.Font = new Font(RateioCTBSetaLabel.Font, RateioCTBSetaLabel.Font.Style & ~FontStyle.Bold);
            DRECTBLabel.Font = new Font(DRECTBLabel.Font, RateioCTBLabel.Font.Style & ~FontStyle.Bold);
            DRECTBSetaLabel.Font = new Font(DRECTBSetaLabel.Font, RateioCTBSetaLabel.Font.Style & ~FontStyle.Bold);
            LalurCTBLabel.Font = new Font(LalurCTBLabel.Font, RateioCTBLabel.Font.Style & ~FontStyle.Bold);
            LalurCTBSetaLabel.Font = new Font(LalurCTBSetaLabel.Font, RateioCTBSetaLabel.Font.Style & ~FontStyle.Bold);
            EndividamentoCTBLabel.Font = new Font(EndividamentoCTBLabel.Font, RateioCTBLabel.Font.Style & ~FontStyle.Bold);
            EndividamentoCTBSetaLabel.Font = new Font(EndividamentoCTBSetaLabel.Font, RateioCTBSetaLabel.Font.Style & ~FontStyle.Bold);
            ParcelamentoCTBLabel.Font = new Font(ParcelamentoCTBLabel.Font, RateioCTBLabel.Font.Style & ~FontStyle.Bold);
            ParcelamentoCTBSetaLabel.Font = new Font(ParcelamentoCTBSetaLabel.Font, RateioCTBSetaLabel.Font.Style & ~FontStyle.Bold);
            CigamLabel.Font = new Font(CigamLabel.Font, CigamLabel.Font.Style & ~FontStyle.Bold);
            CigamSetaLabel.Font = new Font(CigamSetaLabel.Font, CigamSetaLabel.Font.Style & ~FontStyle.Bold);
            NotasFiscaisLabel.Font = new Font(NotasFiscaisLabel.Font, NotasFiscaisLabel.Font.Style & ~FontStyle.Bold);
            NotasFiscaisSetaLabel.Font = new Font(NotasFiscaisSetaLabel.Font, NotasFiscaisSetaLabel.Font.Style & ~FontStyle.Bold);
            ConciliacaoLabel.Font = new Font(ConciliacaoLabel.Font, ConciliacaoLabel.Font.Style & ~FontStyle.Bold);
            ConciliacaoSetaLabel.Font = new Font(ConciliacaoSetaLabel.Font, ConciliacaoSetaLabel.Font.Style & ~FontStyle.Bold);

            RateioCTBLabel.BackColor = _corFundoMenu;
            RateioCTBSetaLabel.BackColor = RateioCTBLabel.BackColor;
            DRECTBLabel.BackColor = _corFundoMenu;
            DRECTBSetaLabel.BackColor = RateioCTBLabel.BackColor;
            LalurCTBLabel.BackColor = _corFundoMenu;
            LalurCTBSetaLabel.BackColor = RateioCTBLabel.BackColor;
            EndividamentoCTBLabel.BackColor = _corFundoMenu;
            EndividamentoCTBSetaLabel.BackColor = RateioCTBLabel.BackColor;
            ParcelamentoCTBLabel.BackColor = _corFundoMenu;
            ParcelamentoCTBSetaLabel.BackColor = RateioCTBLabel.BackColor;
            CigamLabel.BackColor = _corFundoMenu;
            CigamSetaLabel.BackColor = CigamLabel.BackColor;
            NotasFiscaisLabel.BackColor = _corFundoMenu;
            NotasFiscaisSetaLabel.BackColor = NotasFiscaisLabel.BackColor;
            ConciliacaoLabel.BackColor = _corFundoMenu;
            ConciliacaoSetaLabel.BackColor = ConciliacaoLabel.BackColor;

            RateioCTBLabel.ForeColor = Color.WhiteSmoke;
            RateioCTBSetaLabel.ForeColor = Color.WhiteSmoke;
            DRECTBLabel.ForeColor = Color.WhiteSmoke;
            DRECTBSetaLabel.ForeColor = Color.WhiteSmoke;
            LalurCTBLabel.ForeColor = Color.WhiteSmoke;
            LalurCTBSetaLabel.ForeColor = Color.WhiteSmoke;
            EndividamentoCTBLabel.ForeColor = Color.WhiteSmoke;
            EndividamentoCTBSetaLabel.ForeColor = Color.WhiteSmoke;
            ParcelamentoCTBLabel.ForeColor = Color.WhiteSmoke;
            ParcelamentoCTBSetaLabel.ForeColor = Color.WhiteSmoke;
            CigamLabel.ForeColor = Color.WhiteSmoke;
            CigamSetaLabel.ForeColor = Color.WhiteSmoke;
            NotasFiscaisLabel.ForeColor = Color.WhiteSmoke;
            NotasFiscaisSetaLabel.ForeColor = Color.WhiteSmoke;
            ConciliacaoLabel.ForeColor = Color.WhiteSmoke;
            ConciliacaoSetaLabel.ForeColor = Color.WhiteSmoke;

            RateioCTBSetaLabel.Text = "6";
            DRECTBSetaLabel.Text = "6";
            LalurCTBSetaLabel.Text = "6";
            EndividamentoCTBSetaLabel.Text = "6";
            ParcelamentoCTBSetaLabel.Text = "6";
            CigamSetaLabel.Text = "6";
            NotasFiscaisSetaLabel.Text = "6";
            ConciliacaoSetaLabel.Text = "6";
        }

        private void FechaSubMenuContabilidade()
        {
            FechaSubMenuRateioCTB();
            FechaSubMenuConciliacao();
            FechaSubMenuESFArquiveiSaida();

            if (SubMenuContabilidade != null)
            {
                SubMenuContabilidade.Visible = false;
                this.Controls.Remove(SubMenuContabilidade);
                SubMenuContabilidade.Dispose();
                SubMenuContabilidade = null;
            }
        }

        #endregion

        #region SubMenu Escrituracao
        private void EscrituracaoFiscalSetaLabel_Click(object sender, EventArgs e)
        {
            // abrir o SubMenu 
            EscrituracaoFiscalSetaLabel.Text = "3";

            if (!Publicas._TemaBlack)
            {
                EscrituracaoFiscalSetaLabel.ForeColor = Publicas._bordaEntrada;
                EscrituracaoFiscalLabel.ForeColor = Publicas._bordaEntrada;
            }
            else
            {
                EscrituracaoFiscalSetaLabel.ForeColor = Publicas._fonteMenuSelecionado;
                EscrituracaoFiscalLabel.ForeColor = Publicas._fonteMenuSelecionado;
            }
            EscrituracaoFiscalSetaLabel.BackColor = _corFundoMenu;

            if (SubMenuEscrituracaoFiscal != null)
            {
                FechaSubMenuEscrituracaoFiscal();
                return;
            }

            #region Cria estrutura 

            // Menu de fundo (onde agrupa os demais itens)
            SubMenuEscrituracaoFiscal = new Panel();
            SubMenuEscrituracaoFiscal.Size = new Size(155, _heidthMenuSistema * 4);
            SubMenuEscrituracaoFiscal.Location = new Point(MenuSistemaPanel.Width + SubMenuControladoria.Width + 4, AcessoAoMenuPanel.Height);
            SubMenuEscrituracaoFiscal.BackColor = _corFundoDivisao;
            this.Controls.Add(SubMenuEscrituracaoFiscal);
            SubMenuEscrituracaoFiscal.BringToFront();
            SubMenuEscrituracaoFiscal.Visible = true;
            #endregion

            #region DiferencialAliquota
            DiferencialAliquotaPanel = new Panel();
            DiferencialAliquotaPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            DiferencialAliquotaPanel.Dock = DockStyle.Top;
            DiferencialAliquotaPanel.BackColor = _corFundoMenu;
            DiferencialAliquotaPanel.Name = "DiferencialAliquotaPanel";
            DiferencialAliquotaPanel.Enabled = Publicas._usuario.Desenvolvedor || Publicas._usuario.AcessaEscrituracaoFiscal;

            DivisoriaDiferencialAliquotaImagem = new PictureBox();
            DivisoriaDiferencialAliquotaImagem.Size = new Size(0, 4);
            DivisoriaDiferencialAliquotaImagem.Dock = DockStyle.Bottom;
            DivisoriaDiferencialAliquotaImagem.BackColor = _corFundoDivisao;

            DiferencialAliquotaLabel = new Label();
            DiferencialAliquotaLabel.AutoSize = false;
            DiferencialAliquotaLabel.Size = new Size(_widthLabelMenuSistema, 0);
            DiferencialAliquotaLabel.Dock = DockStyle.Fill;
            DiferencialAliquotaLabel.Text = "Diferencial" + Environment.NewLine + "de Alíquota";
            DiferencialAliquotaLabel.Font = CorFontepadraoLabel.Font;
            DiferencialAliquotaLabel.ForeColor = Color.WhiteSmoke;
            DiferencialAliquotaLabel.TextAlign = ContentAlignment.MiddleRight;
            DiferencialAliquotaLabel.MouseHover += new EventHandler(this.ArquiveiLabel_MouseHover);
            DiferencialAliquotaLabel.Click += new System.EventHandler(this.DiferencialAliquotaLabel_Click);
            DiferencialAliquotaLabel.Name = "DiferencialAliquotaLabel";

            FavoritoDiferencialAliquotaImagem = new PictureBox();
            FavoritoDiferencialAliquotaImagem.Size = new Size(10, 10);
            FavoritoDiferencialAliquotaImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoDiferencialAliquotaImagem.Name = DiferencialAliquotaLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoDiferencialAliquotaImagem.Name))
            {
                FavoritoDiferencialAliquotaImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoDiferencialAliquotaImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoDiferencialAliquotaImagem.Top = 35;
            FavoritoDiferencialAliquotaImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoDiferencialAliquotaImagem.Tag = DiferencialAliquotaLabel.Text;
            FavoritoDiferencialAliquotaImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoDiferencialAliquotaImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoDiferencialAliquotaImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoDiferencialAliquotaImagem.AccessibleName = "Escrituração Fiscal";

            DiferencialAliquotaPanel.Controls.Add(DiferencialAliquotaLabel);
            DiferencialAliquotaPanel.Controls.Add(DivisoriaDiferencialAliquotaImagem);
            DiferencialAliquotaPanel.Controls.Add(FavoritoDiferencialAliquotaImagem);
            FavoritoDiferencialAliquotaImagem.BringToFront();

            SubMenuEscrituracaoFiscal.Controls.Add(DiferencialAliquotaPanel);
            #endregion

            #region Notas fiscais de Serviços
            NotaFiscalServicoESFPanel = new Panel();
            NotaFiscalServicoESFPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            NotaFiscalServicoESFPanel.Dock = DockStyle.Top;
            NotaFiscalServicoESFPanel.BackColor = _corFundoMenu;
            NotaFiscalServicoESFPanel.Name = "NotaFiscalServicoESFPanel";
            //NotaFiscalServicoESFPanel.Enabled = false;

            DivisoriaNotaFiscalServicoESFImagem = new PictureBox();
            DivisoriaNotaFiscalServicoESFImagem.Size = new Size(0, 4);
            DivisoriaNotaFiscalServicoESFImagem.Dock = DockStyle.Bottom;
            DivisoriaNotaFiscalServicoESFImagem.BackColor = _corFundoDivisao;

            Divisoria2NotaFiscalServicoESFImagem = new PictureBox();
            Divisoria2NotaFiscalServicoESFImagem.Size = new Size(1, 2);
            Divisoria2NotaFiscalServicoESFImagem.Dock = DockStyle.Right;
            Divisoria2NotaFiscalServicoESFImagem.BackColor = _corFundoDivisao; //System.Drawing.Color.FromArgb(2, 91, 149);

            NotaFiscalServicoESFSetaLabel = new Label();
            NotaFiscalServicoESFSetaLabel.AutoSize = false;
            NotaFiscalServicoESFSetaLabel.Size = new Size(20, 59);
            NotaFiscalServicoESFSetaLabel.Dock = DockStyle.Right;
            NotaFiscalServicoESFSetaLabel.Text = "6";
            NotaFiscalServicoESFSetaLabel.Font = new Font("Webdings", (float)12);
            NotaFiscalServicoESFSetaLabel.TextAlign = ContentAlignment.MiddleCenter;
            NotaFiscalServicoESFSetaLabel.MouseHover += new EventHandler(this.ArquiveiSetaLabel_MouseHover);
            NotaFiscalServicoESFSetaLabel.Click += new System.EventHandler(this.NotaFiscalServicoESFSetaPanel_Click);
            NotaFiscalServicoESFSetaLabel.Name = "NotaFiscalServicoESFSetaLabel";
            NotaFiscalServicoESFSetaLabel.ForeColor = Color.WhiteSmoke;

            NotaFiscalServicoESFLabel = new Label();
            NotaFiscalServicoESFLabel.AutoSize = false;
            NotaFiscalServicoESFLabel.Size = new Size(_widthLabelMenuSistema, 0);
            NotaFiscalServicoESFLabel.Dock = DockStyle.Fill;
            NotaFiscalServicoESFLabel.Text = "Notas Fiscais" + Environment.NewLine + "de Servico";
            NotaFiscalServicoESFLabel.Font = CorFontepadraoLabel.Font;
            NotaFiscalServicoESFLabel.ForeColor = Color.WhiteSmoke;
            NotaFiscalServicoESFLabel.TextAlign = ContentAlignment.MiddleRight;
            NotaFiscalServicoESFLabel.MouseHover += new EventHandler(this.ArquiveiLabel_MouseHover);
            NotaFiscalServicoESFLabel.Click += new System.EventHandler(this.NotaFiscalServicoESFSetaPanel_Click);
            NotaFiscalServicoESFLabel.Name = "NotaFiscalServicoESFLabel";

            NotaFiscalServicoESFPanel.Controls.Add(NotaFiscalServicoESFLabel);
            NotaFiscalServicoESFPanel.Controls.Add(Divisoria2NotaFiscalServicoESFImagem);
            NotaFiscalServicoESFPanel.Controls.Add(NotaFiscalServicoESFSetaLabel);
            NotaFiscalServicoESFPanel.Controls.Add(DivisoriaNotaFiscalServicoESFImagem);
            SubMenuEscrituracaoFiscal.Controls.Add(NotaFiscalServicoESFPanel);
            #endregion

            #region Arquivei Saida
            ArquiveiSaidaPanel = new Panel();
            ArquiveiSaidaPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            ArquiveiSaidaPanel.Dock = DockStyle.Top;
            ArquiveiSaidaPanel.BackColor = _corFundoMenu;
            ArquiveiSaidaPanel.Name = "ArquiveiSaidaPanel";
            //ArquiveiSaidaPanel.Enabled = Publicas._usuario.Desenvolvedor;

            DivisoriaArquiveiSaidaImagem = new PictureBox();
            DivisoriaArquiveiSaidaImagem.Size = new Size(0, 4);
            DivisoriaArquiveiSaidaImagem.Dock = DockStyle.Bottom;
            DivisoriaArquiveiSaidaImagem.BackColor = _corFundoDivisao;

            Divisoria2ArquiveiSaidaImagem = new PictureBox();
            Divisoria2ArquiveiSaidaImagem.Size = new Size(1, 2);
            Divisoria2ArquiveiSaidaImagem.Dock = DockStyle.Right;
            Divisoria2ArquiveiSaidaImagem.BackColor = _corFundoDivisao; //System.Drawing.Color.FromArgb(2, 91, 149);

            ArquiveiSaidaSetaLabel = new Label();
            ArquiveiSaidaSetaLabel.AutoSize = false;
            ArquiveiSaidaSetaLabel.Size = new Size(20, 59);
            ArquiveiSaidaSetaLabel.Dock = DockStyle.Right;
            ArquiveiSaidaSetaLabel.Text = "6";
            ArquiveiSaidaSetaLabel.Font = new Font("Webdings", (float)12);
            ArquiveiSaidaSetaLabel.TextAlign = ContentAlignment.MiddleCenter;
            ArquiveiSaidaSetaLabel.MouseHover += new EventHandler(this.ArquiveiSetaLabel_MouseHover);
            ArquiveiSaidaSetaLabel.Click += new System.EventHandler(this.ArquiveiSaidaSetaPanel_Click);
            ArquiveiSaidaSetaLabel.Name = "ArquiveiSaidaSetaLabel";
            ArquiveiSaidaSetaLabel.ForeColor = Color.WhiteSmoke;

            ArquiveiSaidaLabel = new Label();
            ArquiveiSaidaLabel.AutoSize = false;
            ArquiveiSaidaLabel.Size = new Size(_widthLabelMenuSistema, 0);
            ArquiveiSaidaLabel.Dock = DockStyle.Fill;
            ArquiveiSaidaLabel.Text = "NFs Emitidas";
            ArquiveiSaidaLabel.Font = CorFontepadraoLabel.Font;
            ArquiveiSaidaLabel.ForeColor = Color.WhiteSmoke;
            ArquiveiSaidaLabel.TextAlign = ContentAlignment.MiddleRight;
            ArquiveiSaidaLabel.MouseHover += new EventHandler(this.ArquiveiLabel_MouseHover);
            ArquiveiSaidaLabel.Click += new System.EventHandler(this.ArquiveiSaidaSetaPanel_Click);
            ArquiveiSaidaLabel.Name = "ArquiveiSaidaLabel";

            ArquiveiSaidaPanel.Controls.Add(ArquiveiSaidaLabel);
            ArquiveiSaidaPanel.Controls.Add(Divisoria2ArquiveiSaidaImagem);
            ArquiveiSaidaPanel.Controls.Add(ArquiveiSaidaSetaLabel);
            ArquiveiSaidaPanel.Controls.Add(DivisoriaArquiveiSaidaImagem);
            SubMenuEscrituracaoFiscal.Controls.Add(ArquiveiSaidaPanel);
            #endregion                       

            #region Arquivei
            ArquiveiPanel = new Panel();
            ArquiveiPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            ArquiveiPanel.Dock = DockStyle.Top;
            ArquiveiPanel.BackColor = _corFundoMenu;
            ArquiveiPanel.Name = "ArquiveiPanel";
            //ArquiveiPanel.Enabled = false;

            DivisoriaArquiveiImagem = new PictureBox();
            DivisoriaArquiveiImagem.Size = new Size(0, 4);
            DivisoriaArquiveiImagem.Dock = DockStyle.Bottom;
            DivisoriaArquiveiImagem.BackColor = _corFundoDivisao;

            Divisoria2ArquiveiImagem = new PictureBox();
            Divisoria2ArquiveiImagem.Size = new Size(1, 2);
            Divisoria2ArquiveiImagem.Dock = DockStyle.Right;
            Divisoria2ArquiveiImagem.BackColor = _corFundoDivisao; //System.Drawing.Color.FromArgb(2, 91, 149);

            ArquiveiSetaLabel = new Label();
            ArquiveiSetaLabel.AutoSize = false;
            ArquiveiSetaLabel.Size = new Size(20, 59);
            ArquiveiSetaLabel.Dock = DockStyle.Right;
            ArquiveiSetaLabel.Text = "6";
            ArquiveiSetaLabel.Font = new Font("Webdings", (float)12);
            ArquiveiSetaLabel.TextAlign = ContentAlignment.MiddleCenter;
            ArquiveiSetaLabel.MouseHover += new EventHandler(this.ArquiveiSetaLabel_MouseHover);
            ArquiveiSetaLabel.Click += new System.EventHandler(this.ArquiveiSetaPanel_Click);
            ArquiveiSetaLabel.Name = "ArquiveiSetaLabel";
            ArquiveiSetaLabel.ForeColor = Color.WhiteSmoke;

            ArquiveiLabel = new Label();
            ArquiveiLabel.AutoSize = false;
            ArquiveiLabel.Size = new Size(_widthLabelMenuSistema, 0);
            ArquiveiLabel.Dock = DockStyle.Fill;
            ArquiveiLabel.Text = "NFe e CTe Recebidas";
            ArquiveiLabel.Font = CorFontepadraoLabel.Font;
            ArquiveiLabel.ForeColor = Color.WhiteSmoke;
            ArquiveiLabel.TextAlign = ContentAlignment.MiddleRight;
            ArquiveiLabel.MouseHover += new EventHandler(this.ArquiveiLabel_MouseHover);
            ArquiveiLabel.Click += new System.EventHandler(this.ArquiveiSetaPanel_Click);
            ArquiveiLabel.Name = "ArquiveiLabel";

            ArquiveiPanel.Controls.Add(ArquiveiLabel);
            ArquiveiPanel.Controls.Add(Divisoria2ArquiveiImagem);
            ArquiveiPanel.Controls.Add(ArquiveiSetaLabel);
            ArquiveiPanel.Controls.Add(DivisoriaArquiveiImagem);
            SubMenuEscrituracaoFiscal.Controls.Add(ArquiveiPanel);
            #endregion                       
        }

        private void ArquiveiSaidaSetaPanel_Click(object sender, EventArgs e)
        {
            // abrir o SubMenu 
            ArquiveiSaidaSetaLabel.Text = "3";

            if (!Publicas._TemaBlack)
            {
                ArquiveiSaidaSetaLabel.ForeColor = Publicas._bordaEntrada;
                ArquiveiSaidaLabel.ForeColor = Publicas._bordaEntrada;
            }
            else
            {
                ArquiveiSaidaSetaLabel.ForeColor = Publicas._fonteMenuSelecionado;
                ArquiveiSaidaLabel.ForeColor = Publicas._fonteMenuSelecionado;
            }
            ArquiveiSaidaSetaLabel.BackColor = _corFundoMenu;

            if (SubMenuESFArquiveiSaida != null)
            {
                FechaSubMenuESFArquiveiSaida();
                return;
            }

            #region Cria estrutura 

            // Menu de fundo (onde agrupa os demais itens)
            SubMenuESFArquiveiSaida = new Panel();
            SubMenuESFArquiveiSaida.Size = new Size(155, _heidthMenuSistema * 3);
            SubMenuESFArquiveiSaida.Location = new Point(MenuSistemaPanel.Width + SubMenuControladoria.Width + SubMenuEscrituracaoFiscal.Width + 6, AcessoAoMenuPanel.Height);
            SubMenuESFArquiveiSaida.BackColor = _corFundoDivisao;
            this.Controls.Add(SubMenuESFArquiveiSaida);
            SubMenuESFArquiveiSaida.BringToFront();
            SubMenuESFArquiveiSaida.Visible = true;
            #endregion

            #region Resumo
            ResumoSaidaArquiveiPanel = new Panel();
            ResumoSaidaArquiveiPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            ResumoSaidaArquiveiPanel.Dock = DockStyle.Top;
            ResumoSaidaArquiveiPanel.BackColor = _corFundoMenu;
            ResumoSaidaArquiveiPanel.Name = "ResumoSaidaArquiveiPanel";

            DivisoriaResumoSaidaArquiveiImagem = new PictureBox();
            DivisoriaResumoSaidaArquiveiImagem.Size = new Size(0, 4);
            DivisoriaResumoSaidaArquiveiImagem.Dock = DockStyle.Bottom;
            DivisoriaResumoSaidaArquiveiImagem.BackColor = _corFundoDivisao;

            ResumoSaidaArquiveiLabel = new Label();
            ResumoSaidaArquiveiLabel.AutoSize = false;
            ResumoSaidaArquiveiLabel.Size = new Size(_widthLabelMenuSistema, 0);
            ResumoSaidaArquiveiLabel.Dock = DockStyle.Fill;
            ResumoSaidaArquiveiLabel.Text = "Resumo CST" + Environment.NewLine + "x CFOP Emitidas";
            ResumoSaidaArquiveiLabel.Font = CorFontepadraoLabel.Font;
            ResumoSaidaArquiveiLabel.ForeColor = Color.WhiteSmoke;
            ResumoSaidaArquiveiLabel.TextAlign = ContentAlignment.MiddleRight;
            ResumoSaidaArquiveiLabel.MouseHover += new EventHandler(this.ResumoSaidaArquiveiLabel_MouseHover);
            ResumoSaidaArquiveiLabel.Click += new System.EventHandler(this.ResumoSaidaArquiveiLabel_Click);
            ResumoSaidaArquiveiLabel.Name = "ResumoSaidaArquiveiLabel";

            FavoritoResumoSaidaArquiveiImagem = new PictureBox();
            FavoritoResumoSaidaArquiveiImagem.Size = new Size(10, 10);
            FavoritoResumoSaidaArquiveiImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoResumoSaidaArquiveiImagem.Name = ResumoSaidaArquiveiLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoResumoSaidaArquiveiImagem.Name))
            {
                FavoritoResumoSaidaArquiveiImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoResumoSaidaArquiveiImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoResumoSaidaArquiveiImagem.Top = 35;
            FavoritoResumoSaidaArquiveiImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoResumoSaidaArquiveiImagem.Tag = ResumoSaidaArquiveiLabel.Text;
            FavoritoResumoSaidaArquiveiImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoResumoSaidaArquiveiImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoResumoSaidaArquiveiImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoResumoSaidaArquiveiImagem.AccessibleName = "Escrituração Fiscal";

            ResumoSaidaArquiveiPanel.Controls.Add(ResumoSaidaArquiveiLabel);
            ResumoSaidaArquiveiPanel.Controls.Add(DivisoriaResumoSaidaArquiveiImagem);
            ResumoSaidaArquiveiPanel.Controls.Add(FavoritoResumoSaidaArquiveiImagem);
            FavoritoResumoSaidaArquiveiImagem.BringToFront();

            SubMenuESFArquiveiSaida.Controls.Add(ResumoSaidaArquiveiPanel);
            #endregion

            #region Validação Sáida
            ValidacaoXmlSaidaPanel = new Panel();
            ValidacaoXmlSaidaPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            ValidacaoXmlSaidaPanel.Dock = DockStyle.Top;
            ValidacaoXmlSaidaPanel.BackColor = _corFundoMenu;
            ValidacaoXmlSaidaPanel.Name = "ValidacaoXmlSaidaPanel";
            //ValidacaoXmlSaidaPanel.Visible = false;

            DivisoriaValidacaoXmlSaidaImagem = new PictureBox();
            DivisoriaValidacaoXmlSaidaImagem.Size = new Size(0, 4);
            DivisoriaValidacaoXmlSaidaImagem.Dock = DockStyle.Bottom;
            DivisoriaValidacaoXmlSaidaImagem.BackColor = _corFundoDivisao;

            ValidacaoXmlSaidaLabel = new Label();
            ValidacaoXmlSaidaLabel.AutoSize = false;
            ValidacaoXmlSaidaLabel.Size = new Size(_widthLabelMenuSistema, 0);
            ValidacaoXmlSaidaLabel.Dock = DockStyle.Fill;
            ValidacaoXmlSaidaLabel.Text = "Validação NFe" + Environment.NewLine + "Emitidas";
            ValidacaoXmlSaidaLabel.Font = CorFontepadraoLabel.Font;
            ValidacaoXmlSaidaLabel.ForeColor = Color.WhiteSmoke;
            ValidacaoXmlSaidaLabel.TextAlign = ContentAlignment.MiddleRight;
            ValidacaoXmlSaidaLabel.MouseHover += new EventHandler(this.ResumoSaidaArquiveiLabel_MouseHover);
            ValidacaoXmlSaidaLabel.Click += new System.EventHandler(this.ValidacaoXmlSaidaLabel_Click);
            ValidacaoXmlSaidaLabel.Name = "ValidacaoXmlSaidaLabel";

            FavoritoValidacaoXmlSaidaImagem = new PictureBox();
            FavoritoValidacaoXmlSaidaImagem.Size = new Size(10, 10);
            FavoritoValidacaoXmlSaidaImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoValidacaoXmlSaidaImagem.Name = ValidacaoXmlSaidaLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoValidacaoXmlSaidaImagem.Name))
            {
                FavoritoValidacaoXmlSaidaImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoValidacaoXmlSaidaImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoValidacaoXmlSaidaImagem.Top = 35;
            FavoritoValidacaoXmlSaidaImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoValidacaoXmlSaidaImagem.Tag = ValidacaoXmlSaidaLabel.Text;
            FavoritoValidacaoXmlSaidaImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoValidacaoXmlSaidaImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoValidacaoXmlSaidaImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoValidacaoXmlSaidaImagem.AccessibleName = "Escrituração Fiscal";

            ValidacaoXmlSaidaPanel.Controls.Add(ValidacaoXmlSaidaLabel);
            ValidacaoXmlSaidaPanel.Controls.Add(DivisoriaValidacaoXmlSaidaImagem);
            ValidacaoXmlSaidaPanel.Controls.Add(FavoritoValidacaoXmlSaidaImagem);
            FavoritoValidacaoXmlSaidaImagem.BringToFront();

            SubMenuESFArquiveiSaida.Controls.Add(ValidacaoXmlSaidaPanel);
            #endregion

            #region CFOP
            CFOPSaidaArquiveiPanel = new Panel();
            CFOPSaidaArquiveiPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            CFOPSaidaArquiveiPanel.Dock = DockStyle.Top;
            CFOPSaidaArquiveiPanel.BackColor = _corFundoMenu;
            CFOPSaidaArquiveiPanel.Name = "CFOPSaidaArquiveiPanel";

            DivisoriaCFOPSaidaArquiveiImagem = new PictureBox();
            DivisoriaCFOPSaidaArquiveiImagem.Size = new Size(0, 4);
            DivisoriaCFOPSaidaArquiveiImagem.Dock = DockStyle.Bottom;
            DivisoriaCFOPSaidaArquiveiImagem.BackColor = _corFundoDivisao;

            CFOPSaidaArquiveiLabel = new Label();
            CFOPSaidaArquiveiLabel.AutoSize = false;
            CFOPSaidaArquiveiLabel.Size = new Size(_widthLabelMenuSistema, 0);
            CFOPSaidaArquiveiLabel.Dock = DockStyle.Fill;
            CFOPSaidaArquiveiLabel.Text = "CFOP e CST" + Environment.NewLine + "Emitidas";
            CFOPSaidaArquiveiLabel.Font = CorFontepadraoLabel.Font;
            CFOPSaidaArquiveiLabel.ForeColor = Color.WhiteSmoke;
            CFOPSaidaArquiveiLabel.TextAlign = ContentAlignment.MiddleRight;
            CFOPSaidaArquiveiLabel.MouseHover += new EventHandler(this.ResumoSaidaArquiveiLabel_MouseHover);
            CFOPSaidaArquiveiLabel.Click += new System.EventHandler(this.CFOPSaidaArquiveiLabel_Click);
            CFOPSaidaArquiveiLabel.Name = "CFOPSaidaArquiveiLabel";

            FavoritoCFOPSaidaArquiveiImagem = new PictureBox();
            FavoritoCFOPSaidaArquiveiImagem.Size = new Size(10, 10);
            FavoritoCFOPSaidaArquiveiImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoCFOPSaidaArquiveiImagem.Name = CFOPSaidaArquiveiLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoCFOPSaidaArquiveiImagem.Name))
            {
                FavoritoCFOPSaidaArquiveiImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoCFOPSaidaArquiveiImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoCFOPSaidaArquiveiImagem.Top = 35;
            FavoritoCFOPSaidaArquiveiImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoCFOPSaidaArquiveiImagem.Tag = CFOPSaidaArquiveiLabel.Text;
            FavoritoCFOPSaidaArquiveiImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoCFOPSaidaArquiveiImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoCFOPSaidaArquiveiImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoCFOPSaidaArquiveiImagem.AccessibleName = "Escrituração Fiscal";

            CFOPSaidaArquiveiPanel.Controls.Add(CFOPSaidaArquiveiLabel);
            CFOPSaidaArquiveiPanel.Controls.Add(DivisoriaCFOPSaidaArquiveiImagem);
            CFOPSaidaArquiveiPanel.Controls.Add(FavoritoCFOPSaidaArquiveiImagem);
            FavoritoCFOPSaidaArquiveiImagem.BringToFront();

            SubMenuESFArquiveiSaida.Controls.Add(CFOPSaidaArquiveiPanel);
            #endregion

        }

        private void ResumoSaidaArquiveiLabel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaFiscal;
            Contabilidade.ResumoArquivei _tela = new Contabilidade.ResumoArquivei();
            _tela.Size = new Size(this.Width - 5, this.Height - (tituloPanel.Height + panel2.Height + 2));
            _tela.tituloLabel.Text = "Resumo por ST x CFOP - Notas Emitidas";
            _tela.tipoProcessamento = "Emitidos";
            _tela.ShowDialog();
            NomePadrao();
        }

        private void CFOPSaidaArquiveiLabel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaFiscal;
            Contabilidade.CFOPeCST_Saida _tela = new Contabilidade.CFOPeCST_Saida();
            _tela.ShowDialog();
            NomePadrao();
        }

        private void FechaSubMenuESFArquiveiSaida()
        {
            if (SubMenuESFArquiveiSaida != null)
            {
                SubMenuESFArquiveiSaida.Visible = false;
                this.Controls.Remove(SubMenuESFArquiveiSaida);
                SubMenuESFArquiveiSaida.Dispose();
                SubMenuESFArquiveiSaida = null;
            }
        }

        private void ValidacaoXmlSaidaLabel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaFiscal;
            Contabilidade.ValidacaoXMLSaida _tela = new Contabilidade.ValidacaoXMLSaida();
            _tela.Size = new Size(this.Width - 5, this.Height - (tituloPanel.Height + panel2.Height + 2));

            _tela.ShowDialog();
            NomePadrao();
        }

        private void MudaSelecaoDeCoresSubMenuESFArquiveiSaida()
        {
            ValidacaoXmlSaidaLabel.Font = new Font(ValidacaoXmlSaidaLabel.Font, ValidacaoXmlSaidaLabel.Font.Style & ~FontStyle.Bold);
            CFOPSaidaArquiveiLabel.Font = new Font(CFOPSaidaArquiveiLabel.Font, CFOPSaidaArquiveiLabel.Font.Style & ~FontStyle.Bold);
            ResumoSaidaArquiveiLabel.Font = new Font(ResumoSaidaArquiveiLabel.Font, ResumoSaidaArquiveiLabel.Font.Style & ~FontStyle.Bold);

            ValidacaoXmlSaidaLabel.BackColor = _corFundoMenu;
            CFOPSaidaArquiveiLabel.BackColor = ValidacaoXmlSaidaLabel.BackColor;
            ResumoSaidaArquiveiLabel.BackColor = ValidacaoXmlSaidaLabel.BackColor;

            FavoritoValidacaoXmlSaidaImagem.BackColor = ValidacaoXmlSaidaLabel.BackColor;
            FavoritoCFOPSaidaArquiveiImagem.BackColor = ValidacaoXmlSaidaLabel.BackColor;
            FavoritoResumoSaidaArquiveiImagem.BackColor = ValidacaoXmlSaidaLabel.BackColor;

            ValidacaoXmlSaidaLabel.ForeColor = Color.WhiteSmoke;
            CFOPSaidaArquiveiLabel.ForeColor = Color.WhiteSmoke;
            ResumoSaidaArquiveiLabel.ForeColor = Color.WhiteSmoke;

        }

        private void ResumoSaidaArquiveiLabel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubMenuESFArquiveiSaida();
            FechaSubMenuAvaliacaoDesempenho();
            FechaSubMenuBiblioteca();
            FechaSubMenuCurriculo();
            FechaSubMenuCorridas();
            FechaSubMenuCadastroJuridico();

            if (((Control)sender).Name.Contains("ResumoSaida"))
            {
                ResumoSaidaArquiveiLabel.Font = new Font(ResumoSaidaArquiveiLabel.Font, FontStyle.Bold);
                ResumoSaidaArquiveiLabel.ForeColor = Publicas._fonteBotaoFocado;
                ResumoSaidaArquiveiLabel.BackColor = _corMenuSelecionado;
                FavoritoResumoSaidaArquiveiImagem.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("ValidacaoXml"))
            {
                ValidacaoXmlSaidaLabel.Font = new Font(ValidacaoXmlSaidaLabel.Font, FontStyle.Bold);
                ValidacaoXmlSaidaLabel.ForeColor = Publicas._fonteBotaoFocado;
                ValidacaoXmlSaidaLabel.BackColor = _corMenuSelecionado;
                FavoritoValidacaoXmlSaidaImagem.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("CFOP"))
            {
                CFOPSaidaArquiveiLabel.Font = new Font(CFOPSaidaArquiveiLabel.Font, FontStyle.Bold);
                CFOPSaidaArquiveiLabel.ForeColor = Publicas._fonteBotaoFocado;
                CFOPSaidaArquiveiLabel.BackColor = _corMenuSelecionado;
                FavoritoCFOPSaidaArquiveiImagem.BackColor = _corMenuSelecionado;
                return;
            }
        }


        private void MudaSelecaoDeCoresSubMenuESFArquivei()
        {
            ValidacaoArquiveiLabel.Font = new Font(ValidacaoArquiveiLabel.Font, ValidacaoArquiveiLabel.Font.Style & ~FontStyle.Bold);
            ParametroArquiveiLabel.Font = new Font(ParametroArquiveiLabel.Font, ParametroArquiveiLabel.Font.Style & ~FontStyle.Bold);
            CFOPArquiveiLabel.Font = new Font(CFOPArquiveiLabel.Font, CFOPArquiveiLabel.Font.Style & ~FontStyle.Bold);

            ResumoArquiveiLabel.Font = new Font(ResumoArquiveiLabel.Font, ResumoArquiveiLabel.Font.Style & ~FontStyle.Bold);
            ExclusaoArquiveiLabel.Font = new Font(ExclusaoArquiveiLabel.Font, ExclusaoArquiveiLabel.Font.Style & ~FontStyle.Bold);

            ValidacaoArquiveiLabel.BackColor = _corFundoMenu;
            ParametroArquiveiLabel.BackColor = ValidacaoArquiveiLabel.BackColor;
            CFOPArquiveiLabel.BackColor = ValidacaoArquiveiLabel.BackColor;
            ResumoArquiveiLabel.BackColor = ValidacaoArquiveiLabel.BackColor;
            ExclusaoArquiveiLabel.BackColor = ValidacaoArquiveiLabel.BackColor;

            FavoritoValidacaoArquiveiImagem.BackColor = ValidacaoArquiveiLabel.BackColor;
            FavoritoParametroArquiveiImagem.BackColor = ValidacaoArquiveiLabel.BackColor;
            FavoritoCFOPArquiveiImagem.BackColor = ValidacaoArquiveiLabel.BackColor;
            FavoritoResumoArquiveiImagem.BackColor = ValidacaoArquiveiLabel.BackColor;

            ValidacaoArquiveiLabel.ForeColor = Color.WhiteSmoke;
            ParametroArquiveiLabel.ForeColor = Color.WhiteSmoke;
            CFOPArquiveiLabel.ForeColor = Color.WhiteSmoke;
            ResumoArquiveiLabel.ForeColor = Color.WhiteSmoke;
            ExclusaoArquiveiLabel.ForeColor = Color.WhiteSmoke;

        }

        private void ParametroArquiveiPanel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubMenuESFArquivei();
            FechaSubMenuAvaliacaoDesempenho();
            FechaSubMenuBiblioteca();
            FechaSubMenuCurriculo();
            FechaSubMenuCorridas();
            FechaSubMenuCadastroJuridico();

            if (((Control)sender).Name.Contains("Resumo"))
            {
                ResumoArquiveiLabel.Font = new Font(ResumoArquiveiLabel.Font, FontStyle.Bold);
                ResumoArquiveiLabel.ForeColor = Publicas._fonteBotaoFocado;
                ResumoArquiveiLabel.BackColor = _corMenuSelecionado;
                FavoritoResumoArquiveiImagem.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Exclusao"))
            {
                ExclusaoArquiveiLabel.Font = new Font(ExclusaoArquiveiLabel.Font, FontStyle.Bold);
                ExclusaoArquiveiLabel.ForeColor = Publicas._fonteBotaoFocado;
                ExclusaoArquiveiLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("ValidacaoA"))
            {
                ValidacaoArquiveiLabel.Font = new Font(ValidacaoArquiveiLabel.Font, FontStyle.Bold);
                ValidacaoArquiveiLabel.ForeColor = Publicas._fonteBotaoFocado;
                ValidacaoArquiveiLabel.BackColor = _corMenuSelecionado;
                FavoritoValidacaoArquiveiImagem.BackColor = _corMenuSelecionado;
                return;
            }
            
            if (((Control)sender).Name.Contains("Parametro"))
            {
                ParametroArquiveiLabel.Font = new Font(ParametroArquiveiLabel.Font, FontStyle.Bold);
                ParametroArquiveiLabel.ForeColor = Publicas._fonteBotaoFocado;
                ParametroArquiveiLabel.BackColor = _corMenuSelecionado;
                FavoritoParametroArquiveiImagem.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("CFOP"))
            {
                CFOPArquiveiLabel.Font = new Font(CFOPArquiveiLabel.Font, FontStyle.Bold);
                CFOPArquiveiLabel.ForeColor = Publicas._fonteBotaoFocado;
                CFOPArquiveiLabel.BackColor = _corMenuSelecionado;
                FavoritoCFOPArquiveiImagem.BackColor = _corMenuSelecionado;
                return;
            }
        }

        private void NotaFiscalServicoESFSetaPanel_Click(object sender, EventArgs e)
        {
            // abrir o SubMenu 
            NotaFiscalServicoESFSetaLabel.Text = "3";

            if (!Publicas._TemaBlack)
            {
                NotaFiscalServicoESFSetaLabel.ForeColor = Publicas._bordaEntrada;
                NotaFiscalServicoESFLabel.ForeColor = Publicas._bordaEntrada;
            }
            else
            {
                NotaFiscalServicoESFSetaLabel.ForeColor = Publicas._fonteMenuSelecionado;
                NotaFiscalServicoESFLabel.ForeColor = Publicas._fonteMenuSelecionado;
            }
            NotaFiscalServicoESFSetaLabel.BackColor = _corFundoMenu;

            if (SubMenuESFArquivei != null)
            {
                FechaSubMenuESFArquivei();
                return;
            }

            #region Cria estrutura 

            // Menu de fundo (onde agrupa os demais itens)
            SubMenuESFArquivei = new Panel();
            SubMenuESFArquivei.Size = new Size(155, _heidthMenuSistema * 2);
            SubMenuESFArquivei.Location = new Point(MenuSistemaPanel.Width + SubMenuEscrituracaoFiscal.Width + SubMenuESFArquivei.Width + 6, AcessoAoMenuPanel.Height);
            SubMenuESFArquivei.BackColor = _corFundoDivisao;
            this.Controls.Add(SubMenuESFArquivei);
            SubMenuESFArquivei.BringToFront();
            SubMenuESFArquivei.Visible = true;
            #endregion

            #region IntegraNFS // mudar de lugar
            IntegraNFSPanel = new Panel();
            IntegraNFSPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            IntegraNFSPanel.Dock = DockStyle.Top;
            IntegraNFSPanel.BackColor = _corFundoMenu;
            IntegraNFSPanel.Name = "IntegraNFSPanel";

            DivisoriaIntegraNFSImagem = new PictureBox();
            DivisoriaIntegraNFSImagem.Size = new Size(0, 4);
            DivisoriaIntegraNFSImagem.Dock = DockStyle.Bottom;
            DivisoriaIntegraNFSImagem.BackColor = _corFundoDivisao;

            IntegraNFSLabel = new Label();
            IntegraNFSLabel.AutoSize = false;
            IntegraNFSLabel.Size = new Size(_widthLabelMenuSistema, 0);
            IntegraNFSLabel.Dock = DockStyle.Fill;
            IntegraNFSLabel.Text = "Integra NFS Globus" + Environment.NewLine + "EST x ESF ISS";
            IntegraNFSLabel.Font = CorFontepadraoLabel.Font;
            IntegraNFSLabel.ForeColor = Color.WhiteSmoke;
            IntegraNFSLabel.TextAlign = ContentAlignment.MiddleRight;
            IntegraNFSLabel.MouseHover += new EventHandler(this.CadastrosNfServicosPanel_MouseHover);
            IntegraNFSLabel.Click += new System.EventHandler(this.IntegraNFSLabel_Click);
            IntegraNFSLabel.Name = "IntegraNFSLabel";

            FavoritoIntegraNFSImagem = new PictureBox();
            FavoritoIntegraNFSImagem.Size = new Size(10, 10);
            FavoritoIntegraNFSImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoIntegraNFSImagem.Name = IntegraNFSLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoIntegraNFSImagem.Name))
            {
                FavoritoIntegraNFSImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoIntegraNFSImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoIntegraNFSImagem.Top = 35;
            FavoritoIntegraNFSImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoIntegraNFSImagem.Tag = IntegraNFSLabel.Text;
            FavoritoIntegraNFSImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoIntegraNFSImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoIntegraNFSImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoIntegraNFSImagem.AccessibleName = "Escrituração Fiscal";

            IntegraNFSPanel.Controls.Add(IntegraNFSLabel);
            IntegraNFSPanel.Controls.Add(DivisoriaIntegraNFSImagem);
            IntegraNFSPanel.Controls.Add(FavoritoIntegraNFSImagem);
            FavoritoIntegraNFSImagem.BringToFront();

            SubMenuESFArquivei.Controls.Add(IntegraNFSPanel);
            #endregion

            #region CadastrosNfServicos 
            CadastrosNfServicosPanel = new Panel();
            CadastrosNfServicosPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            CadastrosNfServicosPanel.Dock = DockStyle.Top;
            CadastrosNfServicosPanel.BackColor = _corFundoMenu;
            CadastrosNfServicosPanel.Name = "CadastrosNfServicosPanel";
            //CadastrosNfServicosPanel.Enabled = Publicas._usuario.Desenvolvedor;
            

            DivisoriaCadastrosNfServicosImagem = new PictureBox();
            DivisoriaCadastrosNfServicosImagem.Size = new Size(0, 4);
            DivisoriaCadastrosNfServicosImagem.Dock = DockStyle.Bottom;
            DivisoriaCadastrosNfServicosImagem.BackColor = _corFundoDivisao;

            Divisoria2CadastrosNfServicosImagem = new PictureBox();
            Divisoria2CadastrosNfServicosImagem.Size = new Size(1, 2);
            Divisoria2CadastrosNfServicosImagem.Dock = DockStyle.Right;
            Divisoria2CadastrosNfServicosImagem.BackColor = _corFundoDivisao; //System.Drawing.Color.FromArgb(2, 91, 149);

            CadastrosNfServicosSetaLabel = new Label();
            CadastrosNfServicosSetaLabel.AutoSize = false;
            CadastrosNfServicosSetaLabel.Size = new Size(20, 59);
            CadastrosNfServicosSetaLabel.Dock = DockStyle.Right;
            CadastrosNfServicosSetaLabel.Text = "6";
            CadastrosNfServicosSetaLabel.Font = new Font("Webdings", (float)12);
            CadastrosNfServicosSetaLabel.TextAlign = ContentAlignment.MiddleCenter;
            CadastrosNfServicosSetaLabel.Click += new System.EventHandler(this.CadastrosNfServicosSetaLabel_Click);
            CadastrosNfServicosSetaLabel.MouseHover += new EventHandler(this.CadastrosNfServicosSetaPanel_MouseHover);
            CadastrosNfServicosSetaLabel.Name = "CadastrosNfServicosSetaLabel";
            CadastrosNfServicosSetaLabel.ForeColor = Color.WhiteSmoke;

            CadastrosNfServicosLabel = new Label();
            CadastrosNfServicosLabel.AutoSize = false;
            CadastrosNfServicosLabel.Size = new Size(_widthLabelMenuSistema, 0);
            CadastrosNfServicosLabel.Dock = DockStyle.Fill;
            CadastrosNfServicosLabel.Text = "Cadastros";
            CadastrosNfServicosLabel.Font = CorFontepadraoLabel.Font;
            CadastrosNfServicosLabel.ForeColor = Color.WhiteSmoke;
            CadastrosNfServicosLabel.TextAlign = ContentAlignment.MiddleRight;
            CadastrosNfServicosLabel.MouseHover += new EventHandler(this.CadastrosNfServicosPanel_MouseHover);
            CadastrosNfServicosLabel.Click += new System.EventHandler(this.CadastrosNfServicosSetaLabel_Click);
            CadastrosNfServicosLabel.Name = "CadastrosNfServicosLabel";

            CadastrosNfServicosPanel.Controls.Add(CadastrosNfServicosLabel);
            //CadastrosNfServicosPanel.Controls.Add(CadastrosNfServicosImagem);
            CadastrosNfServicosPanel.Controls.Add(Divisoria2CadastrosNfServicosImagem);
            CadastrosNfServicosPanel.Controls.Add(CadastrosNfServicosSetaLabel);
            CadastrosNfServicosPanel.Controls.Add(DivisoriaCadastrosNfServicosImagem);

            SubMenuESFArquivei.Controls.Add(CadastrosNfServicosPanel);
            #endregion
            
        }

        private void CadastrosNfServicosSetaLabel_Click(object sender, EventArgs e)
        {
            // abrir o SubMenu 
            CadastrosNfServicosSetaLabel.Text = "3";

            if (!Publicas._TemaBlack)
            {
                CadastrosNfServicosSetaLabel.ForeColor = Publicas._bordaEntrada;
                CadastrosNfServicosLabel.ForeColor = Publicas._bordaEntrada;
            }
            else
            {
                CadastrosNfServicosSetaLabel.ForeColor = Publicas._fonteMenuSelecionado;
                CadastrosNfServicosLabel.ForeColor = Publicas._fonteMenuSelecionado;
            }
            CadastrosNfServicosSetaLabel.BackColor = _corFundoMenu;

            if (SubMenuESFCadastro != null)
            {
                FechaSubMenuESFCadastro();
                return;
            }

            #region Cria estrutura 

            // Menu de fundo (onde agrupa os demais itens)
            SubMenuESFCadastro = new Panel();
            SubMenuESFCadastro.Size = new Size(155, _heidthMenuSistema);
            SubMenuESFCadastro.Location = new Point(MenuSistemaPanel.Width + SubMenuEscrituracaoFiscal.Width + SubMenuESFArquivei.Width + SubMenuESFCadastro.Width + 8, AcessoAoMenuPanel.Height);
            SubMenuESFCadastro.BackColor = _corFundoDivisao;
            this.Controls.Add(SubMenuESFCadastro);
            SubMenuESFCadastro.BringToFront();
            SubMenuESFCadastro.Visible = true;
            #endregion

            #region ParametroCodServico // mudar de lugar
            ParametroCodServicoPanel = new Panel();
            ParametroCodServicoPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            ParametroCodServicoPanel.Dock = DockStyle.Top;
            ParametroCodServicoPanel.BackColor = _corFundoMenu;
            ParametroCodServicoPanel.Name = "ParametroCodServicoPanel";

            DivisoriaParametroCodServicoImagem = new PictureBox();
            DivisoriaParametroCodServicoImagem.Size = new Size(0, 4);
            DivisoriaParametroCodServicoImagem.Dock = DockStyle.Bottom;
            DivisoriaParametroCodServicoImagem.BackColor = _corFundoDivisao;

            ParametroCodServicoLabel = new Label();
            ParametroCodServicoLabel.AutoSize = false;
            ParametroCodServicoLabel.Size = new Size(_widthLabelMenuSistema, 0);
            ParametroCodServicoLabel.Dock = DockStyle.Fill;
            ParametroCodServicoLabel.Text = "Código Servico" + Environment.NewLine + "XML x Globus";
            ParametroCodServicoLabel.Font = CorFontepadraoLabel.Font;
            ParametroCodServicoLabel.ForeColor = Color.WhiteSmoke;
            ParametroCodServicoLabel.TextAlign = ContentAlignment.MiddleRight;
            ParametroCodServicoLabel.MouseHover += new EventHandler(this.ParametroCodServico_MouseHover);
            ParametroCodServicoLabel.Click += new System.EventHandler(this.ParametroCodServicoLabel_Click);
            ParametroCodServicoLabel.Name = "ParametroCodServicoLabel";

            FavoritoParametroCodServicoImagem = new PictureBox();
            FavoritoParametroCodServicoImagem.Size = new Size(10, 10);
            FavoritoParametroCodServicoImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoParametroCodServicoImagem.Name = ParametroCodServicoLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoParametroCodServicoImagem.Name))
            {
                FavoritoParametroCodServicoImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoParametroCodServicoImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoParametroCodServicoImagem.Top = 35;
            FavoritoParametroCodServicoImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoParametroCodServicoImagem.Tag = ParametroCodServicoLabel.Text;
            FavoritoParametroCodServicoImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoParametroCodServicoImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoParametroCodServicoImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoParametroCodServicoImagem.AccessibleName = "Escrituração Fiscal";

            ParametroCodServicoPanel.Controls.Add(ParametroCodServicoLabel);
            ParametroCodServicoPanel.Controls.Add(DivisoriaParametroCodServicoImagem);
            ParametroCodServicoPanel.Controls.Add(FavoritoParametroCodServicoImagem);
            FavoritoParametroCodServicoImagem.BringToFront();

            SubMenuESFCadastro.Controls.Add(ParametroCodServicoPanel);
            #endregion
        }

        private void ParametroCodServicoLabel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaFiscal;
            Contabilidade.ParametroCodigoServico _tela = new Contabilidade.ParametroCodigoServico();

            _tela.ShowDialog();
            NomePadrao();
        }

        private void ParametroCodServico_MouseHover(object sender, EventArgs e)
        {
            if (((Control)sender).Name.Contains("Parametro"))
            {
                ParametroCodServicoLabel.Font = new Font(ParametroCodServicoLabel.Font, FontStyle.Bold);
                ParametroCodServicoLabel.ForeColor = Publicas._fonteBotaoFocado;
                ParametroCodServicoLabel.BackColor = _corMenuSelecionado;
                return;
            }
        }

        private void FechaSubMenuESFCadastro()
        {
            FechaSubMenuESFArquiveiSaida();

            if (SubMenuESFCadastro != null)
            {
                SubMenuESFCadastro.Visible = false;
                this.Controls.Remove(SubMenuESFCadastro);
                SubMenuESFCadastro.Dispose();
                SubMenuESFCadastro = null;
            }
        }

        private void CadastrosNfServicosPanel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubMenuNotasFiscais();
            FechaSubMenuAvaliacaoDesempenho();
            FechaSubMenuBiblioteca();
            FechaSubMenuCurriculo();
            FechaSubMenuCorridas();
            FechaSubMenuCadastroJuridico();
            FechaSubMenuESFCadastro();

            if (((Control)sender).Name.Contains("Cadastro"))
            {
                CadastrosNfServicosLabel.Font = new Font(CadastrosNfServicosLabel.Font, FontStyle.Bold);
                CadastrosNfServicosLabel.ForeColor = Publicas._fonteBotaoFocado;
                CadastrosNfServicosLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("IntegraNFS"))
            {
                IntegraNFSLabel.Font = new Font(IntegraNFSLabel.Font, FontStyle.Bold);
                IntegraNFSLabel.ForeColor = Publicas._fonteBotaoFocado;
                IntegraNFSLabel.BackColor = _corMenuSelecionado;
                FavoritoIntegraNFSImagem.BackColor = _corMenuSelecionado;
                return;
            }
        }

        private void CadastrosNfServicosSetaPanel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubMenuNotasFiscais();
            FechaSubMenuAvaliacaoDesempenho();
            FechaSubMenuBiblioteca();
            FechaSubMenuCurriculo();
            FechaSubMenuCorridas();
            FechaSubMenuCadastroJuridico();
            FechaSubMenuESFCadastro();

            if (((Control)sender).Name.Contains("Cadastro"))
            {
                CadastrosNfServicosSetaLabel.Font = new Font(CadastrosNfServicosSetaLabel.Font, FontStyle.Bold);
                CadastrosNfServicosSetaLabel.ForeColor = Publicas._fonteBotaoFocado;
                CadastrosNfServicosSetaLabel.BackColor = _corMenuSelecionado;
                return;
            }

        }

        private void MudaSelecaoDeCoresSubMenuNotasFiscais()
        {
            CadastrosNfServicosSetaLabel.Font = new Font(CadastrosNfServicosSetaLabel.Font, CadastrosNfServicosSetaLabel.Font.Style & ~FontStyle.Bold);
            CadastrosNfServicosLabel.Font = new Font(CadastrosNfServicosLabel.Font, CadastrosNfServicosLabel.Font.Style & ~FontStyle.Bold);
            IntegraNFSLabel.Font = new Font(IntegraNFSLabel.Font, IntegraNFSLabel.Font.Style & ~FontStyle.Bold);

            CadastrosNfServicosSetaLabel.BackColor = _corFundoMenu;
            CadastrosNfServicosLabel.BackColor = CadastrosNfServicosSetaLabel.BackColor;
            IntegraNFSLabel.BackColor = CadastrosNfServicosSetaLabel.BackColor;

            CadastrosNfServicosSetaLabel.ForeColor = Color.WhiteSmoke;
            CadastrosNfServicosLabel.ForeColor = Color.WhiteSmoke;
            IntegraNFSLabel.ForeColor = Color.WhiteSmoke;

            FavoritoIntegraNFSImagem.BackColor = _corMenuSelecionado;

            CadastrosNfServicosSetaLabel.Text = "6";
        }

        private void DiferencialAliquotaLabel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaFiscal;
            Contabilidade.DiferencialAliquota _tela = new Contabilidade.DiferencialAliquota();
            _tela.Size = new Size(this.Width - 5, this.Height - (tituloPanel.Height + panel2.Height + 2));

            _tela.ShowDialog();
            NomePadrao();
        }

        private void MudaSelecaoDeCoresSubMenuContabilidade()
        {
            
            ArquiveiLabel.Font = new Font(ArquiveiLabel.Font, ArquiveiLabel.Font.Style & ~FontStyle.Bold);
            ArquiveiSaidaLabel.Font = new Font(ArquiveiSaidaLabel.Font, ArquiveiSaidaLabel.Font.Style & ~FontStyle.Bold);
            NotaFiscalServicoESFLabel.Font = new Font(NotaFiscalServicoESFLabel.Font, NotaFiscalServicoESFLabel.Font.Style & ~FontStyle.Bold);
            NotaFiscalServicoESFSetaLabel.Font = new Font(NotaFiscalServicoESFSetaLabel.Font, NotaFiscalServicoESFSetaLabel.Font.Style & ~FontStyle.Bold);
            ArquiveiSetaLabel.Font = new Font(ArquiveiSetaLabel.Font, ArquiveiSetaLabel.Font.Style & ~FontStyle.Bold);
            ArquiveiSaidaSetaLabel.Font = new Font(ArquiveiSaidaSetaLabel.Font, ArquiveiSaidaSetaLabel.Font.Style & ~FontStyle.Bold);
            DiferencialAliquotaLabel.Font = new Font(DiferencialAliquotaLabel.Font, DiferencialAliquotaLabel.Font.Style & ~FontStyle.Bold);

            ArquiveiLabel.BackColor = _corFundoMenu;
            ArquiveiSaidaLabel.BackColor = _corFundoMenu;
            NotaFiscalServicoESFLabel.BackColor = ArquiveiLabel.BackColor;
            NotaFiscalServicoESFSetaLabel.BackColor = ArquiveiLabel.BackColor;
            ArquiveiSetaLabel.BackColor = ArquiveiLabel.BackColor;
            ArquiveiSaidaSetaLabel.BackColor = ArquiveiLabel.BackColor;
            DiferencialAliquotaLabel.BackColor = ArquiveiLabel.BackColor;
            FavoritoDiferencialAliquotaImagem.BackColor = ArquiveiLabel.BackColor;

            ArquiveiLabel.ForeColor = Color.WhiteSmoke;
            ArquiveiSaidaLabel.ForeColor = Color.WhiteSmoke;
            NotaFiscalServicoESFLabel.ForeColor = Color.WhiteSmoke;
            ArquiveiSetaLabel.ForeColor = Color.WhiteSmoke;
            ArquiveiSaidaSetaLabel.ForeColor = Color.WhiteSmoke;
            NotaFiscalServicoESFSetaLabel.ForeColor = Color.WhiteSmoke;
            DiferencialAliquotaLabel.ForeColor = Color.WhiteSmoke;

            ArquiveiSetaLabel.Text = "6";
            ArquiveiSaidaSetaLabel.Text = "6";
            NotaFiscalServicoESFSetaLabel.Text = "6";

        }

        private void ArquiveiLabel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubMenuContabilidade();
            FechaSubMenuAvaliacaoDesempenho();
            FechaSubMenuBiblioteca();
            FechaSubMenuCurriculo();
            FechaSubMenuCorridas();
            FechaSubMenuCadastroJuridico();
            FechaSubMenuESFArquivei();
            FechaSubMenuESFArquiveiSaida();

            if (((Control)sender).Name.Contains("ArquiveiL"))
            {
                ArquiveiLabel.Font = new Font(ArquiveiLabel.Font, FontStyle.Bold);
                ArquiveiLabel.ForeColor = Publicas._fonteBotaoFocado;
                ArquiveiLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("ArquiveiSaida"))
            {
                ArquiveiSaidaLabel.Font = new Font(ArquiveiSaidaLabel.Font, FontStyle.Bold);
                ArquiveiSaidaLabel.ForeColor = Publicas._fonteBotaoFocado;
                ArquiveiSaidaLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("NotaFiscalServicoESF"))
            {
                NotaFiscalServicoESFLabel.Font = new Font(NotaFiscalServicoESFLabel.Font, FontStyle.Bold);
                NotaFiscalServicoESFLabel.ForeColor = Publicas._fonteBotaoFocado;
                NotaFiscalServicoESFLabel.BackColor = _corMenuSelecionado;
                return;
            }


            if (((Control)sender).Name.Contains("Diferencial"))
            {
                DiferencialAliquotaLabel.Font = new Font(DiferencialAliquotaLabel.Font, FontStyle.Bold);
                DiferencialAliquotaLabel.ForeColor = Publicas._fonteBotaoFocado;
                DiferencialAliquotaLabel.BackColor = _corMenuSelecionado;
                FavoritoDiferencialAliquotaImagem.BackColor = _corMenuSelecionado;
                return;
            }
        }

        private void ArquiveiSetaLabel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubMenuContabilidade();
            FechaSubMenuAvaliacaoDesempenho();
            FechaSubMenuBiblioteca();
            FechaSubMenuCurriculo();
            FechaSubMenuCorridas();
            FechaSubMenuCadastroJuridico();
            FechaSubMenuESFArquivei();
            
            if (((Control)sender).Name.Contains("ArquiveiSeta"))
            {
                ArquiveiSetaLabel.Font = new Font(ArquiveiSetaLabel.Font, FontStyle.Bold);
                ArquiveiSetaLabel.ForeColor = Publicas._fonteBotaoFocado;
                ArquiveiSetaLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("ArquiveiSaida"))
            {
                ArquiveiSaidaSetaLabel.Font = new Font(ArquiveiSaidaSetaLabel.Font, FontStyle.Bold);
                ArquiveiSaidaSetaLabel.ForeColor = Publicas._fonteBotaoFocado;
                ArquiveiSaidaSetaLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("NotaFiscalServicoESF"))
            {
                NotaFiscalServicoESFSetaLabel.Font = new Font(NotaFiscalServicoESFSetaLabel.Font, FontStyle.Bold);
                NotaFiscalServicoESFSetaLabel.ForeColor = Publicas._fonteBotaoFocado;
                NotaFiscalServicoESFSetaLabel.BackColor = _corMenuSelecionado;
                return;
            }
        }

        private void FechaSubMenuEscrituracaoFiscal()
        {
            FechaSubMenuESFArquivei();
            FechaSubMenuESFArquiveiSaida();

            if (SubMenuEscrituracaoFiscal != null)
            {
                SubMenuEscrituracaoFiscal.Visible = false;
                this.Controls.Remove(SubMenuEscrituracaoFiscal);
                SubMenuEscrituracaoFiscal.Dispose();
                SubMenuEscrituracaoFiscal = null;
            }
        }

        private void IntegraNFSLabel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaFiscal;
            Contabilidade.IntegraNotaServico _tela = new Contabilidade.IntegraNotaServico();
            _tela.Size = new Size(this.Width - 5, this.Height - (tituloPanel.Height + panel2.Height + 2));

            _tela.ShowDialog();
            NomePadrao();
            //AtivaTimer(sender, e);
        }

        private void FechaSubMenuESFArquivei()
        {
            FechaSubMenuESFCadastro();
            if (SubMenuESFArquivei != null)
            {
                SubMenuESFArquivei.Visible = false;
                this.Controls.Remove(SubMenuESFArquivei);
                SubMenuESFArquivei.Dispose();
                SubMenuESFArquivei = null;
            }
        }

        private void ArquiveiSetaPanel_Click(object sender, EventArgs e)
        {
            // abrir o SubMenu 
            ArquiveiSetaLabel.Text = "3";

            if (!Publicas._TemaBlack)
            {
                ArquiveiSetaLabel.ForeColor = Publicas._bordaEntrada;
                ArquiveiLabel.ForeColor = Publicas._bordaEntrada;
            }
            else
            {
                ArquiveiSetaLabel.ForeColor = Publicas._fonteMenuSelecionado;
                ArquiveiLabel.ForeColor = Publicas._fonteMenuSelecionado;
            }
            ArquiveiSetaLabel.BackColor = _corFundoMenu;

            if (SubMenuESFArquivei != null)
            {
                FechaSubMenuESFArquivei();
                return;
            }

            #region Cria estrutura 

            // Menu de fundo (onde agrupa os demais itens)
            SubMenuESFArquivei = new Panel();
            SubMenuESFArquivei.Size = new Size(155, _heidthMenuSistema * 5);
            SubMenuESFArquivei.Location = new Point(MenuSistemaPanel.Width + SubMenuEscrituracaoFiscal.Width + SubMenuESFArquivei.Width + 6, AcessoAoMenuPanel.Height);
            SubMenuESFArquivei.BackColor = _corFundoDivisao;
            this.Controls.Add(SubMenuESFArquivei);
            SubMenuESFArquivei.BringToFront();
            SubMenuESFArquivei.Visible = true;
            #endregion

            #region Exclusão
            ExclusaoArquiveiPanel = new Panel();
            ExclusaoArquiveiPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            ExclusaoArquiveiPanel.Dock = DockStyle.Top;
            ExclusaoArquiveiPanel.BackColor = _corFundoMenu;
            ExclusaoArquiveiPanel.Name = "ExclusaoArquiveiPanel";
            ExclusaoArquiveiPanel.Enabled = Publicas._usuario.Administrador || Publicas._usuario.UsuarioAcesso == "GSRODRIGUES" || Publicas._usuario.UsuarioAcesso == "AVSOUZA";

            DivisoriaExclusaoArquiveiImagem = new PictureBox();
            DivisoriaExclusaoArquiveiImagem.Size = new Size(0, 4);
            DivisoriaExclusaoArquiveiImagem.Dock = DockStyle.Bottom;
            DivisoriaExclusaoArquiveiImagem.BackColor = _corFundoDivisao;

            ExclusaoArquiveiLabel = new Label();
            ExclusaoArquiveiLabel.AutoSize = false;
            ExclusaoArquiveiLabel.Size = new Size(_widthLabelMenuSistema, 0);
            ExclusaoArquiveiLabel.Dock = DockStyle.Fill;
            ExclusaoArquiveiLabel.Text = "Exclui Arquivos" + Environment.NewLine + "Importados";
            ExclusaoArquiveiLabel.Font = CorFontepadraoLabel.Font;
            ExclusaoArquiveiLabel.ForeColor = Color.WhiteSmoke;
            ExclusaoArquiveiLabel.TextAlign = ContentAlignment.MiddleRight;
            ExclusaoArquiveiLabel.MouseHover += new EventHandler(this.ParametroArquiveiPanel_MouseHover);
            ExclusaoArquiveiLabel.Click += new System.EventHandler(this.ExclusaoArquiveiLabel_Click);
            ExclusaoArquiveiLabel.Name = "ExclusaoArquiveiLabel";

            ExclusaoArquiveiPanel.Controls.Add(ExclusaoArquiveiLabel);
            ExclusaoArquiveiPanel.Controls.Add(DivisoriaExclusaoArquiveiImagem);

            SubMenuESFArquivei.Controls.Add(ExclusaoArquiveiPanel);
            #endregion

            #region Resumo
            ResumoArquiveiPanel = new Panel();
            ResumoArquiveiPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            ResumoArquiveiPanel.Dock = DockStyle.Top;
            ResumoArquiveiPanel.BackColor = _corFundoMenu;
            ResumoArquiveiPanel.Name = "ResumoArquiveiPanel";

            DivisoriaResumoArquiveiImagem = new PictureBox();
            DivisoriaResumoArquiveiImagem.Size = new Size(0, 4);
            DivisoriaResumoArquiveiImagem.Dock = DockStyle.Bottom;
            DivisoriaResumoArquiveiImagem.BackColor = _corFundoDivisao;

            ResumoArquiveiLabel = new Label();
            ResumoArquiveiLabel.AutoSize = false;
            ResumoArquiveiLabel.Size = new Size(_widthLabelMenuSistema, 0);
            ResumoArquiveiLabel.Dock = DockStyle.Fill;
            ResumoArquiveiLabel.Text = "Resumo CST" + Environment.NewLine + "x CFOP Recebidas";
            ResumoArquiveiLabel.Font = CorFontepadraoLabel.Font;
            ResumoArquiveiLabel.ForeColor = Color.WhiteSmoke;
            ResumoArquiveiLabel.TextAlign = ContentAlignment.MiddleRight;
            ResumoArquiveiLabel.MouseHover += new EventHandler(this.ParametroArquiveiPanel_MouseHover);
            ResumoArquiveiLabel.Click += new System.EventHandler(this.ResumoArquiveiLabel_Click);
            ResumoArquiveiLabel.Name = "ResumoArquiveiLabel";

            FavoritoResumoArquiveiImagem = new PictureBox();
            FavoritoResumoArquiveiImagem.Size = new Size(10, 10);
            FavoritoResumoArquiveiImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoResumoArquiveiImagem.Name = ResumoArquiveiLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoResumoArquiveiImagem.Name))
            {
                FavoritoResumoArquiveiImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoResumoArquiveiImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoResumoArquiveiImagem.Top = 35;
            FavoritoResumoArquiveiImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoResumoArquiveiImagem.Tag = ResumoArquiveiLabel.Text;
            FavoritoResumoArquiveiImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoResumoArquiveiImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoResumoArquiveiImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoResumoArquiveiImagem.AccessibleName = "Escrituração Fiscal";

            ResumoArquiveiPanel.Controls.Add(ResumoArquiveiLabel);
            ResumoArquiveiPanel.Controls.Add(DivisoriaResumoArquiveiImagem);
            ResumoArquiveiPanel.Controls.Add(FavoritoResumoArquiveiImagem);
            FavoritoResumoArquiveiImagem.BringToFront();

            SubMenuESFArquivei.Controls.Add(ResumoArquiveiPanel);
            #endregion
            
            #region Validação Entrada
            ValidacaoArquiveiPanel = new Panel();
            ValidacaoArquiveiPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            ValidacaoArquiveiPanel.Dock = DockStyle.Top;
            ValidacaoArquiveiPanel.BackColor = _corFundoMenu;
            ValidacaoArquiveiPanel.Name = "ValidacaoArquiveiPanel";

            DivisoriaValidacaoArquiveiImagem = new PictureBox();
            DivisoriaValidacaoArquiveiImagem.Size = new Size(0, 4);
            DivisoriaValidacaoArquiveiImagem.Dock = DockStyle.Bottom;
            DivisoriaValidacaoArquiveiImagem.BackColor = _corFundoDivisao;

            ValidacaoArquiveiLabel = new Label();
            ValidacaoArquiveiLabel.AutoSize = false;
            ValidacaoArquiveiLabel.Size = new Size(_widthLabelMenuSistema, 0);
            ValidacaoArquiveiLabel.Dock = DockStyle.Fill;
            ValidacaoArquiveiLabel.Text = "Validação NFe " + Environment.NewLine + "e CTe Recebidas";
            ValidacaoArquiveiLabel.Font = CorFontepadraoLabel.Font;
            ValidacaoArquiveiLabel.ForeColor = Color.WhiteSmoke;
            ValidacaoArquiveiLabel.TextAlign = ContentAlignment.MiddleRight;
            ValidacaoArquiveiLabel.MouseHover += new EventHandler(this.ParametroArquiveiPanel_MouseHover);
            ValidacaoArquiveiLabel.Click += new System.EventHandler(this.ValidacaoArquiveiLabel_Click);
            ValidacaoArquiveiLabel.Name = "ValidacaoArquiveiLabel";

            FavoritoValidacaoArquiveiImagem = new PictureBox();
            FavoritoValidacaoArquiveiImagem.Size = new Size(10, 10);
            FavoritoValidacaoArquiveiImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoValidacaoArquiveiImagem.Name = ValidacaoArquiveiLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoValidacaoArquiveiImagem.Name))
            {
                FavoritoValidacaoArquiveiImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoValidacaoArquiveiImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoValidacaoArquiveiImagem.Top = 35;
            FavoritoValidacaoArquiveiImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoValidacaoArquiveiImagem.Tag = ValidacaoArquiveiLabel.Text;
            FavoritoValidacaoArquiveiImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoValidacaoArquiveiImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoValidacaoArquiveiImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoValidacaoArquiveiImagem.AccessibleName = "Escrituração Fiscal";

            ValidacaoArquiveiPanel.Controls.Add(ValidacaoArquiveiLabel);
            ValidacaoArquiveiPanel.Controls.Add(DivisoriaValidacaoArquiveiImagem);
            ValidacaoArquiveiPanel.Controls.Add(FavoritoValidacaoArquiveiImagem);
            FavoritoValidacaoArquiveiImagem.BringToFront();

            SubMenuESFArquivei.Controls.Add(ValidacaoArquiveiPanel);
            #endregion
            
            #region CFOP
            CFOPArquiveiPanel = new Panel();
            CFOPArquiveiPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            CFOPArquiveiPanel.Dock = DockStyle.Top;
            CFOPArquiveiPanel.BackColor = _corFundoMenu;
            CFOPArquiveiPanel.Name = "CFOPArquiveiPanel";

            DivisoriaCFOPArquiveiImagem = new PictureBox();
            DivisoriaCFOPArquiveiImagem.Size = new Size(0, 4);
            DivisoriaCFOPArquiveiImagem.Dock = DockStyle.Bottom;
            DivisoriaCFOPArquiveiImagem.BackColor = _corFundoDivisao;

            CFOPArquiveiLabel = new Label();
            CFOPArquiveiLabel.AutoSize = false;
            CFOPArquiveiLabel.Size = new Size(_widthLabelMenuSistema, 0);
            CFOPArquiveiLabel.Dock = DockStyle.Fill;
            CFOPArquiveiLabel.Text = "CFOP e CST" + Environment.NewLine + "Recebidas";
            CFOPArquiveiLabel.Font = CorFontepadraoLabel.Font;
            CFOPArquiveiLabel.ForeColor = Color.WhiteSmoke;
            CFOPArquiveiLabel.TextAlign = ContentAlignment.MiddleRight;
            CFOPArquiveiLabel.MouseHover += new EventHandler(this.ParametroArquiveiPanel_MouseHover);
            CFOPArquiveiLabel.Click += new System.EventHandler(this.CFOPArquiveiLabel_Click);
            CFOPArquiveiLabel.Name = "CFOPArquiveiLabel";

            FavoritoCFOPArquiveiImagem = new PictureBox();
            FavoritoCFOPArquiveiImagem.Size = new Size(10, 10);
            FavoritoCFOPArquiveiImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoCFOPArquiveiImagem.Name = CFOPArquiveiLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoCFOPArquiveiImagem.Name))
            {
                FavoritoCFOPArquiveiImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoCFOPArquiveiImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoCFOPArquiveiImagem.Top = 35;
            FavoritoCFOPArquiveiImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoCFOPArquiveiImagem.Tag = CFOPArquiveiLabel.Text;
            FavoritoCFOPArquiveiImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoCFOPArquiveiImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoCFOPArquiveiImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoCFOPArquiveiImagem.AccessibleName = "Escrituração Fiscal";

            CFOPArquiveiPanel.Controls.Add(CFOPArquiveiLabel);
            CFOPArquiveiPanel.Controls.Add(DivisoriaCFOPArquiveiImagem);
            CFOPArquiveiPanel.Controls.Add(FavoritoCFOPArquiveiImagem);
            FavoritoCFOPArquiveiImagem.BringToFront();

            SubMenuESFArquivei.Controls.Add(CFOPArquiveiPanel);
            #endregion

            #region Parametros
            ParametroArquiveiPanel = new Panel();
            ParametroArquiveiPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            ParametroArquiveiPanel.Dock = DockStyle.Top;
            ParametroArquiveiPanel.BackColor = _corFundoMenu;
            ParametroArquiveiPanel.Name = "ParametroArquiveiPanel";

            DivisoriaParametroArquiveiImagem = new PictureBox();
            DivisoriaParametroArquiveiImagem.Size = new Size(0, 4);
            DivisoriaParametroArquiveiImagem.Dock = DockStyle.Bottom;
            DivisoriaParametroArquiveiImagem.BackColor = _corFundoDivisao;

            ParametroArquiveiLabel = new Label();
            ParametroArquiveiLabel.AutoSize = false;
            ParametroArquiveiLabel.Size = new Size(_widthLabelMenuSistema, 0);
            ParametroArquiveiLabel.Dock = DockStyle.Fill;
            ParametroArquiveiLabel.Text = "Parâmetros";
            ParametroArquiveiLabel.Font = CorFontepadraoLabel.Font;
            ParametroArquiveiLabel.ForeColor = Color.WhiteSmoke;
            ParametroArquiveiLabel.TextAlign = ContentAlignment.MiddleRight;
            ParametroArquiveiLabel.MouseHover += new EventHandler(this.ParametroArquiveiPanel_MouseHover);
            ParametroArquiveiLabel.Click += new System.EventHandler(this.ParametroArquiveiLabel_Click);
            ParametroArquiveiLabel.Name = "ParametroArquiveiLabel";

            FavoritoParametroArquiveiImagem = new PictureBox();
            FavoritoParametroArquiveiImagem.Size = new Size(10, 10);
            FavoritoParametroArquiveiImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoParametroArquiveiImagem.Name = ParametroArquiveiLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoParametroArquiveiImagem.Name))
            {
                FavoritoParametroArquiveiImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoParametroArquiveiImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoParametroArquiveiImagem.Top = 35;
            FavoritoParametroArquiveiImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoParametroArquiveiImagem.Tag = ParametroArquiveiLabel.Text + "Arquivei";
            FavoritoParametroArquiveiImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoParametroArquiveiImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoParametroArquiveiImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoParametroArquiveiImagem.AccessibleName = "Escrituração Fiscal";

            ParametroArquiveiPanel.Controls.Add(ParametroArquiveiLabel);
            ParametroArquiveiPanel.Controls.Add(DivisoriaParametroArquiveiImagem);
            ParametroArquiveiPanel.Controls.Add(FavoritoParametroArquiveiImagem);
            FavoritoParametroArquiveiImagem.BringToFront();

            SubMenuESFArquivei.Controls.Add(ParametroArquiveiPanel);
            #endregion
        }
                
        private void CFOPArquiveiLabel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaFiscal;
            Contabilidade.CFOPeCST _tela = new Contabilidade.CFOPeCST();
            _tela.ShowDialog();
            NomePadrao();
        }

        private void ParametroArquiveiLabel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaFiscal;
            Contabilidade.ParametrosArquivei _tela = new Contabilidade.ParametrosArquivei();
            _tela.ShowDialog();
            NomePadrao();
        }

        private void ValidacaoArquiveiLabel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaFiscal;
            Contabilidade.ValidacaoArquivei _tela = new Contabilidade.ValidacaoArquivei();
            _tela.Size = new Size(this.Width - 5, this.Height - (tituloPanel.Height + panel2.Height + 2));

            _tela.ShowDialog();
            NomePadrao();
        }

        private void ExclusaoArquiveiLabel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaFiscal;
            Contabilidade.ExcluiArquivoArquivei _tela = new Contabilidade.ExcluiArquivoArquivei();
            _tela.ShowDialog();
            NomePadrao();
        }

        private void ResumoArquiveiLabel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaFiscal;
            Contabilidade.ResumoArquivei _tela = new Contabilidade.ResumoArquivei();
            _tela.Size = new Size(this.Width - 5, this.Height - (tituloPanel.Height + panel2.Height + 2));
            _tela.tipoProcessamento = "Recebidos";
            _tela.tituloLabel.Text = "Resumo por ST x CFOP - Notas Recebidas";
            _tela.ShowDialog();
            NomePadrao();
        }
        #endregion


        private void VisoesBIPanel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaBI;
            GestaoEstrategica.VisoesBI _tela = new GestaoEstrategica.VisoesBI();
            _tela.ShowDialog();
            NomePadrao();
            //AtivaTimer(sender, e);
        }

        private void RadarBIPanel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaBI;
            Diversos.RadarBI _tela = new Diversos.RadarBI();
            _tela.ShowDialog();
            NomePadrao();
            //AtivaTimer(sender, e);
        }

        private void CalculoDeMetasBIPanel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            GestaoEstrategica.CalculoMetas _tela = new GestaoEstrategica.CalculoMetas();
            _tela.Size = new Size(this.Width - 5, this.Height - (tituloPanel.Height + panel2.Height + 2));
            _tela.ShowDialog();

            NomePadrao();
            //AtivaTimer(sender, e);
        }
        #endregion

        #region Atendimento

        private void AtendimentoSetaLabel_Click(object sender, EventArgs e)
        {
            // abrir o SubMenu do RecursosHumanos
            AtendimentoSetaLabel.Text = "3";

            if (!Publicas._TemaBlack)
            {
                AtendimentoSetaLabel.ForeColor = Publicas._bordaEntrada;
                AtendimentoLabel.ForeColor = Publicas._bordaEntrada;
            }
            else
            {
                AtendimentoSetaLabel.ForeColor = Publicas._fonteMenuSelecionado;
                AtendimentoLabel.ForeColor = Publicas._fonteMenuSelecionado;
            }
            AtendimentoSetaLabel.BackColor = _corFundoMenu;

            if (SubMenuAtendimento != null)
            {
                FechaSubMenuAtendimento();
                return;
            }

            if (SubMenuFavoritos != null)
            {
                FechaSubMenuFavoritos();
                return;
            }

            #region Cria estrutura 

            // Menu de fundo (onde agrupa os demais itens)
            SubMenuAtendimento = new Panel();
            SubMenuAtendimento.Size = new Size(155, _heidthMenuSistema * 2);
            SubMenuAtendimento.Location = new Point(MenuSistemaPanel.Width + 2, AcessoAoMenuPanel.Height);
            SubMenuAtendimento.BackColor = _corFundoDivisao;
            this.Controls.Add(SubMenuAtendimento);
            SubMenuAtendimento.BringToFront();
            SubMenuAtendimento.Visible = true;
            #endregion

            #region SAC 
            SACPanel = new Panel();
            SACPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            SACPanel.Dock = DockStyle.Top;
            SACPanel.BackColor = _corFundoMenu;
            SACPanel.Name = "SACPanel";
            SACPanel.Enabled = Publicas._usuario.AcessaSac;

            DivisoriaSACImagem = new PictureBox();
            DivisoriaSACImagem.Size = new Size(0, 4);
            DivisoriaSACImagem.Dock = DockStyle.Bottom;
            DivisoriaSACImagem.BackColor = _corFundoDivisao;

            Divisoria2SACImagem = new PictureBox();
            Divisoria2SACImagem.Size = new Size(1, 2);
            Divisoria2SACImagem.Dock = DockStyle.Right;
            Divisoria2SACImagem.BackColor = _corFundoDivisao; //System.Drawing.Color.FromArgb(2, 91, 149);

            SACSetaLabel = new Label();
            SACSetaLabel.AutoSize = false;
            SACSetaLabel.Size = new Size(20, 59);
            SACSetaLabel.Dock = DockStyle.Right;
            SACSetaLabel.Text = "6";
            SACSetaLabel.Font = new Font("Webdings", (float)12);
            SACSetaLabel.TextAlign = ContentAlignment.MiddleCenter;
            SACSetaLabel.Click += new System.EventHandler(this.SACSetaLabel_Click);
            SACSetaLabel.MouseHover += new EventHandler(this.SACPanelSetaPanel_MouseHover);
            SACSetaLabel.Name = "SACSetaLabel";
            SACSetaLabel.ForeColor = Color.WhiteSmoke;

            SACLabel = new Label();
            SACLabel.AutoSize = false;
            SACLabel.Size = new Size(_widthLabelMenuSistema, 0);
            SACLabel.Dock = DockStyle.Fill;
            SACLabel.Text = "SAC";
            SACLabel.Font = CorFontepadraoLabel.Font;
            SACLabel.ForeColor = Color.WhiteSmoke;
            SACLabel.TextAlign = ContentAlignment.MiddleRight;
            SACLabel.MouseHover += new EventHandler(this.SACPanel_MouseHover);
            SACLabel.Click += new System.EventHandler(this.SACSetaLabel_Click);
            SACLabel.Name = "SACLabel";

            SACPanel.Controls.Add(SACLabel);
            //SACPanel.Controls.Add(SACImagem);
            SACPanel.Controls.Add(Divisoria2SACImagem);
            SACPanel.Controls.Add(SACSetaLabel);
            SACPanel.Controls.Add(DivisoriaSACImagem);

            SubMenuAtendimento.Controls.Add(SACPanel);
            #endregion

            #region Chamados 
            ChamadosPanel = new Panel();
            ChamadosPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            ChamadosPanel.Dock = DockStyle.Top;
            ChamadosPanel.BackColor = _corFundoMenu;
            ChamadosPanel.Name = "ChamadosPanel";
            ChamadosPanel.Enabled = true; // Publicas._usuario.Administrador || Publicas._usuario.IdEmpresa == 1  || Publicas._usuario.IdEmpresa == 19 || Publicas._usuario.IdEmpresa == 2 || Publicas._usuario.IdEmpresa == 10;
            //Publicas._usuario.Departamento.ToUpper().Contains("Contabilidade".ToUpper()) ||
            //Publicas._usuario.Departamento.ToUpper().Contains("Fiscal".ToUpper());  

            DivisoriaChamadosImagem = new PictureBox();
            DivisoriaChamadosImagem.Size = new Size(0, 4);
            DivisoriaChamadosImagem.Dock = DockStyle.Bottom;
            DivisoriaChamadosImagem.BackColor = _corFundoDivisao;

            Divisoria2ChamadosImagem = new PictureBox();
            Divisoria2ChamadosImagem.Size = new Size(1, 2);
            Divisoria2ChamadosImagem.Dock = DockStyle.Right;
            Divisoria2ChamadosImagem.BackColor = _corFundoDivisao; //System.Drawing.Color.FromArgb(2, 91, 149);

            ChamadosSetaLabel = new Label();
            ChamadosSetaLabel.AutoSize = false;
            ChamadosSetaLabel.Size = new Size(20, 59);
            ChamadosSetaLabel.Dock = DockStyle.Right;
            ChamadosSetaLabel.Text = "6";
            ChamadosSetaLabel.Font = new Font("Webdings", (float)12);
            ChamadosSetaLabel.TextAlign = ContentAlignment.MiddleCenter;
            ChamadosSetaLabel.Click += new System.EventHandler(this.ChamadoSetaLabel_Click);
            ChamadosSetaLabel.MouseHover += new EventHandler(this.SACPanelSetaPanel_MouseHover);
            ChamadosSetaLabel.Name = "ChamadosSetaLabel";
            ChamadosSetaLabel.ForeColor = Color.WhiteSmoke;

            ChamadosLabel = new Label();
            ChamadosLabel.AutoSize = false;
            ChamadosLabel.Size = new Size(_widthLabelMenuSistema, 0);
            ChamadosLabel.Dock = DockStyle.Fill;
            ChamadosLabel.Text = "Chamados";
            ChamadosLabel.Font = CorFontepadraoLabel.Font;
            ChamadosLabel.ForeColor = Color.WhiteSmoke;
            ChamadosLabel.TextAlign = ContentAlignment.MiddleRight;
            ChamadosLabel.MouseHover += new EventHandler(this.SACPanel_MouseHover);
            ChamadosLabel.Click += new System.EventHandler(this.ChamadoSetaLabel_Click);
            ChamadosLabel.Name = "ChamadosLabel";

            ChamadosPanel.Controls.Add(ChamadosLabel);
            //ChamadosPanel.Controls.Add(ChamadosImagem);
            ChamadosPanel.Controls.Add(Divisoria2ChamadosImagem);
            ChamadosPanel.Controls.Add(ChamadosSetaLabel);
            ChamadosPanel.Controls.Add(DivisoriaChamadosImagem);

            SubMenuAtendimento.Controls.Add(ChamadosPanel);
            #endregion
        }

        private void FechaSubMenuAtendimento()
        {
            FechaSubMenuSAC();
            FechaSubMenuChamadosPanel();

            if (SubMenuAtendimento != null)
            {
                SubMenuAtendimento.Visible = false;
                this.Controls.Remove(SubMenuAtendimento);
                SubMenuAtendimento.Dispose();
                SubMenuAtendimento = null;
            }
        }

        private void MudaSelecaoDeCoresSubMenuAtendimento()
        {
            SACLabel.Font = new Font(SACLabel.Font, SACLabel.Font.Style & ~FontStyle.Bold);
            ChamadosLabel.Font = new Font(ChamadosLabel.Font, ChamadosLabel.Font.Style & ~FontStyle.Bold);
            SACSetaLabel.Font = new Font(SACSetaLabel.Font, SACSetaLabel.Font.Style & ~FontStyle.Bold);
            ChamadosSetaLabel.Font = new Font(ChamadosSetaLabel.Font, ChamadosSetaLabel.Font.Style & ~FontStyle.Bold);

            SACLabel.BackColor = _corFundoMenu;
            ChamadosLabel.BackColor = SACLabel.BackColor;
            SACSetaLabel.BackColor = SACLabel.BackColor;
            ChamadosSetaLabel.BackColor = SACLabel.BackColor;

            SACLabel.ForeColor = Color.WhiteSmoke;
            ChamadosLabel.ForeColor = Color.WhiteSmoke;
            SACSetaLabel.ForeColor = Color.WhiteSmoke;
            ChamadosSetaLabel.ForeColor = Color.WhiteSmoke;

            SACSetaLabel.Text = "6";
            ChamadosSetaLabel.Text = "6";
        }

        private void SACPanel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubMenuAtendimento();
            FechaSubMenuAvaliacaoDesempenho();
            FechaSubMenuBiblioteca();
            FechaSubMenuCurriculo();
            FechaSubMenuCorridas();
            FechaSubMenuCadastroJuridico();
            FechaSubMenuControladoria();
            FechaSubMenuChamadosPanel();
            FechaSubMenuSAC();

            if (((Control)sender).Name.Contains("SAC"))
            {
                SACLabel.Font = new Font(SACLabel.Font, FontStyle.Bold);
                SACLabel.ForeColor = Publicas._fonteBotaoFocado;
                SACLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Chamado"))
            {
                ChamadosLabel.Font = new Font(ChamadosLabel.Font, FontStyle.Bold);
                ChamadosLabel.ForeColor = Publicas._fonteBotaoFocado;
                ChamadosLabel.BackColor = _corMenuSelecionado;
                return;
            }
        }

        private void SACPanelSetaPanel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubMenuAtendimento();
            FechaSubMenuAvaliacaoDesempenho();
            FechaSubMenuBiblioteca();
            FechaSubMenuCurriculo();
            FechaSubMenuCorridas();
            FechaSubMenuCadastroJuridico();
            FechaSubMenuControladoria();
            FechaSubMenuChamadosPanel();
            FechaSubMenuSAC();

            if (((Control)sender).Name.Contains("SAC"))
            {
                SACSetaLabel.Font = new Font(SACSetaLabel.Font, FontStyle.Bold);
                SACSetaLabel.ForeColor = Publicas._fonteBotaoFocado;
                SACSetaLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Chamado"))
            {
                ChamadosSetaLabel.Font = new Font(ChamadosSetaLabel.Font, FontStyle.Bold);
                ChamadosSetaLabel.ForeColor = Publicas._fonteBotaoFocado;
                ChamadosSetaLabel.BackColor = _corMenuSelecionado;
                return;
            }
        }

        #region SAC
        private void SACSetaLabel_Click(object sender, EventArgs e)
        {
            // abrir o SubMenu 
            SACSetaLabel.Text = "3";

            if (!Publicas._TemaBlack)
            {
                SACSetaLabel.ForeColor = Publicas._bordaEntrada;
                SACLabel.ForeColor = Publicas._bordaEntrada;
            }
            else
            {
                SACSetaLabel.ForeColor = Publicas._fonteMenuSelecionado;
                SACLabel.ForeColor = Publicas._fonteMenuSelecionado;
            }
            SACSetaLabel.BackColor = _corFundoMenu;

            if (SubMenuSACPanel != null)
            {
                FechaSubMenuAtendimento();
                return;
            }

            #region Cria estrutura 

            // Menu de fundo (onde agrupa os demais itens)
            SubMenuSACPanel = new Panel(); //aki
            SubMenuSACPanel.Size = new Size(155, _heidthMenuSistema * (Publicas._usuario.TipoSac == Publicas.TipoUsuarioSAC.Administrador ? 6 :
                (Publicas._usuario.TipoSac == Publicas.TipoUsuarioSAC.Atendente ? 4 :
                (Publicas._usuario.TipoSac == Publicas.TipoUsuarioSAC.Mediador ? 3 : 1))));

            SubMenuSACPanel.Location = new Point(MenuSistemaPanel.Width + SubMenuAtendimento.Width + 4, AcessoAoMenuPanel.Height);
            SubMenuSACPanel.BackColor = _corFundoDivisao;
            this.Controls.Add(SubMenuSACPanel);
            SubMenuSACPanel.BringToFront();
            SubMenuSACPanel.Visible = true;
            #endregion

            #region Satisfacao
            SatisfacaoPanel = new Panel();
            SatisfacaoPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            SatisfacaoPanel.Dock = DockStyle.Top;
            SatisfacaoPanel.BackColor = _corFundoMenu;
            SatisfacaoPanel.Name = "SatisfacaoPanel";
            SatisfacaoPanel.Visible = (Publicas._usuario.TipoSac == Publicas.TipoUsuarioSAC.Atendente) ||
                                      (Publicas._usuario.TipoSac == Publicas.TipoUsuarioSAC.Administrador);

            DivisoriaSatisfacaoImagem = new PictureBox();
            DivisoriaSatisfacaoImagem.Size = new Size(0, 4);
            DivisoriaSatisfacaoImagem.Dock = DockStyle.Bottom;
            DivisoriaSatisfacaoImagem.BackColor = _corFundoDivisao;

            SatisfacaoLabel = new Label();
            SatisfacaoLabel.AutoSize = false;
            SatisfacaoLabel.Size = new Size(_widthLabelMenuSistema, 0);
            SatisfacaoLabel.Dock = DockStyle.Fill;
            SatisfacaoLabel.Text = "Satisfação";
            SatisfacaoLabel.Font = CorFontepadraoLabel.Font;
            SatisfacaoLabel.ForeColor = Color.WhiteSmoke;
            SatisfacaoLabel.TextAlign = ContentAlignment.MiddleRight;
            SatisfacaoLabel.MouseHover += new EventHandler(this.CadastroSACPanel_MouseHover);
            SatisfacaoLabel.Click += new System.EventHandler(this.SatisfacaoPanel_Click);
            SatisfacaoLabel.Name = "SatisfacaoLabel";

            FavoritoSatisfacaoImagem = new PictureBox();
            FavoritoSatisfacaoImagem.Size = new Size(10, 10);
            FavoritoSatisfacaoImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoSatisfacaoImagem.Name = SatisfacaoLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoSatisfacaoImagem.Name))
            {
                FavoritoSatisfacaoImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoSatisfacaoImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoSatisfacaoImagem.Top = 35;
            FavoritoSatisfacaoImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoSatisfacaoImagem.Tag = SatisfacaoLabel.Text;
            FavoritoSatisfacaoImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoSatisfacaoImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoSatisfacaoImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoSatisfacaoImagem.AccessibleName = "SAC";

            SatisfacaoPanel.Controls.Add(SatisfacaoLabel);
            SatisfacaoPanel.Controls.Add(DivisoriaSatisfacaoImagem);
            SatisfacaoPanel.Controls.Add(FavoritoSatisfacaoImagem);
            FavoritoSatisfacaoImagem.BringToFront();

            SubMenuSACPanel.Controls.Add(SatisfacaoPanel);
            #endregion

            #region RetornarLigacoes
            RetornarLigacoesPanel = new Panel();
            RetornarLigacoesPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            RetornarLigacoesPanel.Dock = DockStyle.Top;
            RetornarLigacoesPanel.BackColor = _corFundoMenu;
            RetornarLigacoesPanel.Name = "RetornarLigacoesPanel";
            RetornarLigacoesPanel.Visible = (Publicas._usuario.TipoSac == Publicas.TipoUsuarioSAC.Atendente) ||
                                      (Publicas._usuario.TipoSac == Publicas.TipoUsuarioSAC.Administrador) ||
                                      (Publicas._usuario.TipoSac == Publicas.TipoUsuarioSAC.Mediador); 

            DivisoriaRetornarLigacoesImagem = new PictureBox();
            DivisoriaRetornarLigacoesImagem.Size = new Size(0, 4);
            DivisoriaRetornarLigacoesImagem.Dock = DockStyle.Bottom;
            DivisoriaRetornarLigacoesImagem.BackColor = _corFundoDivisao;

            RetornarLigacoesLabel = new Label();
            RetornarLigacoesLabel.AutoSize = false;
            RetornarLigacoesLabel.Size = new Size(_widthLabelMenuSistema, 0);
            RetornarLigacoesLabel.Dock = DockStyle.Fill;
            RetornarLigacoesLabel.Text = "Retornar" + Environment.NewLine + "Ligações";
            RetornarLigacoesLabel.Font = CorFontepadraoLabel.Font;
            RetornarLigacoesLabel.ForeColor = Color.WhiteSmoke;
            RetornarLigacoesLabel.TextAlign = ContentAlignment.MiddleRight;
            RetornarLigacoesLabel.MouseHover += new EventHandler(this.CadastroSACPanel_MouseHover);
            RetornarLigacoesLabel.Click += new System.EventHandler(this.RetornarLigacoesPanel_Click);
            RetornarLigacoesLabel.Name = "RetornarLigacoesLabel";

            FavoritoRetornarLigacoesImagem = new PictureBox();
            FavoritoRetornarLigacoesImagem.Size = new Size(10, 10);
            FavoritoRetornarLigacoesImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoRetornarLigacoesImagem.Name = RetornarLigacoesLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoRetornarLigacoesImagem.Name))
            {
                FavoritoRetornarLigacoesImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoRetornarLigacoesImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoRetornarLigacoesImagem.Top = 35;
            FavoritoRetornarLigacoesImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoRetornarLigacoesImagem.Tag = RetornarLigacoesLabel.Text;
            FavoritoRetornarLigacoesImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoRetornarLigacoesImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoRetornarLigacoesImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoRetornarLigacoesImagem.AccessibleName = "SAC";

            RetornarLigacoesPanel.Controls.Add(RetornarLigacoesLabel);
            RetornarLigacoesPanel.Controls.Add(DivisoriaRetornarLigacoesImagem);
            RetornarLigacoesPanel.Controls.Add(FavoritoRetornarLigacoesImagem);
            FavoritoRetornarLigacoesImagem.BringToFront();

            SubMenuSACPanel.Controls.Add(RetornarLigacoesPanel);
            #endregion

            #region FinalizarAtendimento
            FinalizarAtendimentoPanel = new Panel();
            FinalizarAtendimentoPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            FinalizarAtendimentoPanel.Dock = DockStyle.Top;
            FinalizarAtendimentoPanel.BackColor = _corFundoMenu;
            FinalizarAtendimentoPanel.Name = "FinalizarAtendimentoPanel";
            FinalizarAtendimentoPanel.Visible = (Publicas._usuario.TipoSac == Publicas.TipoUsuarioSAC.Finalizador) ||
                                      (Publicas._usuario.TipoSac == Publicas.TipoUsuarioSAC.Administrador);

            DivisoriaFinalizarAtendimentoImagem = new PictureBox();
            DivisoriaFinalizarAtendimentoImagem.Size = new Size(0, 4);
            DivisoriaFinalizarAtendimentoImagem.Dock = DockStyle.Bottom;
            DivisoriaFinalizarAtendimentoImagem.BackColor = _corFundoDivisao;

            FinalizarAtendimentoLabel = new Label();
            FinalizarAtendimentoLabel.AutoSize = false;
            FinalizarAtendimentoLabel.Size = new Size(_widthLabelMenuSistema, 0);
            FinalizarAtendimentoLabel.Dock = DockStyle.Fill;
            FinalizarAtendimentoLabel.Text = "Finalizar Atendimento";
            FinalizarAtendimentoLabel.Font = CorFontepadraoLabel.Font;
            FinalizarAtendimentoLabel.ForeColor = Color.WhiteSmoke;
            FinalizarAtendimentoLabel.TextAlign = ContentAlignment.MiddleRight;
            FinalizarAtendimentoLabel.MouseHover += new EventHandler(this.CadastroSACPanel_MouseHover);
            FinalizarAtendimentoLabel.Click += new System.EventHandler(this.FinalizarAtendimentoPanel_Click);
            FinalizarAtendimentoLabel.Name = "FinalizarAtendimentoLabel";

            FavoritoFinalizarAtendimentoImagem = new PictureBox();
            FavoritoFinalizarAtendimentoImagem.Size = new Size(10, 10);
            FavoritoFinalizarAtendimentoImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoFinalizarAtendimentoImagem.Name = FinalizarAtendimentoLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoFinalizarAtendimentoImagem.Name))
            {
                FavoritoFinalizarAtendimentoImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoFinalizarAtendimentoImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoFinalizarAtendimentoImagem.Top = 35;
            FavoritoFinalizarAtendimentoImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoFinalizarAtendimentoImagem.Tag = FinalizarAtendimentoLabel.Text;
            FavoritoFinalizarAtendimentoImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoFinalizarAtendimentoImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoFinalizarAtendimentoImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoFinalizarAtendimentoImagem.AccessibleName = "SAC";

            FinalizarAtendimentoPanel.Controls.Add(FinalizarAtendimentoLabel);
            FinalizarAtendimentoPanel.Controls.Add(DivisoriaFinalizarAtendimentoImagem);
            FinalizarAtendimentoPanel.Controls.Add(FavoritoFinalizarAtendimentoImagem);
            FavoritoFinalizarAtendimentoImagem.BringToFront();

            SubMenuSACPanel.Controls.Add(FinalizarAtendimentoPanel);
            #endregion

            #region ResponderAtendimento
            ResponderAtendimentoPanel = new Panel();
            ResponderAtendimentoPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            ResponderAtendimentoPanel.Dock = DockStyle.Top;
            ResponderAtendimentoPanel.BackColor = _corFundoMenu;
            ResponderAtendimentoPanel.Name = "ResponderAtendimentoPanel";
            ResponderAtendimentoPanel.Visible = (Publicas._usuario.TipoSac == Publicas.TipoUsuarioSAC.UsuarioComum) ||
                                      (Publicas._usuario.TipoSac == Publicas.TipoUsuarioSAC.Administrador) ||
                                      (Publicas._usuario.TipoSac == Publicas.TipoUsuarioSAC.Mediador); 

            DivisoriaResponderAtendimentoImagem = new PictureBox();
            DivisoriaResponderAtendimentoImagem.Size = new Size(0, 4);
            DivisoriaResponderAtendimentoImagem.Dock = DockStyle.Bottom;
            DivisoriaResponderAtendimentoImagem.BackColor = _corFundoDivisao;

            ResponderAtendimentoLabel = new Label();
            ResponderAtendimentoLabel.AutoSize = false;
            ResponderAtendimentoLabel.Size = new Size(_widthLabelMenuSistema, 0);
            ResponderAtendimentoLabel.Dock = DockStyle.Fill;
            ResponderAtendimentoLabel.Text = "Responder Atendimento";
            ResponderAtendimentoLabel.Font = CorFontepadraoLabel.Font;
            ResponderAtendimentoLabel.ForeColor = Color.WhiteSmoke;
            ResponderAtendimentoLabel.TextAlign = ContentAlignment.MiddleRight;
            ResponderAtendimentoLabel.MouseHover += new EventHandler(this.CadastroSACPanel_MouseHover);
            ResponderAtendimentoLabel.Click += new System.EventHandler(this.ResponderAtendimentoPanel_Click);
            ResponderAtendimentoLabel.Name = "ResponderAtendimentoLabel";

            FavoritoResponderAtendimentoImagem = new PictureBox();
            FavoritoResponderAtendimentoImagem.Size = new Size(10, 10);
            FavoritoResponderAtendimentoImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoResponderAtendimentoImagem.Name = ResponderAtendimentoLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoResponderAtendimentoImagem.Name))
            {
                FavoritoResponderAtendimentoImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoResponderAtendimentoImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoResponderAtendimentoImagem.Top = 35;
            FavoritoResponderAtendimentoImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoResponderAtendimentoImagem.Tag = ResponderAtendimentoLabel.Text;
            FavoritoResponderAtendimentoImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoResponderAtendimentoImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoResponderAtendimentoImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoResponderAtendimentoImagem.AccessibleName = "SAC";

            ResponderAtendimentoPanel.Controls.Add(ResponderAtendimentoLabel);
            ResponderAtendimentoPanel.Controls.Add(DivisoriaResponderAtendimentoImagem);
            ResponderAtendimentoPanel.Controls.Add(FavoritoResponderAtendimentoImagem);
            FavoritoResponderAtendimentoImagem.BringToFront();

            SubMenuSACPanel.Controls.Add(ResponderAtendimentoPanel);
            #endregion
            
            #region AtendimentoSAC
            AtendimentoSACPanel = new Panel();
            AtendimentoSACPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            AtendimentoSACPanel.Dock = DockStyle.Top;
            AtendimentoSACPanel.BackColor = _corFundoMenu;
            AtendimentoSACPanel.Name = "AtendimentoSACPanel";
            AtendimentoSACPanel.Visible = (Publicas._usuario.TipoSac == Publicas.TipoUsuarioSAC.Atendente) ||
                                      (Publicas._usuario.TipoSac == Publicas.TipoUsuarioSAC.Administrador);

            DivisoriaAtendimentoSACImagem = new PictureBox();
            DivisoriaAtendimentoSACImagem.Size = new Size(0, 4);
            DivisoriaAtendimentoSACImagem.Dock = DockStyle.Bottom;
            DivisoriaAtendimentoSACImagem.BackColor = _corFundoDivisao;

            AtendimentoSACLabel = new Label();
            AtendimentoSACLabel.AutoSize = false;
            AtendimentoSACLabel.Size = new Size(_widthLabelMenuSistema, 0);
            AtendimentoSACLabel.Dock = DockStyle.Fill;
            AtendimentoSACLabel.Text = "Registrar Atendimento";
            AtendimentoSACLabel.Font = CorFontepadraoLabel.Font;
            AtendimentoSACLabel.ForeColor = Color.WhiteSmoke;
            AtendimentoSACLabel.TextAlign = ContentAlignment.MiddleRight;
            AtendimentoSACLabel.MouseHover += new EventHandler(this.CadastroSACPanel_MouseHover);
            AtendimentoSACLabel.Click += new System.EventHandler(this.AtendimentoSACPanel_Click);
            AtendimentoSACLabel.Name = "AtendimentoSACLabel";

            FavoritoAtendimentoSACImagem = new PictureBox();
            FavoritoAtendimentoSACImagem.Size = new Size(10, 10);
            FavoritoAtendimentoSACImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoAtendimentoSACImagem.Name = AtendimentoSACLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoAtendimentoSACImagem.Name))
            {
                FavoritoAtendimentoSACImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoAtendimentoSACImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoAtendimentoSACImagem.Top = 35;
            FavoritoAtendimentoSACImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoAtendimentoSACImagem.Tag = AtendimentoSACLabel.Text;
            FavoritoAtendimentoSACImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoAtendimentoSACImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoAtendimentoSACImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoAtendimentoSACImagem.AccessibleName = "SAC";

            AtendimentoSACPanel.Controls.Add(AtendimentoSACLabel);
            AtendimentoSACPanel.Controls.Add(DivisoriaAtendimentoSACImagem);
            AtendimentoSACPanel.Controls.Add(FavoritoAtendimentoSACImagem);
            FavoritoAtendimentoSACImagem.BringToFront();

            SubMenuSACPanel.Controls.Add(AtendimentoSACPanel);
            #endregion

            #region CadastroSAC 
            CadastroSACPanel = new Panel();
            CadastroSACPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            CadastroSACPanel.Dock = DockStyle.Top;
            CadastroSACPanel.BackColor = _corFundoMenu;
            CadastroSACPanel.Name = "CadastroSACPanel";
            CadastroSACPanel.Visible = (Publicas._usuario.TipoSac == Publicas.TipoUsuarioSAC.Atendente) ||
                                      (Publicas._usuario.TipoSac == Publicas.TipoUsuarioSAC.Administrador);

            DivisoriaCadastroSACImagem = new PictureBox();
            DivisoriaCadastroSACImagem.Size = new Size(0, 4);
            DivisoriaCadastroSACImagem.Dock = DockStyle.Bottom;
            DivisoriaCadastroSACImagem.BackColor = _corFundoDivisao;

            Divisoria2CadastroSACImagem = new PictureBox();
            Divisoria2CadastroSACImagem.Size = new Size(1, 2);
            Divisoria2CadastroSACImagem.Dock = DockStyle.Right;
            Divisoria2CadastroSACImagem.BackColor = _corFundoDivisao; //System.Drawing.Color.FromArgb(2, 91, 149);

            CadastroSACSetaLabel = new Label();
            CadastroSACSetaLabel.AutoSize = false;
            CadastroSACSetaLabel.Size = new Size(20, 59);
            CadastroSACSetaLabel.Dock = DockStyle.Right;
            CadastroSACSetaLabel.Text = "6";
            CadastroSACSetaLabel.Font = new Font("Webdings", (float)12);
            CadastroSACSetaLabel.TextAlign = ContentAlignment.MiddleCenter;
            CadastroSACSetaLabel.Click += new System.EventHandler(this.CadastroSACSetaLabel_Click);
            CadastroSACSetaLabel.MouseHover += new EventHandler(this.CadastroSACSetaPanel_MouseHover);
            CadastroSACSetaLabel.Name = "CadastroSACSetaLabel";
            CadastroSACSetaLabel.ForeColor = Color.WhiteSmoke;

            CadastroSACLabel = new Label();
            CadastroSACLabel.AutoSize = false;
            CadastroSACLabel.Size = new Size(_widthLabelMenuSistema, 0);
            CadastroSACLabel.Dock = DockStyle.Fill;
            CadastroSACLabel.Text = "Cadastros";
            CadastroSACLabel.Font = CorFontepadraoLabel.Font;
            CadastroSACLabel.ForeColor = Color.WhiteSmoke;
            CadastroSACLabel.TextAlign = ContentAlignment.MiddleRight;
            CadastroSACLabel.MouseHover += new EventHandler(this.CadastroSACPanel_MouseHover);
            CadastroSACLabel.Click += new System.EventHandler(this.CadastroSACSetaLabel_Click);
            CadastroSACLabel.Name = "CadastroSACLabel";

            CadastroSACPanel.Controls.Add(CadastroSACLabel);
            //CadastroSACPanel.Controls.Add(CadastroSACImagem);
            CadastroSACPanel.Controls.Add(Divisoria2CadastroSACImagem);
            CadastroSACPanel.Controls.Add(CadastroSACSetaLabel);
            CadastroSACPanel.Controls.Add(DivisoriaCadastroSACImagem);

            SubMenuSACPanel.Controls.Add(CadastroSACPanel);
            #endregion
        }

        private void FechaSubMenuSAC()
        {
            FechaSubMenuCadastroSAC();

            if (SubMenuSACPanel != null)
            {
                SubMenuSACPanel.Visible = false;
                this.Controls.Remove(SubMenuSACPanel);
                SubMenuSACPanel.Dispose();
                SubMenuSACPanel = null;
            }
        }

        private void MudaSelecaoDeCoresSubMenuSAC()
        {
            CadastroSACLabel.Font = new Font(CadastroSACLabel.Font, CadastroSACLabel.Font.Style & ~FontStyle.Bold);
            CadastroSACSetaLabel.Font = new Font(CadastroSACSetaLabel.Font, CadastroSACSetaLabel.Font.Style & ~FontStyle.Bold);
            AtendimentoSACLabel.Font = new Font(AtendimentoSACLabel.Font, AtendimentoSACLabel.Font.Style & ~FontStyle.Bold);
            RetornarLigacoesLabel.Font = new Font(RetornarLigacoesLabel.Font, RetornarLigacoesLabel.Font.Style & ~FontStyle.Bold);
            ResponderAtendimentoLabel.Font = new Font(ResponderAtendimentoLabel.Font, ResponderAtendimentoLabel.Font.Style & ~FontStyle.Bold);
            FinalizarAtendimentoLabel.Font = new Font(FinalizarAtendimentoLabel.Font, FinalizarAtendimentoLabel.Font.Style & ~FontStyle.Bold);
            SatisfacaoLabel.Font = new Font(SatisfacaoLabel.Font, SatisfacaoLabel.Font.Style & ~FontStyle.Bold);

            CadastroSACLabel.BackColor = _corFundoMenu;
            CadastroSACSetaLabel.BackColor = CadastroSACLabel.BackColor;
            AtendimentoSACLabel.BackColor = CadastroSACLabel.BackColor;
            RetornarLigacoesLabel.BackColor = CadastroSACLabel.BackColor;
            ResponderAtendimentoLabel.BackColor = CadastroSACLabel.BackColor;
            FinalizarAtendimentoLabel.BackColor = CadastroSACLabel.BackColor;
            SatisfacaoLabel.BackColor = CadastroSACLabel.BackColor;

            FavoritoRetornarLigacoesImagem.BackColor = CadastroSACLabel.BackColor;
            FavoritoResponderAtendimentoImagem.BackColor = CadastroSACLabel.BackColor;
            FavoritoAtendimentoSACImagem.BackColor = CadastroSACLabel.BackColor;
            FavoritoFinalizarAtendimentoImagem.BackColor = CadastroSACLabel.BackColor;
            FavoritoSatisfacaoImagem.BackColor = CadastroSACLabel.BackColor;

            CadastroSACLabel.ForeColor = Color.WhiteSmoke;
            CadastroSACSetaLabel.ForeColor = Color.WhiteSmoke;
            AtendimentoSACLabel.ForeColor = Color.WhiteSmoke;
            RetornarLigacoesLabel.ForeColor = Color.WhiteSmoke;
            ResponderAtendimentoLabel.ForeColor = Color.WhiteSmoke;
            FinalizarAtendimentoLabel.ForeColor = Color.WhiteSmoke;
            SatisfacaoLabel.ForeColor = Color.WhiteSmoke;

            CadastroSACSetaLabel.Text = "6";
        }

        private void CadastroSACPanel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubMenuSAC();
            FechaSubMenuAvaliacaoDesempenho();
            FechaSubMenuBiblioteca();
            FechaSubMenuCurriculo();
            FechaSubMenuCorridas();
            FechaSubMenuCadastroJuridico();
            FechaSubMenuControladoria();
            FechaSubMenuCadastroSAC();

            if (((Control)sender).Name.Contains("Cadastro"))
            {
                CadastroSACLabel.Font = new Font(CadastroSACLabel.Font, FontStyle.Bold);
                CadastroSACLabel.ForeColor = Publicas._fonteBotaoFocado;
                CadastroSACLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Retornar"))
            {
                RetornarLigacoesLabel.Font = new Font(RetornarLigacoesLabel.Font, FontStyle.Bold);
                RetornarLigacoesLabel.ForeColor = Publicas._fonteBotaoFocado;
                RetornarLigacoesLabel.BackColor = _corMenuSelecionado;
                FavoritoRetornarLigacoesImagem.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Responder"))
            {
                ResponderAtendimentoLabel.Font = new Font(ResponderAtendimentoLabel.Font, FontStyle.Bold);
                ResponderAtendimentoLabel.ForeColor = Publicas._fonteBotaoFocado;
                ResponderAtendimentoLabel.BackColor = _corMenuSelecionado;
                FavoritoResponderAtendimentoImagem.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Finalizar"))
            {
                FinalizarAtendimentoLabel.Font = new Font(FinalizarAtendimentoLabel.Font, FontStyle.Bold);
                FinalizarAtendimentoLabel.ForeColor = Publicas._fonteBotaoFocado;
                FinalizarAtendimentoLabel.BackColor = _corMenuSelecionado;
                FavoritoFinalizarAtendimentoImagem.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Atendimento"))
            {
                AtendimentoSACLabel.Font = new Font(AtendimentoSACLabel.Font, FontStyle.Bold);
                AtendimentoSACLabel.ForeColor = Publicas._fonteBotaoFocado;
                AtendimentoSACLabel.BackColor = _corMenuSelecionado;
                FavoritoAtendimentoSACImagem.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Satisfacao"))
            {
                SatisfacaoLabel.Font = new Font(SatisfacaoLabel.Font, FontStyle.Bold);
                SatisfacaoLabel.ForeColor = Publicas._fonteBotaoFocado;
                SatisfacaoLabel.BackColor = _corMenuSelecionado;
                FavoritoSatisfacaoImagem.BackColor = _corMenuSelecionado;
                return;
            }
        }

        private void CadastroSACSetaPanel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubMenuSAC();
            FechaSubMenuAvaliacaoDesempenho();
            FechaSubMenuBiblioteca();
            FechaSubMenuCurriculo();
            FechaSubMenuCorridas();
            FechaSubMenuCadastroJuridico();
            FechaSubMenuControladoria();
            FechaSubMenuCadastroSAC();

            if (((Control)sender).Name.Contains("Cadastro"))
            {
                CadastroSACSetaLabel.Font = new Font(CadastroSACSetaLabel.Font, FontStyle.Bold);
                CadastroSACSetaLabel.ForeColor = Publicas._fonteBotaoFocado;
                CadastroSACSetaLabel.BackColor = _corMenuSelecionado;
                return;
            }
        }



        private void AtendimentoSACPanel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaSAC;
            new SAC.Atendimentos().ShowDialog();
            NomePadrao();
            //AtivaTimer(sender, e);
        }

        private void RetornarLigacoesPanel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaSAC;
            new SAC.Retornar().ShowDialog();
            NomePadrao();
            //AtivaTimer(sender, e);
        }

        private void ResponderAtendimentoPanel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaSAC;
            new SAC.Responder().ShowDialog();
            NomePadrao();
            //AtivaTimer(sender, e);
        }

        private void FinalizarAtendimentoPanel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaSAC;
            new SAC.Finalizar().ShowDialog();
            NomePadrao();
            //AtivaTimer(sender, e);
        }

        private void SatisfacaoPanel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaSAC;
            new SAC.Satisfacao().ShowDialog();
            NomePadrao();
            //AtivaTimer(sender, e);
        }

        #region cadastro
        private void CadastroSACSetaLabel_Click(object sender, EventArgs e)
        {
            // abrir o SubMenu 
            CadastroSACSetaLabel.Text = "3";

            if (!Publicas._TemaBlack)
            {
                CadastroSACSetaLabel.ForeColor = Publicas._bordaEntrada;
                CadastroSACLabel.ForeColor = Publicas._bordaEntrada;
            }
            else
            {
                CadastroSACSetaLabel.ForeColor = Publicas._fonteMenuSelecionado;
                CadastroSACLabel.ForeColor = Publicas._fonteMenuSelecionado;
            }
            CadastroSACSetaLabel.BackColor = _corFundoMenu;

            if (SubMenuCadastroSACPanel != null)
            {
                FechaSubMenuAtendimento();
                return;
            }

            #region Cria estrutura 

            // Menu de fundo (onde agrupa os demais itens)
            SubMenuCadastroSACPanel = new Panel();
            SubMenuCadastroSACPanel.Size = new Size(145 + 8, _heidthMenuSistema * 2);
            SubMenuCadastroSACPanel.Location = new Point(MenuSistemaPanel.Width + SubMenuAtendimento.Width + SubMenuSACPanel.Width + 6, AcessoAoMenuPanel.Height);
            SubMenuCadastroSACPanel.BackColor = _corFundoDivisao;
            this.Controls.Add(SubMenuCadastroSACPanel);
            SubMenuCadastroSACPanel.BringToFront();
            SubMenuCadastroSACPanel.Visible = true;
            #endregion

            #region TiposAtendimentoEMTU
            TiposAtendimentoEMTUPanel = new Panel();
            TiposAtendimentoEMTUPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            TiposAtendimentoEMTUPanel.Dock = DockStyle.Top;
            TiposAtendimentoEMTUPanel.BackColor = _corFundoMenu;
            TiposAtendimentoEMTUPanel.Name = "TiposAtendimentoEMTUPanel";

            DivisoriaTiposAtendimentoEMTUImagem = new PictureBox();
            DivisoriaTiposAtendimentoEMTUImagem.Size = new Size(0, 4);
            DivisoriaTiposAtendimentoEMTUImagem.Dock = DockStyle.Bottom;
            DivisoriaTiposAtendimentoEMTUImagem.BackColor = _corFundoDivisao;

            TiposAtendimentoEMTULabel = new Label();
            TiposAtendimentoEMTULabel.AutoSize = false;
            TiposAtendimentoEMTULabel.Size = new Size(_widthLabelMenuSistema, 0);
            TiposAtendimentoEMTULabel.Dock = DockStyle.Fill;
            TiposAtendimentoEMTULabel.Text = "Tipos de Atendimento EMTU";
            TiposAtendimentoEMTULabel.Font = CorFontepadraoLabel.Font;
            TiposAtendimentoEMTULabel.ForeColor = Color.WhiteSmoke;
            TiposAtendimentoEMTULabel.TextAlign = ContentAlignment.MiddleRight;
            TiposAtendimentoEMTULabel.MouseHover += new EventHandler(this.TiposAtendimentoPanel_MouseHover);
            TiposAtendimentoEMTULabel.Click += new System.EventHandler(this.TiposAtendimentoEMTUPanel_Click);
            TiposAtendimentoEMTULabel.Name = "TiposAtendimentoEMTULabel";

            FavoritoTiposAtendimentoEMTUImagem = new PictureBox();
            FavoritoTiposAtendimentoEMTUImagem.Size = new Size(10, 10);
            FavoritoTiposAtendimentoEMTUImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoTiposAtendimentoEMTUImagem.Name = TiposAtendimentoEMTULabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoTiposAtendimentoEMTUImagem.Name))
            {
                FavoritoTiposAtendimentoEMTUImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoTiposAtendimentoEMTUImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoTiposAtendimentoEMTUImagem.Top = 35;
            FavoritoTiposAtendimentoEMTUImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoTiposAtendimentoEMTUImagem.Tag = TiposAtendimentoEMTULabel.Text;
            FavoritoTiposAtendimentoEMTUImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoTiposAtendimentoEMTUImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoTiposAtendimentoEMTUImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoTiposAtendimentoEMTUImagem.AccessibleName = "SAC";

            TiposAtendimentoEMTUPanel.Controls.Add(TiposAtendimentoEMTULabel);
            TiposAtendimentoEMTUPanel.Controls.Add(DivisoriaTiposAtendimentoEMTUImagem);
            TiposAtendimentoEMTUPanel.Controls.Add(FavoritoTiposAtendimentoEMTUImagem);
            FavoritoTiposAtendimentoEMTUImagem.BringToFront();

            SubMenuCadastroSACPanel.Controls.Add(TiposAtendimentoEMTUPanel);
            #endregion

            #region TiposAtendimento
            TiposAtendimentoPanel = new Panel();
            TiposAtendimentoPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            TiposAtendimentoPanel.Dock = DockStyle.Top;
            TiposAtendimentoPanel.BackColor = _corFundoMenu;
            TiposAtendimentoPanel.Name = "TiposAtendimentoPanel";

            DivisoriaTiposAtendimentoImagem = new PictureBox();
            DivisoriaTiposAtendimentoImagem.Size = new Size(0, 4);
            DivisoriaTiposAtendimentoImagem.Dock = DockStyle.Bottom;
            DivisoriaTiposAtendimentoImagem.BackColor = _corFundoDivisao;

            TiposAtendimentoLabel = new Label();
            TiposAtendimentoLabel.AutoSize = false;
            TiposAtendimentoLabel.Size = new Size(_widthLabelMenuSistema, 0);
            TiposAtendimentoLabel.Dock = DockStyle.Fill;
            TiposAtendimentoLabel.Text = "Tipos de Atendimento";
            TiposAtendimentoLabel.Font = CorFontepadraoLabel.Font;
            TiposAtendimentoLabel.ForeColor = Color.WhiteSmoke;
            TiposAtendimentoLabel.TextAlign = ContentAlignment.MiddleRight;
            TiposAtendimentoLabel.MouseHover += new EventHandler(this.TiposAtendimentoPanel_MouseHover);
            TiposAtendimentoLabel.Click += new System.EventHandler(this.TiposAtendimentoPanel_Click);
            TiposAtendimentoLabel.Name = "TiposAtendimentoLabel";

            FavoritoTiposAtendimentoImagem = new PictureBox();
            FavoritoTiposAtendimentoImagem.Size = new Size(10, 10);
            FavoritoTiposAtendimentoImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoTiposAtendimentoImagem.Name = TiposAtendimentoLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoTiposAtendimentoImagem.Name))
            {
                FavoritoTiposAtendimentoImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoTiposAtendimentoImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoTiposAtendimentoImagem.Top = 35;
            FavoritoTiposAtendimentoImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoTiposAtendimentoImagem.Tag = TiposAtendimentoLabel.Text;
            FavoritoTiposAtendimentoImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoTiposAtendimentoImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoTiposAtendimentoImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoTiposAtendimentoImagem.AccessibleName = "SAC";

            TiposAtendimentoPanel.Controls.Add(TiposAtendimentoLabel);
            TiposAtendimentoPanel.Controls.Add(DivisoriaTiposAtendimentoImagem);
            TiposAtendimentoPanel.Controls.Add(FavoritoTiposAtendimentoImagem);
            FavoritoTiposAtendimentoImagem.BringToFront();

            SubMenuCadastroSACPanel.Controls.Add(TiposAtendimentoPanel);
            #endregion
                        
        }

        private void FechaSubMenuCadastroSAC()
        {
            if (SubMenuCadastroSACPanel != null)
            {
                SubMenuCadastroSACPanel.Visible = false;
                this.Controls.Remove(SubMenuCadastroSACPanel);
                SubMenuCadastroSACPanel.Dispose();
                SubMenuCadastroSACPanel = null;
            }
        }

        private void MudaSelecaoDeCoresSubMenuCadastroSAC()
        {
            TiposAtendimentoEMTULabel.Font = new Font(TiposAtendimentoEMTULabel.Font, TiposAtendimentoEMTULabel.Font.Style & ~FontStyle.Bold);
            TiposAtendimentoLabel.Font = new Font(TiposAtendimentoLabel.Font, TiposAtendimentoLabel.Font.Style & ~FontStyle.Bold);

            TiposAtendimentoEMTULabel.BackColor = _corFundoMenu;
            TiposAtendimentoLabel.BackColor = TiposAtendimentoEMTULabel.BackColor;
            FavoritoTiposAtendimentoEMTUImagem.BackColor = TiposAtendimentoEMTULabel.BackColor;
            FavoritoTiposAtendimentoImagem.BackColor = TiposAtendimentoEMTULabel.BackColor;

            TiposAtendimentoEMTULabel.ForeColor = Color.WhiteSmoke;
            TiposAtendimentoLabel.ForeColor = Color.WhiteSmoke;
        }

        private void TiposAtendimentoPanel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubMenuCadastroSAC();
            FechaSubMenuAvaliacaoDesempenho();
            FechaSubMenuBiblioteca();
            FechaSubMenuCurriculo();
            FechaSubMenuCorridas();
            FechaSubMenuCadastroJuridico();
            FechaSubMenuControladoria();

            if (((Control)sender).Name.Contains("EMTU"))
            {
                TiposAtendimentoEMTULabel.Font = new Font(TiposAtendimentoEMTULabel.Font, FontStyle.Bold);
                TiposAtendimentoEMTULabel.ForeColor = Publicas._fonteBotaoFocado;
                TiposAtendimentoEMTULabel.BackColor = _corMenuSelecionado;
                FavoritoTiposAtendimentoEMTUImagem.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Tipos"))
            {
                TiposAtendimentoLabel.Font = new Font(TiposAtendimentoLabel.Font, FontStyle.Bold);
                TiposAtendimentoLabel.ForeColor = Publicas._fonteBotaoFocado;
                TiposAtendimentoLabel.BackColor = _corMenuSelecionado;
                FavoritoTiposAtendimentoImagem.BackColor = _corMenuSelecionado;
                return;
            }
        }

        private void TiposAtendimentoPanel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaSAC;
            new TiposDeAtendimento().ShowDialog();
            NomePadrao();
            //AtivaTimer(sender, e);
        }

        private void TiposAtendimentoEMTUPanel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaSAC;
            new EMTU().ShowDialog();
            NomePadrao();
            //AtivaTimer(sender, e);
        }
        #endregion

        #endregion

        #region Chamados
        private void ChamadoSetaLabel_Click(object sender, EventArgs e)
        {
            // abrir o SubMenu 
            ChamadosSetaLabel.Text = "3";

            if (!Publicas._TemaBlack)
            {
                ChamadosSetaLabel.ForeColor = Publicas._bordaEntrada;
                ChamadosLabel.ForeColor = Publicas._bordaEntrada;
            }
            else
            {
                ChamadosSetaLabel.ForeColor = Publicas._fonteMenuSelecionado;
                ChamadosLabel.ForeColor = Publicas._fonteMenuSelecionado;
            }
            ChamadosSetaLabel.BackColor = _corFundoMenu;

            if (SubMenuChamadosPanel != null)
            {
                FechaSubMenuChamadosPanel();
                return;
            }

            #region Cria estrutura 

            // Menu de fundo (onde agrupa os demais itens)
            SubMenuChamadosPanel = new Panel();
            SubMenuChamadosPanel.Size = new Size(155, _heidthMenuSistema);
            SubMenuChamadosPanel.Location = new Point(MenuSistemaPanel.Width + SubMenuAtendimento.Width + 4, AcessoAoMenuPanel.Height);
            SubMenuChamadosPanel.BackColor = _corFundoDivisao;
            this.Controls.Add(SubMenuChamadosPanel);
            SubMenuChamadosPanel.BringToFront();
            SubMenuChamadosPanel.Visible = true;
            #endregion

            #region AbrirChamado
            AbrirChamadoPanel = new Panel();
            AbrirChamadoPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            AbrirChamadoPanel.Dock = DockStyle.Top;
            AbrirChamadoPanel.BackColor = _corFundoMenu;
            AbrirChamadoPanel.Name = "AbrirChamadoPanel";
            //AbrirChamadoPanel.Enabled = false;

            DivisoriaAbrirChamadoImagem = new PictureBox();
            DivisoriaAbrirChamadoImagem.Size = new Size(0, 4);
            DivisoriaAbrirChamadoImagem.Dock = DockStyle.Bottom;
            DivisoriaAbrirChamadoImagem.BackColor = _corFundoDivisao;

            AbrirChamadoLabel = new Label();
            AbrirChamadoLabel.AutoSize = false;
            AbrirChamadoLabel.Size = new Size(_widthLabelMenuSistema, 0);
            AbrirChamadoLabel.Dock = DockStyle.Fill;
            AbrirChamadoLabel.Text = "Abrir Chamado";
            AbrirChamadoLabel.Font = CorFontepadraoLabel.Font;
            AbrirChamadoLabel.ForeColor = Color.WhiteSmoke;
            AbrirChamadoLabel.TextAlign = ContentAlignment.MiddleRight;
            AbrirChamadoLabel.MouseHover += new EventHandler(this.AbrirChamadoPanel_MouseHover);
            AbrirChamadoLabel.Click += new System.EventHandler(this.AbrirChamadoPanel_Click);
            AbrirChamadoLabel.Name = "AbrirChamadoLabel";

            AbrirChamadoPanel.Controls.Add(AbrirChamadoLabel);
            AbrirChamadoPanel.Controls.Add(DivisoriaAbrirChamadoImagem);

            SubMenuChamadosPanel.Controls.Add(AbrirChamadoPanel);
            #endregion
        }

        private void FechaSubMenuChamadosPanel()
        {
            if (SubMenuChamadosPanel != null)
            {
                SubMenuChamadosPanel.Visible = false;
                this.Controls.Remove(SubMenuChamadosPanel);
                SubMenuChamadosPanel.Dispose();
                SubMenuChamadosPanel = null;
            }
        }

        private void MudaSelecaoDeCoresSubMenuChamadosPanel()
        {
            AbrirChamadoLabel.Font = new Font(AbrirChamadoLabel.Font, AbrirChamadoLabel.Font.Style & ~FontStyle.Bold);

            AbrirChamadoLabel.BackColor = _corFundoMenu;

            AbrirChamadoLabel.ForeColor = Color.WhiteSmoke;
        }

        private void AbrirChamadoPanel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubMenuChamadosPanel();
            FechaSubMenuAvaliacaoDesempenho();
            FechaSubMenuBiblioteca();
            FechaSubMenuCurriculo();
            FechaSubMenuCorridas();
            FechaSubMenuCadastroJuridico();
            FechaSubMenuControladoria();
            FechaSubMenuSAC();

            if (((Control)sender).Name.Contains("Abrir"))
            {
                AbrirChamadoLabel.Font = new Font(AbrirChamadoLabel.Font, FontStyle.Bold);
                AbrirChamadoLabel.ForeColor = Publicas._fonteBotaoFocado;
                AbrirChamadoLabel.BackColor = _corMenuSelecionado;
                return;
            }
        }

        private void AbrirChamadoPanel_Click(object sender, EventArgs e)
        {
            if (new ChamadoBO().ConsultaQuantidadeSemAvaliacao() > 3)
            {
                new Notificacoes.Mensagem("Você tem mais de 3 chamados aguardando Avaliação.'" + Environment.NewLine +
                    "Não será permitido abrir um novo chamado enquanto não avaliar os finalizados.", Publicas.TipoMensagem.Alerta).ShowDialog();
                return;
            }
            else
            {
                bool temSemAvaliarAMaisDe2Dias = false;
                try
                {
                    foreach (var item in _listaChamadosFinalizados.Where(w => w.IdUsuario == Publicas._usuario.Id && w.Avaliacao == Publicas.TipoDeSatisfacaoAtendimento.SemAvaliacao && w.Status == Publicas.StatusChamado.Finalizado))
                    {
                        if (item.DataRetorno.AddDays(5).Date < DateTime.Now.Date)
                            temSemAvaliarAMaisDe2Dias = temSemAvaliarAMaisDe2Dias || true;
                    }

                    if (temSemAvaliarAMaisDe2Dias)
                    {
                        new Notificacoes.Mensagem("Você tem chamados aguardando Avaliação a mais de 2 dias'" + Environment.NewLine +
                            "Não será permitido abrir um novo chamado enquanto não avaliar os finalizados.", Publicas.TipoMensagem.Alerta).ShowDialog();
                        return;
                    }
                }
                catch { }
            }

            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaChamado;
            Chamados.Abertura _tela = new Chamados.Abertura();

            if (_tela.Width > this.Width)
                _tela.Size = new Size(this.Width - 5, this.Height - (tituloPanel.Height + panel2.Height + 2));

            _tela.ShowDialog();
            _chamadosEmPesquisa = false;
            NomePadrao();

            if (Publicas._usuario != null && !_chamadosEmPesquisa)
            {
                MensagemChamadosDashBoardLabel.Text = "Aguarde... Pesquisando os chamados.";
                this.Refresh();
                try
                {
                    chamadosBackgroundWorker.RunWorkerAsync();
                }
                catch { }
                MensagemChamadosDashBoardLabel.Text = "";
                this.Refresh();

            }
        }
        #endregion

        #endregion

        #region TI
        private void TISetaLabel_Click(object sender, EventArgs e)
        {
            // abrir o SubMenu do RecursosHumanos
            TISetaLabel.Text = "3";

            if (!Publicas._TemaBlack)
            {
                TISetaLabel.ForeColor = Publicas._bordaEntrada;
                TILabel.ForeColor = Publicas._bordaEntrada;
            }
            else
            {
                TISetaLabel.ForeColor = Publicas._fonteMenuSelecionado;
                TILabel.ForeColor = Publicas._fonteMenuSelecionado;
            }
            TISetaLabel.BackColor = _corFundoMenu;

            if (MenuTIPanel != null)
            {
                FechaSubMenuTI();
                return;
            }

            if (SubMenuFavoritos != null)
            {
                FechaSubMenuFavoritos();
                return;
            }

            #region Cria estrutura 

            // Menu de fundo (onde agrupa os demais itens)
            MenuTIPanel = new Panel();
            MenuTIPanel.Size = new Size(155, _heidthMenuSistema * 3);
            MenuTIPanel.Location = new Point(MenuSistemaPanel.Width + 2, AcessoAoMenuPanel.Height);
            MenuTIPanel.BackColor = _corFundoDivisao;
            this.Controls.Add(MenuTIPanel);
            MenuTIPanel.BringToFront();
            MenuTIPanel.Visible = true;
            #endregion
            
            #region Corridas 
            CorridasPanel = new Panel();
            CorridasPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            CorridasPanel.Dock = DockStyle.Top;
            CorridasPanel.BackColor = _corFundoMenu;
            CorridasPanel.Name = "CorridasPanel";
            //CorridasPanel.Visible = false;
            CorridasPanel.Enabled = (Publicas._usuario.IdEmpresa == 1 || Publicas._usuario.IdEmpresa == 19) && Publicas._usuario.AdministraCorridas;

            DivisoriaCorridasImagem = new PictureBox();
            DivisoriaCorridasImagem.Size = new Size(0, 4);
            DivisoriaCorridasImagem.Dock = DockStyle.Bottom;
            DivisoriaCorridasImagem.BackColor = _corFundoDivisao;

            Divisoria2CorridasImagem = new PictureBox();
            Divisoria2CorridasImagem.Size = new Size(1, 2);
            Divisoria2CorridasImagem.Dock = DockStyle.Right;
            Divisoria2CorridasImagem.BackColor = _corFundoDivisao; //System.Drawing.Color.FromArgb(2, 91, 149);

            CorridasSetaLabel = new Label();
            CorridasSetaLabel.AutoSize = false;
            CorridasSetaLabel.Size = new Size(20, 59);
            CorridasSetaLabel.Dock = DockStyle.Right;
            CorridasSetaLabel.Text = "6";
            CorridasSetaLabel.Font = new Font("Webdings", (float)12);
            CorridasSetaLabel.TextAlign = ContentAlignment.MiddleCenter;
            CorridasSetaLabel.Click += new System.EventHandler(this.CorridasSetaLabel_Click);
            CorridasSetaLabel.MouseHover += new EventHandler(this.CadastrosTISetaPanel_MouseHover);
            CorridasSetaLabel.Name = "CorridasSetaLabel";
            CorridasSetaLabel.ForeColor = Color.WhiteSmoke;

            CorridasLabel = new Label();
            CorridasLabel.AutoSize = false;
            CorridasLabel.Size = new Size(_widthLabelMenuSistema, 0);
            CorridasLabel.Dock = DockStyle.Fill;
            CorridasLabel.Text = "Corridas";
            CorridasLabel.Font = CorFontepadraoLabel.Font;
            CorridasLabel.ForeColor = Color.WhiteSmoke;
            CorridasLabel.TextAlign = ContentAlignment.MiddleRight;
            CorridasLabel.MouseHover += new EventHandler(this.CadastrosTIPanel_MouseHover);
            CorridasLabel.Click += new System.EventHandler(this.CorridasSetaLabel_Click);
            CorridasLabel.Name = "CorridasLabel";

            CorridasPanel.Controls.Add(CorridasLabel);
            //CorridasPanel.Controls.Add(CorridasImagem);
            CorridasPanel.Controls.Add(Divisoria2CorridasImagem);
            CorridasPanel.Controls.Add(CorridasSetaLabel);
            CorridasPanel.Controls.Add(DivisoriaCorridasImagem);

            MenuTIPanel.Controls.Add(CorridasPanel);
            #endregion

            #region PowerBI
            PowerBIPanel = new Panel();
            PowerBIPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            PowerBIPanel.Dock = DockStyle.Top;
            PowerBIPanel.BackColor = _corFundoMenu;
            PowerBIPanel.Name = "PowerBIPanel";
            PowerBIPanel.Enabled = Publicas._usuario.Administrador || Publicas._usuario.Id == 59 || Publicas._usuario.Id == 544; 

            DivisoriaPowerBIImagem = new PictureBox();
            DivisoriaPowerBIImagem.Size = new Size(0, 4);
            DivisoriaPowerBIImagem.Dock = DockStyle.Bottom;
            DivisoriaPowerBIImagem.BackColor = _corFundoDivisao;

            Divisoria2PowerBIImagem = new PictureBox();
            Divisoria2PowerBIImagem.Size = new Size(1, 2);
            Divisoria2PowerBIImagem.Dock = DockStyle.Right;
            Divisoria2PowerBIImagem.BackColor = _corFundoDivisao; //System.Drawing.Color.FromArgb(2, 91, 149);

            PowerBISetaLabel = new Label();
            PowerBISetaLabel.AutoSize = false;
            PowerBISetaLabel.Size = new Size(20, 59);
            PowerBISetaLabel.Dock = DockStyle.Right;
            PowerBISetaLabel.Text = "6";
            PowerBISetaLabel.Font = new Font("Webdings", (float)12);
            PowerBISetaLabel.TextAlign = ContentAlignment.MiddleCenter;
            PowerBISetaLabel.Click += new System.EventHandler(this.PowerBISetaLabel_Click);
            PowerBISetaLabel.MouseHover += new EventHandler(this.CadastrosTISetaPanel_MouseHover);
            PowerBISetaLabel.Name = "PowerBISetaLabel";
            PowerBISetaLabel.ForeColor = Color.WhiteSmoke;

            PowerBILabel = new Label();
            PowerBILabel.AutoSize = false;
            PowerBILabel.Size = new Size(_widthLabelMenuSistema, 0);
            PowerBILabel.Dock = DockStyle.Fill;
            PowerBILabel.Text = "Power BI";
            PowerBILabel.Font = CorFontepadraoLabel.Font;
            PowerBILabel.ForeColor = Color.WhiteSmoke;
            PowerBILabel.TextAlign = ContentAlignment.MiddleRight;
            PowerBILabel.MouseHover += new EventHandler(this.CadastrosTIPanel_MouseHover);
            PowerBILabel.Click += new System.EventHandler(this.PowerBISetaLabel_Click);
            PowerBILabel.Name = "PowerBILabel";

            PowerBIPanel.Controls.Add(PowerBILabel);
            //PowerBIPanel.Controls.Add(PowerBIImagem);
            PowerBIPanel.Controls.Add(Divisoria2PowerBIImagem);
            PowerBIPanel.Controls.Add(PowerBISetaLabel);
            PowerBIPanel.Controls.Add(DivisoriaPowerBIImagem);

            MenuTIPanel.Controls.Add(PowerBIPanel);
            #endregion

            #region CadastroTI 
            CadastroTIPanel = new Panel();
            CadastroTIPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            CadastroTIPanel.Dock = DockStyle.Top;
            CadastroTIPanel.BackColor = _corFundoMenu;
            CadastroTIPanel.Name = "CadastroTIPanel";

            DivisoriaCadastroTIImagem = new PictureBox();
            DivisoriaCadastroTIImagem.Size = new Size(0, 4);
            DivisoriaCadastroTIImagem.Dock = DockStyle.Bottom;
            DivisoriaCadastroTIImagem.BackColor = _corFundoDivisao;

            Divisoria2CadastroTIImagem = new PictureBox();
            Divisoria2CadastroTIImagem.Size = new Size(1, 2);
            Divisoria2CadastroTIImagem.Dock = DockStyle.Right;
            Divisoria2CadastroTIImagem.BackColor = _corFundoDivisao; //System.Drawing.Color.FromArgb(2, 91, 149);

            CadastroTISetaLabel = new Label();
            CadastroTISetaLabel.AutoSize = false;
            CadastroTISetaLabel.Size = new Size(20, 59);
            CadastroTISetaLabel.Dock = DockStyle.Right;
            CadastroTISetaLabel.Text = "6";
            CadastroTISetaLabel.Font = new Font("Webdings", (float)12);
            CadastroTISetaLabel.TextAlign = ContentAlignment.MiddleCenter;
            CadastroTISetaLabel.Click += new System.EventHandler(this.CadastroTISetaLabel_Click);
            CadastroTISetaLabel.MouseHover += new EventHandler(this.CadastrosTISetaPanel_MouseHover);
            CadastroTISetaLabel.Name = "CadastroTISetaLabel";
            CadastroTISetaLabel.ForeColor = Color.WhiteSmoke;

            CadastroTILabel = new Label();
            CadastroTILabel.AutoSize = false;
            CadastroTILabel.Size = new Size(_widthLabelMenuSistema, 0);
            CadastroTILabel.Dock = DockStyle.Fill;
            CadastroTILabel.Text = "Cadastros";
            CadastroTILabel.Font = CorFontepadraoLabel.Font;
            CadastroTILabel.ForeColor = Color.WhiteSmoke;
            CadastroTILabel.TextAlign = ContentAlignment.MiddleRight;
            CadastroTILabel.MouseHover += new EventHandler(this.CadastrosTIPanel_MouseHover);
            CadastroTILabel.Click += new System.EventHandler(this.CadastroTISetaLabel_Click);
            CadastroTILabel.Name = "CadastroTILabel";

            CadastroTIPanel.Controls.Add(CadastroTILabel);
            //CadastroTIPanel.Controls.Add(CadastroTIImagem);
            CadastroTIPanel.Controls.Add(Divisoria2CadastroTIImagem);
            CadastroTIPanel.Controls.Add(CadastroTISetaLabel);
            CadastroTIPanel.Controls.Add(DivisoriaCadastroTIImagem);

            MenuTIPanel.Controls.Add(CadastroTIPanel);
            #endregion            
        }


        private void FechaSubMenuTI()
        {
            FechaSubMenuCadastroTIPanel();

            if (MenuTIPanel != null)
            {
                MenuTIPanel.Visible = false;
                this.Controls.Remove(MenuTIPanel);
                MenuTIPanel.Dispose();
                MenuTIPanel = null;
            }
        }

        private void MudaSelecaoDeCoresSubMenuTI()
        {
            CadastroTILabel.Font = new Font(CadastroTILabel.Font, CadastroTILabel.Font.Style & ~FontStyle.Bold);
            CadastroTISetaLabel.Font = new Font(CadastroTISetaLabel.Font, CadastroTISetaLabel.Font.Style & ~FontStyle.Bold);

            CadastroTILabel.BackColor = _corFundoMenu;
            CadastroTISetaLabel.BackColor = CadastroTILabel.BackColor;

            CadastroTILabel.ForeColor = Color.WhiteSmoke;
            CadastroTISetaLabel.ForeColor = Color.WhiteSmoke;

            CadastroTISetaLabel.Text = "6";
            CorridasSetaLabel.Text = "6";
            PowerBISetaLabel.Text = "6";

            CorridasLabel.Font = new Font(CorridasLabel.Font, CorridasLabel.Font.Style & ~FontStyle.Bold);
            CorridasSetaLabel.Font = new Font(CorridasSetaLabel.Font, CorridasSetaLabel.Font.Style & ~FontStyle.Bold);

            CorridasLabel.BackColor = _corFundoMenu;
            CorridasSetaLabel.BackColor = CorridasLabel.BackColor;

            CorridasLabel.ForeColor = Color.WhiteSmoke;
            CorridasSetaLabel.ForeColor = Color.WhiteSmoke;

            PowerBILabel.Font = new Font(PowerBILabel.Font, PowerBILabel.Font.Style & ~FontStyle.Bold);
            PowerBISetaLabel.Font = new Font(PowerBISetaLabel.Font, PowerBISetaLabel.Font.Style & ~FontStyle.Bold);

            PowerBILabel.BackColor = _corFundoMenu;
            PowerBISetaLabel.BackColor = PowerBILabel.BackColor;

            PowerBILabel.ForeColor = Color.WhiteSmoke;
            PowerBISetaLabel.ForeColor = Color.WhiteSmoke;

        }

        private void CadastrosTIPanel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubMenuTI();
            FechaSubMenuAvaliacaoDesempenho();
            FechaSubMenuBiblioteca();
            FechaSubMenuCurriculo();
            FechaSubMenuCorridas();
            FechaSubMenuCadastroJuridico();
            FechaSubMenuControladoria();
            FechaSubMenuChamadosPanel();
            FechaSubMenuSAC();
            FechaSubMenuCadastroTIPanel();


            if (((Control)sender).Name.Contains("Corridas"))
            {
                CorridasLabel.Font = new Font(CorridasLabel.Font, FontStyle.Bold);
                CorridasLabel.ForeColor = Publicas._fonteBotaoFocado;
                CorridasLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Cadastro"))
            {
                CadastroTILabel.Font = new Font(CadastroTILabel.Font, FontStyle.Bold);
                CadastroTILabel.ForeColor = Publicas._fonteBotaoFocado;
                CadastroTILabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Power"))
            {
                PowerBILabel.Font = new Font(PowerBILabel.Font, FontStyle.Bold);
                PowerBILabel.ForeColor = Publicas._fonteBotaoFocado;
                PowerBILabel.BackColor = _corMenuSelecionado;
                return;
            }
        }

        private void CadastrosTISetaPanel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubMenuTI();
            FechaSubMenuAvaliacaoDesempenho();
            FechaSubMenuBiblioteca();
            FechaSubMenuCurriculo();
            FechaSubMenuCorridas();
            FechaSubMenuCadastroJuridico();
            FechaSubMenuControladoria();
            FechaSubMenuChamadosPanel();
            FechaSubMenuSAC();
            FechaSubMenuCadastroTIPanel();


            if (((Control)sender).Name.Contains("Corridas"))
            {
                CorridasSetaLabel.Font = new Font(CorridasSetaLabel.Font, FontStyle.Bold);
                CorridasSetaLabel.ForeColor = Publicas._fonteBotaoFocado;
                CorridasSetaLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Cadastro"))
            {
                CadastroTISetaLabel.Font = new Font(CadastroTISetaLabel.Font, FontStyle.Bold);
                CadastroTISetaLabel.ForeColor = Publicas._fonteBotaoFocado;
                CadastroTISetaLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Power"))
            {
                PowerBISetaLabel.Font = new Font(PowerBISetaLabel.Font, FontStyle.Bold);
                PowerBISetaLabel.ForeColor = Publicas._fonteBotaoFocado;
                PowerBISetaLabel.BackColor = _corMenuSelecionado;
                return;
            }
        }

        #region PowerBI

        private void PowerBISetaLabel_Click(object sender, EventArgs e)
        {
            PowerBISetaLabel.Text = "3";

            if (!Publicas._TemaBlack)
            {
                PowerBISetaLabel.ForeColor = Publicas._bordaEntrada;
                PowerBILabel.ForeColor = Publicas._bordaEntrada;
            }
            else
            {
                PowerBISetaLabel.ForeColor = Publicas._fonteMenuSelecionado;
                PowerBILabel.ForeColor = Publicas._fonteMenuSelecionado;
            }
            PowerBISetaLabel.BackColor = _corFundoMenu;

            if (SubMenuPowerBIPanel != null)
            {
                FechaSubMenuPowerBIPanel();
                return;
            }

            #region Cria estrutura 

            // Menu de fundo (onde agrupa os demais itens)
            SubMenuPowerBIPanel = new Panel();
            SubMenuPowerBIPanel.Size = new Size(155, _heidthMenuSistema * 6);
            SubMenuPowerBIPanel.Location = new Point(MenuSistemaPanel.Width + MenuTIPanel.Width + 4, AcessoAoMenuPanel.Height);
            SubMenuPowerBIPanel.BackColor = _corFundoDivisao;
            this.Controls.Add(SubMenuPowerBIPanel);
            SubMenuPowerBIPanel.BringToFront();
            SubMenuPowerBIPanel.Visible = true;
            #endregion

            #region Resumo
            ResumoBIPanel = new Panel();
            ResumoBIPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            ResumoBIPanel.Dock = DockStyle.Top;
            ResumoBIPanel.BackColor = _corFundoMenu;
            ResumoBIPanel.Name = "ResumoBIPanel";
            ResumoBIPanel.Enabled = Publicas._usuario.Administrador || Publicas._usuario.Id == 59 || Publicas._usuario.Id == 544 ;

            DivisoriaResumoBIImagem = new PictureBox();
            DivisoriaResumoBIImagem.Size = new Size(0, 4);
            DivisoriaResumoBIImagem.Dock = DockStyle.Bottom;
            DivisoriaResumoBIImagem.BackColor = _corFundoDivisao;

            ResumoBILabel = new Label();
            ResumoBILabel.AutoSize = false;
            ResumoBILabel.Size = new Size(_widthLabelMenuSistema, 0);
            ResumoBILabel.Dock = DockStyle.Fill;
            ResumoBILabel.Text = "Resumo dos Acessos";
            ResumoBILabel.Font = CorFontepadraoLabel.Font;
            ResumoBILabel.ForeColor = Color.WhiteSmoke;
            ResumoBILabel.TextAlign = ContentAlignment.MiddleRight;
            ResumoBILabel.MouseHover += new EventHandler(this.EmailAcessoBITILabel_MouseHover);
            ResumoBILabel.Click += new System.EventHandler(this.ResumoBILabel_Click);
            ResumoBILabel.Name = "ResumoBILabel";

            FavoritoResumoBIImagem = new PictureBox();
            FavoritoResumoBIImagem.Size = new Size(10, 10);
            FavoritoResumoBIImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoResumoBIImagem.Name = ResumoBILabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoResumoBIImagem.Name))
            {
                FavoritoResumoBIImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoResumoBIImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoResumoBIImagem.Top = 35;
            FavoritoResumoBIImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoResumoBIImagem.Tag = ResumoBILabel.Text;
            FavoritoResumoBIImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoResumoBIImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoResumoBIImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoResumoBIImagem.AccessibleName = "TI";

            ResumoBIPanel.Controls.Add(ResumoBILabel);
            ResumoBIPanel.Controls.Add(DivisoriaResumoBIImagem);
            ResumoBIPanel.Controls.Add(FavoritoResumoBIImagem);
            FavoritoResumoBIImagem.BringToFront();

            SubMenuPowerBIPanel.Controls.Add(ResumoBIPanel);
            #endregion

            #region Acessos
            AcessosBIPanel = new Panel();
            AcessosBIPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            AcessosBIPanel.Dock = DockStyle.Top;
            AcessosBIPanel.BackColor = _corFundoMenu;
            AcessosBIPanel.Name = "AcessosBIPanel";
            AcessosBIPanel.Enabled = Publicas._usuario.Administrador;

            DivisoriaAcessosBIImagem = new PictureBox();
            DivisoriaAcessosBIImagem.Size = new Size(0, 4);
            DivisoriaAcessosBIImagem.Dock = DockStyle.Bottom;
            DivisoriaAcessosBIImagem.BackColor = _corFundoDivisao;

            AcessosBILabel = new Label();
            AcessosBILabel.AutoSize = false;
            AcessosBILabel.Size = new Size(_widthLabelMenuSistema, 0);
            AcessosBILabel.Dock = DockStyle.Fill;
            AcessosBILabel.Text = "Acessos por" + Environment.NewLine + "E-mail";
            AcessosBILabel.Font = CorFontepadraoLabel.Font;
            AcessosBILabel.ForeColor = Color.WhiteSmoke;
            AcessosBILabel.TextAlign = ContentAlignment.MiddleRight;
            AcessosBILabel.MouseHover += new EventHandler(this.EmailAcessoBITILabel_MouseHover);
            AcessosBILabel.Click += new System.EventHandler(this.AcessosBILabel_Click);
            AcessosBILabel.Name = "AcessosBILabel";

            FavoritoAcessosBIImagem = new PictureBox();
            FavoritoAcessosBIImagem.Size = new Size(10, 10);
            FavoritoAcessosBIImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoAcessosBIImagem.Name = AcessosBILabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoAcessosBIImagem.Name))
            {
                FavoritoAcessosBIImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoAcessosBIImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoAcessosBIImagem.Top = 35;
            FavoritoAcessosBIImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoAcessosBIImagem.Tag = AcessosBILabel.Text;
            FavoritoAcessosBIImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoAcessosBIImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoAcessosBIImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoAcessosBIImagem.AccessibleName = "TI";

            AcessosBIPanel.Controls.Add(AcessosBILabel);
            AcessosBIPanel.Controls.Add(DivisoriaAcessosBIImagem);
            AcessosBIPanel.Controls.Add(FavoritoAcessosBIImagem);
            FavoritoAcessosBIImagem.BringToFront();

            SubMenuPowerBIPanel.Controls.Add(AcessosBIPanel);
            #endregion

            #region Relatorios
            RelatoriosBIPanel = new Panel();
            RelatoriosBIPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            RelatoriosBIPanel.Dock = DockStyle.Top;
            RelatoriosBIPanel.BackColor = _corFundoMenu;
            RelatoriosBIPanel.Name = "RelatoriosBIPanel";
            RelatoriosBIPanel.Enabled = Publicas._usuario.Administrador;

            DivisoriaRelatoriosBIImagem = new PictureBox();
            DivisoriaRelatoriosBIImagem.Size = new Size(0, 4);
            DivisoriaRelatoriosBIImagem.Dock = DockStyle.Bottom;
            DivisoriaRelatoriosBIImagem.BackColor = _corFundoDivisao;

            RelatoriosBILabel = new Label();
            RelatoriosBILabel.AutoSize = false;
            RelatoriosBILabel.Size = new Size(_widthLabelMenuSistema, 0);
            RelatoriosBILabel.Dock = DockStyle.Fill;
            RelatoriosBILabel.Text = "Relatórios";
            RelatoriosBILabel.Font = CorFontepadraoLabel.Font;
            RelatoriosBILabel.ForeColor = Color.WhiteSmoke;
            RelatoriosBILabel.TextAlign = ContentAlignment.MiddleRight;
            RelatoriosBILabel.MouseHover += new EventHandler(this.EmailAcessoBITILabel_MouseHover);
            RelatoriosBILabel.Click += new System.EventHandler(this.RelatoriosBILabel_Click);
            RelatoriosBILabel.Name = "RelatoriosBILabel";

            FavoritoRelatoriosBIImagem = new PictureBox();
            FavoritoRelatoriosBIImagem.Size = new Size(10, 10);
            FavoritoRelatoriosBIImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoRelatoriosBIImagem.Name = RelatoriosBILabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoRelatoriosBIImagem.Name))
            {
                FavoritoRelatoriosBIImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoRelatoriosBIImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoRelatoriosBIImagem.Top = 35;
            FavoritoRelatoriosBIImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoRelatoriosBIImagem.Tag = RelatoriosBILabel.Text;
            FavoritoRelatoriosBIImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoRelatoriosBIImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoRelatoriosBIImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoRelatoriosBIImagem.AccessibleName = "TI";

            RelatoriosBIPanel.Controls.Add(RelatoriosBILabel);
            RelatoriosBIPanel.Controls.Add(DivisoriaRelatoriosBIImagem);
            RelatoriosBIPanel.Controls.Add(FavoritoRelatoriosBIImagem);
            FavoritoRelatoriosBIImagem.BringToFront();

            SubMenuPowerBIPanel.Controls.Add(RelatoriosBIPanel);
            #endregion

            #region Usuários por E-mail
            UsuariosPorEmailTIPanel = new Panel();
            UsuariosPorEmailTIPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            UsuariosPorEmailTIPanel.Dock = DockStyle.Top;
            UsuariosPorEmailTIPanel.BackColor = _corFundoMenu;
            UsuariosPorEmailTIPanel.Name = "UsuariosPorEmailTIPanel";
            UsuariosPorEmailTIPanel.Enabled = Publicas._usuario.Administrador;

            DivisoriaUsuariosPorEmailTIImagem = new PictureBox();
            DivisoriaUsuariosPorEmailTIImagem.Size = new Size(0, 4);
            DivisoriaUsuariosPorEmailTIImagem.Dock = DockStyle.Bottom;
            DivisoriaUsuariosPorEmailTIImagem.BackColor = _corFundoDivisao;

            UsuariosPorEmailTILabel = new Label();
            UsuariosPorEmailTILabel.AutoSize = false;
            UsuariosPorEmailTILabel.Size = new Size(_widthLabelMenuSistema, 0);
            UsuariosPorEmailTILabel.Dock = DockStyle.Fill;
            UsuariosPorEmailTILabel.Text = "Usuários por" + Environment.NewLine + "E-mail";
            UsuariosPorEmailTILabel.Font = CorFontepadraoLabel.Font;
            UsuariosPorEmailTILabel.ForeColor = Color.WhiteSmoke;
            UsuariosPorEmailTILabel.TextAlign = ContentAlignment.MiddleRight;
            UsuariosPorEmailTILabel.MouseHover += new EventHandler(this.EmailAcessoBITILabel_MouseHover);
            UsuariosPorEmailTILabel.Click += new System.EventHandler(this.UsuariosPorEmailTILabel_Click);
            UsuariosPorEmailTILabel.Name = "UsuariosPorEmailTILabel";

            FavoritoUsuariosPorEmailTIImagem = new PictureBox();
            FavoritoUsuariosPorEmailTIImagem.Size = new Size(10, 10);
            FavoritoUsuariosPorEmailTIImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoUsuariosPorEmailTIImagem.Name = UsuariosPorEmailTILabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoUsuariosPorEmailTIImagem.Name))
            {
                FavoritoUsuariosPorEmailTIImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoUsuariosPorEmailTIImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoUsuariosPorEmailTIImagem.Top = 35;
            FavoritoUsuariosPorEmailTIImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoUsuariosPorEmailTIImagem.Tag = UsuariosPorEmailTILabel.Text;
            FavoritoUsuariosPorEmailTIImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoUsuariosPorEmailTIImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoUsuariosPorEmailTIImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoUsuariosPorEmailTIImagem.AccessibleName = "TI";

            UsuariosPorEmailTIPanel.Controls.Add(UsuariosPorEmailTILabel);
            UsuariosPorEmailTIPanel.Controls.Add(DivisoriaUsuariosPorEmailTIImagem);
            UsuariosPorEmailTIPanel.Controls.Add(FavoritoUsuariosPorEmailTIImagem);
            FavoritoUsuariosPorEmailTIImagem.BringToFront();

            SubMenuPowerBIPanel.Controls.Add(UsuariosPorEmailTIPanel);
            #endregion

            #region Empresa por E-mail
            AcessoEmpresaBITIPanel = new Panel();
            AcessoEmpresaBITIPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            AcessoEmpresaBITIPanel.Dock = DockStyle.Top;
            AcessoEmpresaBITIPanel.BackColor = _corFundoMenu;
            AcessoEmpresaBITIPanel.Name = "AcessoEmpresaBITIPanel";
            AcessoEmpresaBITIPanel.Enabled = Publicas._usuario.Administrador;

            DivisoriaAcessoEmpresaBITIImagem = new PictureBox();
            DivisoriaAcessoEmpresaBITIImagem.Size = new Size(0, 4);
            DivisoriaAcessoEmpresaBITIImagem.Dock = DockStyle.Bottom;
            DivisoriaAcessoEmpresaBITIImagem.BackColor = _corFundoDivisao;

            AcessoEmpresaBITILabel = new Label();
            AcessoEmpresaBITILabel.AutoSize = false;
            AcessoEmpresaBITILabel.Size = new Size(_widthLabelMenuSistema, 0);
            AcessoEmpresaBITILabel.Dock = DockStyle.Fill;
            AcessoEmpresaBITILabel.Text = "Autoriza Empresa" + Environment.NewLine + "por E-mail";
            AcessoEmpresaBITILabel.Font = CorFontepadraoLabel.Font;
            AcessoEmpresaBITILabel.ForeColor = Color.WhiteSmoke;
            AcessoEmpresaBITILabel.TextAlign = ContentAlignment.MiddleRight;
            AcessoEmpresaBITILabel.MouseHover += new EventHandler(this.EmailAcessoBITILabel_MouseHover);
            AcessoEmpresaBITILabel.Click += new System.EventHandler(this.AcessoEmpresaBITILabel_Click);
            AcessoEmpresaBITILabel.Name = "AcessoEmpresaBITILabel";

            FavoritoAcessoEmpresaBITIImagem = new PictureBox();
            FavoritoAcessoEmpresaBITIImagem.Size = new Size(10, 10);
            FavoritoAcessoEmpresaBITIImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoAcessoEmpresaBITIImagem.Name = AcessoEmpresaBITILabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoAcessoEmpresaBITIImagem.Name))
            {
                FavoritoAcessoEmpresaBITIImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoAcessoEmpresaBITIImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoAcessoEmpresaBITIImagem.Top = 35;
            FavoritoAcessoEmpresaBITIImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoAcessoEmpresaBITIImagem.Tag = AcessoEmpresaBITILabel.Text;
            FavoritoAcessoEmpresaBITIImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoAcessoEmpresaBITIImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoAcessoEmpresaBITIImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoAcessoEmpresaBITIImagem.AccessibleName = "TI";

            AcessoEmpresaBITIPanel.Controls.Add(AcessoEmpresaBITILabel);
            AcessoEmpresaBITIPanel.Controls.Add(DivisoriaAcessoEmpresaBITIImagem);
            AcessoEmpresaBITIPanel.Controls.Add(FavoritoAcessoEmpresaBITIImagem);
            FavoritoAcessoEmpresaBITIImagem.BringToFront();

            SubMenuPowerBIPanel.Controls.Add(AcessoEmpresaBITIPanel);
            #endregion

            #region Email de Acesso BI
            EmailAcessoBITIPanel = new Panel();
            EmailAcessoBITIPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            EmailAcessoBITIPanel.Dock = DockStyle.Top;
            EmailAcessoBITIPanel.BackColor = _corFundoMenu;
            EmailAcessoBITIPanel.Name = "EmailAcessoBITIPanel";
            EmailAcessoBITIPanel.Enabled = Publicas._usuario.Administrador;

            DivisoriaEmailAcessoBITIImagem = new PictureBox();
            DivisoriaEmailAcessoBITIImagem.Size = new Size(0, 4);
            DivisoriaEmailAcessoBITIImagem.Dock = DockStyle.Bottom;
            DivisoriaEmailAcessoBITIImagem.BackColor = _corFundoDivisao;

            EmailAcessoBITILabel = new Label();
            EmailAcessoBITILabel.AutoSize = false;
            EmailAcessoBITILabel.Size = new Size(_widthLabelMenuSistema, 0);
            EmailAcessoBITILabel.Dock = DockStyle.Fill;
            EmailAcessoBITILabel.Text = "E-mail de" + Environment.NewLine + "Acesso";
            EmailAcessoBITILabel.Font = CorFontepadraoLabel.Font;
            EmailAcessoBITILabel.ForeColor = Color.WhiteSmoke;
            EmailAcessoBITILabel.TextAlign = ContentAlignment.MiddleRight;
            EmailAcessoBITILabel.MouseHover += new EventHandler(this.EmailAcessoBITILabel_MouseHover);
            EmailAcessoBITILabel.Click += new System.EventHandler(this.EmailAcessoBITILabel_Click);
            EmailAcessoBITILabel.Name = "EmailAcessoBITILabel";

            FavoritoEmailAcessoBITIImagem = new PictureBox();
            FavoritoEmailAcessoBITIImagem.Size = new Size(10, 10);
            FavoritoEmailAcessoBITIImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoEmailAcessoBITIImagem.Name = EmailAcessoBITILabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoEmailAcessoBITIImagem.Name))
            {
                FavoritoEmailAcessoBITIImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoEmailAcessoBITIImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoEmailAcessoBITIImagem.Top = 35;
            FavoritoEmailAcessoBITIImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoEmailAcessoBITIImagem.Tag = EmailAcessoBITILabel.Text;
            FavoritoEmailAcessoBITIImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoEmailAcessoBITIImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoEmailAcessoBITIImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoEmailAcessoBITIImagem.AccessibleName = "TI";

            EmailAcessoBITIPanel.Controls.Add(EmailAcessoBITILabel);
            EmailAcessoBITIPanel.Controls.Add(DivisoriaEmailAcessoBITIImagem);
            EmailAcessoBITIPanel.Controls.Add(FavoritoEmailAcessoBITIImagem);
            FavoritoEmailAcessoBITIImagem.BringToFront();

            SubMenuPowerBIPanel.Controls.Add(EmailAcessoBITIPanel);
            #endregion
        }

        private void ResumoBILabel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaTI;
            BI.ResumoDosAcessos _tela = new BI.ResumoDosAcessos();
            _tela.Size = new Size(this.Width - 5, this.Height - (tituloPanel.Height + panel2.Height + 2));
            _tela.ShowDialog();
            NomePadrao();
        }

        private void RelatoriosBILabel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaTI;
            new BI.RelatoriosBI().ShowDialog();
            NomePadrao();
        }

        private void AcessosBILabel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaTI;
            new BI.QuantidadeAcessoPorDia().ShowDialog();
            NomePadrao();
        }

        private void UsuariosPorEmailTILabel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaTI;
            new BI.AcessoUsuariosPorEmail().ShowDialog();
            NomePadrao();
        }

        private void AcessoEmpresaBITILabel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaTI;
            new BI.AcessoEmpresasPorEmail().ShowDialog();
            NomePadrao();
        }

        private void EmailAcessoBITILabel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaTI;
            new BI.EmailDeAcesso().ShowDialog();
            NomePadrao();
        }

        private void MudaSelecaoDeCoresSubMenuPowerBI()
        {
            EmailAcessoBITILabel.Font = new Font(EmailAcessoBITILabel.Font, EmailAcessoBITILabel.Font.Style & ~FontStyle.Bold);
            AcessoEmpresaBITILabel.Font = new Font(AcessoEmpresaBITILabel.Font, AcessoEmpresaBITILabel.Font.Style & ~FontStyle.Bold);
            UsuariosPorEmailTILabel.Font = new Font(UsuariosPorEmailTILabel.Font, UsuariosPorEmailTILabel.Font.Style & ~FontStyle.Bold);
            AcessosBILabel.Font = new Font(AcessosBILabel.Font, AcessosBILabel.Font.Style & ~FontStyle.Bold);
            ResumoBILabel.Font = new Font(ResumoBILabel.Font, ResumoBILabel.Font.Style & ~FontStyle.Bold);
            RelatoriosBILabel.Font = new Font(RelatoriosBILabel.Font, RelatoriosBILabel.Font.Style & ~FontStyle.Bold);

            EmailAcessoBITILabel.BackColor = _corFundoMenu;
            AcessoEmpresaBITILabel.BackColor = _corFundoMenu;
            UsuariosPorEmailTILabel.BackColor = _corFundoMenu;
            AcessosBILabel.BackColor = _corFundoMenu;
            ResumoBILabel.BackColor = _corFundoMenu;
            RelatoriosBILabel.BackColor = _corFundoMenu;

            FavoritoUsuariosPorEmailTIImagem.BackColor = EmailAcessoBITILabel.BackColor;
            FavoritoAcessoEmpresaBITIImagem.BackColor = EmailAcessoBITILabel.BackColor;
            FavoritoEmailAcessoBITIImagem.BackColor = EmailAcessoBITILabel.BackColor;
            FavoritoAcessosBIImagem.BackColor = EmailAcessoBITILabel.BackColor;
            FavoritoResumoBIImagem.BackColor = EmailAcessoBITILabel.BackColor;
            FavoritoRelatoriosBIImagem.BackColor = EmailAcessoBITILabel.BackColor;

            EmailAcessoBITILabel.ForeColor = Color.WhiteSmoke;
            AcessoEmpresaBITILabel.ForeColor = Color.WhiteSmoke;
            UsuariosPorEmailTILabel.ForeColor = Color.WhiteSmoke;
            AcessosBILabel.ForeColor = Color.WhiteSmoke;
            ResumoBILabel.ForeColor = Color.WhiteSmoke;
            RelatoriosBILabel.ForeColor = Color.WhiteSmoke;
        }

        private void EmailAcessoBITILabel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubMenuPowerBI();

            if (((Control)sender).Name.StartsWith("Acessos"))
            {
                AcessosBILabel.Font = new Font(AcessosBILabel.Font, FontStyle.Bold);
                AcessosBILabel.ForeColor = Publicas._fonteBotaoFocado;
                AcessosBILabel.BackColor = _corMenuSelecionado;
                FavoritoAcessosBIImagem.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.StartsWith("Relatorios"))
            {
                RelatoriosBILabel.Font = new Font(RelatoriosBILabel.Font, FontStyle.Bold);
                RelatoriosBILabel.ForeColor = Publicas._fonteBotaoFocado;
                RelatoriosBILabel.BackColor = _corMenuSelecionado;
                FavoritoRelatoriosBIImagem.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Resumo"))
            {
                ResumoBILabel.Font = new Font(UsuariosPorEmailTILabel.Font, FontStyle.Bold);
                ResumoBILabel.ForeColor = Publicas._fonteBotaoFocado;
                ResumoBILabel.BackColor = _corMenuSelecionado;
                FavoritoResumoBIImagem.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Usuario"))
            {
                UsuariosPorEmailTILabel.Font = new Font(UsuariosPorEmailTILabel.Font, FontStyle.Bold);
                UsuariosPorEmailTILabel.ForeColor = Publicas._fonteBotaoFocado;
                UsuariosPorEmailTILabel.BackColor = _corMenuSelecionado;
                FavoritoUsuariosPorEmailTIImagem.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.StartsWith("EmailA"))
            {
                EmailAcessoBITILabel.Font = new Font(EmailAcessoBITILabel.Font, FontStyle.Bold);
                EmailAcessoBITILabel.ForeColor = Publicas._fonteBotaoFocado;
                EmailAcessoBITILabel.BackColor = _corMenuSelecionado;
                FavoritoEmailAcessoBITIImagem.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Empresa"))
            {
                AcessoEmpresaBITILabel.Font = new Font(AcessoEmpresaBITILabel.Font, FontStyle.Bold);
                AcessoEmpresaBITILabel.ForeColor = Publicas._fonteBotaoFocado;
                AcessoEmpresaBITILabel.BackColor = _corMenuSelecionado;
                FavoritoAcessoEmpresaBITIImagem.BackColor = _corMenuSelecionado;
                return;
            }

        }

        private void FechaSubMenuPowerBIPanel()
        {
            if (SubMenuPowerBIPanel != null)
            {
                SubMenuPowerBIPanel.Visible = false;
                this.Controls.Remove(SubMenuPowerBIPanel);
                SubMenuPowerBIPanel.Dispose();
                SubMenuPowerBIPanel = null;
            }
        }
        #endregion

        #region Cadastro

        private void CadastroTISetaLabel_Click(object sender, EventArgs e)
        {
            CadastroTISetaLabel.Text = "3";

            if (!Publicas._TemaBlack)
            {
                CadastroTISetaLabel.ForeColor = Publicas._bordaEntrada;
                CadastroTILabel.ForeColor = Publicas._bordaEntrada;
            }
            else
            {
                CadastroTISetaLabel.ForeColor = Publicas._fonteMenuSelecionado;
                CadastroTILabel.ForeColor = Publicas._fonteMenuSelecionado;
            }
            CadastroTISetaLabel.BackColor = _corFundoMenu;

            if (SubMenuCadastroTIPanel != null)
            {
                FechaSubMenuCadastroTIPanel();
                return;
            }

            #region Cria estrutura 

            // Menu de fundo (onde agrupa os demais itens)
            SubMenuCadastroTIPanel = new Panel();
            SubMenuCadastroTIPanel.Size = new Size(155, _heidthMenuSistema * 8);
            SubMenuCadastroTIPanel.Location = new Point(MenuSistemaPanel.Width + MenuTIPanel.Width + 4, AcessoAoMenuPanel.Height);
            SubMenuCadastroTIPanel.BackColor = _corFundoDivisao;
            this.Controls.Add(SubMenuCadastroTIPanel);
            SubMenuCadastroTIPanel.BringToFront();
            SubMenuCadastroTIPanel.Visible = true;
            #endregion

            #region AgendaReuniao
            AgendaReuniaoPanel = new Panel();
            AgendaReuniaoPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            AgendaReuniaoPanel.Dock = DockStyle.Top;
            AgendaReuniaoPanel.BackColor = _corFundoMenu;
            AgendaReuniaoPanel.Name = "AgendaReuniaoPanel";
            AgendaReuniaoPanel.Enabled = Publicas._usuario.Desenvolvedor;

            DivisoriaAgendaReuniaoImagem = new PictureBox();
            DivisoriaAgendaReuniaoImagem.Size = new Size(0, 4);
            DivisoriaAgendaReuniaoImagem.Dock = DockStyle.Bottom;
            DivisoriaAgendaReuniaoImagem.BackColor = _corFundoDivisao;

            AgendaReuniaoLabel = new Label();
            AgendaReuniaoLabel.AutoSize = false;
            AgendaReuniaoLabel.Size = new Size(_widthLabelMenuSistema, 0);
            AgendaReuniaoLabel.Dock = DockStyle.Fill;
            AgendaReuniaoLabel.Text = "Agenda";
            AgendaReuniaoLabel.Font = CorFontepadraoLabel.Font;
            AgendaReuniaoLabel.ForeColor = Color.WhiteSmoke;
            AgendaReuniaoLabel.TextAlign = ContentAlignment.MiddleRight;
            AgendaReuniaoLabel.MouseHover += new EventHandler(this.SistemasTIPanel_MouseHover);
            AgendaReuniaoLabel.Click += new System.EventHandler(this.AgendaReuniaoPanel_Click);
            AgendaReuniaoLabel.Name = "AgendaReuniaoLabel";

            FavoritoAgendaReuniaoImagem = new PictureBox();
            FavoritoAgendaReuniaoImagem.Size = new Size(10, 10);
            FavoritoAgendaReuniaoImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoAgendaReuniaoImagem.Name = AgendaReuniaoLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoAgendaReuniaoImagem.Name))
            {
                FavoritoAgendaReuniaoImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoAgendaReuniaoImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoAgendaReuniaoImagem.Top = 35;
            FavoritoAgendaReuniaoImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoAgendaReuniaoImagem.Tag = AgendaReuniaoLabel.Text;
            FavoritoAgendaReuniaoImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoAgendaReuniaoImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoAgendaReuniaoImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoAgendaReuniaoImagem.AccessibleName = "TI";

            AgendaReuniaoPanel.Controls.Add(AgendaReuniaoLabel);
            AgendaReuniaoPanel.Controls.Add(DivisoriaAgendaReuniaoImagem);
            AgendaReuniaoPanel.Controls.Add(FavoritoAgendaReuniaoImagem);
            FavoritoAgendaReuniaoImagem.BringToFront();

            SubMenuCadastroTIPanel.Controls.Add(AgendaReuniaoPanel);
            #endregion

            #region Ramais
            MenuRamaisPanel = new Panel();
            MenuRamaisPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            MenuRamaisPanel.Dock = DockStyle.Top;
            MenuRamaisPanel.BackColor = _corFundoMenu;
            MenuRamaisPanel.Name = "MenuRamaisPanel";
            MenuRamaisPanel.Enabled = Publicas._usuario.Administrador || Publicas._usuario.AcessaRamais;

            DivisoriaMenuRamaisImagem = new PictureBox();
            DivisoriaMenuRamaisImagem.Size = new Size(0, 4);
            DivisoriaMenuRamaisImagem.Dock = DockStyle.Bottom;
            DivisoriaMenuRamaisImagem.BackColor = _corFundoDivisao;

            MenuRamaisLabel = new Label();
            MenuRamaisLabel.AutoSize = false;
            MenuRamaisLabel.Size = new Size(_widthLabelMenuSistema, 0);
            MenuRamaisLabel.Dock = DockStyle.Fill;
            MenuRamaisLabel.Text = "Ramais";
            MenuRamaisLabel.Font = CorFontepadraoLabel.Font;
            MenuRamaisLabel.ForeColor = Color.WhiteSmoke;
            MenuRamaisLabel.TextAlign = ContentAlignment.MiddleRight;
            MenuRamaisLabel.MouseHover += new EventHandler(this.SistemasTIPanel_MouseHover);
            MenuRamaisLabel.Click += new System.EventHandler(this.MenuRamaisLabel_Click);
            MenuRamaisLabel.Name = "MenuRamaisLabel";

            FavoritoMenuRamaisImagem = new PictureBox();
            FavoritoMenuRamaisImagem.Size = new Size(10, 10);
            FavoritoMenuRamaisImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoMenuRamaisImagem.Name = MenuRamaisLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoMenuRamaisImagem.Name))
            {
                FavoritoMenuRamaisImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoMenuRamaisImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoMenuRamaisImagem.Top = 35;
            FavoritoMenuRamaisImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoMenuRamaisImagem.Tag = MenuRamaisLabel.Text;
            FavoritoMenuRamaisImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoMenuRamaisImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoMenuRamaisImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoMenuRamaisImagem.AccessibleName = "TI";

            MenuRamaisPanel.Controls.Add(MenuRamaisLabel);
            MenuRamaisPanel.Controls.Add(DivisoriaMenuRamaisImagem);
            MenuRamaisPanel.Controls.Add(FavoritoMenuRamaisImagem);
            FavoritoMenuRamaisImagem.BringToFront();

            SubMenuCadastroTIPanel.Controls.Add(MenuRamaisPanel);
            #endregion

            #region Notificacoes
            NotificacoesPanel = new Panel();
            NotificacoesPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            NotificacoesPanel.Dock = DockStyle.Top;
            NotificacoesPanel.BackColor = _corFundoMenu;
            NotificacoesPanel.Name = "NotificacoesPanel";
            NotificacoesPanel.Enabled = Publicas._usuario.Administrador;

            DivisoriaNotificacoesImagem = new PictureBox();
            DivisoriaNotificacoesImagem.Size = new Size(0, 4);
            DivisoriaNotificacoesImagem.Dock = DockStyle.Bottom;
            DivisoriaNotificacoesImagem.BackColor = _corFundoDivisao;

            NotificacoesLabel = new Label();
            NotificacoesLabel.AutoSize = false;
            NotificacoesLabel.Size = new Size(_widthLabelMenuSistema, 0);
            NotificacoesLabel.Dock = DockStyle.Fill;
            NotificacoesLabel.Text = "Notificações";
            NotificacoesLabel.Font = CorFontepadraoLabel.Font;
            NotificacoesLabel.ForeColor = Color.WhiteSmoke;
            NotificacoesLabel.TextAlign = ContentAlignment.MiddleRight;
            NotificacoesLabel.MouseHover += new EventHandler(this.SistemasTIPanel_MouseHover);
            NotificacoesLabel.Click += new System.EventHandler(this.NotificacoesPanel_Click);
            NotificacoesLabel.Name = "NotificacoesLabel";

            FavoritoNotificacoesImagem = new PictureBox();
            FavoritoNotificacoesImagem.Size = new Size(10, 10);
            FavoritoNotificacoesImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoNotificacoesImagem.Name = NotificacoesLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoNotificacoesImagem.Name))
            {
                FavoritoNotificacoesImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoNotificacoesImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoNotificacoesImagem.Top = 35;
            FavoritoNotificacoesImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoNotificacoesImagem.Tag = NotificacoesLabel.Text;
            FavoritoNotificacoesImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoNotificacoesImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoNotificacoesImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoNotificacoesImagem.AccessibleName = "TI";

            NotificacoesPanel.Controls.Add(NotificacoesLabel);
            NotificacoesPanel.Controls.Add(DivisoriaNotificacoesImagem);
            NotificacoesPanel.Controls.Add(FavoritoNotificacoesImagem);
            FavoritoNotificacoesImagem.BringToFront();

            SubMenuCadastroTIPanel.Controls.Add(NotificacoesPanel);
            #endregion

            #region SalaReuniao
            SalaReuniaoPanel = new Panel();
            SalaReuniaoPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            SalaReuniaoPanel.Dock = DockStyle.Top;
            SalaReuniaoPanel.BackColor = _corFundoMenu;
            SalaReuniaoPanel.Name = "SalaReuniaoPanel";
            SalaReuniaoPanel.Enabled = Publicas._usuario.Administrador;

            DivisoriaSalaReuniaoImagem = new PictureBox();
            DivisoriaSalaReuniaoImagem.Size = new Size(0, 4);
            DivisoriaSalaReuniaoImagem.Dock = DockStyle.Bottom;
            DivisoriaSalaReuniaoImagem.BackColor = _corFundoDivisao;

            SalaReuniaoLabel = new Label();
            SalaReuniaoLabel.AutoSize = false;
            SalaReuniaoLabel.Size = new Size(_widthLabelMenuSistema, 0);
            SalaReuniaoLabel.Dock = DockStyle.Fill;
            SalaReuniaoLabel.Text = "Sala de Reunião";
            SalaReuniaoLabel.Font = CorFontepadraoLabel.Font;
            SalaReuniaoLabel.ForeColor = Color.WhiteSmoke;
            SalaReuniaoLabel.TextAlign = ContentAlignment.MiddleRight;
            SalaReuniaoLabel.MouseHover += new EventHandler(this.SistemasTIPanel_MouseHover);
            SalaReuniaoLabel.Click += new System.EventHandler(this.SalaReuniaoPanel_Click);
            SalaReuniaoLabel.Name = "SalaReuniaoLabel";

            FavoritoSalaReuniaoImagem = new PictureBox();
            FavoritoSalaReuniaoImagem.Size = new Size(10, 10);
            FavoritoSalaReuniaoImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoSalaReuniaoImagem.Name = SalaReuniaoLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoSalaReuniaoImagem.Name))
            {
                FavoritoSalaReuniaoImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoSalaReuniaoImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoSalaReuniaoImagem.Top = 35;
            FavoritoSalaReuniaoImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoSalaReuniaoImagem.Tag = SalaReuniaoLabel.Text;
            FavoritoSalaReuniaoImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoSalaReuniaoImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoSalaReuniaoImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoSalaReuniaoImagem.AccessibleName = "TI";

            SalaReuniaoPanel.Controls.Add(SalaReuniaoLabel);
            SalaReuniaoPanel.Controls.Add(DivisoriaSalaReuniaoImagem);
            SalaReuniaoPanel.Controls.Add(FavoritoSalaReuniaoImagem);
            FavoritoSalaReuniaoImagem.BringToFront();

            SubMenuCadastroTIPanel.Controls.Add(SalaReuniaoPanel);
            #endregion

            #region Empresas
            EmpresasPanel = new Panel();
            EmpresasPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            EmpresasPanel.Dock = DockStyle.Top;
            EmpresasPanel.BackColor = _corFundoMenu;
            EmpresasPanel.Name = "EmpresasPanel";
            EmpresasPanel.Enabled = Publicas._usuario.Administrador;

            DivisoriaEmpresasImagem = new PictureBox();
            DivisoriaEmpresasImagem.Size = new Size(0, 4);
            DivisoriaEmpresasImagem.Dock = DockStyle.Bottom;
            DivisoriaEmpresasImagem.BackColor = _corFundoDivisao;

            EmpresasLabel = new Label();
            EmpresasLabel.AutoSize = false;
            EmpresasLabel.Size = new Size(_widthLabelMenuSistema, 0);
            EmpresasLabel.Dock = DockStyle.Fill;
            EmpresasLabel.Text = "Empresas";
            EmpresasLabel.Font = CorFontepadraoLabel.Font;
            EmpresasLabel.ForeColor = Color.WhiteSmoke;
            EmpresasLabel.TextAlign = ContentAlignment.MiddleRight;
            EmpresasLabel.MouseHover += new EventHandler(this.SistemasTIPanel_MouseHover);
            EmpresasLabel.Click += new System.EventHandler(this.EmpresasPanel_Click);
            EmpresasLabel.Name = "EmpresasLabel";

            FavoritoEmpresasImagem = new PictureBox();
            FavoritoEmpresasImagem.Size = new Size(10, 10);
            FavoritoEmpresasImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoEmpresasImagem.Name = EmpresasLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoEmpresasImagem.Name))
            {
                FavoritoEmpresasImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoEmpresasImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoEmpresasImagem.Top = 35;
            FavoritoEmpresasImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoEmpresasImagem.Tag = EmpresasLabel.Text;
            FavoritoEmpresasImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoEmpresasImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoEmpresasImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoEmpresasImagem.AccessibleName = "TI";

            EmpresasPanel.Controls.Add(EmpresasLabel);
            EmpresasPanel.Controls.Add(DivisoriaEmpresasImagem);
            EmpresasPanel.Controls.Add(FavoritoEmpresasImagem);
            FavoritoEmpresasImagem.BringToFront();
            SubMenuCadastroTIPanel.Controls.Add(EmpresasPanel);
            #endregion

            #region Parametros
            ParametrosPanel = new Panel();
            ParametrosPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            ParametrosPanel.Dock = DockStyle.Top;
            ParametrosPanel.BackColor = _corFundoMenu;
            ParametrosPanel.Name = "ParametrosPanel";
            ParametrosPanel.Enabled = Publicas._usuario.Administrador;

            DivisoriaParametrosImagem = new PictureBox();
            DivisoriaParametrosImagem.Size = new Size(0, 4);
            DivisoriaParametrosImagem.Dock = DockStyle.Bottom;
            DivisoriaParametrosImagem.BackColor = _corFundoDivisao;

            ParametrosLabel = new Label();
            ParametrosLabel.AutoSize = false;
            ParametrosLabel.Size = new Size(_widthLabelMenuSistema, 0);
            ParametrosLabel.Dock = DockStyle.Fill;
            ParametrosLabel.Text = "Parâmetros";
            ParametrosLabel.Font = CorFontepadraoLabel.Font;
            ParametrosLabel.ForeColor = Color.WhiteSmoke;
            ParametrosLabel.TextAlign = ContentAlignment.MiddleRight;
            ParametrosLabel.MouseHover += new EventHandler(this.SistemasTIPanel_MouseHover);
            ParametrosLabel.Click += new System.EventHandler(this.ParametrosPanel_Click);
            ParametrosLabel.Name = "ParametrosLabel";

            FavoritoParametrosImagem = new PictureBox();
            FavoritoParametrosImagem.Size = new Size(10, 10);
            FavoritoParametrosImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoParametrosImagem.Name = ParametrosLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoParametrosImagem.Name))
            {
                FavoritoParametrosImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoParametrosImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoParametrosImagem.Top = 35;
            FavoritoParametrosImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoParametrosImagem.Tag = ParametrosLabel.Text + " TI";
            FavoritoParametrosImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoParametrosImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoParametrosImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoParametrosImagem.AccessibleName = "TI";

            ParametrosPanel.Controls.Add(ParametrosLabel);
            ParametrosPanel.Controls.Add(DivisoriaParametrosImagem);
            ParametrosPanel.Controls.Add(FavoritoParametrosImagem);
            FavoritoParametrosImagem.BringToFront();

            SubMenuCadastroTIPanel.Controls.Add(ParametrosPanel);
            #endregion

            #region Usuarios
            UsuariosPanel = new Panel();
            UsuariosPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            UsuariosPanel.Dock = DockStyle.Top;
            UsuariosPanel.BackColor = _corFundoMenu;
            UsuariosPanel.Name = "UsuariosPanel";
            UsuariosPanel.Enabled = Publicas._usuario.Administrador;

            DivisoriaUsuariosImagem = new PictureBox();
            DivisoriaUsuariosImagem.Size = new Size(0, 4);
            DivisoriaUsuariosImagem.Dock = DockStyle.Bottom;
            DivisoriaUsuariosImagem.BackColor = _corFundoDivisao;

            UsuariosLabel = new Label();
            UsuariosLabel.AutoSize = false;
            UsuariosLabel.Size = new Size(_widthLabelMenuSistema, 0);
            UsuariosLabel.Dock = DockStyle.Fill;
            UsuariosLabel.Text = "Usuários";
            UsuariosLabel.Font = CorFontepadraoLabel.Font;
            UsuariosLabel.ForeColor = Color.WhiteSmoke;
            UsuariosLabel.TextAlign = ContentAlignment.MiddleRight;
            UsuariosLabel.MouseHover += new EventHandler(this.SistemasTIPanel_MouseHover);
            UsuariosLabel.Click += new System.EventHandler(this.UsuariosPanel_Click);
            UsuariosLabel.Name = "UsuariosLabel";

            FavoritoUsuariosImagem = new PictureBox();
            FavoritoUsuariosImagem.Size = new Size(10, 10);
            FavoritoUsuariosImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoUsuariosImagem.Name = UsuariosLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoUsuariosImagem.Name))
            {
                FavoritoUsuariosImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoUsuariosImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoUsuariosImagem.Top = 35;
            FavoritoUsuariosImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoUsuariosImagem.Tag = UsuariosLabel.Text;
            FavoritoUsuariosImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoUsuariosImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoUsuariosImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoUsuariosImagem.AccessibleName = "TI";

            UsuariosPanel.Controls.Add(UsuariosLabel);
            UsuariosPanel.Controls.Add(DivisoriaUsuariosImagem);
            UsuariosPanel.Controls.Add(FavoritoUsuariosImagem);
            FavoritoUsuariosImagem.BringToFront();

            SubMenuCadastroTIPanel.Controls.Add(UsuariosPanel);
            #endregion

            #region SistemasTI 
            SistemasTIPanel = new Panel();
            SistemasTIPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            SistemasTIPanel.Dock = DockStyle.Top;
            SistemasTIPanel.BackColor = _corFundoMenu;
            SistemasTIPanel.Name = "SistemasTIPanel";
            SistemasTIPanel.Enabled = Publicas._usuario.Administrador;

            DivisoriaSistemasTIImagem = new PictureBox();
            DivisoriaSistemasTIImagem.Size = new Size(0, 4);
            DivisoriaSistemasTIImagem.Dock = DockStyle.Bottom;
            DivisoriaSistemasTIImagem.BackColor = _corFundoDivisao;

            Divisoria2SistemasTIImagem = new PictureBox();
            Divisoria2SistemasTIImagem.Size = new Size(1, 2);
            Divisoria2SistemasTIImagem.Dock = DockStyle.Right;
            Divisoria2SistemasTIImagem.BackColor = _corFundoDivisao; //System.Drawing.Color.FromArgb(2, 91, 149);

            SistemasTISetaLabel = new Label();
            SistemasTISetaLabel.AutoSize = false;
            SistemasTISetaLabel.Size = new Size(20, 59);
            SistemasTISetaLabel.Dock = DockStyle.Right;
            SistemasTISetaLabel.Text = "6";
            SistemasTISetaLabel.Font = new Font("Webdings", (float)12);
            SistemasTISetaLabel.TextAlign = ContentAlignment.MiddleCenter;
            SistemasTISetaLabel.Click += new System.EventHandler(this.SistemasTISeta_Click);
            SistemasTISetaLabel.MouseHover += new EventHandler(this.SistemasTISetaPanel_MouseHover);
            SistemasTISetaLabel.Name = "SistemasTISetaLabel";
            SistemasTISetaLabel.ForeColor = Color.WhiteSmoke;

            SistemasTILabel = new Label();
            SistemasTILabel.AutoSize = false;
            SistemasTILabel.Size = new Size(_widthLabelMenuSistema, 0);
            SistemasTILabel.Dock = DockStyle.Fill;
            SistemasTILabel.Text = "Sistemas";
            SistemasTILabel.Font = CorFontepadraoLabel.Font;
            SistemasTILabel.ForeColor = Color.WhiteSmoke;
            SistemasTILabel.TextAlign = ContentAlignment.MiddleRight;
            SistemasTILabel.MouseHover += new EventHandler(this.SistemasTIPanel_MouseHover);
            SistemasTILabel.Click += new System.EventHandler(this.SistemasTISeta_Click);
            SistemasTILabel.Name = "SistemasTILabel";

            SistemasTIPanel.Controls.Add(SistemasTILabel);
            SistemasTIPanel.Controls.Add(Divisoria2SistemasTIImagem);
            SistemasTIPanel.Controls.Add(SistemasTISetaLabel);
            SistemasTIPanel.Controls.Add(DivisoriaSistemasTIImagem);

            SubMenuCadastroTIPanel.Controls.Add(SistemasTIPanel);
            #endregion            
        }
        
        private void FechaSubMenuCadastroTIPanel()
        {
            FechaSubMenuSistemasTIPanel();
            FechaSubMenuPowerBIPanel();

            if (SubMenuCadastroTIPanel != null)
            {
                SubMenuCadastroTIPanel.Visible = false;
                this.Controls.Remove(SubMenuCadastroTIPanel);
                SubMenuCadastroTIPanel.Dispose();
                SubMenuCadastroTIPanel = null;
            }
        }

        private void MudaSelecaoDeCoresSubMenuCadastroTI()
        {
            UsuariosLabel.Font = new Font(UsuariosLabel.Font, UsuariosLabel.Font.Style & ~FontStyle.Bold);
            EmpresasLabel.Font = new Font(EmpresasLabel.Font, EmpresasLabel.Font.Style & ~FontStyle.Bold);
            ParametrosLabel.Font = new Font(ParametrosLabel.Font, ParametrosLabel.Font.Style & ~FontStyle.Bold);
            SalaReuniaoLabel.Font = new Font(SalaReuniaoLabel.Font, SalaReuniaoLabel.Font.Style & ~FontStyle.Bold);
            NotificacoesLabel.Font = new Font(NotificacoesLabel.Font, NotificacoesLabel.Font.Style & ~FontStyle.Bold);
            SistemasTILabel.Font = new Font(SistemasTILabel.Font, SistemasTILabel.Font.Style & ~FontStyle.Bold);
            SistemasTISetaLabel.Font = new Font(SistemasTISetaLabel.Font, SistemasTISetaLabel.Font.Style & ~FontStyle.Bold);
            MenuRamaisLabel.Font = new Font(NotificacoesLabel.Font, NotificacoesLabel.Font.Style & ~FontStyle.Bold);
            AgendaReuniaoLabel.Font = new Font(AgendaReuniaoLabel.Font, AgendaReuniaoLabel.Font.Style & ~FontStyle.Bold);

            UsuariosLabel.BackColor = _corFundoMenu;
            EmpresasLabel.BackColor = UsuariosLabel.BackColor;
            ParametrosLabel.BackColor = UsuariosLabel.BackColor;
            SalaReuniaoLabel.BackColor = UsuariosLabel.BackColor;
            NotificacoesLabel.BackColor = UsuariosLabel.BackColor;
            MenuRamaisLabel.BackColor = UsuariosLabel.BackColor;
            SistemasTILabel.BackColor = UsuariosLabel.BackColor;
            SistemasTISetaLabel.BackColor = UsuariosLabel.BackColor;
            AgendaReuniaoLabel.BackColor = UsuariosLabel.BackColor;

            FavoritoUsuariosImagem.BackColor = UsuariosLabel.BackColor;
            FavoritoEmpresasImagem.BackColor = UsuariosLabel.BackColor;
            FavoritoParametrosImagem.BackColor = UsuariosLabel.BackColor;
            FavoritoSalaReuniaoImagem.BackColor = UsuariosLabel.BackColor;
            FavoritoNotificacoesImagem.BackColor = UsuariosLabel.BackColor;
            FavoritoMenuRamaisImagem.BackColor = UsuariosLabel.BackColor;
            FavoritoAgendaReuniaoImagem.BackColor = UsuariosLabel.BackColor;

            UsuariosLabel.ForeColor = Color.WhiteSmoke;
            EmpresasLabel.ForeColor = Color.WhiteSmoke;
            ParametrosLabel.ForeColor = Color.WhiteSmoke;
            SalaReuniaoLabel.ForeColor = Color.WhiteSmoke;
            NotificacoesLabel.ForeColor = Color.WhiteSmoke;
            MenuRamaisLabel.ForeColor = Color.WhiteSmoke;
            SistemasTILabel.ForeColor = Color.WhiteSmoke;
            SistemasTISetaLabel.ForeColor = Color.WhiteSmoke;
            AgendaReuniaoLabel.ForeColor = Color.WhiteSmoke;

            SistemasTISetaLabel.Text = "6";
        }

        private void SistemasTIPanel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubMenuCadastroTI();
            FechaSubMenuAvaliacaoDesempenho();
            FechaSubMenuBiblioteca();
            FechaSubMenuCurriculo();
            FechaSubMenuCorridas();
            FechaSubMenuCadastroJuridico();
            FechaSubMenuControladoria();
            FechaSubMenuChamadosPanel();
            FechaSubMenuSAC();
            FechaSubMenuSistemasTIPanel();

            if (((Control)sender).Name.Contains("Usuario"))
            {
                UsuariosLabel.Font = new Font(UsuariosLabel.Font, FontStyle.Bold);
                UsuariosLabel.ForeColor = Publicas._fonteBotaoFocado;
                UsuariosLabel.BackColor = _corMenuSelecionado;
                FavoritoUsuariosImagem.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Empresas"))
            {
                EmpresasLabel.Font = new Font(EmpresasLabel.Font, FontStyle.Bold);
                EmpresasLabel.ForeColor = Publicas._fonteBotaoFocado;
                EmpresasLabel.BackColor = _corMenuSelecionado;
                FavoritoEmpresasImagem.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Parametros"))
            {
                ParametrosLabel.Font = new Font(ParametrosLabel.Font, FontStyle.Bold);
                ParametrosLabel.ForeColor = Publicas._fonteBotaoFocado;
                ParametrosLabel.BackColor = _corMenuSelecionado;
                FavoritoParametrosImagem.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("SalaReuniao"))
            {
                SalaReuniaoLabel.Font = new Font(SalaReuniaoLabel.Font, FontStyle.Bold);
                SalaReuniaoLabel.ForeColor = Publicas._fonteBotaoFocado;
                SalaReuniaoLabel.BackColor = _corMenuSelecionado;
                FavoritoSalaReuniaoImagem.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("AgendaReuniao"))
            {
                AgendaReuniaoLabel.Font = new Font(AgendaReuniaoLabel.Font, FontStyle.Bold);
                AgendaReuniaoLabel.ForeColor = Publicas._fonteBotaoFocado;
                AgendaReuniaoLabel.BackColor = _corMenuSelecionado;
                FavoritoAgendaReuniaoImagem.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Sistemas"))
            {
                SistemasTILabel.Font = new Font(SistemasTILabel.Font, FontStyle.Bold);
                SistemasTILabel.ForeColor = Publicas._fonteBotaoFocado;
                SistemasTILabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Notificacoes"))
            {
                NotificacoesLabel.Font = new Font(NotificacoesLabel.Font, FontStyle.Bold);
                NotificacoesLabel.ForeColor = Publicas._fonteBotaoFocado;
                NotificacoesLabel.BackColor = _corMenuSelecionado;
                FavoritoNotificacoesImagem.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Ramais"))
            {
                MenuRamaisLabel.Font = new Font(MenuRamaisLabel.Font, FontStyle.Bold);
                MenuRamaisLabel.ForeColor = Publicas._fonteBotaoFocado;
                MenuRamaisLabel.BackColor = _corMenuSelecionado;
                FavoritoMenuRamaisImagem.BackColor = _corMenuSelecionado;
                return;
            }
        }

        private void SistemasTISetaPanel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubMenuCadastroTI();
            FechaSubMenuAvaliacaoDesempenho();
            FechaSubMenuBiblioteca();
            FechaSubMenuCurriculo();
            FechaSubMenuCorridas();
            FechaSubMenuCadastroJuridico();
            FechaSubMenuControladoria();
            FechaSubMenuChamadosPanel();
            FechaSubMenuSAC();
            FechaSubMenuSistemasTIPanel();

            if (((Control)sender).Name.Contains("Usuario"))
            {
                UsuariosLabel.Font = new Font(UsuariosLabel.Font, FontStyle.Bold);
                UsuariosLabel.ForeColor = Publicas._fonteBotaoFocado;
                UsuariosLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Empresas"))
            {
                EmpresasLabel.Font = new Font(EmpresasLabel.Font, FontStyle.Bold);
                EmpresasLabel.ForeColor = Publicas._fonteBotaoFocado;
                EmpresasLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Parametros"))
            {
                ParametrosLabel.Font = new Font(ParametrosLabel.Font, FontStyle.Bold);
                ParametrosLabel.ForeColor = Publicas._fonteBotaoFocado;
                ParametrosLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("SalaReuniao"))
            {
                SalaReuniaoLabel.Font = new Font(SalaReuniaoLabel.Font, FontStyle.Bold);
                SalaReuniaoLabel.ForeColor = Publicas._fonteBotaoFocado;
                SalaReuniaoLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("AgendaReuniao"))
            {
                AgendaReuniaoLabel.Font = new Font(AgendaReuniaoLabel.Font, FontStyle.Bold);
                AgendaReuniaoLabel.ForeColor = Publicas._fonteBotaoFocado;
                AgendaReuniaoLabel.BackColor = _corMenuSelecionado;
                FavoritoAgendaReuniaoImagem.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Sistemas"))
            {
                SistemasTISetaLabel.Font = new Font(SistemasTISetaLabel.Font, FontStyle.Bold);
                SistemasTISetaLabel.ForeColor = Publicas._fonteBotaoFocado;
                SistemasTISetaLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Notificacoes"))
            {
                NotificacoesLabel.Font = new Font(NotificacoesLabel.Font, FontStyle.Bold);
                NotificacoesLabel.ForeColor = Publicas._fonteBotaoFocado;
                NotificacoesLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Ramais"))
            {
                MenuRamaisLabel.Font = new Font(MenuRamaisLabel.Font, FontStyle.Bold);
                MenuRamaisLabel.ForeColor = Publicas._fonteBotaoFocado;
                MenuRamaisLabel.BackColor = _corMenuSelecionado;
                return;
            }
        }

        private void UsuariosPanel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaTI;
            new Usuarios().ShowDialog();
            NomePadrao();
            //AtivaTimer(sender, e);
        }

        private void ParametrosPanel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaTI;
            new Cadastros.Parametros().ShowDialog();
            NomePadrao();
            //AtivaTimer(sender, e);
        }

        private void EmpresasPanel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaTI;
            new Cadastros.Empresas().ShowDialog();
            NomePadrao();
            //AtivaTimer(sender, e);
        }

        private void SalaReuniaoPanel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaTI;
            new Cadastros.SalaDeReuniao().ShowDialog();
            NomePadrao();
            //AtivaTimer(sender, e);
        }

        private void NotificacoesPanel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaTI;
            new Notificacoes.Cadastro().ShowDialog();
            NomePadrao();
            //AtivaTimer(sender, e);
        }

        private void MenuRamaisLabel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaTI;
            new Cadastros.Ramais().ShowDialog();
            NomePadrao();
            //AtivaTimer(sender, e);
        }


        private void AgendaReuniaoPanel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaTI;
            new Cadastros.Agenda().ShowDialog();
            NomePadrao();
        }

        #region Sistemas
        private void SistemasTISeta_Click(object sender, EventArgs e)
        {
            // abrir o SubMenu do RecursosHumanos
            SistemasTISetaLabel.Text = "3";

            if (!Publicas._TemaBlack)
            {
                SistemasTISetaLabel.ForeColor = Publicas._bordaEntrada;
                SistemasTILabel.ForeColor = Publicas._bordaEntrada;
            }
            else
            {
                SistemasTISetaLabel.ForeColor = Publicas._fonteMenuSelecionado;
                SistemasTILabel.ForeColor = Publicas._fonteMenuSelecionado;
            }
            SistemasTISetaLabel.BackColor = _corFundoMenu;

            if (SubMenuSistemasTIPanel != null)
            {
                FechaSubMenuCadastroTIPanel();
                return;
            }

            #region Cria estrutura 

            // Menu de fundo (onde agrupa os demais itens)
            SubMenuSistemasTIPanel = new Panel();
            SubMenuSistemasTIPanel.Size = new Size(155, _heidthMenuSistema * 3);
            SubMenuSistemasTIPanel.Location = new Point(MenuSistemaPanel.Width + MenuTIPanel.Width + SubMenuCadastroTIPanel.Width + 6, AcessoAoMenuPanel.Height);
            SubMenuSistemasTIPanel.BackColor = _corFundoDivisao;
            this.Controls.Add(SubMenuSistemasTIPanel);
            SubMenuSistemasTIPanel.BringToFront();
            SubMenuSistemasTIPanel.Visible = true;
            #endregion

            #region CategoriasTI
            CategoriasTIPanel = new Panel();
            CategoriasTIPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            CategoriasTIPanel.Dock = DockStyle.Top;
            CategoriasTIPanel.BackColor = _corFundoMenu;
            CategoriasTIPanel.Name = "CategoriasTIPanel";

            DivisoriaCategoriasTIImagem = new PictureBox();
            DivisoriaCategoriasTIImagem.Size = new Size(0, 4);
            DivisoriaCategoriasTIImagem.Dock = DockStyle.Bottom;
            DivisoriaCategoriasTIImagem.BackColor = _corFundoDivisao;

            CategoriasTILabel = new Label();
            CategoriasTILabel.AutoSize = false;
            CategoriasTILabel.Size = new Size(_widthLabelMenuSistema, 0);
            CategoriasTILabel.Dock = DockStyle.Fill;
            CategoriasTILabel.Text = "Categorias";
            CategoriasTILabel.Font = CorFontepadraoLabel.Font;
            CategoriasTILabel.ForeColor = Color.WhiteSmoke;
            CategoriasTILabel.TextAlign = ContentAlignment.MiddleRight;
            CategoriasTILabel.MouseHover += new EventHandler(this.CategoriasTIPanel_MouseHover);
            CategoriasTILabel.Click += new System.EventHandler(this.CategoriasTIPanel_Click);
            CategoriasTILabel.Name = "CategoriasTILabel";

            FavoritoCategoriasTIImagem = new PictureBox();
            FavoritoCategoriasTIImagem.Size = new Size(10, 10);
            FavoritoCategoriasTIImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoCategoriasTIImagem.Name = CategoriasTILabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoCategoriasTIImagem.Name))
            {
                FavoritoCategoriasTIImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoCategoriasTIImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoCategoriasTIImagem.Top = 35;
            FavoritoCategoriasTIImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoCategoriasTIImagem.Tag = CategoriasTILabel.Text;
            FavoritoCategoriasTIImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoCategoriasTIImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoCategoriasTIImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoCategoriasTIImagem.AccessibleName = "TI";

            CategoriasTIPanel.Controls.Add(CategoriasTILabel);
            CategoriasTIPanel.Controls.Add(DivisoriaCategoriasTIImagem);
            CategoriasTIPanel.Controls.Add(FavoritoCategoriasTIImagem);
            FavoritoCategoriasTIImagem.BringToFront();

            SubMenuSistemasTIPanel.Controls.Add(CategoriasTIPanel);
            #endregion

            #region ModulosTI
            ModulosTIPanel = new Panel();
            ModulosTIPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            ModulosTIPanel.Dock = DockStyle.Top;
            ModulosTIPanel.BackColor = _corFundoMenu;
            ModulosTIPanel.Name = "ModulosTIPanel";

            DivisoriaModulosTIImagem = new PictureBox();
            DivisoriaModulosTIImagem.Size = new Size(0, 4);
            DivisoriaModulosTIImagem.Dock = DockStyle.Bottom;
            DivisoriaModulosTIImagem.BackColor = _corFundoDivisao;

            ModulosTILabel = new Label();
            ModulosTILabel.AutoSize = false;
            ModulosTILabel.Size = new Size(_widthLabelMenuSistema, 0);
            ModulosTILabel.Dock = DockStyle.Fill;
            ModulosTILabel.Text = "Módulos";
            ModulosTILabel.Font = CorFontepadraoLabel.Font;
            ModulosTILabel.ForeColor = Color.WhiteSmoke;
            ModulosTILabel.TextAlign = ContentAlignment.MiddleRight;
            ModulosTILabel.MouseHover += new EventHandler(this.CategoriasTIPanel_MouseHover);
            ModulosTILabel.Click += new System.EventHandler(this.ModulosTIPanel_Click);
            ModulosTILabel.Name = "ModulosTILabel";

            FavoritoModulosTIImagem = new PictureBox();
            FavoritoModulosTIImagem.Size = new Size(10, 10);
            FavoritoModulosTIImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoModulosTIImagem.Name = ModulosTILabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoModulosTIImagem.Name))
            {
                FavoritoModulosTIImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoModulosTIImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoModulosTIImagem.Top = 35;
            FavoritoModulosTIImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoModulosTIImagem.Tag = ModulosTILabel.Text;
            FavoritoModulosTIImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoModulosTIImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoModulosTIImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoModulosTIImagem.AccessibleName = "TI";

            ModulosTIPanel.Controls.Add(ModulosTILabel);
            ModulosTIPanel.Controls.Add(DivisoriaModulosTIImagem);
            ModulosTIPanel.Controls.Add(FavoritoModulosTIImagem);
            FavoritoModulosTIImagem.BringToFront();
            SubMenuSistemasTIPanel.Controls.Add(ModulosTIPanel);
            #endregion

            #region TelasTI
            TelasTIPanel = new Panel();
            TelasTIPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            TelasTIPanel.Dock = DockStyle.Top;
            TelasTIPanel.BackColor = _corFundoMenu;
            TelasTIPanel.Name = "TelasTIPanel";

            DivisoriaTelasTIImagem = new PictureBox();
            DivisoriaTelasTIImagem.Size = new Size(0, 4);
            DivisoriaTelasTIImagem.Dock = DockStyle.Bottom;
            DivisoriaTelasTIImagem.BackColor = _corFundoDivisao;

            TelasTILabel = new Label();
            TelasTILabel.AutoSize = false;
            TelasTILabel.Size = new Size(_widthLabelMenuSistema, 0);
            TelasTILabel.Dock = DockStyle.Fill;
            TelasTILabel.Text = "Telas";
            TelasTILabel.Font = CorFontepadraoLabel.Font;
            TelasTILabel.ForeColor = Color.WhiteSmoke;
            TelasTILabel.TextAlign = ContentAlignment.MiddleRight;
            TelasTILabel.MouseHover += new EventHandler(this.CategoriasTIPanel_MouseHover);
            TelasTILabel.Click += new System.EventHandler(this.TelaTIPanel_Click);
            TelasTILabel.Name = "TelasTILabel";

            FavoritoTelasTIImagem = new PictureBox();
            FavoritoTelasTIImagem.Size = new Size(10, 10);
            FavoritoTelasTIImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoTelasTIImagem.Name = TelasTILabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoTelasTIImagem.Name))
            {
                FavoritoTelasTIImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoTelasTIImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoTelasTIImagem.Top = 35;
            FavoritoTelasTIImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoTelasTIImagem.Tag = TelasTILabel.Text;
            FavoritoTelasTIImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoTelasTIImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoTelasTIImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoTelasTIImagem.AccessibleName = "TI";

            TelasTIPanel.Controls.Add(TelasTILabel);
            TelasTIPanel.Controls.Add(DivisoriaTelasTIImagem);
            TelasTIPanel.Controls.Add(FavoritoTelasTIImagem);
            FavoritoTelasTIImagem.BringToFront();

            SubMenuSistemasTIPanel.Controls.Add(TelasTIPanel);
            #endregion
        }

        private void FechaSubMenuSistemasTIPanel()
        {

            if (SubMenuSistemasTIPanel != null)
            {
                SubMenuSistemasTIPanel.Visible = false;
                this.Controls.Remove(SubMenuSistemasTIPanel);
                SubMenuSistemasTIPanel.Dispose();
                SubMenuSistemasTIPanel = null;
            }
        }

        private void MudaSelecaoDeCoresSubMenuSistemasTI()
        {
            CategoriasTILabel.Font = new Font(CategoriasTILabel.Font, CategoriasTILabel.Font.Style & ~FontStyle.Bold);
            ModulosTILabel.Font = new Font(ModulosTILabel.Font, ModulosTILabel.Font.Style & ~FontStyle.Bold);
            TelasTILabel.Font = new Font(TelasTILabel.Font, TelasTILabel.Font.Style & ~FontStyle.Bold);

            CategoriasTILabel.BackColor = _corFundoMenu;
            ModulosTILabel.BackColor = CategoriasTILabel.BackColor;
            TelasTILabel.BackColor = CategoriasTILabel.BackColor;
            FavoritoCategoriasTIImagem.BackColor = CategoriasTILabel.BackColor;
            FavoritoModulosTIImagem.BackColor = CategoriasTILabel.BackColor;
            FavoritoTelasTIImagem.BackColor = CategoriasTILabel.BackColor;

            CategoriasTILabel.ForeColor = Color.WhiteSmoke;
            ModulosTILabel.ForeColor = Color.WhiteSmoke;
            TelasTILabel.ForeColor = Color.WhiteSmoke;
        }

        private void CategoriasTIPanel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubMenuSistemasTI();
            FechaSubMenuAvaliacaoDesempenho();
            FechaSubMenuBiblioteca();
            FechaSubMenuCurriculo();
            FechaSubMenuCorridas();
            FechaSubMenuCadastroJuridico();
            FechaSubMenuControladoria();
            FechaSubMenuChamadosPanel();
            FechaSubMenuSAC();

            if (((Control)sender).Name.Contains("Categorias"))
            {
                CategoriasTILabel.Font = new Font(CategoriasTILabel.Font, FontStyle.Bold);
                CategoriasTILabel.ForeColor = Publicas._fonteBotaoFocado;
                CategoriasTILabel.BackColor = _corMenuSelecionado;
                FavoritoCategoriasTIImagem.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Modulos"))
            {
                ModulosTILabel.Font = new Font(ModulosTILabel.Font, FontStyle.Bold);
                ModulosTILabel.ForeColor = Publicas._fonteBotaoFocado;
                ModulosTILabel.BackColor = _corMenuSelecionado;
                FavoritoModulosTIImagem.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Telas"))
            {
                TelasTILabel.Font = new Font(TelasTILabel.Font, FontStyle.Bold);
                TelasTILabel.ForeColor = Publicas._fonteBotaoFocado;
                TelasTILabel.BackColor = _corMenuSelecionado;
                FavoritoTelasTIImagem.BackColor = _corMenuSelecionado;
                return;
            }
        }

        private void CategoriasTIPanel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaTI;
            new Categorias().ShowDialog();
            NomePadrao();
            //AtivaTimer(sender, e);
        }

        private void ModulosTIPanel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaTI;
            new Modulos().ShowDialog();
            NomePadrao();
            //AtivaTimer(sender, e);
        }

        private void TelaTIPanel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaTI;
            new Cadastros.Telas().ShowDialog();
            NomePadrao();
            //AtivaTimer(sender, e);
        }

        #endregion

        #endregion

        #endregion

        #region BSC
        private void BSCSetaLabel_Click(object sender, EventArgs e)
        {
            // abrir o SubMenu do RecursosHumanos
            BSCSetaLabel.Text = "3";
            if (!Publicas._TemaBlack)
            {
                BSCSetaLabel.ForeColor = Publicas._bordaEntrada;
                BSCLabel.ForeColor = Publicas._bordaEntrada;
            }
            else
            {
                BSCSetaLabel.ForeColor = Publicas._fonteMenuSelecionado;
                BSCLabel.ForeColor = Publicas._fonteMenuSelecionado;
            }
            BSCSetaLabel.BackColor = _corFundoMenu;

            if (MenuBSCPanel != null)
            {
                FechaSubMenuBSC();
                return;
            }

            #region Cria estrutura 

            // Menu de fundo (onde agrupa os demais itens)
            MenuBSCPanel = new Panel();
            MenuBSCPanel.Size = new Size(155, _heidthMenuSistema);
            MenuBSCPanel.Location = new Point(MenuSistemaPanel.Width + 2, AcessoAoMenuPanel.Height);
            MenuBSCPanel.BackColor = _corFundoDivisao;
            this.Controls.Add(MenuBSCPanel);
            MenuBSCPanel.BringToFront();
            MenuBSCPanel.Visible = true;
            #endregion

            #region GestaoDeMetasPanel 
            GestaoDeMetasPanel = new Panel();
            GestaoDeMetasPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            GestaoDeMetasPanel.Dock = DockStyle.Top;
            GestaoDeMetasPanel.BackColor = _corFundoMenu;
            GestaoDeMetasPanel.Name = "GestaoDeMetasPanelPanel";

            DivisoriaGestaoDeMetasImagem = new PictureBox();
            DivisoriaGestaoDeMetasImagem.Size = new Size(0, 4);
            DivisoriaGestaoDeMetasImagem.Dock = DockStyle.Bottom;
            DivisoriaGestaoDeMetasImagem.BackColor = _corFundoDivisao;

            //Divisoria2GestaoDeMetasImagem = new PictureBox();
            //Divisoria2GestaoDeMetasImagem.Size = new Size(1, 2);
            //Divisoria2GestaoDeMetasImagem.Dock = DockStyle.Right;
            //Divisoria2GestaoDeMetasImagem.BackColor = _corFundoDivisao; //System.Drawing.Color.FromArgb(2, 91, 149);

            GestaoDeMetasLabel = new Label();
            GestaoDeMetasLabel.AutoSize = false;
            GestaoDeMetasLabel.Size = new Size(_widthLabelMenuSistema, 0);
            GestaoDeMetasLabel.Dock = DockStyle.Fill;
            GestaoDeMetasLabel.Text = "Indicadores de" + Environment.NewLine + "desempenho";
            GestaoDeMetasLabel.Font = CorFontepadraoLabel.Font;
            GestaoDeMetasLabel.ForeColor = Color.WhiteSmoke;
            GestaoDeMetasLabel.TextAlign = ContentAlignment.MiddleRight;
            GestaoDeMetasLabel.MouseHover += new EventHandler(this.GestaoDeMetasPanel_MouseHover);
            GestaoDeMetasLabel.Click += new System.EventHandler(this.GestaoDeMetasLabel_Click);
            GestaoDeMetasLabel.Name = "GestaoDeMetasPanelLabel";


            FavoritoGestaoDeMetasImagem = new PictureBox();
            FavoritoGestaoDeMetasImagem.Size = new Size(10, 10);
            FavoritoGestaoDeMetasImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoGestaoDeMetasImagem.Name = "GestaoDeMetasLabelPic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoGestaoDeMetasImagem.Name))
            {
                FavoritoGestaoDeMetasImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoGestaoDeMetasImagem.Left = 5;
            FavoritoGestaoDeMetasImagem.Top = 35;
            FavoritoGestaoDeMetasImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoGestaoDeMetasImagem.Tag = GestaoDeMetasLabel.Text;
            FavoritoGestaoDeMetasImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoGestaoDeMetasImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoGestaoDeMetasImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoGestaoDeMetasImagem.AccessibleName = "BSC";

            GestaoDeMetasPanel.Controls.Add(GestaoDeMetasLabel);
            GestaoDeMetasPanel.Controls.Add(DivisoriaGestaoDeMetasImagem);
            GestaoDeMetasPanel.Controls.Add(FavoritoGestaoDeMetasImagem);
            FavoritoGestaoDeMetasImagem.BringToFront();

            MenuBSCPanel.Controls.Add(GestaoDeMetasPanel);
            #endregion            
        }

        private void FechaSubMenuBSC()
        {
            FechaSubMenuCadastroTIPanel();

            if (MenuBSCPanel != null)
            {
                MenuBSCPanel.Visible = false;
                this.Controls.Remove(MenuBSCPanel);
                MenuBSCPanel.Dispose();
                MenuBSCPanel = null;
            }
        }

        private void MudaSelecaoDeCoresSubMenuBSC()
        {
            GestaoDeMetasLabel.Font = new Font(GestaoDeMetasLabel.Font, GestaoDeMetasLabel.Font.Style & ~FontStyle.Bold);

            GestaoDeMetasLabel.BackColor = _corFundoMenu;

            GestaoDeMetasLabel.ForeColor = Color.WhiteSmoke;

        }

        private void GestaoDeMetasPanel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubMenuBSC();
            FechaSubMenuAvaliacaoDesempenho();
            FechaSubMenuBiblioteca();
            FechaSubMenuCurriculo();
            FechaSubMenuCorridas();
            FechaSubMenuCadastroJuridico();
            FechaSubMenuControladoria();
            FechaSubMenuChamadosPanel();
            FechaSubMenuSAC();
            FechaSubMenuCadastroTIPanel();

            if (((Control)sender).Name.Contains("Gestao"))
            {
                GestaoDeMetasLabel.Font = new Font(GestaoDeMetasLabel.Font, FontStyle.Bold);
                GestaoDeMetasLabel.ForeColor = Publicas._fonteBotaoFocado;
                GestaoDeMetasLabel.BackColor = _corMenuSelecionado;
                return;
            }
        }

        private void GestaoDeMetasLabel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            GestaoEstrategica.GestaoDeMetas _tela = new GestaoEstrategica.GestaoDeMetas();

            _tela.Size = new Size(this.Width - 5, this.Height - (tituloPanel.Height + panel2.Height + 2));
            _tela.ShowDialog();

            NomePadrao();

        }
        #endregion

        #region Operacional
        private void OperacionalSetaLabel_Click(object sender, EventArgs e)
        {
            // abrir o SubMenu do RecursosHumanos
            OperacionalSetaLabel.Text = "3";
            if (!Publicas._TemaBlack)
            {
                OperacionalSetaLabel.ForeColor = Publicas._bordaEntrada;
                OperacionalLabel.ForeColor = Publicas._bordaEntrada;
            }
            else
            {
                OperacionalSetaLabel.ForeColor = Publicas._fonteMenuSelecionado;
                OperacionalLabel.ForeColor = Publicas._fonteMenuSelecionado;
            }
            OperacionalSetaLabel.BackColor = _corFundoMenu;

            if (MenuOperacionalPanel != null)
            {
                FechaSubMenuOperacional();
                return;
            }

            #region Cria estrutura 

            // Menu de fundo (onde agrupa os demais itens)
            MenuOperacionalPanel = new Panel();
            MenuOperacionalPanel.Size = new Size(155, _heidthMenuSistema * 4);
            MenuOperacionalPanel.Location = new Point(MenuSistemaPanel.Width + 2, AcessoAoMenuPanel.Height);
            MenuOperacionalPanel.BackColor = _corFundoDivisao;
            this.Controls.Add(MenuOperacionalPanel);
            MenuOperacionalPanel.BringToFront();
            MenuOperacionalPanel.Visible = true;
            #endregion

            #region Feriados
            FeriadosPanel = new Panel();
            FeriadosPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            FeriadosPanel.Dock = DockStyle.Top;
            FeriadosPanel.BackColor = _corFundoMenu;
            FeriadosPanel.Name = "FeriadosPanel";

            DivisoriaFeriadosImagem = new PictureBox();
            DivisoriaFeriadosImagem.Size = new Size(0, 4);
            DivisoriaFeriadosImagem.Dock = DockStyle.Bottom;
            DivisoriaFeriadosImagem.BackColor = _corFundoDivisao;

            FeriadosLabel = new Label();
            FeriadosLabel.AutoSize = false;
            FeriadosLabel.Size = new Size(_widthLabelMenuSistema, 0);
            FeriadosLabel.Dock = DockStyle.Fill;
            FeriadosLabel.Text = "Feriados e" + Environment.NewLine + "Emendas";
            FeriadosLabel.Font = CorFontepadraoLabel.Font;
            FeriadosLabel.ForeColor = Color.WhiteSmoke;
            FeriadosLabel.TextAlign = ContentAlignment.MiddleRight;
            FeriadosLabel.MouseHover += new EventHandler(this.CadastrosOperacionaisPanel_MouseHover);
            FeriadosLabel.Click += new System.EventHandler(this.FeriadosPanel_Click);
            FeriadosLabel.Name = "FeriadosLabel";

            FavoritoFeriadosImagem = new PictureBox();
            FavoritoFeriadosImagem.Size = new Size(10, 10);
            FavoritoFeriadosImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoFeriadosImagem.Name = FeriadosLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoFeriadosImagem.Name))
            {
                FavoritoFeriadosImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoFeriadosImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoFeriadosImagem.Top = 35;
            FavoritoFeriadosImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoFeriadosImagem.Tag = FeriadosLabel.Text;
            FavoritoFeriadosImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoFeriadosImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoFeriadosImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoFeriadosImagem.AccessibleName = "Operacional";

            FeriadosPanel.Controls.Add(FeriadosLabel);
            FeriadosPanel.Controls.Add(DivisoriaFeriadosImagem);
            FeriadosPanel.Controls.Add(FavoritoFeriadosImagem);
            FavoritoFeriadosImagem.BringToFront();

            MenuOperacionalPanel.Controls.Add(FeriadosPanel);
            #endregion

            #region IQOPanel 
            IQOPanel = new Panel();
            IQOPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            IQOPanel.Dock = DockStyle.Top;
            IQOPanel.BackColor = _corFundoMenu;
            IQOPanel.Name = "IQOPanelPanel";
            IQOPanel.Enabled = Publicas._usuario.Desenvolvedor || Publicas._usuario.AcessaIQO;

            DivisoriaIQOImagem = new PictureBox();
            DivisoriaIQOImagem.Size = new Size(0, 4);
            DivisoriaIQOImagem.Dock = DockStyle.Bottom;
            DivisoriaIQOImagem.BackColor = _corFundoDivisao;

            IQOLabel = new Label();
            IQOLabel.AutoSize = false;
            IQOLabel.Size = new Size(_widthLabelMenuSistema, 0);
            IQOLabel.Dock = DockStyle.Fill;
            IQOLabel.Text = "IQO";
            IQOLabel.Font = CorFontepadraoLabel.Font;
            IQOLabel.ForeColor = Color.WhiteSmoke;
            IQOLabel.TextAlign = ContentAlignment.MiddleRight;
            IQOLabel.MouseHover += new EventHandler(this.CadastrosOperacionaisPanel_MouseHover);
            IQOLabel.Click += new System.EventHandler(this.IQOLabel_Click);
            IQOLabel.Name = "IQOPanelLabel";


            FavoritoIQOImagem = new PictureBox();
            FavoritoIQOImagem.Size = new Size(10, 10);
            FavoritoIQOImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoIQOImagem.Name = "IQOLabelPic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoIQOImagem.Name))
            {
                FavoritoIQOImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoIQOImagem.Left = 5;
            FavoritoIQOImagem.Top = 35;
            FavoritoIQOImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoIQOImagem.Tag = IQOLabel.Text;
            FavoritoIQOImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoIQOImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoIQOImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoIQOImagem.AccessibleName = "Operacional";

            IQOPanel.Controls.Add(IQOLabel);
            IQOPanel.Controls.Add(DivisoriaIQOImagem);
            IQOPanel.Controls.Add(FavoritoIQOImagem);
            FavoritoIQOImagem.BringToFront();

            MenuOperacionalPanel.Controls.Add(IQOPanel);
            #endregion            

            #region DemonstrativoPanel 
            DemonstrativoPanel = new Panel();
            DemonstrativoPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            DemonstrativoPanel.Dock = DockStyle.Top;
            DemonstrativoPanel.BackColor = _corFundoMenu;
            DemonstrativoPanel.Name = "DemonstrativoPanelPanel";
            DemonstrativoPanel.Enabled = Publicas._usuario.Desenvolvedor || Publicas._usuario.AcessaDemonstrativo;

            DivisoriaDemonstrativoImagem = new PictureBox();
            DivisoriaDemonstrativoImagem.Size = new Size(0, 4);
            DivisoriaDemonstrativoImagem.Dock = DockStyle.Bottom;
            DivisoriaDemonstrativoImagem.BackColor = _corFundoDivisao;

            DemonstrativoLabel = new Label();
            DemonstrativoLabel.AutoSize = false;
            DemonstrativoLabel.Size = new Size(_widthLabelMenuSistema, 0);
            DemonstrativoLabel.Dock = DockStyle.Fill;
            DemonstrativoLabel.Text = "Demonstrativo";
            DemonstrativoLabel.Font = CorFontepadraoLabel.Font;
            DemonstrativoLabel.ForeColor = Color.WhiteSmoke;
            DemonstrativoLabel.TextAlign = ContentAlignment.MiddleRight;
            DemonstrativoLabel.MouseHover += new EventHandler(this.CadastrosOperacionaisPanel_MouseHover);
            DemonstrativoLabel.Click += new System.EventHandler(this.DemonstrativoLabel_Click);
            DemonstrativoLabel.Name = "DemonstrativoPanelLabel";


            FavoritoDemonstrativoImagem = new PictureBox();
            FavoritoDemonstrativoImagem.Size = new Size(10, 10);
            FavoritoDemonstrativoImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoDemonstrativoImagem.Name = "DemonstrativoLabelPic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoDemonstrativoImagem.Name))
            {
                FavoritoDemonstrativoImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoDemonstrativoImagem.Left = 5;
            FavoritoDemonstrativoImagem.Top = 35;
            FavoritoDemonstrativoImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoDemonstrativoImagem.Tag = DemonstrativoLabel.Text;
            FavoritoDemonstrativoImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoDemonstrativoImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoDemonstrativoImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoDemonstrativoImagem.AccessibleName = "Operacional";

            DemonstrativoPanel.Controls.Add(DemonstrativoLabel);
            DemonstrativoPanel.Controls.Add(DivisoriaDemonstrativoImagem);
            DemonstrativoPanel.Controls.Add(FavoritoDemonstrativoImagem);
            FavoritoDemonstrativoImagem.BringToFront();

            MenuOperacionalPanel.Controls.Add(DemonstrativoPanel);
            #endregion            

            #region CadastrosOperacionais 
            CadastrosOperacionaisPanel = new Panel();
            CadastrosOperacionaisPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            CadastrosOperacionaisPanel.Dock = DockStyle.Top;
            CadastrosOperacionaisPanel.BackColor = _corFundoMenu;
            CadastrosOperacionaisPanel.Name = "CadastrosOperacionaisPanel";
            CadastrosOperacionaisPanel.Enabled = Publicas._usuario.AcessaCadastroOperacional;

            DivisoriaCadastrosOperacionaisImagem = new PictureBox();
            DivisoriaCadastrosOperacionaisImagem.Size = new Size(0, 4);
            DivisoriaCadastrosOperacionaisImagem.Dock = DockStyle.Bottom;
            DivisoriaCadastrosOperacionaisImagem.BackColor = _corFundoDivisao;

            Divisoria2CadastrosOperacionaisImagem = new PictureBox();
            Divisoria2CadastrosOperacionaisImagem.Size = new Size(1, 2);
            Divisoria2CadastrosOperacionaisImagem.Dock = DockStyle.Right;
            Divisoria2CadastrosOperacionaisImagem.BackColor = _corFundoDivisao; //System.Drawing.Color.FromArgb(2, 91, 149);

            CadastrosOperacionaisSetaLabel = new Label();
            CadastrosOperacionaisSetaLabel.AutoSize = false;
            CadastrosOperacionaisSetaLabel.Size = new Size(20, 59);
            CadastrosOperacionaisSetaLabel.Dock = DockStyle.Right;
            CadastrosOperacionaisSetaLabel.Text = "6";
            CadastrosOperacionaisSetaLabel.Font = new Font("Webdings", (float)12);
            CadastrosOperacionaisSetaLabel.TextAlign = ContentAlignment.MiddleCenter;
            CadastrosOperacionaisSetaLabel.Click += new System.EventHandler(this.CadastrosOperacionaisSetaLabel_Click);
            CadastrosOperacionaisSetaLabel.MouseHover += new EventHandler(this.CadastrosOperacionaisSetaPanel_MouseHover);
            CadastrosOperacionaisSetaLabel.Name = "CadastrosOperacionaisSetaLabel";
            CadastrosOperacionaisSetaLabel.ForeColor = Color.WhiteSmoke;

            CadastrosOperacionaisLabel = new Label();
            CadastrosOperacionaisLabel.AutoSize = false;
            CadastrosOperacionaisLabel.Size = new Size(_widthLabelMenuSistema, 0);
            CadastrosOperacionaisLabel.Dock = DockStyle.Fill;
            CadastrosOperacionaisLabel.Text = "Cadastros";
            CadastrosOperacionaisLabel.Font = CorFontepadraoLabel.Font;
            CadastrosOperacionaisLabel.ForeColor = Color.WhiteSmoke;
            CadastrosOperacionaisLabel.TextAlign = ContentAlignment.MiddleRight;
            CadastrosOperacionaisLabel.MouseHover += new EventHandler(this.CadastrosOperacionaisPanel_MouseHover);
            CadastrosOperacionaisLabel.Click += new System.EventHandler(this.CadastrosOperacionaisSetaLabel_Click);
            CadastrosOperacionaisLabel.Name = "CadastrosOperacionaisLabel";

            CadastrosOperacionaisPanel.Controls.Add(CadastrosOperacionaisLabel);
            //CadastrosOperacionaisPanel.Controls.Add(CadastrosOperacionaisImagem);
            CadastrosOperacionaisPanel.Controls.Add(Divisoria2CadastrosOperacionaisImagem);
            CadastrosOperacionaisPanel.Controls.Add(CadastrosOperacionaisSetaLabel);
            CadastrosOperacionaisPanel.Controls.Add(DivisoriaCadastrosOperacionaisImagem);

            MenuOperacionalPanel.Controls.Add(CadastrosOperacionaisPanel);
            #endregion                   
        }

        private void FechaSubMenuOperacional()
        {
            FechaSubMenuCadastrosOperacionalPanel();

            if (MenuOperacionalPanel != null)
            {
                MenuOperacionalPanel.Visible = false;
                this.Controls.Remove(MenuOperacionalPanel);
                MenuOperacionalPanel.Dispose();
                MenuOperacionalPanel = null;
            }
        }

        private void MudaSelecaoDeCoresSubMenuOperacional()
        {
            FechaSubMenuCadastrosOperacionalPanel();

            CadastrosOperacionaisLabel.Font = new Font(CadastrosOperacionaisLabel.Font, CadastrosOperacionaisLabel.Font.Style & ~FontStyle.Bold);
            CadastrosOperacionaisSetaLabel.Font = new Font(CadastrosOperacionaisSetaLabel.Font, CadastrosOperacionaisSetaLabel.Font.Style & ~FontStyle.Bold);
            IQOLabel.Font = new Font(IQOLabel.Font, IQOLabel.Font.Style & ~FontStyle.Bold);
            DemonstrativoLabel.Font = new Font(DemonstrativoLabel.Font, DemonstrativoLabel.Font.Style & ~FontStyle.Bold);

            CadastrosOperacionaisLabel.BackColor = _corFundoMenu;
            CadastrosOperacionaisSetaLabel.BackColor = _corFundoMenu;
            IQOLabel.BackColor = _corFundoMenu;
            DemonstrativoLabel.BackColor = _corFundoMenu;
            FavoritoDemonstrativoImagem.BackColor = DemonstrativoLabel.BackColor;
            FavoritoIQOImagem.BackColor = DemonstrativoLabel.BackColor;

            CadastrosOperacionaisLabel.ForeColor = Color.WhiteSmoke;
            CadastrosOperacionaisSetaLabel.ForeColor = Color.WhiteSmoke;
            IQOLabel.ForeColor = Color.WhiteSmoke;
            DemonstrativoLabel.ForeColor = Color.WhiteSmoke;

            CadastrosOperacionaisSetaLabel.Text = "6";

            FeriadosLabel.BackColor = _corFundoMenu;
            FeriadosLabel.Font = new Font(FeriadosLabel.Font, FeriadosLabel.Font.Style & ~FontStyle.Bold);
            FavoritoFeriadosImagem.BackColor = DemonstrativoLabel.BackColor;
            FeriadosLabel.ForeColor = Color.WhiteSmoke;


        }

        private void CadastrosOperacionaisPanel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubMenuOperacional();
            FechaSubMenuAvaliacaoDesempenho();
            FechaSubMenuBiblioteca();
            FechaSubMenuCurriculo();
            FechaSubMenuCorridas();
            FechaSubMenuCadastroJuridico();
            FechaSubMenuControladoria();
            FechaSubMenuChamadosPanel();
            FechaSubMenuSAC();
            FechaSubMenuCadastroTIPanel();
            FechaSubMenuBSC();

            if (((Control)sender).Name.Contains("Cadastros"))
            {
                CadastrosOperacionaisLabel.Font = new Font(CadastrosOperacionaisLabel.Font, FontStyle.Bold);
                CadastrosOperacionaisLabel.ForeColor = Publicas._fonteBotaoFocado;
                CadastrosOperacionaisLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Demonstrativo"))
            {
                DemonstrativoLabel.Font = new Font(DemonstrativoLabel.Font, FontStyle.Bold);
                DemonstrativoLabel.ForeColor = Publicas._fonteBotaoFocado;
                DemonstrativoLabel.BackColor = _corMenuSelecionado;
                FavoritoDemonstrativoImagem.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("IQO"))
            {
                IQOLabel.Font = new Font(IQOLabel.Font, FontStyle.Bold);
                IQOLabel.ForeColor = Publicas._fonteBotaoFocado;
                IQOLabel.BackColor = _corMenuSelecionado;
                FavoritoIQOImagem.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.StartsWith("Feriado"))
            {
                FeriadosLabel.Font = new Font(FeriadosLabel.Font, FontStyle.Bold);
                FeriadosLabel.ForeColor = Publicas._fonteBotaoFocado;
                FeriadosLabel.BackColor = _corMenuSelecionado;
                FavoritoFeriadosImagem.BackColor = _corMenuSelecionado;
                return;
            }
        }

        private void CadastrosOperacionaisSetaPanel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubMenuOperacional();
            FechaSubMenuAvaliacaoDesempenho();
            FechaSubMenuBiblioteca();
            FechaSubMenuCurriculo();
            FechaSubMenuCorridas();
            FechaSubMenuCadastroJuridico();
            FechaSubMenuControladoria();
            FechaSubMenuChamadosPanel();
            FechaSubMenuSAC();
            FechaSubMenuCadastroTIPanel();
            FechaSubMenuBSC();

            if (((Control)sender).Name.Contains("Cadastro"))
            {
                CadastrosOperacionaisSetaLabel.Font = new Font(CadastrosOperacionaisSetaLabel.Font, FontStyle.Bold);
                CadastrosOperacionaisSetaLabel.ForeColor = Publicas._fonteBotaoFocado;
                CadastrosOperacionaisSetaLabel.BackColor = _corMenuSelecionado;
                return;
            }

        }

        private void CadastrosOperacionaisSetaLabel_Click(object sender, EventArgs e)
        {
            // abrir o SubMenu do RecursosHumanos
            CadastrosOperacionaisSetaLabel.Text = "3";

            if (!Publicas._TemaBlack)
            {
                CadastrosOperacionaisSetaLabel.ForeColor = Publicas._bordaEntrada;
                CadastrosOperacionaisLabel.ForeColor = Publicas._bordaEntrada;
            }
            else
            {
                CadastrosOperacionaisSetaLabel.ForeColor = Publicas._fonteMenuSelecionado;
                CadastrosOperacionaisLabel.ForeColor = Publicas._fonteMenuSelecionado;
            }
            CadastrosOperacionaisSetaLabel.BackColor = _corFundoMenu;

            if (SubMenuCadastroOperacionalPanel != null)
            {
                FechaSubMenuCadastrosOperacionalPanel();
                return;
            }

            #region Cria estrutura 

            // Menu de fundo (onde agrupa os demais itens)
            SubMenuCadastroOperacionalPanel = new Panel();
            SubMenuCadastroOperacionalPanel.Size = new Size(155, _heidthMenuSistema * 6);
            SubMenuCadastroOperacionalPanel.Location = new Point(MenuSistemaPanel.Width + MenuOperacionalPanel.Width + 4, AcessoAoMenuPanel.Height);
            SubMenuCadastroOperacionalPanel.BackColor = _corFundoDivisao;
            this.Controls.Add(SubMenuCadastroOperacionalPanel);
            SubMenuCadastroOperacionalPanel.BringToFront();
            SubMenuCadastroOperacionalPanel.Visible = true;
            #endregion

           
            #region Valores
            ValoresDosIndicadoresPanel = new Panel();
            ValoresDosIndicadoresPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            ValoresDosIndicadoresPanel.Dock = DockStyle.Top;
            ValoresDosIndicadoresPanel.BackColor = _corFundoMenu;
            ValoresDosIndicadoresPanel.Name = "ValoresDosIndicadoresPanel";

            DivisoriaValoresDosIndicadoresImagem = new PictureBox();
            DivisoriaValoresDosIndicadoresImagem.Size = new Size(0, 4);
            DivisoriaValoresDosIndicadoresImagem.Dock = DockStyle.Bottom;
            DivisoriaValoresDosIndicadoresImagem.BackColor = _corFundoDivisao;

            ValoresDosIndicadoresLabel = new Label();
            ValoresDosIndicadoresLabel.AutoSize = false;
            ValoresDosIndicadoresLabel.Size = new Size(_widthLabelMenuSistema, 0);
            ValoresDosIndicadoresLabel.Dock = DockStyle.Fill;
            ValoresDosIndicadoresLabel.Text = "Valores";
            ValoresDosIndicadoresLabel.Font = CorFontepadraoLabel.Font;
            ValoresDosIndicadoresLabel.ForeColor = Color.WhiteSmoke;
            ValoresDosIndicadoresLabel.TextAlign = ContentAlignment.MiddleRight;
            ValoresDosIndicadoresLabel.MouseHover += new EventHandler(this.SetoresDaLinhaPanel_MouseHover);
            ValoresDosIndicadoresLabel.Click += new System.EventHandler(this.ValoresDosIndicadoresLabel_Click);
            ValoresDosIndicadoresLabel.Name = "ValoresDosIndicadoresLabel";

            FavoritoValoresDosIndicadoresImagem = new PictureBox();
            FavoritoValoresDosIndicadoresImagem.Size = new Size(10, 10);
            FavoritoValoresDosIndicadoresImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoValoresDosIndicadoresImagem.Name = ValoresDosIndicadoresLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoValoresDosIndicadoresImagem.Name))
            {
                FavoritoValoresDosIndicadoresImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoValoresDosIndicadoresImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoValoresDosIndicadoresImagem.Top = 35;
            FavoritoValoresDosIndicadoresImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoValoresDosIndicadoresImagem.Tag = ValoresDosIndicadoresLabel.Text;
            FavoritoValoresDosIndicadoresImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoValoresDosIndicadoresImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoValoresDosIndicadoresImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoValoresDosIndicadoresImagem.AccessibleName = "Operacional";

            ValoresDosIndicadoresPanel.Controls.Add(ValoresDosIndicadoresLabel);
            ValoresDosIndicadoresPanel.Controls.Add(DivisoriaValoresDosIndicadoresImagem);
            ValoresDosIndicadoresPanel.Controls.Add(FavoritoValoresDosIndicadoresImagem);
            FavoritoValoresDosIndicadoresImagem.BringToFront();

            SubMenuCadastroOperacionalPanel.Controls.Add(ValoresDosIndicadoresPanel);
            #endregion

            #region Metas
            MetasDosIndicadoresPanel = new Panel();
            MetasDosIndicadoresPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            MetasDosIndicadoresPanel.Dock = DockStyle.Top;
            MetasDosIndicadoresPanel.BackColor = _corFundoMenu;
            MetasDosIndicadoresPanel.Name = "MetasDosIndicadoresPanel";

            DivisoriaMetasDosIndicadoresImagem = new PictureBox();
            DivisoriaMetasDosIndicadoresImagem.Size = new Size(0, 4);
            DivisoriaMetasDosIndicadoresImagem.Dock = DockStyle.Bottom;
            DivisoriaMetasDosIndicadoresImagem.BackColor = _corFundoDivisao;

            MetasDosIndicadoresLabel = new Label();
            MetasDosIndicadoresLabel.AutoSize = false;
            MetasDosIndicadoresLabel.Size = new Size(_widthLabelMenuSistema, 0);
            MetasDosIndicadoresLabel.Dock = DockStyle.Fill;
            MetasDosIndicadoresLabel.Text = "Metas";
            MetasDosIndicadoresLabel.Font = CorFontepadraoLabel.Font;
            MetasDosIndicadoresLabel.ForeColor = Color.WhiteSmoke;
            MetasDosIndicadoresLabel.TextAlign = ContentAlignment.MiddleRight;
            MetasDosIndicadoresLabel.MouseHover += new EventHandler(this.SetoresDaLinhaPanel_MouseHover);
            MetasDosIndicadoresLabel.Click += new System.EventHandler(this.MetasDosIndicadoresPanel_Click);
            MetasDosIndicadoresLabel.Name = "MetasDosIndicadoresLabel";

            FavoritoMetasDosIndicadoresImagem = new PictureBox();
            FavoritoMetasDosIndicadoresImagem.Size = new Size(10, 10);
            FavoritoMetasDosIndicadoresImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoMetasDosIndicadoresImagem.Name = MetasDosIndicadoresLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoMetasDosIndicadoresImagem.Name))
            {
                FavoritoMetasDosIndicadoresImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoMetasDosIndicadoresImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoMetasDosIndicadoresImagem.Top = 35;
            FavoritoMetasDosIndicadoresImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoMetasDosIndicadoresImagem.Tag = MetasDosIndicadoresLabel.Text;
            FavoritoMetasDosIndicadoresImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoMetasDosIndicadoresImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoMetasDosIndicadoresImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoMetasDosIndicadoresImagem.AccessibleName = "Operacional";

            MetasDosIndicadoresPanel.Controls.Add(MetasDosIndicadoresLabel);
            MetasDosIndicadoresPanel.Controls.Add(DivisoriaMetasDosIndicadoresImagem);
            MetasDosIndicadoresPanel.Controls.Add(FavoritoMetasDosIndicadoresImagem);
            FavoritoMetasDosIndicadoresImagem.BringToFront();

            SubMenuCadastroOperacionalPanel.Controls.Add(MetasDosIndicadoresPanel);
            #endregion

            #region PontuacaoOperacional
            PontuacaoOperacionalPanel = new Panel();
            PontuacaoOperacionalPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            PontuacaoOperacionalPanel.Dock = DockStyle.Top;
            PontuacaoOperacionalPanel.BackColor = _corFundoMenu;
            PontuacaoOperacionalPanel.Name = "PontuacaoOperacionalPanel";

            DivisoriaPontuacaoOperacionalImagem = new PictureBox();
            DivisoriaPontuacaoOperacionalImagem.Size = new Size(0, 4);
            DivisoriaPontuacaoOperacionalImagem.Dock = DockStyle.Bottom;
            DivisoriaPontuacaoOperacionalImagem.BackColor = _corFundoDivisao;

            PontuacaoOperacionalLabel = new Label();
            PontuacaoOperacionalLabel.AutoSize = false;
            PontuacaoOperacionalLabel.Size = new Size(_widthLabelMenuSistema, 0);
            PontuacaoOperacionalLabel.Dock = DockStyle.Fill;
            PontuacaoOperacionalLabel.Text = "Faixa" + Environment.NewLine + " de Pontuação";
            PontuacaoOperacionalLabel.Font = CorFontepadraoLabel.Font;
            PontuacaoOperacionalLabel.ForeColor = Color.WhiteSmoke;
            PontuacaoOperacionalLabel.TextAlign = ContentAlignment.MiddleRight;
            PontuacaoOperacionalLabel.MouseHover += new EventHandler(this.SetoresDaLinhaPanel_MouseHover);
            PontuacaoOperacionalLabel.Click += new System.EventHandler(this.PontuacaoOperacionalPanel_Click);
            PontuacaoOperacionalLabel.Name = "PontuacaoOperacionalLabel";

            FavoritoPontuacaoOperacionalImagem = new PictureBox();
            FavoritoPontuacaoOperacionalImagem.Size = new Size(10, 10);
            FavoritoPontuacaoOperacionalImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoPontuacaoOperacionalImagem.Name = PontuacaoOperacionalLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoPontuacaoOperacionalImagem.Name))
            {
                FavoritoPontuacaoOperacionalImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoPontuacaoOperacionalImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoPontuacaoOperacionalImagem.Top = 35;
            FavoritoPontuacaoOperacionalImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoPontuacaoOperacionalImagem.Tag = PontuacaoOperacionalLabel.Text;
            FavoritoPontuacaoOperacionalImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoPontuacaoOperacionalImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoPontuacaoOperacionalImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoPontuacaoOperacionalImagem.AccessibleName = "Operacional";

            PontuacaoOperacionalPanel.Controls.Add(PontuacaoOperacionalLabel);
            PontuacaoOperacionalPanel.Controls.Add(DivisoriaPontuacaoOperacionalImagem);
            PontuacaoOperacionalPanel.Controls.Add(FavoritoPontuacaoOperacionalImagem);
            FavoritoPontuacaoOperacionalImagem.BringToFront();

            SubMenuCadastroOperacionalPanel.Controls.Add(PontuacaoOperacionalPanel);
            #endregion

            #region AgrupaLinhas
            AgrupaLinhasPanel = new Panel();
            AgrupaLinhasPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            AgrupaLinhasPanel.Dock = DockStyle.Top;
            AgrupaLinhasPanel.BackColor = _corFundoMenu;
            AgrupaLinhasPanel.Name = "AgrupaLinhasPanel";

            DivisoriaAgrupaLinhasImagem = new PictureBox();
            DivisoriaAgrupaLinhasImagem.Size = new Size(0, 4);
            DivisoriaAgrupaLinhasImagem.Dock = DockStyle.Bottom;
            DivisoriaAgrupaLinhasImagem.BackColor = _corFundoDivisao;

            AgrupaLinhasLabel = new Label();
            AgrupaLinhasLabel.AutoSize = false;
            AgrupaLinhasLabel.Size = new Size(_widthLabelMenuSistema, 0);
            AgrupaLinhasLabel.Dock = DockStyle.Fill;
            AgrupaLinhasLabel.Text = "Agrupa" + Environment.NewLine + " Linhas";
            AgrupaLinhasLabel.Font = CorFontepadraoLabel.Font;
            AgrupaLinhasLabel.ForeColor = Color.WhiteSmoke;
            AgrupaLinhasLabel.TextAlign = ContentAlignment.MiddleRight;
            AgrupaLinhasLabel.MouseHover += new EventHandler(this.SetoresDaLinhaPanel_MouseHover);
            AgrupaLinhasLabel.Click += new System.EventHandler(this.AgrupaLinhasPanel_Click);
            AgrupaLinhasLabel.Name = "AgrupaLinhasLabel";

            FavoritoAgrupaLinhasImagem = new PictureBox();
            FavoritoAgrupaLinhasImagem.Size = new Size(10, 10);
            FavoritoAgrupaLinhasImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoAgrupaLinhasImagem.Name = AgrupaLinhasLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoAgrupaLinhasImagem.Name))
            {
                FavoritoAgrupaLinhasImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoAgrupaLinhasImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoAgrupaLinhasImagem.Top = 35;
            FavoritoAgrupaLinhasImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoAgrupaLinhasImagem.Tag = AgrupaLinhasLabel.Text;
            FavoritoAgrupaLinhasImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoAgrupaLinhasImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoAgrupaLinhasImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoAgrupaLinhasImagem.AccessibleName = "Operacional";

            AgrupaLinhasPanel.Controls.Add(AgrupaLinhasLabel);
            AgrupaLinhasPanel.Controls.Add(DivisoriaAgrupaLinhasImagem);
            AgrupaLinhasPanel.Controls.Add(FavoritoAgrupaLinhasImagem);
            FavoritoAgrupaLinhasImagem.BringToFront();
            SubMenuCadastroOperacionalPanel.Controls.Add(AgrupaLinhasPanel);
            #endregion

            #region SetoresDaLinha
            SetoresDaLinhaPanel = new Panel();
            SetoresDaLinhaPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            SetoresDaLinhaPanel.Dock = DockStyle.Top;
            SetoresDaLinhaPanel.BackColor = _corFundoMenu;
            SetoresDaLinhaPanel.Name = "SetoresDaLinhaPanel";

            DivisoriaSetoresDaLinhaImagem = new PictureBox();
            DivisoriaSetoresDaLinhaImagem.Size = new Size(0, 4);
            DivisoriaSetoresDaLinhaImagem.Dock = DockStyle.Bottom;
            DivisoriaSetoresDaLinhaImagem.BackColor = _corFundoDivisao;

            SetoresDaLinhaLabel = new Label();
            SetoresDaLinhaLabel.AutoSize = false;
            SetoresDaLinhaLabel.Size = new Size(_widthLabelMenuSistema, 0);
            SetoresDaLinhaLabel.Dock = DockStyle.Fill;
            SetoresDaLinhaLabel.Text = "Setores" + Environment.NewLine + "da Linha";
            SetoresDaLinhaLabel.Font = CorFontepadraoLabel.Font;
            SetoresDaLinhaLabel.ForeColor = Color.WhiteSmoke;
            SetoresDaLinhaLabel.TextAlign = ContentAlignment.MiddleRight;
            SetoresDaLinhaLabel.MouseHover += new EventHandler(this.SetoresDaLinhaPanel_MouseHover);
            SetoresDaLinhaLabel.Click += new System.EventHandler(this.SetoresDaLinhaPanel_Click);
            SetoresDaLinhaLabel.Name = "SetoresDaLinhaLabel";

            FavoritoSetoresDaLinhaImagem = new PictureBox();
            FavoritoSetoresDaLinhaImagem.Size = new Size(10, 10);
            FavoritoSetoresDaLinhaImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoSetoresDaLinhaImagem.Name = SetoresDaLinhaLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoSetoresDaLinhaImagem.Name))
            {
                FavoritoSetoresDaLinhaImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoSetoresDaLinhaImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoSetoresDaLinhaImagem.Top = 35;
            FavoritoSetoresDaLinhaImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoSetoresDaLinhaImagem.Tag = SetoresDaLinhaLabel.Text;
            FavoritoSetoresDaLinhaImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoSetoresDaLinhaImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoSetoresDaLinhaImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoSetoresDaLinhaImagem.AccessibleName = "Operacional";

            SetoresDaLinhaPanel.Controls.Add(SetoresDaLinhaLabel);
            SetoresDaLinhaPanel.Controls.Add(DivisoriaSetoresDaLinhaImagem);
            SetoresDaLinhaPanel.Controls.Add(FavoritoSetoresDaLinhaImagem);
            FavoritoSetoresDaLinhaImagem.BringToFront();
            SubMenuCadastroOperacionalPanel.Controls.Add(SetoresDaLinhaPanel);
            #endregion

            #region Indicadores
            IndicadoresPanel = new Panel();
            IndicadoresPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            IndicadoresPanel.Dock = DockStyle.Top;
            IndicadoresPanel.BackColor = _corFundoMenu;
            IndicadoresPanel.Name = "IndicadoresPanel";

            DivisoriaIndicadoresImagem = new PictureBox();
            DivisoriaIndicadoresImagem.Size = new Size(0, 4);
            DivisoriaIndicadoresImagem.Dock = DockStyle.Bottom;
            DivisoriaIndicadoresImagem.BackColor = _corFundoDivisao;

            IndicadoresLabel = new Label();
            IndicadoresLabel.AutoSize = false;
            IndicadoresLabel.Size = new Size(_widthLabelMenuSistema, 0);
            IndicadoresLabel.Dock = DockStyle.Fill;
            IndicadoresLabel.Text = "Indicadores";
            IndicadoresLabel.Font = CorFontepadraoLabel.Font;
            IndicadoresLabel.ForeColor = Color.WhiteSmoke;
            IndicadoresLabel.TextAlign = ContentAlignment.MiddleRight;
            IndicadoresLabel.MouseHover += new EventHandler(this.SetoresDaLinhaPanel_MouseHover);
            IndicadoresLabel.Click += new System.EventHandler(this.IndicadoresPanel_Click);
            IndicadoresLabel.Name = "IndicadoresLabel";

            FavoritoIndicadoresImagem = new PictureBox();
            FavoritoIndicadoresImagem.Size = new Size(10, 10);
            FavoritoIndicadoresImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoIndicadoresImagem.Name = IndicadoresLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoIndicadoresImagem.Name))
            {
                FavoritoIndicadoresImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoIndicadoresImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoIndicadoresImagem.Top = 35;
            FavoritoIndicadoresImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoIndicadoresImagem.Tag = IndicadoresLabel.Text;
            FavoritoIndicadoresImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoIndicadoresImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoIndicadoresImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoIndicadoresImagem.AccessibleName = "Operacional";

            IndicadoresPanel.Controls.Add(IndicadoresLabel);
            IndicadoresPanel.Controls.Add(DivisoriaIndicadoresImagem);
            IndicadoresPanel.Controls.Add(FavoritoIndicadoresImagem);
            FavoritoIndicadoresImagem.BringToFront();

            SubMenuCadastroOperacionalPanel.Controls.Add(IndicadoresPanel);
            #endregion

        }

        private void FeriadosPanel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaOperacional;
            Operacional.Feriados _tela = new Operacional.Feriados();

            _tela.ShowDialog();
            NomePadrao();
        }

        private void FechaSubMenuCadastrosOperacionalPanel()
        {
            if (SubMenuCadastroOperacionalPanel != null)
            {
                SubMenuCadastroOperacionalPanel.Visible = false;
                this.Controls.Remove(SubMenuCadastroOperacionalPanel);
                SubMenuCadastroOperacionalPanel.Dispose();
                SubMenuCadastroOperacionalPanel = null;
            }
        }

        private void MudaSelecaoDeCoresSubMenuCadastroOperacional()
        {
            ValoresDosIndicadoresLabel.Font = new Font(ValoresDosIndicadoresLabel.Font, ValoresDosIndicadoresLabel.Font.Style & ~FontStyle.Bold);
            MetasDosIndicadoresLabel.Font = new Font(MetasDosIndicadoresLabel.Font, MetasDosIndicadoresLabel.Font.Style & ~FontStyle.Bold);
            PontuacaoOperacionalLabel.Font = new Font(PontuacaoOperacionalLabel.Font, PontuacaoOperacionalLabel.Font.Style & ~FontStyle.Bold);
            SetoresDaLinhaLabel.Font = new Font(SetoresDaLinhaLabel.Font, SetoresDaLinhaLabel.Font.Style & ~FontStyle.Bold);
            IndicadoresLabel.Font = new Font(SetoresDaLinhaLabel.Font, SetoresDaLinhaLabel.Font.Style & ~FontStyle.Bold);
            AgrupaLinhasLabel.Font = new Font(AgrupaLinhasLabel.Font, SetoresDaLinhaLabel.Font.Style & ~FontStyle.Bold);

            ValoresDosIndicadoresLabel.BackColor = _corFundoMenu;
            MetasDosIndicadoresLabel.BackColor = _corFundoMenu;
            PontuacaoOperacionalLabel.BackColor = _corFundoMenu;
            SetoresDaLinhaLabel.BackColor = _corFundoMenu;
            IndicadoresLabel.BackColor = _corFundoMenu;
            AgrupaLinhasLabel.BackColor = _corFundoMenu;

            FavoritoValoresDosIndicadoresImagem.BackColor = DemonstrativoLabel.BackColor;
            FavoritoMetasDosIndicadoresImagem.BackColor = DemonstrativoLabel.BackColor;
            FavoritoPontuacaoOperacionalImagem.BackColor = DemonstrativoLabel.BackColor;
            FavoritoSetoresDaLinhaImagem.BackColor = DemonstrativoLabel.BackColor;
            FavoritoIndicadoresImagem.BackColor = DemonstrativoLabel.BackColor;
            FavoritoAgrupaLinhasImagem.BackColor = DemonstrativoLabel.BackColor;

            ValoresDosIndicadoresLabel.ForeColor = Color.WhiteSmoke;
            MetasDosIndicadoresLabel.ForeColor = Color.WhiteSmoke;
            PontuacaoOperacionalLabel.ForeColor = Color.WhiteSmoke;
            SetoresDaLinhaLabel.ForeColor = Color.WhiteSmoke;
            IndicadoresLabel.ForeColor = Color.WhiteSmoke;
            AgrupaLinhasLabel.ForeColor = Color.WhiteSmoke;
        }

        private void SetoresDaLinhaPanel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubMenuCadastroOperacional();
            FechaSubMenuAvaliacaoDesempenho();
            FechaSubMenuBiblioteca();
            FechaSubMenuCurriculo();
            FechaSubMenuCorridas();
            FechaSubMenuCadastroJuridico();
            FechaSubMenuControladoria();
            FechaSubMenuChamadosPanel();
            FechaSubMenuSAC();
            FechaSubMenuSistemasTIPanel();

            if (((Control)sender).Name.Contains("Valores"))
            {
                ValoresDosIndicadoresLabel.Font = new Font(ValoresDosIndicadoresLabel.Font, FontStyle.Bold);
                ValoresDosIndicadoresLabel.ForeColor = Publicas._fonteBotaoFocado;
                ValoresDosIndicadoresLabel.BackColor = _corMenuSelecionado;
                FavoritoValoresDosIndicadoresImagem.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Metas"))
            {
                MetasDosIndicadoresLabel.Font = new Font(MetasDosIndicadoresLabel.Font, FontStyle.Bold);
                MetasDosIndicadoresLabel.ForeColor = Publicas._fonteBotaoFocado;
                MetasDosIndicadoresLabel.BackColor = _corMenuSelecionado;
                FavoritoMetasDosIndicadoresImagem.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Pontuacao"))
            {
                PontuacaoOperacionalLabel.Font = new Font(PontuacaoOperacionalLabel.Font, FontStyle.Bold);
                PontuacaoOperacionalLabel.ForeColor = Publicas._fonteBotaoFocado;
                PontuacaoOperacionalLabel.BackColor = _corMenuSelecionado;
                FavoritoPontuacaoOperacionalImagem.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Setores"))
            {
                SetoresDaLinhaLabel.Font = new Font(SetoresDaLinhaLabel.Font, FontStyle.Bold);
                SetoresDaLinhaLabel.ForeColor = Publicas._fonteBotaoFocado;
                SetoresDaLinhaLabel.BackColor = _corMenuSelecionado;
                FavoritoSetoresDaLinhaImagem.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Indicadores"))
            {
                IndicadoresLabel.Font = new Font(IndicadoresLabel.Font, FontStyle.Bold);
                IndicadoresLabel.ForeColor = Publicas._fonteBotaoFocado;
                IndicadoresLabel.BackColor = _corMenuSelecionado;
                FavoritoIndicadoresImagem.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Agrupa"))
            {
                AgrupaLinhasLabel.Font = new Font(AgrupaLinhasLabel.Font, FontStyle.Bold);
                AgrupaLinhasLabel.ForeColor = Publicas._fonteBotaoFocado;
                AgrupaLinhasLabel.BackColor = _corMenuSelecionado;
                FavoritoAgrupaLinhasImagem.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Feriado"))
            {
                FeriadosLabel.Font = new Font(FeriadosLabel.Font, FontStyle.Bold);
                FeriadosLabel.ForeColor = Publicas._fonteBotaoFocado;
                FeriadosLabel.BackColor = _corMenuSelecionado;
                FavoritoFeriadosImagem.BackColor = _corMenuSelecionado;
                return;
            }

        }

        private void IQOLabel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaOperacional;
            Operacional.IQO _tela = new Operacional.IQO();
            _tela.Size = new Size(this.Width - 5, this.Height - (tituloPanel.Height + panel2.Height + 2));

            _tela.ShowDialog();
            NomePadrao();
        }

        private void DemonstrativoLabel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaOperacional;
            Operacional.Demonstrativo _tela = new Operacional.Demonstrativo();
            _tela.Size = new Size(this.Width - 5, this.Height - (tituloPanel.Height + panel2.Height + 2));

            _tela.ShowDialog();
            NomePadrao();
        }

        private void IndicadoresPanel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaOperacional;
            new Operacional.Indicadores().ShowDialog();
            NomePadrao();
        }

        private void SetoresDaLinhaPanel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaOperacional;
            new Operacional.SetorDaLinha().ShowDialog();
            NomePadrao();
        }

        private void MetasDosIndicadoresPanel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaOperacional;
            new Operacional.MetasDosIndicadores().ShowDialog();
            NomePadrao();
        }

        private void PontuacaoOperacionalPanel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaOperacional;
            new Operacional.FaixaDePontuacao().ShowDialog();
            NomePadrao();
        }

        private void ValoresDosIndicadoresLabel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaOperacional;
            new Operacional.ValoresDosIndicadores().ShowDialog();
            NomePadrao();
        }

        private void AgrupaLinhasPanel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaOperacional;
            new Operacional.JuncaoDasLinhas().ShowDialog();
            NomePadrao();
        }

        #endregion

        #region Recebedoria
        private void RecebedoriaSetaLabel_Click(object sender, EventArgs e)
        {
            // abrir o SubMenu do RecursosHumanos
            RecebedoriaSetaLabel.Text = "3";
            if (!Publicas._TemaBlack)
            {
                RecebedoriaSetaLabel.ForeColor = Publicas._bordaEntrada;
                RecebedoriaLabel.ForeColor = Publicas._bordaEntrada;
            }
            else
            {
                RecebedoriaSetaLabel.ForeColor = Publicas._fonteMenuSelecionado;
                RecebedoriaLabel.ForeColor = Publicas._fonteMenuSelecionado;
            }
            RecebedoriaSetaLabel.BackColor = _corFundoMenu;

            if (MenuRecebedoriaPanel != null)
            {
                FechaSubMenuRecebedoria();
                return;
            }

            #region Cria estrutura 

            // Menu de fundo (onde agrupa os demais itens)
            MenuRecebedoriaPanel = new Panel();
            MenuRecebedoriaPanel.Size = new Size(155, _heidthMenuSistema * 2);
            MenuRecebedoriaPanel.Location = new Point(MenuSistemaPanel.Width + 2, AcessoAoMenuPanel.Height);
            MenuRecebedoriaPanel.BackColor = _corFundoDivisao;
            this.Controls.Add(MenuRecebedoriaPanel);
            MenuRecebedoriaPanel.BringToFront();
            MenuRecebedoriaPanel.Visible = true;
            #endregion

            #region Resumo Globusx Prodata 
            ResumoGlobusProdataPanel = new Panel();
            ResumoGlobusProdataPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            ResumoGlobusProdataPanel.Dock = DockStyle.Top;
            ResumoGlobusProdataPanel.BackColor = _corFundoMenu;
            ResumoGlobusProdataPanel.Name = "ResumoGlobusProdata";

            DivisoriaResumoGlobusProdataImagem = new PictureBox();
            DivisoriaResumoGlobusProdataImagem.Size = new Size(0, 4);
            DivisoriaResumoGlobusProdataImagem.Dock = DockStyle.Bottom;
            DivisoriaResumoGlobusProdataImagem.BackColor = _corFundoDivisao;

            ResumoGlobusProdataLabel = new Label();
            ResumoGlobusProdataLabel.AutoSize = false;
            ResumoGlobusProdataLabel.Size = new Size(_widthLabelMenuSistema, 0);
            ResumoGlobusProdataLabel.Dock = DockStyle.Fill;
            ResumoGlobusProdataLabel.Text = "Resumo" + Environment.NewLine + "Globus x Prodata";
            ResumoGlobusProdataLabel.Font = CorFontepadraoLabel.Font;
            ResumoGlobusProdataLabel.ForeColor = Color.WhiteSmoke;
            ResumoGlobusProdataLabel.TextAlign = ContentAlignment.MiddleRight;
            ResumoGlobusProdataLabel.MouseHover += new EventHandler(this.ComparacaoDeGuiasPanel_MouseHover);
            ResumoGlobusProdataLabel.Click += new System.EventHandler(this.ResumoGlobusProdataLabel_Click);
            ResumoGlobusProdataLabel.Name = "ResumoGlobusProdata";

            FavoritoResumoGlobusProdataImagem = new PictureBox();
            FavoritoResumoGlobusProdataImagem.Size = new Size(10, 10);
            FavoritoResumoGlobusProdataImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoResumoGlobusProdataImagem.Name = ResumoGlobusProdataLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoResumoGlobusProdataImagem.Name))
            {
                FavoritoResumoGlobusProdataImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoResumoGlobusProdataImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoResumoGlobusProdataImagem.Top = 35;
            FavoritoResumoGlobusProdataImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoResumoGlobusProdataImagem.Tag = ResumoGlobusProdataLabel.Text;
            FavoritoResumoGlobusProdataImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoResumoGlobusProdataImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoResumoGlobusProdataImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoResumoGlobusProdataImagem.AccessibleName = "Recebedoria";


            ResumoGlobusProdataPanel.Controls.Add(ResumoGlobusProdataLabel);
            ResumoGlobusProdataPanel.Controls.Add(DivisoriaResumoGlobusProdataImagem);
            ResumoGlobusProdataPanel.Controls.Add(FavoritoResumoGlobusProdataImagem);
            FavoritoResumoGlobusProdataImagem.BringToFront();
            MenuRecebedoriaPanel.Controls.Add(ResumoGlobusProdataPanel);
            #endregion

            #region Resumo Globusx Sigom 
            ResumoGlobusSigomPanel = new Panel();
            ResumoGlobusSigomPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            ResumoGlobusSigomPanel.Dock = DockStyle.Top;
            ResumoGlobusSigomPanel.BackColor = _corFundoMenu;
            ResumoGlobusSigomPanel.Name = "ResumoGlobusSigom";

            DivisoriaResumoGlobusSigomImagem = new PictureBox();
            DivisoriaResumoGlobusSigomImagem.Size = new Size(0, 4);
            DivisoriaResumoGlobusSigomImagem.Dock = DockStyle.Bottom;
            DivisoriaResumoGlobusSigomImagem.BackColor = _corFundoDivisao;

            ResumoGlobusSigomLabel = new Label();
            ResumoGlobusSigomLabel.AutoSize = false;
            ResumoGlobusSigomLabel.Size = new Size(_widthLabelMenuSistema, 0);
            ResumoGlobusSigomLabel.Dock = DockStyle.Fill;
            ResumoGlobusSigomLabel.Text = "Resumo" + Environment.NewLine + "Globus x Sigom";
            ResumoGlobusSigomLabel.Font = CorFontepadraoLabel.Font;
            ResumoGlobusSigomLabel.ForeColor = Color.WhiteSmoke;
            ResumoGlobusSigomLabel.TextAlign = ContentAlignment.MiddleRight;
            ResumoGlobusSigomLabel.MouseHover += new EventHandler(this.ComparacaoDeGuiasPanel_MouseHover);
            ResumoGlobusSigomLabel.Click += new System.EventHandler(this.ResumoGlobusSigomLabel_Click);
            ResumoGlobusSigomLabel.Name = "ResumoGlobusSigom";

            FavoritoResumoGlobusSigomImagem = new PictureBox();
            FavoritoResumoGlobusSigomImagem.Size = new Size(10, 10);
            FavoritoResumoGlobusSigomImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoResumoGlobusSigomImagem.Name = ResumoGlobusSigomLabel.Name + "Pic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoResumoGlobusSigomImagem.Name))
            {
                FavoritoResumoGlobusSigomImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoResumoGlobusSigomImagem.Left = 5;//NotasLabel.Width - 10;
            FavoritoResumoGlobusSigomImagem.Top = 35;
            FavoritoResumoGlobusSigomImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoResumoGlobusSigomImagem.Tag = ResumoGlobusSigomLabel.Text;
            FavoritoResumoGlobusSigomImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoResumoGlobusSigomImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoResumoGlobusSigomImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoResumoGlobusSigomImagem.AccessibleName = "Recebedoria";


            ResumoGlobusSigomPanel.Controls.Add(ResumoGlobusSigomLabel);
            ResumoGlobusSigomPanel.Controls.Add(DivisoriaResumoGlobusSigomImagem);
            ResumoGlobusSigomPanel.Controls.Add(FavoritoResumoGlobusSigomImagem);
            FavoritoResumoGlobusSigomImagem.BringToFront();
            MenuRecebedoriaPanel.Controls.Add(ResumoGlobusSigomPanel);
            #endregion

            #region ComparacaoDeGuias 
            //ComparacaoDeGuiasPanel = new Panel();
            //ComparacaoDeGuiasPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            //ComparacaoDeGuiasPanel.Dock = DockStyle.Top;
            //ComparacaoDeGuiasPanel.BackColor = _corFundoMenu;
            //ComparacaoDeGuiasPanel.Name = "ComparacaoDeGuiasPanel";

            //DivisoriaComparacaoDeGuiasImagem = new PictureBox();
            //DivisoriaComparacaoDeGuiasImagem.Size = new Size(0, 4);
            //DivisoriaComparacaoDeGuiasImagem.Dock = DockStyle.Bottom;
            //DivisoriaComparacaoDeGuiasImagem.BackColor = _corFundoDivisao;

            //ComparacaoDeGuiasLabel = new Label();
            //ComparacaoDeGuiasLabel.AutoSize = false;
            //ComparacaoDeGuiasLabel.Size = new Size(_widthLabelMenuSistema, 0);
            //ComparacaoDeGuiasLabel.Dock = DockStyle.Fill;
            //ComparacaoDeGuiasLabel.Text = "Comparar" + Environment.NewLine + "Globus x Sigom";
            //ComparacaoDeGuiasLabel.Font = CorFontepadraoLabel.Font;
            //ComparacaoDeGuiasLabel.ForeColor = Color.WhiteSmoke;
            //ComparacaoDeGuiasLabel.TextAlign = ContentAlignment.MiddleRight;
            //ComparacaoDeGuiasLabel.MouseHover += new EventHandler(this.ComparacaoDeGuiasPanel_MouseHover);
            //ComparacaoDeGuiasLabel.Click += new System.EventHandler(this.ComparacaoDeGuiasLabel_Click);
            //ComparacaoDeGuiasLabel.Name = "ComparacaoDeGuiasLabel";

            //FavoritoComparacaoDeGuiasImagem = new PictureBox();
            //FavoritoComparacaoDeGuiasImagem.Size = new Size(10, 10);
            //FavoritoComparacaoDeGuiasImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            //FavoritoComparacaoDeGuiasImagem.Name = ComparacaoDeGuiasLabel.Name + "Pic";
            //foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoComparacaoDeGuiasImagem.Name))
            //{
            //    FavoritoComparacaoDeGuiasImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            //}
            //FavoritoComparacaoDeGuiasImagem.Left = 5;//NotasLabel.Width - 10;
            //FavoritoComparacaoDeGuiasImagem.Top = 35;
            //FavoritoComparacaoDeGuiasImagem.SizeMode = PictureBoxSizeMode.Zoom;
            //FavoritoComparacaoDeGuiasImagem.Tag = ComparacaoDeGuiasLabel.Text;
            //FavoritoComparacaoDeGuiasImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            //FavoritoComparacaoDeGuiasImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            //FavoritoComparacaoDeGuiasImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            //FavoritoComparacaoDeGuiasImagem.AccessibleName = "Recebedoria";


            //ComparacaoDeGuiasPanel.Controls.Add(ComparacaoDeGuiasLabel);
            //ComparacaoDeGuiasPanel.Controls.Add(DivisoriaComparacaoDeGuiasImagem);
            //ComparacaoDeGuiasPanel.Controls.Add(FavoritoComparacaoDeGuiasImagem);
            //FavoritoComparacaoDeGuiasImagem.BringToFront();
            //MenuRecebedoriaPanel.Controls.Add(ComparacaoDeGuiasPanel);
            #endregion                   
        }

        private void ResumoGlobusProdataLabel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            Publicas._chamouPelaTelaResumoSigom = false;
            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaRecebedoria;
            Recebedoria.ResumoComparacao _tela = new Recebedoria.ResumoComparacao();
            _tela.Size = new Size(this.Width - 5, this.Height - (tituloPanel.Height + panel2.Height + 2));
            _tela.ShowDialog();
            NomePadrao();
        }

        private void FechaSubMenuRecebedoria()
        {
            if (MenuRecebedoriaPanel != null)
            {
                MenuRecebedoriaPanel.Visible = false;
                this.Controls.Remove(MenuRecebedoriaPanel);
                MenuRecebedoriaPanel.Dispose();
                MenuRecebedoriaPanel = null;
            }
        }

        private void MudaSelecaoDeCoresSubMenuRecebedoria()
        {
            //ComparacaoDeGuiasLabel.Font = new Font(ComparacaoDeGuiasLabel.Font, ComparacaoDeGuiasLabel.Font.Style & ~FontStyle.Bold);

            //ComparacaoDeGuiasLabel.BackColor = _corFundoMenu;
            //FavoritoComparacaoDeGuiasImagem.BackColor = ComparacaoDeGuiasLabel.BackColor;
            //ComparacaoDeGuiasLabel.ForeColor = Color.WhiteSmoke;

            ResumoGlobusSigomLabel.Font = new Font(ResumoGlobusSigomLabel.Font, ResumoGlobusSigomLabel.Font.Style & ~FontStyle.Bold);

            ResumoGlobusSigomLabel.BackColor = _corFundoMenu;
            FavoritoResumoGlobusSigomImagem.BackColor = ResumoGlobusSigomLabel.BackColor;
            ResumoGlobusSigomLabel.ForeColor = Color.WhiteSmoke;

            ResumoGlobusProdataLabel.Font = new Font(ResumoGlobusProdataLabel.Font, ResumoGlobusProdataLabel.Font.Style & ~FontStyle.Bold);

            ResumoGlobusProdataLabel.BackColor = _corFundoMenu;
            FavoritoResumoGlobusProdataImagem.BackColor = ResumoGlobusProdataLabel.BackColor;
            ResumoGlobusProdataLabel.ForeColor = Color.WhiteSmoke;
        }

        private void ComparacaoDeGuiasPanel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubMenuRecebedoria();
            FechaSubMenuAvaliacaoDesempenho();
            FechaSubMenuBiblioteca();
            FechaSubMenuCurriculo();
            FechaSubMenuCorridas();
            FechaSubMenuCadastroJuridico();
            FechaSubMenuControladoria();
            FechaSubMenuControladoria();
            FechaSubMenuChamadosPanel();
            FechaSubMenuSAC();
            FechaSubMenuSistemasTIPanel();
            FechaSubMenuOperacional();
            FechaSubMenuFinanceiro();

            if (((Control)sender).Name.Contains("Sigom"))
            {
                ResumoGlobusSigomLabel.Font = new Font(ResumoGlobusSigomLabel.Font, FontStyle.Bold);
                ResumoGlobusSigomLabel.ForeColor = Publicas._fonteBotaoFocado;
                ResumoGlobusSigomLabel.BackColor = _corMenuSelecionado;
                FavoritoResumoGlobusSigomImagem.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Prodata"))
            {
                ResumoGlobusProdataLabel.Font = new Font(ResumoGlobusProdataLabel.Font, FontStyle.Bold);
                ResumoGlobusProdataLabel.ForeColor = Publicas._fonteBotaoFocado;
                ResumoGlobusProdataLabel.BackColor = _corMenuSelecionado;
                FavoritoResumoGlobusProdataImagem.BackColor = _corMenuSelecionado;
                return;
            }
        }

        private void ComparacaoDeGuiasLabel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaRecebedoria;
            Recebedoria.ComparacaoGuias _tela = new Recebedoria.ComparacaoGuias();
            _tela.Size = new Size(this.Width - 5, this.Height - (tituloPanel.Height + panel2.Height + 2));
            _tela.ShowDialog();
            NomePadrao();
        }

        private void ResumoGlobusSigomLabel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            Publicas._chamouPelaTelaResumoSigom = true;
            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaRecebedoria;
            Recebedoria.ResumoComparacao _tela = new Recebedoria.ResumoComparacao();
            _tela.Size = new Size(this.Width - 5, this.Height - (tituloPanel.Height + panel2.Height + 2));
            _tela.ShowDialog();
            NomePadrao();
        }

        #endregion

        #region Financeiro

        private void FinanceiroSetaLabel_Click(object sender, EventArgs e)
        {
            FinanceiroSetaLabel.Text = "3";
            if (!Publicas._TemaBlack)
            {
                FinanceiroSetaLabel.ForeColor = Publicas._bordaEntrada;
                FinanceiroLabel.ForeColor = Publicas._bordaEntrada;
            }
            else
            {
                FinanceiroSetaLabel.ForeColor = Publicas._fonteMenuSelecionado;
                FinanceiroLabel.ForeColor = Publicas._fonteMenuSelecionado;
            }
            FinanceiroSetaLabel.BackColor = _corFundoMenu;

            if (MenuFinanceiroPanel != null)
            {
                FechaSubMenuFinanceiro();
                return;
            }

            #region Cria estrutura 

            // Menu de fundo (onde agrupa os demais itens)
            MenuFinanceiroPanel = new Panel();
            MenuFinanceiroPanel.Size = new Size(155, _heidthMenuSistema);
            MenuFinanceiroPanel.Location = new Point(MenuSistemaPanel.Width + 2, AcessoAoMenuPanel.Height);
            MenuFinanceiroPanel.BackColor = _corFundoDivisao;
            this.Controls.Add(MenuFinanceiroPanel);
            MenuFinanceiroPanel.BringToFront();
            MenuFinanceiroPanel.Visible = true;
            #endregion

            #region Cadastros Financeiros
            FluxoDeCaixaPanel = new Panel();
            FluxoDeCaixaPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            FluxoDeCaixaPanel.Dock = DockStyle.Top;
            FluxoDeCaixaPanel.BackColor = _corFundoMenu;
            FluxoDeCaixaPanel.Name = "FluxoDeCaixaPanel";

            DivisoriaFluxoDeCaixaImagem = new PictureBox();
            DivisoriaFluxoDeCaixaImagem.Size = new Size(0, 4);
            DivisoriaFluxoDeCaixaImagem.Dock = DockStyle.Bottom;
            DivisoriaFluxoDeCaixaImagem.BackColor = _corFundoDivisao;

            Divisoria2FluxoDeCaixaImagem = new PictureBox();
            Divisoria2FluxoDeCaixaImagem.Size = new Size(1, 2);
            Divisoria2FluxoDeCaixaImagem.Dock = DockStyle.Right;
            Divisoria2FluxoDeCaixaImagem.BackColor = _corFundoDivisao; //System.Drawing.Color.FromArgb(2, 91, 149);

            FluxoDeCaixaSetaLabel = new Label();
            FluxoDeCaixaSetaLabel.AutoSize = false;
            FluxoDeCaixaSetaLabel.Size = new Size(20, 59);
            FluxoDeCaixaSetaLabel.Dock = DockStyle.Right;
            FluxoDeCaixaSetaLabel.Text = "6";
            FluxoDeCaixaSetaLabel.Font = new Font("Webdings", (float)12);
            FluxoDeCaixaSetaLabel.TextAlign = ContentAlignment.MiddleCenter;
            FluxoDeCaixaSetaLabel.Click += new System.EventHandler(this.FluxoDeCaixaSetaLabel_Click);
            FluxoDeCaixaSetaLabel.MouseHover += new EventHandler(this.FluxoDeCaixaSetaPanel_MouseHover);
            FluxoDeCaixaSetaLabel.Name = "FluxoDeCaixaSetaLabel";
            FluxoDeCaixaSetaLabel.ForeColor = Color.WhiteSmoke;

            FluxoDeCaixaLabel = new Label();
            FluxoDeCaixaLabel.AutoSize = false;
            FluxoDeCaixaLabel.Size = new Size(_widthLabelMenuSistema, 0);
            FluxoDeCaixaLabel.Dock = DockStyle.Fill;
            FluxoDeCaixaLabel.Text = "Fluxo de Caixa";
            FluxoDeCaixaLabel.Font = CorFontepadraoLabel.Font;
            FluxoDeCaixaLabel.ForeColor = Color.WhiteSmoke;
            FluxoDeCaixaLabel.TextAlign = ContentAlignment.MiddleRight;
            FluxoDeCaixaLabel.MouseHover += new EventHandler(this.FluxoDeCaixaPanel_MouseHover);
            FluxoDeCaixaLabel.Click += new System.EventHandler(this.FluxoDeCaixaSetaLabel_Click);
            FluxoDeCaixaLabel.Name = "FluxoDeCaixaLabel";

            FluxoDeCaixaPanel.Controls.Add(FluxoDeCaixaLabel);
            //FluxoDeCaixaPanel.Controls.Add(FluxoDeCaixaImagem);
            FluxoDeCaixaPanel.Controls.Add(Divisoria2FluxoDeCaixaImagem);
            FluxoDeCaixaPanel.Controls.Add(FluxoDeCaixaSetaLabel);
            FluxoDeCaixaPanel.Controls.Add(DivisoriaFluxoDeCaixaImagem);

            MenuFinanceiroPanel.Controls.Add(FluxoDeCaixaPanel);
            #endregion                   
        }

        private void FechaSubMenuFinanceiro()
        {
            if (MenuFinanceiroPanel != null)
            {
                FecharSubMenuFluxoDeCaixaPanel();
                MenuFinanceiroPanel.Visible = false;
                this.Controls.Remove(MenuFinanceiroPanel);
                MenuFinanceiroPanel.Dispose();
                MenuFinanceiroPanel = null;
            }
        }

        private void MudaSelecaoDeCoresSubMenuFinanceiro()
        {
            FecharSubMenuFluxoDeCaixaPanel();

            FluxoDeCaixaLabel.Font = new Font(FluxoDeCaixaLabel.Font, FluxoDeCaixaLabel.Font.Style & ~FontStyle.Bold);
            FluxoDeCaixaLabel.BackColor = _corFundoMenu;
            FluxoDeCaixaLabel.ForeColor = Color.WhiteSmoke;

            FluxoDeCaixaSetaLabel.Text = "6";
            FluxoDeCaixaSetaLabel.Font = new Font(FluxoDeCaixaSetaLabel.Font, FluxoDeCaixaSetaLabel.Font.Style & ~FontStyle.Bold);
            FluxoDeCaixaSetaLabel.BackColor = _corFundoMenu;
            FluxoDeCaixaSetaLabel.ForeColor = Color.WhiteSmoke;
        }

        private void FluxoDeCaixaPanel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubMenuFinanceiro();
            FechaSubMenuAvaliacaoDesempenho();
            FechaSubMenuBiblioteca();
            FechaSubMenuCurriculo();
            FechaSubMenuCorridas();
            FechaSubMenuCadastroJuridico();
            FechaSubMenuControladoria();
            FechaSubMenuControladoria();
            FechaSubMenuChamadosPanel();
            FechaSubMenuSAC();
            FechaSubMenuSistemasTIPanel();
            FechaSubMenuOperacional();

            if (((Control)sender).Name.Contains("Fluxo"))
            {
                FluxoDeCaixaLabel.Font = new Font(FluxoDeCaixaLabel.Font, FontStyle.Bold);
                FluxoDeCaixaLabel.ForeColor = Publicas._fonteBotaoFocado;
                FluxoDeCaixaLabel.BackColor = _corMenuSelecionado;
                return;
            }
        }

        private void FluxoDeCaixaSetaPanel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubMenuFinanceiro();
            FechaSubMenuAvaliacaoDesempenho();
            FechaSubMenuBiblioteca();
            FechaSubMenuCurriculo();
            FechaSubMenuCorridas();
            FechaSubMenuCadastroJuridico();
            FechaSubMenuControladoria();
            FechaSubMenuControladoria();
            FechaSubMenuChamadosPanel();
            FechaSubMenuSAC();
            FechaSubMenuSistemasTIPanel();
            FechaSubMenuOperacional();

            if (((Control)sender).Name.Contains("Fluxo"))
            {
                FluxoDeCaixaSetaLabel.Font = new Font(FluxoDeCaixaSetaLabel.Font, FontStyle.Bold);
                FluxoDeCaixaSetaLabel.ForeColor = Publicas._fonteBotaoFocado;
                FluxoDeCaixaSetaLabel.BackColor = _corMenuSelecionado;
                return;
            }
        }

        private void FluxoDeCaixaSetaLabel_Click(object sender, EventArgs e)
        {
            FluxoDeCaixaSetaLabel.Text = "3";
            if (!Publicas._TemaBlack)
            {
                FluxoDeCaixaSetaLabel.ForeColor = Publicas._bordaEntrada;
                FluxoDeCaixaLabel.ForeColor = Publicas._bordaEntrada;
            }
            else
            {
                FluxoDeCaixaSetaLabel.ForeColor = Publicas._fonteMenuSelecionado;
                FluxoDeCaixaLabel.ForeColor = Publicas._fonteMenuSelecionado;
            }
            FluxoDeCaixaSetaLabel.BackColor = _corFundoMenu;

            if (SubMenuFluxoDeCaixaPanel != null)
            {
                FecharSubMenuFluxoDeCaixaPanel();
                return;
            }

            #region Cria estrutura 

            // Menu de fundo (onde agrupa os demais itens)
            SubMenuFluxoDeCaixaPanel = new Panel();
            SubMenuFluxoDeCaixaPanel.Size = new Size(155, _heidthMenuSistema * 3);
            SubMenuFluxoDeCaixaPanel.Location = new Point(MenuSistemaPanel.Width + SubMenuFluxoDeCaixaPanel.Width + 4, AcessoAoMenuPanel.Height);
            SubMenuFluxoDeCaixaPanel.BackColor = _corFundoDivisao;
            this.Controls.Add(SubMenuFluxoDeCaixaPanel);
            SubMenuFluxoDeCaixaPanel.BringToFront();
            SubMenuFluxoDeCaixaPanel.Visible = true;
            #endregion

            #region ResumoFluxoPanel 
            ResumoFluxoPanel = new Panel();
            ResumoFluxoPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            ResumoFluxoPanel.Dock = DockStyle.Top;
            ResumoFluxoPanel.BackColor = _corFundoMenu;
            ResumoFluxoPanel.Name = "ResumoFluxoPanel";
            ResumoFluxoPanel.Enabled = Publicas._usuario.Administrador || Publicas._usuario.AcessaResumoFluxoCaixa;

            DivisoriaResumoFluxoImagem = new PictureBox();
            DivisoriaResumoFluxoImagem.Size = new Size(0, 4);
            DivisoriaResumoFluxoImagem.Dock = DockStyle.Bottom;
            DivisoriaResumoFluxoImagem.BackColor = _corFundoDivisao;

            ResumoFluxoLabel = new Label();
            ResumoFluxoLabel.AutoSize = false;
            ResumoFluxoLabel.Size = new Size(_widthLabelMenuSistema, 0);
            ResumoFluxoLabel.Dock = DockStyle.Fill;
            ResumoFluxoLabel.Text = "Resumo";
            ResumoFluxoLabel.Font = CorFontepadraoLabel.Font;
            ResumoFluxoLabel.ForeColor = Color.WhiteSmoke;
            ResumoFluxoLabel.TextAlign = ContentAlignment.MiddleRight;
            ResumoFluxoLabel.MouseHover += new EventHandler(this.CadastrosFluxoLabel_MouseHover);
            ResumoFluxoLabel.Click += new System.EventHandler(this.ResumoFluxoLabel_Click);
            ResumoFluxoLabel.Name = "ResumoFluxoPanelLabel";


            FavoritoResumoFluxoImagem = new PictureBox();
            FavoritoResumoFluxoImagem.Size = new Size(10, 10);
            FavoritoResumoFluxoImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoResumoFluxoImagem.Name = "ResumoFluxoPic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoResumoFluxoImagem.Name))
            {
                FavoritoResumoFluxoImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoResumoFluxoImagem.Left = 5;
            FavoritoResumoFluxoImagem.Top = 35;
            FavoritoResumoFluxoImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoResumoFluxoImagem.Tag = ResumoFluxoLabel.Text;
            FavoritoResumoFluxoImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoResumoFluxoImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoResumoFluxoImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoResumoFluxoImagem.AccessibleName = "Financeiro";

            ResumoFluxoPanel.Controls.Add(ResumoFluxoLabel);
            ResumoFluxoPanel.Controls.Add(DivisoriaResumoFluxoImagem);
            ResumoFluxoPanel.Controls.Add(FavoritoResumoFluxoImagem);
            FavoritoResumoFluxoImagem.BringToFront();

            SubMenuFluxoDeCaixaPanel.Controls.Add(ResumoFluxoPanel);
            #endregion            

            #region DemonstrativoPanel 
            DemonstrativoFluxoPanel = new Panel();
            DemonstrativoFluxoPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            DemonstrativoFluxoPanel.Dock = DockStyle.Top;
            DemonstrativoFluxoPanel.BackColor = _corFundoMenu;
            DemonstrativoFluxoPanel.Name = "DemonstrativoPanel";
            DemonstrativoFluxoPanel.Enabled = Publicas._usuario.Administrador || Publicas._usuario.AcessaDemonstrativoFluxoCaixa;

            DivisoriaDemonstrativoFluxoImagem = new PictureBox();
            DivisoriaDemonstrativoFluxoImagem.Size = new Size(0, 4);
            DivisoriaDemonstrativoFluxoImagem.Dock = DockStyle.Bottom;
            DivisoriaDemonstrativoFluxoImagem.BackColor = _corFundoDivisao;

            DemonstrativoFluxoLabel = new Label();
            DemonstrativoFluxoLabel.AutoSize = false;
            DemonstrativoFluxoLabel.Size = new Size(_widthLabelMenuSistema, 0);
            DemonstrativoFluxoLabel.Dock = DockStyle.Fill;
            DemonstrativoFluxoLabel.Text = "Demonstrativo";
            DemonstrativoFluxoLabel.Font = CorFontepadraoLabel.Font;
            DemonstrativoFluxoLabel.ForeColor = Color.WhiteSmoke;
            DemonstrativoFluxoLabel.TextAlign = ContentAlignment.MiddleRight;
            DemonstrativoFluxoLabel.MouseHover += new EventHandler(this.CadastrosFluxoLabel_MouseHover);
            DemonstrativoFluxoLabel.Click += new System.EventHandler(this.DemonstrativoFluxoLabel_Click);
            DemonstrativoFluxoLabel.Name = "DemonstrativoFluxoLabel";


            FavoritoDemonstrativoFluxoImagem = new PictureBox();
            FavoritoDemonstrativoFluxoImagem.Size = new Size(10, 10);
            FavoritoDemonstrativoFluxoImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoDemonstrativoFluxoImagem.Name = "DemonstrativoFluxoPic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoDemonstrativoFluxoImagem.Name))
            {
                FavoritoDemonstrativoFluxoImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoDemonstrativoFluxoImagem.Left = 5;
            FavoritoDemonstrativoFluxoImagem.Top = 35;
            FavoritoDemonstrativoFluxoImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoDemonstrativoFluxoImagem.Tag = DemonstrativoFluxoLabel.Text;
            FavoritoDemonstrativoFluxoImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoDemonstrativoFluxoImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoDemonstrativoFluxoImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoDemonstrativoFluxoImagem.AccessibleName = "Financeiro";

            DemonstrativoFluxoPanel.Controls.Add(DemonstrativoFluxoLabel);
            DemonstrativoFluxoPanel.Controls.Add(DivisoriaDemonstrativoFluxoImagem);
            DemonstrativoFluxoPanel.Controls.Add(FavoritoDemonstrativoFluxoImagem);
            FavoritoDemonstrativoFluxoImagem.BringToFront();

            SubMenuFluxoDeCaixaPanel.Controls.Add(DemonstrativoFluxoPanel);
            #endregion            

            #region Cadastros Fluxo 
            CadastrosFluxoPanel = new Panel();
            CadastrosFluxoPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            CadastrosFluxoPanel.Dock = DockStyle.Top;
            CadastrosFluxoPanel.BackColor = _corFundoMenu;
            CadastrosFluxoPanel.Name = "CadastrosFluxoPanel";
            CadastrosFluxoPanel.Enabled = Publicas._usuario.AcessaCadastrosFinanceiro || Publicas._usuario.Administrador;

            DivisoriaCadastrosFluxoImagem = new PictureBox();
            DivisoriaCadastrosFluxoImagem.Size = new Size(0, 4);
            DivisoriaCadastrosFluxoImagem.Dock = DockStyle.Bottom;
            DivisoriaCadastrosFluxoImagem.BackColor = _corFundoDivisao;

            Divisoria2CadastrosFluxoImagem = new PictureBox();
            Divisoria2CadastrosFluxoImagem.Size = new Size(1, 2);
            Divisoria2CadastrosFluxoImagem.Dock = DockStyle.Right;
            Divisoria2CadastrosFluxoImagem.BackColor = _corFundoDivisao;//  System.Drawing.Color.FromArgb(2, 91, 149);

            CadastrosFluxoSetaLabel = new Label();
            CadastrosFluxoSetaLabel.AutoSize = false;
            CadastrosFluxoSetaLabel.Size = new Size(20, 59);
            CadastrosFluxoSetaLabel.Dock = DockStyle.Right;
            CadastrosFluxoSetaLabel.Text = "6";
            CadastrosFluxoSetaLabel.Font = new Font("Webdings", (float)12);
            CadastrosFluxoSetaLabel.TextAlign = ContentAlignment.MiddleCenter;
            CadastrosFluxoSetaLabel.Click += new System.EventHandler(this.CadastrosFluxoSetaLabel_Click);
            CadastrosFluxoSetaLabel.MouseHover += new EventHandler(this.CadastrosFluxoSetaLabel_MouseHover);
            CadastrosFluxoSetaLabel.Name = "CadastrosFluxoSetaLabel";
            CadastrosFluxoSetaLabel.ForeColor = Color.WhiteSmoke;

            CadastrosFluxoLabel = new Label();
            CadastrosFluxoLabel.AutoSize = false;
            CadastrosFluxoLabel.Size = new Size(_widthLabelMenuSistema, 0);
            CadastrosFluxoLabel.Dock = DockStyle.Fill;
            CadastrosFluxoLabel.Text = "Cadastros";
            CadastrosFluxoLabel.Font = CorFontepadraoLabel.Font;
            CadastrosFluxoLabel.ForeColor = Color.WhiteSmoke;
            CadastrosFluxoLabel.TextAlign = ContentAlignment.MiddleRight;
            CadastrosFluxoLabel.MouseHover += new EventHandler(this.CadastrosFluxoLabel_MouseHover);
            CadastrosFluxoLabel.Click += new System.EventHandler(this.CadastrosFluxoSetaLabel_Click);
            CadastrosFluxoLabel.Name = "CadastrosFluxoLabel";

            CadastrosFluxoPanel.Controls.Add(CadastrosFluxoLabel);
            CadastrosFluxoPanel.Controls.Add(Divisoria2CadastrosFluxoImagem);
            CadastrosFluxoPanel.Controls.Add(CadastrosFluxoSetaLabel);
            CadastrosFluxoPanel.Controls.Add(DivisoriaCadastrosFluxoImagem);

            SubMenuFluxoDeCaixaPanel.Controls.Add(CadastrosFluxoPanel);
            #endregion                   
        }
        
        #region FluxoDecaixa
        private void MudaSelecaoDeCoresSubMenuFluxoDeCaixa()
        {
            FecharSubMenuCadastroFinanceiroPanel();
            CadastrosFluxoLabel.Font = new Font(CadastrosFluxoLabel.Font, CadastrosFluxoLabel.Font.Style & ~FontStyle.Bold);
            DemonstrativoFluxoLabel.Font = new Font(DemonstrativoFluxoLabel.Font, DemonstrativoFluxoLabel.Font.Style & ~FontStyle.Bold);
            ResumoFluxoLabel.Font = new Font(ResumoFluxoLabel.Font, ResumoFluxoLabel.Font.Style & ~FontStyle.Bold);

            CadastrosFluxoLabel.BackColor = _corFundoMenu;
            DemonstrativoFluxoLabel.BackColor = _corFundoMenu;
            ResumoFluxoLabel.BackColor = _corFundoMenu;

            CadastrosFluxoLabel.ForeColor = Color.WhiteSmoke;
            DemonstrativoFluxoLabel.ForeColor = Color.WhiteSmoke;
            ResumoFluxoLabel.ForeColor = Color.WhiteSmoke;

            CadastrosFluxoSetaLabel.Text = "6";
            CadastrosFluxoSetaLabel.Font = new Font(CadastrosFluxoSetaLabel.Font, CadastrosFluxoSetaLabel.Font.Style & ~FontStyle.Bold);
            CadastrosFluxoSetaLabel.BackColor = _corFundoMenu;
            CadastrosFluxoSetaLabel.ForeColor = Color.WhiteSmoke;

            FavoritoDemonstrativoFluxoImagem.BackColor = DemonstrativoFluxoLabel.BackColor;
            FavoritoResumoFluxoImagem.BackColor = DemonstrativoFluxoLabel.BackColor;
        }

        private void CadastrosFluxoLabel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubMenuFluxoDeCaixa();
            FechaSubMenuAvaliacaoDesempenho();
            FechaSubMenuBiblioteca();
            FechaSubMenuCurriculo();
            FechaSubMenuCorridas();
            FechaSubMenuCadastroJuridico();
            FechaSubMenuControladoria();
            FechaSubMenuControladoria();
            FechaSubMenuChamadosPanel();
            FechaSubMenuSAC();
            FechaSubMenuSistemasTIPanel();
            FechaSubMenuOperacional();

            if (((Control)sender).Name.Contains("Cadastro"))
            {
                CadastrosFluxoLabel.Font = new Font(CadastrosFluxoLabel.Font, FontStyle.Bold);
                CadastrosFluxoLabel.ForeColor = Publicas._fonteBotaoFocado;
                CadastrosFluxoLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Demonstrativo"))
            {
                DemonstrativoFluxoLabel.Font = new Font(DemonstrativoFluxoLabel.Font, FontStyle.Bold);
                DemonstrativoFluxoLabel.ForeColor = Publicas._fonteBotaoFocado;
                DemonstrativoFluxoLabel.BackColor = _corMenuSelecionado;
                FavoritoDemonstrativoFluxoImagem.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Resumo"))
            {
                ResumoFluxoLabel.Font = new Font(FluxoDeCaixaLabel.Font, FontStyle.Bold);
                ResumoFluxoLabel.ForeColor = Publicas._fonteBotaoFocado;
                ResumoFluxoLabel.BackColor = _corMenuSelecionado;
                FavoritoResumoFluxoImagem.BackColor = _corMenuSelecionado;
                return;
            }
        }

        private void CadastrosFluxoSetaLabel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubMenuFluxoDeCaixa();
            FechaSubMenuAvaliacaoDesempenho();
            FechaSubMenuBiblioteca();
            FechaSubMenuCurriculo();
            FechaSubMenuCorridas();
            FechaSubMenuCadastroJuridico();
            FechaSubMenuControladoria();
            FechaSubMenuControladoria();
            FechaSubMenuChamadosPanel();
            FechaSubMenuSAC();
            FechaSubMenuSistemasTIPanel();
            FechaSubMenuOperacional();

            if (((Control)sender).Name.Contains("Cadastro"))
            {
                CadastrosFluxoSetaLabel.Font = new Font(CadastrosFluxoSetaLabel.Font, FontStyle.Bold);
                CadastrosFluxoSetaLabel.ForeColor = Publicas._fonteBotaoFocado;
                CadastrosFluxoSetaLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Demonstrativo"))
            {
                DemonstrativoFluxoLabel.Font = new Font(DemonstrativoFluxoLabel.Font, FontStyle.Bold);
                DemonstrativoFluxoLabel.ForeColor = Publicas._fonteBotaoFocado;
                DemonstrativoFluxoLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Resumo"))
            {
                ResumoFluxoLabel.Font = new Font(FluxoDeCaixaLabel.Font, FontStyle.Bold);
                ResumoFluxoLabel.ForeColor = Publicas._fonteBotaoFocado;
                ResumoFluxoLabel.BackColor = _corMenuSelecionado;
                return;
            }
        }

        private void FecharSubMenuFluxoDeCaixaPanel()
        {
            if (SubMenuFluxoDeCaixaPanel != null)
            {
                FecharSubMenuCadastroFinanceiroPanel();
                SubMenuFluxoDeCaixaPanel.Visible = false;
                this.Controls.Remove(SubMenuFluxoDeCaixaPanel);
                SubMenuFluxoDeCaixaPanel.Dispose();
                SubMenuFluxoDeCaixaPanel = null;
            }
        }


        private void ResumoFluxoLabel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaFinanceiro;
            Financeiro.Resumo _tela = new Financeiro.Resumo();
            _tela.Size = new Size(this.Width - 5, this.Height - (tituloPanel.Height + panel2.Height + 2));
            _tela.ShowDialog();
            NomePadrao();
        }

        private void DemonstrativoFluxoLabel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaFinanceiro;
            Financeiro.Demonstrativo _tela = new Financeiro.Demonstrativo();
            _tela.Size = new Size(this.Width - 5, this.Height - (tituloPanel.Height + panel2.Height + 2));
            _tela.ShowDialog();
            NomePadrao();
        }

        private void CadastrosFluxoSetaLabel_Click(object sender, EventArgs e)
        {
            CadastrosFluxoSetaLabel.Text = "3";
            if (!Publicas._TemaBlack)
            {
                CadastrosFluxoSetaLabel.ForeColor = Publicas._bordaEntrada;
                CadastrosFluxoLabel.ForeColor = Publicas._bordaEntrada;
            }
            else
            {
                CadastrosFluxoSetaLabel.ForeColor = Publicas._fonteMenuSelecionado;
                CadastrosFluxoLabel.ForeColor = Publicas._fonteMenuSelecionado;
            }
            CadastrosFluxoSetaLabel.BackColor = _corFundoMenu;

            if (SubMenuCadastroFinanceiroPanel != null)
            {
                FecharSubMenuCadastroFinanceiroPanel();
                return;
            }

            #region Cria estrutura 
            // Menu de fundo (onde agrupa os demais itens)
            SubMenuCadastroFinanceiroPanel = new Panel();
            SubMenuCadastroFinanceiroPanel.Size = new Size(155, _heidthMenuSistema * 3);
            SubMenuCadastroFinanceiroPanel.Location = new Point(MenuSistemaPanel.Width + SubMenuFluxoDeCaixaPanel.Width + SubMenuCadastroFinanceiroPanel.Width + 6, AcessoAoMenuPanel.Height);
            SubMenuCadastroFinanceiroPanel.BackColor = _corFundoDivisao;
            this.Controls.Add(SubMenuCadastroFinanceiroPanel);
            SubMenuCadastroFinanceiroPanel.BringToFront();
            SubMenuCadastroFinanceiroPanel.Visible = true;
            #endregion

            #region VariaveisFluxoPanel 
            VariaveisFluxoPanel = new Panel();
            VariaveisFluxoPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            VariaveisFluxoPanel.Dock = DockStyle.Top;
            VariaveisFluxoPanel.BackColor = _corFundoMenu;
            VariaveisFluxoPanel.Name = "VariaveisFluxoPanel";
            //VariaveisFluxoPanel.Enabled = Publicas._usuario.Administrador;

            DivisoriaVariaveisFluxoImagem = new PictureBox();
            DivisoriaVariaveisFluxoImagem.Size = new Size(0, 4);
            DivisoriaVariaveisFluxoImagem.Dock = DockStyle.Bottom;
            DivisoriaVariaveisFluxoImagem.BackColor = _corFundoDivisao;

            VariaveisFluxoLabel = new Label();
            VariaveisFluxoLabel.AutoSize = false;
            VariaveisFluxoLabel.Size = new Size(_widthLabelMenuSistema, 0);
            VariaveisFluxoLabel.Dock = DockStyle.Fill;
            VariaveisFluxoLabel.Text = "Variáveis";
            VariaveisFluxoLabel.Font = CorFontepadraoLabel.Font;
            VariaveisFluxoLabel.ForeColor = Color.WhiteSmoke;
            VariaveisFluxoLabel.TextAlign = ContentAlignment.MiddleRight;
            VariaveisFluxoLabel.MouseHover += new EventHandler(this.BancosFluxoLabel_MouseHover);
            VariaveisFluxoLabel.Click += new System.EventHandler(this.VariaveisFluxoLabel_Click);
            VariaveisFluxoLabel.Name = "VariaveisFluxoPanelLabel";


            FavoritoVariaveisFluxoImagem = new PictureBox();
            FavoritoVariaveisFluxoImagem.Size = new Size(10, 10);
            FavoritoVariaveisFluxoImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoVariaveisFluxoImagem.Name = "VariaveisFluxoPic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoVariaveisFluxoImagem.Name))
            {
                FavoritoVariaveisFluxoImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoVariaveisFluxoImagem.Left = 5;
            FavoritoVariaveisFluxoImagem.Top = 35;
            FavoritoVariaveisFluxoImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoVariaveisFluxoImagem.Tag = VariaveisFluxoLabel.Text;
            FavoritoVariaveisFluxoImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoVariaveisFluxoImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoVariaveisFluxoImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoVariaveisFluxoImagem.AccessibleName = "Financeiro";

            VariaveisFluxoPanel.Controls.Add(VariaveisFluxoLabel);
            VariaveisFluxoPanel.Controls.Add(DivisoriaVariaveisFluxoImagem);
            VariaveisFluxoPanel.Controls.Add(FavoritoVariaveisFluxoImagem);
            FavoritoVariaveisFluxoImagem.BringToFront();

            SubMenuCadastroFinanceiroPanel.Controls.Add(VariaveisFluxoPanel);
            #endregion            

            #region BancosPanel 
            BancosFluxoPanel = new Panel();
            BancosFluxoPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            BancosFluxoPanel.Dock = DockStyle.Top;
            BancosFluxoPanel.BackColor = _corFundoMenu;
            BancosFluxoPanel.Name = "BancosPanel";

            DivisoriaBancosFluxoImagem = new PictureBox();
            DivisoriaBancosFluxoImagem.Size = new Size(0, 4);
            DivisoriaBancosFluxoImagem.Dock = DockStyle.Bottom;
            DivisoriaBancosFluxoImagem.BackColor = _corFundoDivisao;

            BancosFluxoLabel = new Label();
            BancosFluxoLabel.AutoSize = false;
            BancosFluxoLabel.Size = new Size(_widthLabelMenuSistema, 0);
            BancosFluxoLabel.Dock = DockStyle.Fill;
            BancosFluxoLabel.Text = "Bancos";
            BancosFluxoLabel.Font = CorFontepadraoLabel.Font;
            BancosFluxoLabel.ForeColor = Color.WhiteSmoke;
            BancosFluxoLabel.TextAlign = ContentAlignment.MiddleRight;
            BancosFluxoLabel.MouseHover += new EventHandler(this.BancosFluxoLabel_MouseHover);
            BancosFluxoLabel.Click += new System.EventHandler(this.BancosFluxoLabel_Click);
            BancosFluxoLabel.Name = "BancosFluxoLabel";


            FavoritoBancosFluxoImagem = new PictureBox();
            FavoritoBancosFluxoImagem.Size = new Size(10, 10);
            FavoritoBancosFluxoImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoBancosFluxoImagem.Name = "BancosFluxoPic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoBancosFluxoImagem.Name))
            {
                FavoritoBancosFluxoImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoBancosFluxoImagem.Left = 5;
            FavoritoBancosFluxoImagem.Top = 35;
            FavoritoBancosFluxoImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoBancosFluxoImagem.Tag = BancosFluxoLabel.Text;
            FavoritoBancosFluxoImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoBancosFluxoImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoBancosFluxoImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoBancosFluxoImagem.AccessibleName = "Financeiro";

            BancosFluxoPanel.Controls.Add(BancosFluxoLabel);
            BancosFluxoPanel.Controls.Add(DivisoriaBancosFluxoImagem);
            BancosFluxoPanel.Controls.Add(FavoritoBancosFluxoImagem);
            FavoritoBancosFluxoImagem.BringToFront();

            SubMenuCadastroFinanceiroPanel.Controls.Add(BancosFluxoPanel);
            #endregion            

            #region ColunasPanel 
            ColunasFluxoPanel = new Panel();
            ColunasFluxoPanel.Size = new Size(_widthMenuPadrao, _heidthMenuSistema);
            ColunasFluxoPanel.Dock = DockStyle.Top;
            ColunasFluxoPanel.BackColor = _corFundoMenu;
            ColunasFluxoPanel.Name = "ColunasPanel";

            DivisoriaColunasFluxoImagem = new PictureBox();
            DivisoriaColunasFluxoImagem.Size = new Size(0, 4);
            DivisoriaColunasFluxoImagem.Dock = DockStyle.Bottom;
            DivisoriaColunasFluxoImagem.BackColor = _corFundoDivisao;

            ColunasFluxoLabel = new Label();
            ColunasFluxoLabel.AutoSize = false;
            ColunasFluxoLabel.Size = new Size(_widthLabelMenuSistema, 0);
            ColunasFluxoLabel.Dock = DockStyle.Fill;
            ColunasFluxoLabel.Text = "Colunas";
            ColunasFluxoLabel.Font = CorFontepadraoLabel.Font;
            ColunasFluxoLabel.ForeColor = Color.WhiteSmoke;
            ColunasFluxoLabel.TextAlign = ContentAlignment.MiddleRight;
            ColunasFluxoLabel.MouseHover += new EventHandler(this.BancosFluxoLabel_MouseHover);
            ColunasFluxoLabel.Click += new System.EventHandler(this.ColunasLabel_Click);
            ColunasFluxoLabel.Name = "ColunasFluxoLabel";


            FavoritoColunasFluxoImagem = new PictureBox();
            FavoritoColunasFluxoImagem.Size = new Size(10, 10);
            FavoritoColunasFluxoImagem.ImageLocation = @"Imagens\CoracaoEscuro.png";
            FavoritoColunasFluxoImagem.Name = "ColunasFluxoPic";
            foreach (var item in _listaMenusFavoritos.Where(w => w.Name == FavoritoColunasFluxoImagem.Name))
            {
                FavoritoColunasFluxoImagem.ImageLocation = @"Imagens\CoracaoVermelho.png";
            }
            FavoritoColunasFluxoImagem.Left = 5;
            FavoritoColunasFluxoImagem.Top = 35;
            FavoritoColunasFluxoImagem.SizeMode = PictureBoxSizeMode.Zoom;
            FavoritoColunasFluxoImagem.Tag = ColunasFluxoLabel.Text;
            FavoritoColunasFluxoImagem.Click += new System.EventHandler(FavoritoMetasImagem_Click);
            FavoritoColunasFluxoImagem.MouseHover += new EventHandler(this.FavoritoMetasImagem_MouseHover);
            FavoritoColunasFluxoImagem.MouseLeave += new EventHandler(this.FavoritoMetasImagem_MouseLeave);
            FavoritoColunasFluxoImagem.AccessibleName = "Financeiro";

            ColunasFluxoPanel.Controls.Add(ColunasFluxoLabel);
            ColunasFluxoPanel.Controls.Add(DivisoriaColunasFluxoImagem);
            ColunasFluxoPanel.Controls.Add(FavoritoColunasFluxoImagem);
            FavoritoColunasFluxoImagem.BringToFront();

            SubMenuCadastroFinanceiroPanel.Controls.Add(ColunasFluxoPanel);
            #endregion
        }

        #region Cadastros
        private void FecharSubMenuCadastroFinanceiroPanel()
        {
            if (SubMenuCadastroFinanceiroPanel != null)
            {
                SubMenuCadastroFinanceiroPanel.Visible = false;
                this.Controls.Remove(SubMenuCadastroFinanceiroPanel);
                SubMenuCadastroFinanceiroPanel.Dispose();
                SubMenuCadastroFinanceiroPanel = null;
            }
        }

        private void MudaSelecaoDeCoresSubMenuCadastroFluxo()
        {
            BancosFluxoLabel.Font = new Font(BancosFluxoLabel.Font, BancosFluxoLabel.Font.Style & ~FontStyle.Bold);
            VariaveisFluxoLabel.Font = new Font(VariaveisFluxoLabel.Font, VariaveisFluxoLabel.Font.Style & ~FontStyle.Bold);
            ColunasFluxoLabel.Font = new Font(ColunasFluxoLabel.Font, ColunasFluxoLabel.Font.Style & ~FontStyle.Bold);

            BancosFluxoLabel.BackColor = _corFundoMenu;
            VariaveisFluxoLabel.BackColor = _corFundoMenu;
            ColunasFluxoLabel.BackColor = _corFundoMenu;

            BancosFluxoLabel.ForeColor = Color.WhiteSmoke;
            VariaveisFluxoLabel.ForeColor = Color.WhiteSmoke;
            ColunasFluxoLabel.ForeColor = Color.WhiteSmoke;

            FavoritoBancosFluxoImagem.BackColor = BancosFluxoLabel.BackColor;
            FavoritoColunasFluxoImagem.BackColor = BancosFluxoLabel.BackColor;
            FavoritoVariaveisFluxoImagem.BackColor = BancosFluxoLabel.BackColor;
        }

        private void BancosFluxoLabel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubMenuCadastroFluxo();

            if (((Control)sender).Name.Contains("Bancos"))
            {
                BancosFluxoLabel.Font = new Font(BancosFluxoLabel.Font, FontStyle.Bold);
                BancosFluxoLabel.ForeColor = Publicas._fonteBotaoFocado;
                BancosFluxoLabel.BackColor = _corMenuSelecionado;
                FavoritoBancosFluxoImagem.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Colunas"))
            {
                ColunasFluxoLabel.Font = new Font(DemonstrativoFluxoLabel.Font, FontStyle.Bold);
                ColunasFluxoLabel.ForeColor = Publicas._fonteBotaoFocado;
                ColunasFluxoLabel.BackColor = _corMenuSelecionado;
                FavoritoColunasFluxoImagem.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Variaveis"))
            {
                VariaveisFluxoLabel.Font = new Font(FluxoDeCaixaLabel.Font, FontStyle.Bold);
                VariaveisFluxoLabel.ForeColor = Publicas._fonteBotaoFocado;
                VariaveisFluxoLabel.BackColor = _corMenuSelecionado;
                FavoritoVariaveisFluxoImagem.BackColor = _corMenuSelecionado;
                return;
            }
        }

        private void ColunasLabel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaFinanceiro;
            Financeiro.Colunas _tela = new Financeiro.Colunas();
            _tela.ShowDialog();
            NomePadrao();
        }
        
        private void BancosFluxoLabel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaFinanceiro;
            Financeiro.Bancos _tela = new Financeiro.Bancos();
            _tela.ShowDialog();
            NomePadrao();
        }

        private void VariaveisFluxoLabel_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaFinanceiro;
            Financeiro.Variaveis _tela = new Financeiro.Variaveis();
            _tela.ShowDialog();
            NomePadrao();
        }

        #endregion

        #endregion
        
        #endregion

        #endregion

        #region DashBoard
        private void BotaoDashboardLabel_MouseHover(object sender, EventArgs e)
        {
            BotaoDashboardLabel.Cursor = Cursors.Hand;
            BotaoDashboardLabel.BackColor = _corMenuSelecionado;
        }

        private void BotaoDashboardLabel_MouseLeave(object sender, EventArgs e)
        {
            BotaoDashboardLabel.Cursor = Cursors.Hand;
            BotaoDashboardLabel.BackColor = System.Drawing.Color.FromArgb(128, 131, 143);
        }

        private void BotaoDashboardLabel_Click(object sender, EventArgs e)
        {
            //filter = new GridDynamicFilter();
            //metroColor = new GridMetroColors();
            colunaGrid = new GridColumnDescriptor();
            TemaPanel.Visible = false;
            FechaSubMenuRecursosHumanos();
            FechaSubMenuFavoritos();
            FechaSubMenuJuridico();
            FechaSubMenuEscrituracaoFiscal();
            FechaSubMenuControladoria();
            FechaSubMenuAtendimento();
            FechaSubMenuTI();
            FechaSubMenuBSC();
            FechaSubMenuOperacional();
            FechaSubMenuRecebedoria();
            FechaSubMenuFinanceiro();

            if (MenuSistemaPanel != null)
            {
                MenuSistemaPanel.Visible = false;
                this.Controls.Remove(MenuSistemaPanel);
                MenuSistemaPanel.Dispose();
                MenuSistemaPanel = null;
            }

            if (MenuUsuarioPanel != null)
            {
                MenuUsuarioPanel.Visible = false;
                this.Controls.Remove(MenuUsuarioPanel);
                MenuUsuarioPanel.Dispose();
                MenuUsuarioPanel = null;
            }

            MostraNotificacoesPanel.Visible = false;

            if (DashBoardPanel.Width == 25)
            {
                DashBoardPanel.Size = new Size(this.Width - 5, 0);
                BotaoDashboardLabel.Text = "8";
                DashBordTabControl.Visible = true;

                #region Agenda
                TipoAgendaComboBox_SelectedIndexChanged(sender, new EventArgs());

                TipoAgendaComboBox.FlatBorderColor = (Publicas._TemaBlack ? Publicas._bordaEntrada : Publicas._panelTitulo);
                TipoAgendaComboBox.Style = Syncfusion.Windows.Forms.VisualStyle.VS2010;

                if (Publicas._TemaBlack)
                {
                    TipoAgendaLabel.ForeColor = Publicas._fonte;
                    TipoAgendaComboBox.ForeColor = Publicas._fonte;
                    ImagemSetaTipoAgendaLabel.ForeColor = Publicas._fonte;
                    TipoAgendaComboBox.BackColor = Publicas._fundo;
                }
                else
                {
                    TipoAgendaLabel.ForeColor = Color.Black;
                    TipoAgendaComboBox.ForeColor = Color.Black;
                    ImagemSetaTipoAgendaLabel.ForeColor = Color.Black;
                    TipoAgendaComboBox.BackColor = backGroundOriginal;
                }

                #endregion

                #region Cria grid para o comunicado

                //ComunicadoDashBoardPanel = new Panel();
                ComunicadoDashBoardPanel.Dock = DockStyle.Fill;

                #region Campo para o filtro de comunicados
                //FiltrosComunicadosDashBoardPanel = new Panel();
                FiltrosComunicadosDashBoardPanel.Size = new Size(0, 42);
                FiltrosComunicadosDashBoardPanel.Dock = DockStyle.Top;
                if (Publicas._TemaBlack)
                    FiltrosComunicadosDashBoardPanel.BackColor = Publicas._fundo;
                else
                    FiltrosComunicadosDashBoardPanel.BackColor = backGroundOriginal;

                //ListaComunicadosDashBoardLabel = new Label();
                ListaComunicadosDashBoardLabel.Font = new Font(dataHoraLabel.Font.FontFamily, (float)12);
                ListaComunicadosDashBoardLabel.ForeColor = (Publicas._TemaBlack ? Publicas._fonte : Publicas._panelTitulo);
                ListaComunicadosDashBoardLabel.AutoSize = true;
                ListaComunicadosDashBoardLabel.TextAlign = ContentAlignment.MiddleRight;
                ListaComunicadosDashBoardLabel.Text = "Informe o Status";
                ListaComunicadosDashBoardLabel.Location = new Point(49, 9);

                //AnoComunicadosDashBoardLabel = new Label();
                AnoComunicadosDashBoardLabel.Font = new Font(dataHoraLabel.Font.FontFamily, (float)12);
                AnoComunicadosDashBoardLabel.ForeColor = (Publicas._TemaBlack ? Publicas._fonte : Publicas._panelTitulo);
                AnoComunicadosDashBoardLabel.AutoSize = true;
                AnoComunicadosDashBoardLabel.TextAlign = ContentAlignment.MiddleRight;
                AnoComunicadosDashBoardLabel.Text = "Ano";
                AnoComunicadosDashBoardLabel.Location = new Point(430, 9);

                //ImagemListaLabel = new Label();
                ImagemListaLabel.Font = new Font("Wingdings 3", (float)12);
                ImagemListaLabel.ForeColor = (Publicas._TemaBlack ? Publicas._fonte : Publicas._panelTitulo);
                ImagemListaLabel.AutoSize = false;
                ImagemListaLabel.TextAlign = ContentAlignment.MiddleLeft;
                ImagemListaLabel.Text = "_";
                ImagemListaLabel.Location = new Point(200, 9);

                //ImagemAnoLabel = new Label();
                ImagemAnoLabel.Font = new Font("Wingdings 3", (float)12);
                ImagemAnoLabel.ForeColor = (Publicas._TemaBlack ? Publicas._fonte : Publicas._panelTitulo);
                ImagemAnoLabel.AutoSize = false;
                ImagemAnoLabel.TextAlign = ContentAlignment.MiddleLeft;
                ImagemAnoLabel.Text = "_";
                ImagemAnoLabel.Location = new Point(480, 9);

                //MensagemComunicadosDashBoardLabel = new Label();
                MensagemComunicadosDashBoardLabel.Font = new Font(dataHoraLabel.Font.FontFamily, (float)12, FontStyle.Bold);
                MensagemComunicadosDashBoardLabel.ForeColor = Publicas._fonte;
                MensagemComunicadosDashBoardLabel.Dock = DockStyle.Right;
                MensagemComunicadosDashBoardLabel.AutoSize = false;
                MensagemComunicadosDashBoardLabel.TextAlign = ContentAlignment.MiddleRight;
                MensagemComunicadosDashBoardLabel.Size = new Size(233, 0);

                //StatusComunicadosDashBoardComboBox = new ComboBoxAdv();
                StatusComunicadosDashBoardComboBox.FlatBorderColor = (Publicas._TemaBlack ? Publicas._bordaEntrada : Publicas._panelTitulo);

                StatusComunicadosDashBoardComboBox.Font = new Font(dataHoraLabel.Font.FontFamily, (float)9.75);
                StatusComunicadosDashBoardComboBox.Size = new Size(188, 25);
                StatusComunicadosDashBoardComboBox.Location = new Point(228, 7);
                StatusComunicadosDashBoardComboBox.Style = Syncfusion.Windows.Forms.VisualStyle.VS2010;
                StatusComunicadosDashBoardComboBox.DropDownStyle = ComboBoxStyle.DropDownList;
                StatusComunicadosDashBoardComboBox.SelectedIndexChanged += new System.EventHandler(StatusComunicadosDashBoardComboBox_SelectedIndexChanged);

                StatusComunicadosDashBoardComboBox.ForeColor = Color.Black;
                if (Publicas._TemaBlack)
                {
                    StatusComunicadosDashBoardComboBox.BackColor = Publicas._fundo;
                    StatusComunicadosDashBoardComboBox.ForeColor = Publicas._fonte;
                }

                //AnoComunicadosDashBoardComboBox = new ComboBoxAdv();
                AnoComunicadosDashBoardComboBox.FlatBorderColor = (Publicas._TemaBlack ? Publicas._bordaEntrada : Publicas._panelTitulo);

                AnoComunicadosDashBoardComboBox.Font = new Font(dataHoraLabel.Font.FontFamily, (float)9.75);
                AnoComunicadosDashBoardComboBox.Size = new Size(81, 25);
                AnoComunicadosDashBoardComboBox.Location = new Point(503, 7);
                AnoComunicadosDashBoardComboBox.Style = Syncfusion.Windows.Forms.VisualStyle.VS2010;
                AnoComunicadosDashBoardComboBox.DropDownStyle = ComboBoxStyle.DropDownList;
                AnoComunicadosDashBoardComboBox.SelectedIndexChanged += new System.EventHandler(this.AnoComunicadosDashBoardComboBox_SelectedIndexChanged);

                AnoComunicadosDashBoardComboBox.ForeColor = Color.Black;
                if (Publicas._TemaBlack)
                {
                    AnoComunicadosDashBoardComboBox.BackColor = Publicas._fundo;
                    AnoComunicadosDashBoardComboBox.ForeColor = Publicas._fonte;
                }

                /*FiltrosComunicadosDashBoardPanel.Controls.Add(MensagemComunicadosDashBoardLabel);
                FiltrosComunicadosDashBoardPanel.Controls.Add(AnoComunicadosDashBoardComboBox);
                FiltrosComunicadosDashBoardPanel.Controls.Add(ImagemAnoLabel);
                FiltrosComunicadosDashBoardPanel.Controls.Add(AnoComunicadosDashBoardLabel);
                FiltrosComunicadosDashBoardPanel.Controls.Add(StatusComunicadosDashBoardComboBox);
                FiltrosComunicadosDashBoardPanel.Controls.Add(ImagemListaLabel);
                FiltrosComunicadosDashBoardPanel.Controls.Add(ListaComunicadosDashBoardLabel);*/

                #endregion

                #region cria o grid

                //ComunidadosDashBoardGrid = new GridGroupingControl();
                if (Publicas._TemaBlack)
                {
                    ComunidadosDashBoardGrid.GridOfficeScrollBars = OfficeScrollBars.Office2010;
                    ComunidadosDashBoardGrid.ColorStyles = ColorStyles.Office2010Black;
                    ComunidadosDashBoardGrid.GridVisualStyles = GridVisualStyles.Office2016Black;
                    ComunidadosDashBoardGrid.BackColor = Publicas._panelTitulo;
                }
                else
                {
                    ComunidadosDashBoardGrid.GridOfficeScrollBars = Syncfusion.Windows.Forms.OfficeScrollBars.Metro;
                    ComunidadosDashBoardGrid.GridVisualStyles = Syncfusion.Windows.Forms.GridVisualStyles.Metro;
                    ComunidadosDashBoardGrid.BackColor = backGroundOriginal;
                }
                filter.WireGrid(ComunidadosDashBoardGrid);

                ComunidadosDashBoardGrid.TableControlCellClick += new Syncfusion.Windows.Forms.Grid.Grouping.GridTableControlCellClickEventHandler(ComunidadosDashBoardGrid_TableControlCellClick);
                ComunidadosDashBoardGrid.TableControlCurrentCellKeyUp += new Syncfusion.Windows.Forms.Grid.Grouping.GridTableControlKeyEventHandler(ComunidadosDashBoardGrid_TableControlCurrentCellKeyUp);
                ComunidadosDashBoardGrid.TableControlCellDoubleClick += new Syncfusion.Windows.Forms.Grid.Grouping.GridTableControlCellClickEventHandler(ComunidadosDashBoardGrid_TableControlCellDoubleClick);
                ComunidadosDashBoardGrid.ContextMenuStrip = comunicadosContextMenuStrip;

                ComunidadosDashBoardGrid.ActivateCurrentCellBehavior = Syncfusion.Windows.Forms.Grid.GridCellActivateAction.SetCurrent;
                ComunidadosDashBoardGrid.DefaultGridBorderStyle = Syncfusion.Windows.Forms.Grid.GridBorderStyle.Solid;
                ComunidadosDashBoardGrid.Font = new Font(dataHoraLabel.Font.FontFamily, (float)9);
                ComunidadosDashBoardGrid.ShowNavigationBar = true;
                ComunidadosDashBoardGrid.Dock = DockStyle.Fill;
                ComunidadosDashBoardGrid.ShowRowHeaders = false;
                ComunidadosDashBoardGrid.TopLevelGroupOptions.ShowCaption = false;
                ComunidadosDashBoardGrid.TableDescriptor.AllowEdit = false;
                ComunidadosDashBoardGrid.TableDescriptor.AllowNew = false;
                ComunidadosDashBoardGrid.TableDescriptor.AllowRemove = false;

                ComunidadosDashBoardGrid.SortIconPlacement = SortIconPlacement.Left;
                ComunidadosDashBoardGrid.TopLevelGroupOptions.ShowFilterBar = true;
                ComunidadosDashBoardGrid.TableOptions.ListBoxSelectionMode = SelectionMode.One;
                ComunidadosDashBoardGrid.TopLevelGroupOptions.ShowAddNewRecordBeforeDetails = false;
                ComunidadosDashBoardGrid.RecordNavigationBar.Label = "Comunicados";
                ComunidadosDashBoardGrid.TableControl.CellToolTip.Active = true;

                ComunidadosDashBoardGrid.TableOptions.ListBoxSelectionCurrentCellOptions = GridListBoxSelectionCurrentCellOptions.HideCurrentCell;
                if (!Publicas._TemaBlack)
                {
                    ComunidadosDashBoardGrid.SetMetroStyle(metroColor);
                    ComunidadosDashBoardGrid.TableOptions.SelectionBackColor = Publicas._bordaEntrada;
                    ComunidadosDashBoardGrid.TableOptions.SelectionTextColor = Color.WhiteSmoke;
                    ComunidadosDashBoardGrid.BackColor = backGroundOriginal;
                }

                ComunidadosDashBoardGrid.TableOptions.ListBoxSelectionColorOptions = GridListBoxSelectionColorOptions.ApplySelectionColor;

                #region Cria as colunas
                if (ComunidadosDashBoardGrid.TableDescriptor.Columns.Count == 0)
                {
                    colunaGrid = new GridColumnDescriptor("Processo", "Processo", "Processo");
                    colunaGrid.AllowFilter = true;
                    colunaGrid.AllowSort = true;
                    colunaGrid.FilterRowOptions.AllowCustomFilter = false;
                    colunaGrid.FilterRowOptions.AllowEmptyFilter = false;
                    colunaGrid.FilterRowOptions.FilterMode = FilterMode.Value;

                    colunaGrid.Appearance.AnyRecordFieldCell.AutoSize = true;
                    colunaGrid.Appearance.AnyRecordFieldCell.HorizontalAlignment = GridHorizontalAlignment.Left;
                    colunaGrid.Appearance.AnyRecordFieldCell.TextColor = Color.DimGray;
                    colunaGrid.Appearance.AnyRecordFieldCell.VerticalAlignment = GridVerticalAlignment.Middle;
                    colunaGrid.Appearance.AnyRecordFieldCell.Font = new GridFontInfo(new Font(dataHoraLabel.Font.FontFamily, (float)9, FontStyle.Bold));
                    colunaGrid.Appearance.ColumnHeaderCell.AutoSize = true;
                    colunaGrid.Appearance.ColumnHeaderCell.HorizontalAlignment = GridHorizontalAlignment.Left;
                    colunaGrid.Appearance.ColumnHeaderCell.VerticalAlignment = GridVerticalAlignment.Middle;
                    ComunidadosDashBoardGrid.TableDescriptor.Columns.Add(colunaGrid);

                    colunaGrid = new GridColumnDescriptor("Status", "Status", "Status");
                    colunaGrid.AllowFilter = true;
                    colunaGrid.AllowSort = true;
                    colunaGrid.FilterRowOptions.AllowCustomFilter = false;
                    colunaGrid.FilterRowOptions.AllowEmptyFilter = false;
                    colunaGrid.FilterRowOptions.FilterMode = FilterMode.Value;
                    colunaGrid.Appearance.AnyRecordFieldCell.AutoSize = true;
                    colunaGrid.Appearance.AnyRecordFieldCell.HorizontalAlignment = GridHorizontalAlignment.Center;
                    colunaGrid.Appearance.AnyRecordFieldCell.VerticalAlignment = GridVerticalAlignment.Middle;
                    colunaGrid.Appearance.AnyRecordFieldCell.ShowButtons = GridShowButtons.Hide;
                    colunaGrid.Appearance.ColumnHeaderCell.AutoSize = true;
                    colunaGrid.Appearance.ColumnHeaderCell.HorizontalAlignment = GridHorizontalAlignment.Center;
                    colunaGrid.Appearance.ColumnHeaderCell.VerticalAlignment = GridVerticalAlignment.Middle;
                    colunaGrid.Appearance.ColumnHeaderCell.ShowButtons = GridShowButtons.Hide;
                    ComunidadosDashBoardGrid.TableDescriptor.Columns.Add(colunaGrid);

                    colunaGrid = new GridColumnDescriptor("Abertura", "Abertura", "Data de Abertura");
                    colunaGrid.AllowFilter = true;
                    colunaGrid.AllowSort = true;
                    colunaGrid.FilterRowOptions.AllowCustomFilter = false;
                    colunaGrid.FilterRowOptions.AllowEmptyFilter = false;
                    colunaGrid.FilterRowOptions.FilterMode = FilterMode.Value;
                    colunaGrid.Appearance.AnyRecordFieldCell.AutoSize = true;
                    colunaGrid.Appearance.AnyRecordFieldCell.HorizontalAlignment = GridHorizontalAlignment.Center;
                    colunaGrid.Appearance.AnyRecordFieldCell.VerticalAlignment = GridVerticalAlignment.Middle;
                    colunaGrid.Appearance.AnyRecordFieldCell.ShowButtons = GridShowButtons.Hide;
                    colunaGrid.Appearance.AnyRecordFieldCell.Format = "g";
                    //colunaGrid.Appearance.AnyRecordFieldCell.CellValueType = new GridPropertyTypeDefaultStyleCollectionEnumerator.DateTime;

                    colunaGrid.Appearance.ColumnHeaderCell.AutoSize = true;
                    colunaGrid.Appearance.ColumnHeaderCell.HorizontalAlignment = GridHorizontalAlignment.Center;
                    colunaGrid.Appearance.ColumnHeaderCell.VerticalAlignment = GridVerticalAlignment.Middle;
                    colunaGrid.Appearance.ColumnHeaderCell.ShowButtons = GridShowButtons.Hide;
                    ComunidadosDashBoardGrid.TableDescriptor.Columns.Add(colunaGrid);

                    colunaGrid = new GridColumnDescriptor("Solicitante", "Solicitante", "Solicitante");
                    colunaGrid.AllowFilter = true;
                    colunaGrid.AllowSort = true;
                    colunaGrid.FilterRowOptions.AllowCustomFilter = false;
                    colunaGrid.FilterRowOptions.AllowEmptyFilter = false;
                    colunaGrid.FilterRowOptions.FilterMode = FilterMode.Value;
                    colunaGrid.Appearance.AnyRecordFieldCell.AutoSize = true;
                    colunaGrid.Appearance.AnyRecordFieldCell.HorizontalAlignment = GridHorizontalAlignment.Left;
                    colunaGrid.Appearance.AnyRecordFieldCell.VerticalAlignment = GridVerticalAlignment.Middle;
                    colunaGrid.Appearance.AnyRecordFieldCell.ShowButtons = GridShowButtons.Hide;
                    colunaGrid.Appearance.ColumnHeaderCell.AutoSize = true;
                    colunaGrid.Appearance.ColumnHeaderCell.HorizontalAlignment = GridHorizontalAlignment.Left;
                    colunaGrid.Appearance.ColumnHeaderCell.VerticalAlignment = GridVerticalAlignment.Middle;
                    colunaGrid.Appearance.ColumnHeaderCell.ShowButtons = GridShowButtons.Hide;
                    ComunidadosDashBoardGrid.TableDescriptor.Columns.Add(colunaGrid);

                    colunaGrid = new GridColumnDescriptor("Empresa", "Empresa", "Empresa");
                    colunaGrid.AllowFilter = true;
                    colunaGrid.AllowSort = true;
                    colunaGrid.FilterRowOptions.AllowCustomFilter = false;
                    colunaGrid.FilterRowOptions.AllowEmptyFilter = false;
                    colunaGrid.FilterRowOptions.FilterMode = FilterMode.Value;
                    colunaGrid.Appearance.AnyRecordFieldCell.AutoSize = true;
                    colunaGrid.Appearance.AnyRecordFieldCell.HorizontalAlignment = GridHorizontalAlignment.Left;
                    colunaGrid.Appearance.AnyRecordFieldCell.VerticalAlignment = GridVerticalAlignment.Middle;
                    colunaGrid.Appearance.AnyRecordFieldCell.ShowButtons = GridShowButtons.Hide;
                    colunaGrid.Appearance.ColumnHeaderCell.AutoSize = true;
                    colunaGrid.Appearance.ColumnHeaderCell.HorizontalAlignment = GridHorizontalAlignment.Left;
                    colunaGrid.Appearance.ColumnHeaderCell.VerticalAlignment = GridVerticalAlignment.Middle;
                    colunaGrid.Appearance.ColumnHeaderCell.ShowButtons = GridShowButtons.Hide;
                    ComunidadosDashBoardGrid.TableDescriptor.Columns.Add(colunaGrid);

                    colunaGrid = new GridColumnDescriptor("Tipo", "Tipo", "Tipo");
                    colunaGrid.AllowFilter = true;
                    colunaGrid.AllowSort = true;
                    colunaGrid.FilterRowOptions.AllowCustomFilter = false;
                    colunaGrid.FilterRowOptions.AllowEmptyFilter = false;
                    colunaGrid.FilterRowOptions.FilterMode = FilterMode.Value;
                    colunaGrid.Appearance.AnyRecordFieldCell.AutoSize = true;
                    colunaGrid.Appearance.AnyRecordFieldCell.HorizontalAlignment = GridHorizontalAlignment.Left;
                    colunaGrid.Appearance.AnyRecordFieldCell.VerticalAlignment = GridVerticalAlignment.Middle;
                    colunaGrid.Appearance.AnyRecordFieldCell.ShowButtons = GridShowButtons.Hide;
                    colunaGrid.Appearance.ColumnHeaderCell.AutoSize = true;
                    colunaGrid.Appearance.ColumnHeaderCell.HorizontalAlignment = GridHorizontalAlignment.Left;
                    colunaGrid.Appearance.ColumnHeaderCell.VerticalAlignment = GridVerticalAlignment.Middle;
                    colunaGrid.Appearance.ColumnHeaderCell.ShowButtons = GridShowButtons.Hide;
                    ComunidadosDashBoardGrid.TableDescriptor.Columns.Add(colunaGrid);

                    colunaGrid = new GridColumnDescriptor("Autor", "Autor", "Autor");
                    colunaGrid.AllowFilter = true;
                    colunaGrid.AllowSort = true;
                    colunaGrid.FilterRowOptions.AllowCustomFilter = false;
                    colunaGrid.FilterRowOptions.AllowEmptyFilter = false;
                    colunaGrid.FilterRowOptions.FilterMode = FilterMode.Value;
                    colunaGrid.Appearance.AnyRecordFieldCell.AutoSize = true;
                    colunaGrid.Appearance.AnyRecordFieldCell.HorizontalAlignment = GridHorizontalAlignment.Left;
                    colunaGrid.Appearance.AnyRecordFieldCell.VerticalAlignment = GridVerticalAlignment.Middle;
                    colunaGrid.Appearance.AnyRecordFieldCell.ShowButtons = GridShowButtons.Hide;
                    colunaGrid.Appearance.ColumnHeaderCell.AutoSize = true;
                    colunaGrid.Appearance.ColumnHeaderCell.HorizontalAlignment = GridHorizontalAlignment.Left;
                    colunaGrid.Appearance.ColumnHeaderCell.VerticalAlignment = GridVerticalAlignment.Middle;
                    colunaGrid.Appearance.ColumnHeaderCell.ShowButtons = GridShowButtons.Hide;
                    ComunidadosDashBoardGrid.TableDescriptor.Columns.Add(colunaGrid);
                    ComunidadosDashBoardGrid.TableDescriptor.FrozenColumn = "Processo";
                    ComunidadosDashBoardGrid.TableDescriptor.SortedColumns.Add("Abertura", ListSortDirection.Descending);

                }
                #endregion

                #endregion

                //ComunicadoDashBoardPanel.Controls.Add(ComunidadosDashBoardGrid);
                //ComunicadoDashBoardPanel.Controls.Add(FiltrosComunicadosDashBoardPanel);

                //ComunicadosTabPage.Controls.Add(ComunicadoDashBoardPanel);
                ComunidadosDashBoardGrid.BringToFront();
                FiltrosComunicadosDashBoardPanel.SendToBack();

                StatusComunicadosDashBoardComboBox.Items.AddRange(new object[] { "Novo", "Aprovados", "Recusados", "Finalizados", "Cancelados", "Todos" });
                StatusComunicadosDashBoardComboBox.SelectedIndex = 0;

                List<int> datas = new ComunicadoBO().Datas();

                foreach (var item in datas)
                {
                    AnoComunicadosDashBoardComboBox.Items.Add(item);
                }

                AnoComunicadosDashBoardComboBox.Items.Add("Todos");
                AnoComunicadosDashBoardComboBox.SelectedIndex = 0;

                #endregion

                #region Cria grid para o SAC 
               // SacDashBoardPanel = new Panel();
                SacDashBoardPanel.Dock = DockStyle.Fill;
                SACTabPage.Controls.Add(SacDashBoardPanel);

                #region Campo para o filtro de SAC
                //FiltrosSACDashBoardPanel = new Panel();
                FiltrosSACDashBoardPanel.Size = new Size(0, 42);
                FiltrosSACDashBoardPanel.Dock = DockStyle.Top;

                if (Publicas._TemaBlack)
                    FiltrosSACDashBoardPanel.BackColor = Publicas._fundo;
                else
                    FiltrosSACDashBoardPanel.BackColor = backGroundOriginal;

                //ListaSACDashBoardLabel = new Label();
                ListaSACDashBoardLabel.Font = new Font(dataHoraLabel.Font.FontFamily, (float)12);
                ListaSACDashBoardLabel.ForeColor = (Publicas._TemaBlack ? Publicas._fonte : Publicas._panelTitulo);
                ListaSACDashBoardLabel.AutoSize = true;
                ListaSACDashBoardLabel.TextAlign = ContentAlignment.MiddleRight;
                ListaSACDashBoardLabel.Text = "Informe o Status";
                ListaSACDashBoardLabel.Location = new Point(49, 9);

                //AnoSACDashBoardLabel = new Label();
                AnoSACDashBoardLabel.Font = new Font(dataHoraLabel.Font.FontFamily, (float)12);
                AnoSACDashBoardLabel.ForeColor = (Publicas._TemaBlack ? Publicas._fonte : Publicas._panelTitulo);
                AnoSACDashBoardLabel.AutoSize = true;
                AnoSACDashBoardLabel.TextAlign = ContentAlignment.MiddleRight;
                AnoSACDashBoardLabel.Text = "Ano";
                AnoSACDashBoardLabel.Location = new Point(480, 9);

                //ImagemSACListaLabel = new Label();
                ImagemSACListaLabel.Font = new Font("Wingdings 3", (float)12);
                ImagemSACListaLabel.ForeColor = (Publicas._TemaBlack ? Publicas._fonte : Publicas._panelTitulo);
                ImagemSACListaLabel.AutoSize = false;
                ImagemSACListaLabel.TextAlign = ContentAlignment.MiddleLeft;
                ImagemSACListaLabel.Text = "_";
                ImagemSACListaLabel.Location = new Point(200, 9);

                //ImagemSACAnoLabel = new Label();
                ImagemSACAnoLabel.Font = new Font("Wingdings 3", (float)12);
                ImagemSACAnoLabel.ForeColor = (Publicas._TemaBlack ? Publicas._fonte : Publicas._panelTitulo);
                ImagemSACAnoLabel.AutoSize = false;
                ImagemSACAnoLabel.TextAlign = ContentAlignment.MiddleLeft;
                ImagemSACAnoLabel.Text = "_";
                ImagemSACAnoLabel.Location = new Point(530, 9);

                //MensagemSACDashBoardLabel = new Label();
                MensagemSACDashBoardLabel.Font = new Font(dataHoraLabel.Font.FontFamily, (float)12, FontStyle.Bold);
                MensagemSACDashBoardLabel.ForeColor = Publicas._fonte;
                MensagemSACDashBoardLabel.Dock = DockStyle.Right;
                MensagemSACDashBoardLabel.AutoSize = false;
                MensagemSACDashBoardLabel.TextAlign = ContentAlignment.MiddleRight;
                MensagemSACDashBoardLabel.Size = new Size(233, 0);

                //StatusSACDashBoardComboBox = new ComboBoxAdv();
                StatusSACDashBoardComboBox.FlatBorderColor = (Publicas._TemaBlack ? Publicas._bordaEntrada : Publicas._panelTitulo);
                StatusSACDashBoardComboBox.Font = new Font(dataHoraLabel.Font.FontFamily, (float)9.75);
                StatusSACDashBoardComboBox.Size = new Size(238, 25);
                StatusSACDashBoardComboBox.Location = new Point(228, 7);
                StatusSACDashBoardComboBox.Style = Syncfusion.Windows.Forms.VisualStyle.VS2010;
                StatusSACDashBoardComboBox.DropDownStyle = ComboBoxStyle.DropDownList;
                StatusSACDashBoardComboBox.SelectedIndexChanged += new System.EventHandler(StatusSACDashBoardComboBox_SelectedIndexChanged);

                StatusSACDashBoardComboBox.ForeColor = Color.Black;
                if (Publicas._TemaBlack)
                {
                    StatusSACDashBoardComboBox.BackColor = Publicas._fundo;
                    StatusSACDashBoardComboBox.ForeColor = Publicas._fonte;
                }

                //AnoSACDashBoardComboBox = new ComboBoxAdv();
                AnoSACDashBoardComboBox.FlatBorderColor = (Publicas._TemaBlack ? Publicas._bordaEntrada : Publicas._panelTitulo);
                AnoSACDashBoardComboBox.Font = new Font(dataHoraLabel.Font.FontFamily, (float)9.75);
                AnoSACDashBoardComboBox.Size = new Size(81, 25);
                AnoSACDashBoardComboBox.Location = new Point(553, 7);
                AnoSACDashBoardComboBox.Style = Syncfusion.Windows.Forms.VisualStyle.VS2010;
                AnoSACDashBoardComboBox.DropDownStyle = ComboBoxStyle.DropDownList;
                AnoSACDashBoardComboBox.SelectedIndexChanged += new System.EventHandler(this.AnoSACDashBoardComboBox_SelectedIndexChanged);
                AnoSACDashBoardComboBox.ForeColor = Color.Black;

                if (Publicas._TemaBlack)
                {
                    AnoSACDashBoardComboBox.BackColor = Publicas._fundo;
                    AnoSACDashBoardComboBox.ForeColor = Publicas._fonte;
                }

                //FiltrosSACDashBoardPanel.Controls.Add(MensagemSACDashBoardLabel);
                //FiltrosSACDashBoardPanel.Controls.Add(AnoSACDashBoardComboBox);
                //FiltrosSACDashBoardPanel.Controls.Add(ImagemSACAnoLabel);
                //FiltrosSACDashBoardPanel.Controls.Add(AnoSACDashBoardLabel);
                //FiltrosSACDashBoardPanel.Controls.Add(StatusSACDashBoardComboBox);
                //FiltrosSACDashBoardPanel.Controls.Add(ImagemSACListaLabel);
                //FiltrosSACDashBoardPanel.Controls.Add(ListaSACDashBoardLabel);

                #endregion

                #region cria o grid

                //SACDashBoardGrid = new GridGroupingControl();
                if (Publicas._TemaBlack)
                {
                    SACDashBoardGrid.GridOfficeScrollBars = OfficeScrollBars.Office2010;
                    SACDashBoardGrid.ColorStyles = ColorStyles.Office2010Black;
                    SACDashBoardGrid.GridVisualStyles = GridVisualStyles.Office2016Black;
                    SACDashBoardGrid.BackColor = Publicas._panelTitulo;
                }
                else
                {
                    SACDashBoardGrid.GridOfficeScrollBars = Syncfusion.Windows.Forms.OfficeScrollBars.Metro;
                    SACDashBoardGrid.GridVisualStyles = Syncfusion.Windows.Forms.GridVisualStyles.Metro;
                    SACDashBoardGrid.BackColor = backGroundOriginal;

                }
                filter.WireGrid(SACDashBoardGrid);

                SACDashBoardGrid.TableControlCellClick += new Syncfusion.Windows.Forms.Grid.Grouping.GridTableControlCellClickEventHandler(SACDashBoardGrid_TableControlCellClick);
                SACDashBoardGrid.TableControlCurrentCellKeyUp += new Syncfusion.Windows.Forms.Grid.Grouping.GridTableControlKeyEventHandler(SACDashBoardGrid_TableControlCurrentCellKeyUp);
                SACDashBoardGrid.QueryCellStyleInfo += new Syncfusion.Windows.Forms.Grid.Grouping.GridTableCellStyleInfoEventHandler(SACDashBoardGrid_QueryCellStyleInfo);
                SACDashBoardGrid.ContextMenuStrip = sacContextMenuStrip;

                SACDashBoardGrid.ActivateCurrentCellBehavior = Syncfusion.Windows.Forms.Grid.GridCellActivateAction.SetCurrent;
                SACDashBoardGrid.DefaultGridBorderStyle = Syncfusion.Windows.Forms.Grid.GridBorderStyle.Solid;
                SACDashBoardGrid.Font = new Font(dataHoraLabel.Font.FontFamily, (float)9);
                SACDashBoardGrid.ShowNavigationBar = true;
                SACDashBoardGrid.Dock = DockStyle.Fill;
                SACDashBoardGrid.ShowRowHeaders = false;
                SACDashBoardGrid.TopLevelGroupOptions.ShowCaption = false;
                SACDashBoardGrid.TableDescriptor.AllowEdit = false;
                SACDashBoardGrid.TableDescriptor.AllowNew = false;
                SACDashBoardGrid.TableDescriptor.AllowRemove = false;

                SACDashBoardGrid.SortIconPlacement = SortIconPlacement.Left;
                SACDashBoardGrid.TopLevelGroupOptions.ShowFilterBar = true;
                SACDashBoardGrid.TableOptions.ListBoxSelectionMode = SelectionMode.One;
                SACDashBoardGrid.TopLevelGroupOptions.ShowAddNewRecordBeforeDetails = false;
                SACDashBoardGrid.RecordNavigationBar.Label = "Atendimentos";
                SACDashBoardGrid.TableControl.CellToolTip.Active = true;

                SACDashBoardGrid.TableOptions.ListBoxSelectionCurrentCellOptions = GridListBoxSelectionCurrentCellOptions.HideCurrentCell;
                if (!Publicas._TemaBlack)
                {
                    SACDashBoardGrid.SetMetroStyle(metroColor);
                    SACDashBoardGrid.TableOptions.SelectionBackColor = Publicas._bordaEntrada;
                    SACDashBoardGrid.TableOptions.SelectionTextColor = Color.WhiteSmoke;
                    SACDashBoardGrid.BackColor = backGroundOriginal;
                }
                SACDashBoardGrid.TableOptions.ListBoxSelectionColorOptions = GridListBoxSelectionColorOptions.ApplySelectionColor;

                SACDashBoardGrid.Table.DefaultCaptionRowHeight = 45;
                SACDashBoardGrid.Table.DefaultRecordRowHeight = 45;
                SACDashBoardGrid.TableOptions.RowHeaderWidth = 45;
                SACDashBoardGrid.TableOptions.CaptionRowHeight = 45;
                SACDashBoardGrid.TableOptions.ColumnHeaderRowHeight = 45;
                SACDashBoardGrid.TableControl.CellToolTip.InitialDelay = 100;
                SACDashBoardGrid.TableControl.CellToolTip.AutoPopDelay = 5000;

                #region Cria as colunas

                if (SACDashBoardGrid.TableDescriptor.Columns.Count == 0)
                {
                    colunaGrid = new GridColumnDescriptor("Codigo", "Codigo", "Código");
                    colunaGrid.AllowFilter = true;
                    colunaGrid.AllowSort = true;
                    colunaGrid.FilterRowOptions.AllowCustomFilter = false;
                    colunaGrid.FilterRowOptions.AllowEmptyFilter = false;
                    colunaGrid.FilterRowOptions.FilterMode = FilterMode.Value;

                    colunaGrid.Appearance.AnyRecordFieldCell.AutoSize = true;
                    colunaGrid.Appearance.AnyRecordFieldCell.HorizontalAlignment = GridHorizontalAlignment.Left;
                    colunaGrid.Appearance.AnyRecordFieldCell.TextColor = Color.DimGray;
                    colunaGrid.Appearance.AnyRecordFieldCell.VerticalAlignment = GridVerticalAlignment.Middle;
                    colunaGrid.Appearance.AnyRecordFieldCell.Font = new GridFontInfo(new Font(dataHoraLabel.Font.FontFamily, (float)9, FontStyle.Bold));
                    colunaGrid.Appearance.ColumnHeaderCell.AutoSize = true;
                    colunaGrid.Appearance.ColumnHeaderCell.HorizontalAlignment = GridHorizontalAlignment.Left;
                    colunaGrid.Appearance.ColumnHeaderCell.VerticalAlignment = GridVerticalAlignment.Middle;
                    SACDashBoardGrid.TableDescriptor.Columns.Add(colunaGrid);

                    colunaGrid = new GridColumnDescriptor("DataAbertura", "DataAbertura", "Abertura");
                    colunaGrid.AllowFilter = true;
                    colunaGrid.AllowSort = true;
                    colunaGrid.FilterRowOptions.AllowCustomFilter = false;
                    colunaGrid.FilterRowOptions.AllowEmptyFilter = false;
                    colunaGrid.FilterRowOptions.FilterMode = FilterMode.Value;
                    colunaGrid.Appearance.AnyRecordFieldCell.AutoSize = true;
                    colunaGrid.Appearance.AnyRecordFieldCell.HorizontalAlignment = GridHorizontalAlignment.Center;
                    colunaGrid.Appearance.AnyRecordFieldCell.VerticalAlignment = GridVerticalAlignment.Middle;
                    colunaGrid.Appearance.AnyRecordFieldCell.ShowButtons = GridShowButtons.Hide;
                    colunaGrid.Appearance.ColumnHeaderCell.AutoSize = true;
                    colunaGrid.Appearance.ColumnHeaderCell.HorizontalAlignment = GridHorizontalAlignment.Center;
                    colunaGrid.Appearance.ColumnHeaderCell.VerticalAlignment = GridVerticalAlignment.Middle;
                    colunaGrid.Appearance.ColumnHeaderCell.ShowButtons = GridShowButtons.Hide;
                    colunaGrid.Appearance.AnyRecordFieldCell.Format = "g";
                    colunaGrid.Width = 90;
                    SACDashBoardGrid.TableDescriptor.Columns.Add(colunaGrid);

                    colunaGrid = new GridColumnDescriptor("DescricaoEmtu", "DescricaoEmtu", "Tipo Atendimento");
                    colunaGrid.AllowFilter = true;
                    colunaGrid.AllowSort = true;
                    colunaGrid.FilterRowOptions.AllowCustomFilter = false;
                    colunaGrid.FilterRowOptions.AllowEmptyFilter = false;
                    colunaGrid.FilterRowOptions.FilterMode = FilterMode.Value;
                    colunaGrid.Appearance.AnyRecordFieldCell.AutoSize = true;
                    colunaGrid.Appearance.AnyRecordFieldCell.HorizontalAlignment = GridHorizontalAlignment.Left;
                    colunaGrid.Appearance.AnyRecordFieldCell.VerticalAlignment = GridVerticalAlignment.Middle;
                    colunaGrid.Appearance.AnyRecordFieldCell.ShowButtons = GridShowButtons.Hide;
                    colunaGrid.Appearance.ColumnHeaderCell.AutoSize = true;
                    colunaGrid.Appearance.ColumnHeaderCell.HorizontalAlignment = GridHorizontalAlignment.Left;
                    colunaGrid.Appearance.ColumnHeaderCell.VerticalAlignment = GridVerticalAlignment.Middle;
                    colunaGrid.Appearance.ColumnHeaderCell.ShowButtons = GridShowButtons.Hide;
                    colunaGrid.Width = 300;
                    SACDashBoardGrid.TableDescriptor.Columns.Add(colunaGrid);

                    colunaGrid = new GridColumnDescriptor("SLA", "SLA", "Prazo p/Retorno");
                    colunaGrid.AllowFilter = true;
                    colunaGrid.AllowSort = true;
                    colunaGrid.FilterRowOptions.AllowCustomFilter = false;
                    colunaGrid.FilterRowOptions.AllowEmptyFilter = false;
                    colunaGrid.FilterRowOptions.FilterMode = FilterMode.Value;
                    colunaGrid.Appearance.AnyRecordFieldCell.AutoSize = true;
                    colunaGrid.Appearance.AnyRecordFieldCell.HorizontalAlignment = GridHorizontalAlignment.Center;
                    colunaGrid.Appearance.AnyRecordFieldCell.VerticalAlignment = GridVerticalAlignment.Middle;
                    colunaGrid.Appearance.AnyRecordFieldCell.ShowButtons = GridShowButtons.Hide;
                    colunaGrid.Appearance.ColumnHeaderCell.AutoSize = true;
                    colunaGrid.Appearance.ColumnHeaderCell.HorizontalAlignment = GridHorizontalAlignment.Center;
                    colunaGrid.Appearance.ColumnHeaderCell.VerticalAlignment = GridVerticalAlignment.Middle;
                    colunaGrid.Appearance.ColumnHeaderCell.ShowButtons = GridShowButtons.Hide;
                    colunaGrid.Appearance.AnyRecordFieldCell.Format = "g";
                    colunaGrid.Width = 100;
                    SACDashBoardGrid.TableDescriptor.Columns.Add(colunaGrid);

                    colunaGrid = new GridColumnDescriptor("SLAAtendente", "SLAAtendente", "Prazo da Etapa");
                    colunaGrid.AllowFilter = true;
                    colunaGrid.AllowSort = true;
                    colunaGrid.FilterRowOptions.AllowCustomFilter = false;
                    colunaGrid.FilterRowOptions.AllowEmptyFilter = false;
                    colunaGrid.FilterRowOptions.FilterMode = FilterMode.Value;
                    colunaGrid.Appearance.AnyRecordFieldCell.AutoSize = true;
                    colunaGrid.Appearance.AnyRecordFieldCell.HorizontalAlignment = GridHorizontalAlignment.Center;
                    colunaGrid.Appearance.AnyRecordFieldCell.VerticalAlignment = GridVerticalAlignment.Middle;
                    colunaGrid.Appearance.AnyRecordFieldCell.ShowButtons = GridShowButtons.Hide;
                    colunaGrid.Appearance.ColumnHeaderCell.AutoSize = true;
                    colunaGrid.Appearance.ColumnHeaderCell.HorizontalAlignment = GridHorizontalAlignment.Center;
                    colunaGrid.Appearance.ColumnHeaderCell.VerticalAlignment = GridVerticalAlignment.Middle;
                    colunaGrid.Appearance.ColumnHeaderCell.ShowButtons = GridShowButtons.Hide;
                    colunaGrid.Appearance.AnyRecordFieldCell.Format = "g";
                    colunaGrid.Width = 100;
                    SACDashBoardGrid.TableDescriptor.Columns.Add(colunaGrid);

                    colunaGrid = new GridColumnDescriptor("Status", "Status", "Status");
                    colunaGrid.AllowFilter = true;
                    colunaGrid.AllowSort = true;
                    colunaGrid.FilterRowOptions.AllowCustomFilter = false;
                    colunaGrid.FilterRowOptions.AllowEmptyFilter = false;
                    colunaGrid.FilterRowOptions.FilterMode = FilterMode.Value;
                    colunaGrid.Appearance.AnyRecordFieldCell.AutoSize = true;
                    colunaGrid.Appearance.AnyRecordFieldCell.HorizontalAlignment = GridHorizontalAlignment.Center;
                    colunaGrid.Appearance.AnyRecordFieldCell.VerticalAlignment = GridVerticalAlignment.Middle;
                    colunaGrid.Appearance.AnyRecordFieldCell.ShowButtons = GridShowButtons.Hide;
                    colunaGrid.Appearance.ColumnHeaderCell.AutoSize = true;
                    colunaGrid.Appearance.ColumnHeaderCell.HorizontalAlignment = GridHorizontalAlignment.Center;
                    colunaGrid.Appearance.ColumnHeaderCell.VerticalAlignment = GridVerticalAlignment.Middle;
                    colunaGrid.Appearance.ColumnHeaderCell.ShowButtons = GridShowButtons.Hide;
                    SACDashBoardGrid.TableDescriptor.Columns.Add(colunaGrid);

                    colunaGrid = new GridColumnDescriptor("NomeDoUsuarioUltimoStatus", "NomeDoUsuarioUltimoStatus", "Último Usuário");
                    colunaGrid.AllowFilter = true;
                    colunaGrid.AllowSort = true;
                    colunaGrid.FilterRowOptions.AllowCustomFilter = false;
                    colunaGrid.FilterRowOptions.AllowEmptyFilter = false;
                    colunaGrid.FilterRowOptions.FilterMode = FilterMode.Value;
                    colunaGrid.Appearance.AnyRecordFieldCell.AutoSize = true;
                    colunaGrid.Appearance.AnyRecordFieldCell.HorizontalAlignment = GridHorizontalAlignment.Center;
                    colunaGrid.Appearance.AnyRecordFieldCell.VerticalAlignment = GridVerticalAlignment.Middle;
                    colunaGrid.Appearance.AnyRecordFieldCell.ShowButtons = GridShowButtons.Hide;
                    colunaGrid.Appearance.ColumnHeaderCell.AutoSize = true;
                    colunaGrid.Appearance.ColumnHeaderCell.HorizontalAlignment = GridHorizontalAlignment.Center;
                    colunaGrid.Appearance.ColumnHeaderCell.VerticalAlignment = GridVerticalAlignment.Middle;
                    colunaGrid.Appearance.ColumnHeaderCell.ShowButtons = GridShowButtons.Hide;
                    colunaGrid.Width = 100;
                    SACDashBoardGrid.TableDescriptor.Columns.Add(colunaGrid);

                    colunaGrid = new GridColumnDescriptor("ProcedeGrid", "ProcedeGrid", "Reclamação");
                    colunaGrid.AllowFilter = true;
                    colunaGrid.AllowSort = true;
                    colunaGrid.FilterRowOptions.AllowCustomFilter = false;
                    colunaGrid.FilterRowOptions.AllowEmptyFilter = false;
                    colunaGrid.FilterRowOptions.FilterMode = FilterMode.Value;
                    colunaGrid.Appearance.AnyRecordFieldCell.AutoSize = true;
                    colunaGrid.Appearance.AnyRecordFieldCell.HorizontalAlignment = GridHorizontalAlignment.Center;
                    colunaGrid.Appearance.AnyRecordFieldCell.VerticalAlignment = GridVerticalAlignment.Middle;
                    colunaGrid.Appearance.AnyRecordFieldCell.ShowButtons = GridShowButtons.Hide;
                    colunaGrid.Appearance.ColumnHeaderCell.AutoSize = true;
                    colunaGrid.Appearance.ColumnHeaderCell.HorizontalAlignment = GridHorizontalAlignment.Center;
                    colunaGrid.Appearance.ColumnHeaderCell.VerticalAlignment = GridVerticalAlignment.Middle;
                    colunaGrid.Appearance.ColumnHeaderCell.ShowButtons = GridShowButtons.Hide;
                    SACDashBoardGrid.TableDescriptor.Columns.Add(colunaGrid);

                    colunaGrid = new GridColumnDescriptor("DescricaoDaSituacao", "DescricaoDaSituacao", "Situação");
                    colunaGrid.AllowFilter = true;
                    colunaGrid.AllowSort = true;
                    colunaGrid.FilterRowOptions.AllowCustomFilter = false;
                    colunaGrid.FilterRowOptions.AllowEmptyFilter = false;
                    colunaGrid.FilterRowOptions.FilterMode = FilterMode.Value;
                    colunaGrid.Appearance.AnyRecordFieldCell.AutoSize = true;
                    colunaGrid.Appearance.AnyRecordFieldCell.HorizontalAlignment = GridHorizontalAlignment.Center;
                    colunaGrid.Appearance.AnyRecordFieldCell.VerticalAlignment = GridVerticalAlignment.Middle;
                    colunaGrid.Appearance.AnyRecordFieldCell.ShowButtons = GridShowButtons.Hide;
                    colunaGrid.Appearance.ColumnHeaderCell.AutoSize = true;
                    colunaGrid.Appearance.ColumnHeaderCell.HorizontalAlignment = GridHorizontalAlignment.Center;
                    colunaGrid.Appearance.ColumnHeaderCell.VerticalAlignment = GridVerticalAlignment.Middle;
                    colunaGrid.Appearance.ColumnHeaderCell.ShowButtons = GridShowButtons.Hide;
                    colunaGrid.Width = 100;
                    SACDashBoardGrid.TableDescriptor.Columns.Add(colunaGrid);

                    colunaGrid = new GridColumnDescriptor("DescricaoDaOrigem", "DescricaoDaOrigem", "Origem");
                    colunaGrid.AllowFilter = true;
                    colunaGrid.AllowSort = true;
                    colunaGrid.FilterRowOptions.AllowCustomFilter = false;
                    colunaGrid.FilterRowOptions.AllowEmptyFilter = false;
                    colunaGrid.FilterRowOptions.FilterMode = FilterMode.Value;
                    colunaGrid.Appearance.AnyRecordFieldCell.AutoSize = true;
                    colunaGrid.Appearance.AnyRecordFieldCell.HorizontalAlignment = GridHorizontalAlignment.Center;
                    colunaGrid.Appearance.AnyRecordFieldCell.VerticalAlignment = GridVerticalAlignment.Middle;
                    colunaGrid.Appearance.AnyRecordFieldCell.ShowButtons = GridShowButtons.Hide;
                    colunaGrid.Appearance.ColumnHeaderCell.AutoSize = true;
                    colunaGrid.Appearance.ColumnHeaderCell.HorizontalAlignment = GridHorizontalAlignment.Center;
                    colunaGrid.Appearance.ColumnHeaderCell.VerticalAlignment = GridVerticalAlignment.Middle;
                    colunaGrid.Appearance.ColumnHeaderCell.ShowButtons = GridShowButtons.Hide;
                    SACDashBoardGrid.TableDescriptor.Columns.Add(colunaGrid);

                    colunaGrid = new GridColumnDescriptor("NomeCliente", "NomeCliente", "Cliente");
                    colunaGrid.AllowFilter = true;
                    colunaGrid.AllowSort = true;
                    colunaGrid.FilterRowOptions.AllowCustomFilter = false;
                    colunaGrid.FilterRowOptions.AllowEmptyFilter = false;
                    colunaGrid.FilterRowOptions.FilterMode = FilterMode.Value;
                    colunaGrid.Appearance.AnyRecordFieldCell.AutoSize = true;
                    colunaGrid.Appearance.AnyRecordFieldCell.HorizontalAlignment = GridHorizontalAlignment.Left;
                    colunaGrid.Appearance.AnyRecordFieldCell.VerticalAlignment = GridVerticalAlignment.Middle;
                    colunaGrid.Appearance.AnyRecordFieldCell.ShowButtons = GridShowButtons.Hide;
                    colunaGrid.Appearance.ColumnHeaderCell.AutoSize = true;
                    colunaGrid.Appearance.ColumnHeaderCell.HorizontalAlignment = GridHorizontalAlignment.Left;
                    colunaGrid.Appearance.ColumnHeaderCell.VerticalAlignment = GridVerticalAlignment.Middle;
                    colunaGrid.Appearance.ColumnHeaderCell.ShowButtons = GridShowButtons.Hide;
                    colunaGrid.Width = 170;
                    SACDashBoardGrid.TableDescriptor.Columns.Add(colunaGrid);

                    colunaGrid = new GridColumnDescriptor("TelefoneFormatado", "TelefoneFormatado", "Telefone");
                    colunaGrid.AllowFilter = true;
                    colunaGrid.AllowSort = true;
                    colunaGrid.FilterRowOptions.AllowCustomFilter = false;
                    colunaGrid.FilterRowOptions.AllowEmptyFilter = false;
                    colunaGrid.FilterRowOptions.FilterMode = FilterMode.Value;
                    colunaGrid.Appearance.AnyRecordFieldCell.AutoSize = true;
                    colunaGrid.Appearance.AnyRecordFieldCell.HorizontalAlignment = GridHorizontalAlignment.Left;
                    colunaGrid.Appearance.AnyRecordFieldCell.VerticalAlignment = GridVerticalAlignment.Middle;
                    colunaGrid.Appearance.AnyRecordFieldCell.ShowButtons = GridShowButtons.Hide;
                    colunaGrid.Appearance.ColumnHeaderCell.AutoSize = true;
                    colunaGrid.Appearance.ColumnHeaderCell.HorizontalAlignment = GridHorizontalAlignment.Left;
                    colunaGrid.Appearance.ColumnHeaderCell.VerticalAlignment = GridVerticalAlignment.Middle;
                    colunaGrid.Appearance.ColumnHeaderCell.ShowButtons = GridShowButtons.Hide;
                    SACDashBoardGrid.TableDescriptor.Columns.Add(colunaGrid);

                    colunaGrid = new GridColumnDescriptor("CelularFormatado", "CelularFormatado", "Celular");
                    colunaGrid.AllowFilter = true;
                    colunaGrid.AllowSort = true;
                    colunaGrid.FilterRowOptions.AllowCustomFilter = false;
                    colunaGrid.FilterRowOptions.AllowEmptyFilter = false;
                    colunaGrid.FilterRowOptions.FilterMode = FilterMode.Value;
                    colunaGrid.Appearance.AnyRecordFieldCell.AutoSize = true;
                    colunaGrid.Appearance.AnyRecordFieldCell.HorizontalAlignment = GridHorizontalAlignment.Left;
                    colunaGrid.Appearance.AnyRecordFieldCell.VerticalAlignment = GridVerticalAlignment.Middle;
                    colunaGrid.Appearance.AnyRecordFieldCell.ShowButtons = GridShowButtons.Hide;
                    colunaGrid.Appearance.ColumnHeaderCell.AutoSize = true;
                    colunaGrid.Appearance.ColumnHeaderCell.HorizontalAlignment = GridHorizontalAlignment.Left;
                    colunaGrid.Appearance.ColumnHeaderCell.VerticalAlignment = GridVerticalAlignment.Middle;
                    colunaGrid.Appearance.ColumnHeaderCell.ShowButtons = GridShowButtons.Hide;
                    SACDashBoardGrid.TableDescriptor.Columns.Add(colunaGrid);

                    SACDashBoardGrid.TableDescriptor.FrozenColumn = "Codigo";
                    SACDashBoardGrid.TableDescriptor.SortedColumns.Add("DataAbertura", ListSortDirection.Descending);
                }

                #endregion

                #endregion

                //SacDashBoardPanel.Controls.Add(SACDashBoardGrid);
                //SacDashBoardPanel.Controls.Add(FiltrosSACDashBoardPanel);

                StatusSACDashBoardComboBox.Items.AddRange(new object[] { "Ativo", "Finalizado", "Cancelados", "Respondido", "Todos" });
                StatusSACDashBoardComboBox.SelectedIndex = 0;

                datas = new AtendimentoBO().Datas();

                foreach (var item in datas)
                {
                    AnoSACDashBoardComboBox.Items.Add(item);
                }

                AnoSACDashBoardComboBox.SelectedIndex = 0;

                SACDashBoardGrid.DataSource = _listaAtendimentosSAC.OrderBy(o => o.Codigo).OrderBy(o => o.DataAbertura).ToList();
                #endregion

                #region Cria grid para o chamado
                _chamadosEmPesquisa = false;

                #region Campo para o filtro de Chamados
                FiltrosChamadosDashBoardPanel.Size = new Size(0, 42);

                if (Publicas._TemaBlack)
                    FiltrosChamadosDashBoardPanel.BackColor = Publicas._fundo;
                else
                    FiltrosChamadosDashBoardPanel.BackColor = backGroundOriginal;

                ListaChamadosDashBoardLabel.Font = new Font(dataHoraLabel.Font.FontFamily, (float)12);
                ListaChamadosDashBoardLabel.ForeColor = (Publicas._TemaBlack ? Publicas._fonte : Publicas._panelTitulo);
                ListaChamadosDashBoardLabel.AutoSize = true;
                ListaChamadosDashBoardLabel.TextAlign = ContentAlignment.MiddleRight;
                ListaChamadosDashBoardLabel.Text = "Informe o Status";
                ListaChamadosDashBoardLabel.Location = new Point(14, 9);

                AnoChamadosDashBoardLabel.Font = new Font(dataHoraLabel.Font.FontFamily, (float)12);
                AnoChamadosDashBoardLabel.ForeColor = (Publicas._TemaBlack ? Publicas._fonte : Publicas._panelTitulo);
                AnoChamadosDashBoardLabel.AutoSize = true;
                AnoChamadosDashBoardLabel.TextAlign = ContentAlignment.MiddleRight;
                AnoChamadosDashBoardLabel.Text = "Ano";
                AnoChamadosDashBoardLabel.Location = new Point(402, 9);

                ImagemChamadosListaLabel.Font = new Font("Wingdings 3", (float)12);
                ImagemChamadosListaLabel.ForeColor = (Publicas._TemaBlack ? Publicas._fonte : Publicas._panelTitulo);
                ImagemChamadosListaLabel.AutoSize = false;
                ImagemChamadosListaLabel.TextAlign = ContentAlignment.MiddleLeft;
                ImagemChamadosListaLabel.Text = "_";
                ImagemChamadosListaLabel.Location = new Point(155, 9);

                ImagemChamadosAnoLabel.Font = new Font("Wingdings 3", (float)12);
                ImagemChamadosAnoLabel.ForeColor = (Publicas._TemaBlack ? Publicas._fonte : Publicas._panelTitulo);
                ImagemChamadosAnoLabel.AutoSize = false;
                ImagemChamadosAnoLabel.TextAlign = ContentAlignment.MiddleLeft;
                ImagemChamadosAnoLabel.Text = "_";
                ImagemChamadosAnoLabel.Location = new Point(452, 9);

                MensagemChamadosDashBoardLabel.Font = new Font(dataHoraLabel.Font.FontFamily, (float)12, FontStyle.Bold);
                MensagemChamadosDashBoardLabel.ForeColor = Publicas._fonte;
                MensagemChamadosDashBoardLabel.Dock = DockStyle.Right;
                MensagemChamadosDashBoardLabel.AutoSize = false;
                MensagemChamadosDashBoardLabel.TextAlign = ContentAlignment.MiddleRight;
                MensagemChamadosDashBoardLabel.Size = new Size(233, 0);

                StatusChamadosDashBoardComboBox.FlatBorderColor = (Publicas._TemaBlack ? Publicas._bordaEntrada : Publicas._panelTitulo);

                StatusChamadosDashBoardComboBox.Font = new Font(dataHoraLabel.Font.FontFamily, (float)9.75);
                StatusChamadosDashBoardComboBox.Size = new Size(211, 25);
                StatusChamadosDashBoardComboBox.Location = new Point(184, 7);
                StatusChamadosDashBoardComboBox.Style = Syncfusion.Windows.Forms.VisualStyle.VS2010;

                StatusChamadosDashBoardComboBox.ForeColor = Color.Black;
                if (Publicas._TemaBlack)
                {
                    StatusChamadosDashBoardComboBox.BackColor = Publicas._fundo;
                    StatusChamadosDashBoardComboBox.ForeColor = Publicas._fonte;
                }
                StatusChamadosDashBoardComboBox.DropDownStyle = ComboBoxStyle.DropDownList;
                StatusChamadosDashBoardComboBox.SelectedIndexChanged += new System.EventHandler(StatusChamadosDashBoardComboBox_SelectedIndexChanged);

                AnoChamadosDashBoardComboBox.FlatBorderColor = (Publicas._TemaBlack ? Publicas._bordaEntrada : Publicas._panelTitulo);

                AnoChamadosDashBoardComboBox.Font = new Font(dataHoraLabel.Font.FontFamily, (float)9.75);
                AnoChamadosDashBoardComboBox.Size = new Size(81, 25);
                AnoChamadosDashBoardComboBox.Location = new Point(475, 7);
                AnoChamadosDashBoardComboBox.Style = Syncfusion.Windows.Forms.VisualStyle.VS2010;

                AnoChamadosDashBoardComboBox.ForeColor = Color.Black;
                if (Publicas._TemaBlack)
                {
                    AnoChamadosDashBoardComboBox.BackColor = Publicas._fundo;
                    AnoChamadosDashBoardComboBox.ForeColor = Publicas._fonte;
                }

                AnoChamadosDashBoardComboBox.DropDownStyle = ComboBoxStyle.DropDownList;
                AnoChamadosDashBoardComboBox.SelectedIndexChanged += new System.EventHandler(this.AnoChamadosDashBoardComboBox_SelectedIndexChanged);

                MeusChamadosDashBoardCheckBox.ForeColor = Color.Black;
                if (Publicas._TemaBlack)
                {
                    MeusChamadosDashBoardCheckBox.BackColor = Publicas._fundo;
                    MeusChamadosDashBoardCheckBox.ForeColor = Publicas._fonte;
                }

                MeusChamadosDashBoardCheckBox.Text = "Chamados respondidos por mim";
                MeusChamadosDashBoardCheckBox.Font = new Font(dataHoraLabel.Font.FontFamily, (float)9.75);
                MeusChamadosDashBoardCheckBox.Style = CheckBoxAdvStyle.Metro;
                MeusChamadosDashBoardCheckBox.AutoSize = true;
                MeusChamadosDashBoardCheckBox.Location = new Point(562, 7);
                MeusChamadosDashBoardCheckBox.CheckStateChanged += new System.EventHandler(this.MeusChamadosDashBoardCheckBox_CheckStateChanged);
                MeusChamadosDashBoardCheckBox.Checked = Publicas._usuario.SoChamadosDesseUsuario;

                numeroTextBoxExt.FocusBorderColor = Publicas._bordaEntrada;
                numeroTextBoxExt.BackColor = AnoSACDashBoardComboBox.BackColor;
                numeroTextBoxExt.ForeColor = AnoSACDashBoardComboBox.ForeColor;
                PesquisarNumeroLabel.ForeColor = AnoSACDashBoardComboBox.ForeColor;

                ToolTipInfo _tool = new ToolTipInfo();
                _tool.Footer.Font = MeusChamadosDashBoardCheckBox.Font;
                _tool.Footer.Text = "Filtra os chamados que você abriu ou respondeu (interagiu)";
                superToolTip1.SetToolTip(MeusChamadosDashBoardCheckBox, _tool);

                #endregion

                #region cria o grid

                if (Publicas._TemaBlack)
                {
                    ChamadosDashBoardGrid.GridOfficeScrollBars = OfficeScrollBars.Office2010;
                    ChamadosDashBoardGrid.ColorStyles = ColorStyles.Office2010Black;
                    ChamadosDashBoardGrid.GridVisualStyles = GridVisualStyles.Office2016Black;
                    ChamadosDashBoardGrid.BackColor = Publicas._panelTitulo;
                }
                else
                {
                    ChamadosDashBoardGrid.GridOfficeScrollBars = Syncfusion.Windows.Forms.OfficeScrollBars.Metro;
                    ChamadosDashBoardGrid.GridVisualStyles = Syncfusion.Windows.Forms.GridVisualStyles.Metro;
                    ChamadosDashBoardGrid.BackColor = backGroundOriginal;
                    MeusChamadosDashBoardCheckBox.BackColor = backGroundOriginal;
                    AnoChamadosDashBoardComboBox.BackColor = backGroundOriginal;
                    StatusChamadosDashBoardComboBox.BackColor = backGroundOriginal;

                }

                if (ChamadosDashBoardGrid.TableDescriptor.Columns.Count == 0)
                {
                    filter.WireGrid(ChamadosDashBoardGrid);

                    ChamadosDashBoardGrid.TableControlCellClick += new Syncfusion.Windows.Forms.Grid.Grouping.GridTableControlCellClickEventHandler(ChamadosDashBoardGrid_TableControlCellClick);
                    ChamadosDashBoardGrid.TableControlCurrentCellKeyUp += new Syncfusion.Windows.Forms.Grid.Grouping.GridTableControlKeyEventHandler(ChamadosDashBoardGrid_TableControlCurrentCellKeyUp);
                    ChamadosDashBoardGrid.QueryCellStyleInfo += new Syncfusion.Windows.Forms.Grid.Grouping.GridTableCellStyleInfoEventHandler(ChamadosDashBoardGrid_QueryCellStyleInfo);
                    ChamadosDashBoardGrid.TableControlCellDoubleClick += new Syncfusion.Windows.Forms.Grid.Grouping.GridTableControlCellClickEventHandler(ChamadosDashBoardGrid_TableControlCellDoubleClick);
                    ChamadosDashBoardGrid.TableControlCurrentCellChanged += new Syncfusion.Windows.Forms.Grid.Grouping.GridTableControlEventHandler(this.ChamadosDashBoardGrid_TableControlCurrentCellChanged);
                    ChamadosDashBoardGrid.ContextMenuStrip = chamadosMenuStrip;

                    ChamadosDashBoardGrid.ActivateCurrentCellBehavior = Syncfusion.Windows.Forms.Grid.GridCellActivateAction.SetCurrent;
                    ChamadosDashBoardGrid.DefaultGridBorderStyle = Syncfusion.Windows.Forms.Grid.GridBorderStyle.Solid;
                    ChamadosDashBoardGrid.Font = new Font(dataHoraLabel.Font.FontFamily, (float)9);
                    ChamadosDashBoardGrid.ShowNavigationBar = true;
                    ChamadosDashBoardGrid.Dock = DockStyle.Fill;
                    ChamadosDashBoardGrid.ShowRowHeaders = false;
                    ChamadosDashBoardGrid.TopLevelGroupOptions.ShowCaption = false;
                    ChamadosDashBoardGrid.TableDescriptor.AllowEdit = true;
                    ChamadosDashBoardGrid.TableDescriptor.AllowNew = false;
                    ChamadosDashBoardGrid.TableDescriptor.AllowRemove = false;

                    ChamadosDashBoardGrid.SortIconPlacement = SortIconPlacement.Left;
                    ChamadosDashBoardGrid.TopLevelGroupOptions.ShowFilterBar = true;
                    ChamadosDashBoardGrid.TableOptions.ListBoxSelectionMode = SelectionMode.One;
                    ChamadosDashBoardGrid.TopLevelGroupOptions.ShowAddNewRecordBeforeDetails = false;
                    ChamadosDashBoardGrid.RecordNavigationBar.Label = "Chamados";
                    ChamadosDashBoardGrid.TableControl.CellToolTip.Active = true;

                    //if (Publicas._usuario.Tipo == Publicas.TipoUsuario.Socilitante)
                    ChamadosDashBoardGrid.TableOptions.ListBoxSelectionCurrentCellOptions = GridListBoxSelectionCurrentCellOptions.HideCurrentCell;
                    //else
                    //  ChamadosDashBoardGrid.TableOptions.ListBoxSelectionCurrentCellOptions = GridListBoxSelectionCurrentCellOptions.None;

                    if (!Publicas._TemaBlack)
                    {
                        ChamadosDashBoardGrid.SetMetroStyle(metroColor);
                        ChamadosDashBoardGrid.TableOptions.SelectionBackColor = Publicas._bordaEntrada;
                        ChamadosDashBoardGrid.TableOptions.SelectionTextColor = Color.WhiteSmoke;
                        ChamadosDashBoardGrid.BackColor = backGroundOriginal;
                    }
                    ChamadosDashBoardGrid.TableOptions.ListBoxSelectionColorOptions = GridListBoxSelectionColorOptions.ApplySelectionColor;
                }

                ChamadosDashBoardGrid.Table.DefaultRecordRowHeight = 45;
                ChamadosDashBoardGrid.TableControl.CellToolTip.InitialDelay = 100;
                ChamadosDashBoardGrid.TableControl.CellToolTip.AutoPopDelay = 5000;


                #region Cria as colunas
                if (ChamadosDashBoardGrid.TableDescriptor.Columns.Count == 0)
                {
                    if (Publicas._usuario.Tipo == Publicas.TipoUsuario.Atendente)
                    {
                        colunaGrid = new GridColumnDescriptor("Agrupar", "Agrupar", "Agrupar");
                        colunaGrid.AllowFilter = true;
                        colunaGrid.AllowSort = true;
                        colunaGrid.ReadOnly = false;
                        colunaGrid.FilterRowOptions.AllowCustomFilter = false;
                        colunaGrid.FilterRowOptions.AllowEmptyFilter = false;
                        colunaGrid.FilterRowOptions.FilterMode = FilterMode.Value;
                        colunaGrid.Appearance.AnyRecordFieldCell.AutoSize = true;
                        colunaGrid.Appearance.AnyRecordFieldCell.CellValueType = typeof(Boolean);
                        colunaGrid.Appearance.AnyRecordFieldCell.CellType = "CheckBox";
                        colunaGrid.Appearance.AnyRecordFieldCell.HorizontalAlignment = GridHorizontalAlignment.Center;
                        colunaGrid.Appearance.AnyRecordFieldCell.VerticalAlignment = GridVerticalAlignment.Middle;
                        colunaGrid.Appearance.AnyRecordFieldCell.ShowButtons = GridShowButtons.Hide;
                        colunaGrid.Appearance.ColumnHeaderCell.AutoSize = true;
                        colunaGrid.Appearance.ColumnHeaderCell.HorizontalAlignment = GridHorizontalAlignment.Center;
                        colunaGrid.Appearance.ColumnHeaderCell.VerticalAlignment = GridVerticalAlignment.Middle;
                        colunaGrid.Appearance.ColumnHeaderCell.ShowButtons = GridShowButtons.Hide;
                        colunaGrid.Width = 70;
                        ChamadosDashBoardGrid.TableDescriptor.Columns.Add(colunaGrid);
                    }

                    colunaGrid = new GridColumnDescriptor("Numero", "Numero", "Número");
                    colunaGrid.AllowFilter = true;
                    colunaGrid.AllowSort = true;
                    colunaGrid.ReadOnly = true;
                    colunaGrid.FilterRowOptions.AllowCustomFilter = false;
                    colunaGrid.FilterRowOptions.AllowEmptyFilter = false;
                    colunaGrid.FilterRowOptions.FilterMode = FilterMode.Value;

                    colunaGrid.Appearance.AnyRecordFieldCell.AutoSize = true;
                    colunaGrid.Appearance.AnyRecordFieldCell.HorizontalAlignment = GridHorizontalAlignment.Center;
                    colunaGrid.Appearance.AnyRecordFieldCell.TextColor = Color.DimGray;
                    colunaGrid.Appearance.AnyRecordFieldCell.VerticalAlignment = GridVerticalAlignment.Middle;
                    colunaGrid.Appearance.AnyRecordFieldCell.Font = new GridFontInfo(new Font(dataHoraLabel.Font.FontFamily, (float)9, FontStyle.Bold));
                    colunaGrid.Appearance.ColumnHeaderCell.AutoSize = true;
                    colunaGrid.Appearance.ColumnHeaderCell.HorizontalAlignment = GridHorizontalAlignment.Center;
                    colunaGrid.Appearance.ColumnHeaderCell.VerticalAlignment = GridVerticalAlignment.Middle;
                    ChamadosDashBoardGrid.TableDescriptor.Columns.Add(colunaGrid);

                    colunaGrid = new GridColumnDescriptor("Categoria", "Categoria", "Categoria");
                    colunaGrid.AllowFilter = true;
                    colunaGrid.AllowSort = true;
                    colunaGrid.ReadOnly = true;
                    colunaGrid.FilterRowOptions.AllowCustomFilter = false;
                    colunaGrid.FilterRowOptions.AllowEmptyFilter = false;
                    colunaGrid.FilterRowOptions.FilterMode = FilterMode.Value;
                    colunaGrid.Appearance.AnyRecordFieldCell.AutoSize = false;
                    colunaGrid.Appearance.AnyRecordFieldCell.HorizontalAlignment = GridHorizontalAlignment.Center;
                    colunaGrid.Appearance.AnyRecordFieldCell.VerticalAlignment = GridVerticalAlignment.Middle;
                    colunaGrid.Appearance.AnyRecordFieldCell.ShowButtons = GridShowButtons.Hide;
                    colunaGrid.Appearance.ColumnHeaderCell.AutoSize = false;
                    colunaGrid.Appearance.ColumnHeaderCell.HorizontalAlignment = GridHorizontalAlignment.Center;
                    colunaGrid.Appearance.ColumnHeaderCell.VerticalAlignment = GridVerticalAlignment.Middle;
                    colunaGrid.Appearance.ColumnHeaderCell.ShowButtons = GridShowButtons.Hide;
                    colunaGrid.Width = 100;
                    ChamadosDashBoardGrid.TableDescriptor.Columns.Add(colunaGrid);

                    colunaGrid = new GridColumnDescriptor("Assunto", "Assunto", "Assunto");
                    colunaGrid.AllowFilter = true;
                    colunaGrid.AllowSort = true;
                    colunaGrid.ReadOnly = true;
                    colunaGrid.FilterRowOptions.AllowCustomFilter = false;
                    colunaGrid.FilterRowOptions.AllowEmptyFilter = false;
                    colunaGrid.FilterRowOptions.FilterMode = FilterMode.Value;
                    colunaGrid.Appearance.AnyRecordFieldCell.AutoSize = false;
                    colunaGrid.Appearance.AnyRecordFieldCell.HorizontalAlignment = GridHorizontalAlignment.Left;
                    colunaGrid.Appearance.AnyRecordFieldCell.VerticalAlignment = GridVerticalAlignment.Middle;
                    colunaGrid.Appearance.AnyRecordFieldCell.ShowButtons = GridShowButtons.Hide;
                    colunaGrid.Appearance.ColumnHeaderCell.AutoSize = false;
                    colunaGrid.Appearance.ColumnHeaderCell.HorizontalAlignment = GridHorizontalAlignment.Left;
                    colunaGrid.Appearance.ColumnHeaderCell.VerticalAlignment = GridVerticalAlignment.Middle;
                    colunaGrid.Appearance.ColumnHeaderCell.ShowButtons = GridShowButtons.Hide;
                    colunaGrid.Width = 150;
                    ChamadosDashBoardGrid.TableDescriptor.Columns.Add(colunaGrid);

                    colunaGrid = new GridColumnDescriptor("DescricaoTipo", "DescricaoTipo", "Tipo");
                    colunaGrid.AllowFilter = true;
                    colunaGrid.AllowSort = true;
                    colunaGrid.ReadOnly = true;
                    colunaGrid.FilterRowOptions.AllowCustomFilter = false;
                    colunaGrid.FilterRowOptions.AllowEmptyFilter = false;
                    colunaGrid.FilterRowOptions.FilterMode = FilterMode.Value;
                    colunaGrid.Appearance.AnyRecordFieldCell.AutoSize = true;
                    colunaGrid.Appearance.AnyRecordFieldCell.HorizontalAlignment = GridHorizontalAlignment.Center;
                    colunaGrid.Appearance.AnyRecordFieldCell.VerticalAlignment = GridVerticalAlignment.Middle;
                    colunaGrid.Appearance.AnyRecordFieldCell.ShowButtons = GridShowButtons.Hide;
                    colunaGrid.Appearance.ColumnHeaderCell.AutoSize = true;
                    colunaGrid.Appearance.ColumnHeaderCell.HorizontalAlignment = GridHorizontalAlignment.Center;
                    colunaGrid.Appearance.ColumnHeaderCell.VerticalAlignment = GridVerticalAlignment.Middle;
                    colunaGrid.Appearance.ColumnHeaderCell.ShowButtons = GridShowButtons.Hide;
                    ChamadosDashBoardGrid.TableDescriptor.Columns.Add(colunaGrid);

                    colunaGrid = new GridColumnDescriptor("Data", "Data", "Abertura");
                    colunaGrid.AllowFilter = true;
                    colunaGrid.AllowSort = true;
                    colunaGrid.ReadOnly = true;
                    colunaGrid.FilterRowOptions.AllowCustomFilter = false;
                    colunaGrid.FilterRowOptions.AllowEmptyFilter = false;
                    colunaGrid.FilterRowOptions.FilterMode = FilterMode.Value;
                    colunaGrid.Appearance.AnyRecordFieldCell.AutoSize = true;
                    colunaGrid.Appearance.AnyRecordFieldCell.HorizontalAlignment = GridHorizontalAlignment.Center;
                    colunaGrid.Appearance.AnyRecordFieldCell.VerticalAlignment = GridVerticalAlignment.Middle;
                    colunaGrid.Appearance.AnyRecordFieldCell.ShowButtons = GridShowButtons.Hide;
                    colunaGrid.Appearance.ColumnHeaderCell.AutoSize = true;
                    colunaGrid.Appearance.ColumnHeaderCell.HorizontalAlignment = GridHorizontalAlignment.Center;
                    colunaGrid.Appearance.ColumnHeaderCell.VerticalAlignment = GridVerticalAlignment.Middle;
                    colunaGrid.Appearance.ColumnHeaderCell.ShowButtons = GridShowButtons.Hide;
                    colunaGrid.Appearance.AnyRecordFieldCell.Format = "g";
                    colunaGrid.Width = 90;
                    ChamadosDashBoardGrid.TableDescriptor.Columns.Add(colunaGrid);

                    colunaGrid = new GridColumnDescriptor("SLA", "SLA", "SLA");
                    colunaGrid.AllowFilter = true;
                    colunaGrid.AllowSort = true;
                    colunaGrid.ReadOnly = true;
                    colunaGrid.FilterRowOptions.AllowCustomFilter = false;
                    colunaGrid.FilterRowOptions.AllowEmptyFilter = false;
                    colunaGrid.FilterRowOptions.FilterMode = FilterMode.Value;
                    colunaGrid.Appearance.AnyRecordFieldCell.AutoSize = true;
                    colunaGrid.Appearance.AnyRecordFieldCell.HorizontalAlignment = GridHorizontalAlignment.Center;
                    colunaGrid.Appearance.AnyRecordFieldCell.VerticalAlignment = GridVerticalAlignment.Middle;
                    colunaGrid.Appearance.AnyRecordFieldCell.ShowButtons = GridShowButtons.Hide;
                    colunaGrid.Appearance.ColumnHeaderCell.AutoSize = true;
                    colunaGrid.Appearance.ColumnHeaderCell.HorizontalAlignment = GridHorizontalAlignment.Center;
                    colunaGrid.Appearance.ColumnHeaderCell.VerticalAlignment = GridVerticalAlignment.Middle;
                    colunaGrid.Appearance.ColumnHeaderCell.ShowButtons = GridShowButtons.Hide;
                    colunaGrid.Appearance.AnyRecordFieldCell.Format = "g";
                    colunaGrid.Width = 90;
                    ChamadosDashBoardGrid.TableDescriptor.Columns.Add(colunaGrid);

                    colunaGrid = new GridColumnDescriptor("Retorno", "Retorno", "Retorno");
                    colunaGrid.AllowFilter = true;
                    colunaGrid.AllowSort = true;
                    colunaGrid.ReadOnly = true;
                    colunaGrid.FilterRowOptions.AllowCustomFilter = false;
                    colunaGrid.FilterRowOptions.AllowEmptyFilter = false;
                    colunaGrid.FilterRowOptions.FilterMode = FilterMode.Value;
                    colunaGrid.Appearance.AnyRecordFieldCell.AutoSize = true;
                    colunaGrid.Appearance.AnyRecordFieldCell.HorizontalAlignment = GridHorizontalAlignment.Center;
                    colunaGrid.Appearance.AnyRecordFieldCell.VerticalAlignment = GridVerticalAlignment.Middle;
                    colunaGrid.Appearance.AnyRecordFieldCell.ShowButtons = GridShowButtons.Hide;
                    colunaGrid.Appearance.ColumnHeaderCell.AutoSize = true;
                    colunaGrid.Appearance.ColumnHeaderCell.HorizontalAlignment = GridHorizontalAlignment.Center;
                    colunaGrid.Appearance.ColumnHeaderCell.VerticalAlignment = GridVerticalAlignment.Middle;
                    colunaGrid.Appearance.ColumnHeaderCell.ShowButtons = GridShowButtons.Hide;
                    colunaGrid.Width = 90;
                    ChamadosDashBoardGrid.TableDescriptor.Columns.Add(colunaGrid);

                    colunaGrid = new GridColumnDescriptor("DataOrdenacao", "DataOrdenacao", "DataOrdenacao");
                    colunaGrid.AllowFilter = true;
                    colunaGrid.AllowSort = true;
                    colunaGrid.ReadOnly = true;
                    colunaGrid.FilterRowOptions.AllowCustomFilter = false;
                    colunaGrid.FilterRowOptions.AllowEmptyFilter = false;
                    colunaGrid.FilterRowOptions.FilterMode = FilterMode.Value;
                    colunaGrid.Appearance.AnyRecordFieldCell.AutoSize = true;
                    colunaGrid.Appearance.AnyRecordFieldCell.HorizontalAlignment = GridHorizontalAlignment.Center;
                    colunaGrid.Appearance.AnyRecordFieldCell.VerticalAlignment = GridVerticalAlignment.Middle;
                    colunaGrid.Appearance.AnyRecordFieldCell.ShowButtons = GridShowButtons.Hide;
                    colunaGrid.Appearance.ColumnHeaderCell.AutoSize = true;
                    colunaGrid.Appearance.ColumnHeaderCell.HorizontalAlignment = GridHorizontalAlignment.Center;
                    colunaGrid.Appearance.ColumnHeaderCell.VerticalAlignment = GridVerticalAlignment.Middle;
                    colunaGrid.Appearance.ColumnHeaderCell.ShowButtons = GridShowButtons.Hide;
                    colunaGrid.Appearance.AnyRecordFieldCell.Format = "g";
                    colunaGrid.Width = 90;
                    ChamadosDashBoardGrid.TableDescriptor.Columns.Add(colunaGrid);

                    colunaGrid = new GridColumnDescriptor("DescricaoStatus", "DescricaoStatus", "Status");
                    colunaGrid.AllowFilter = true;
                    colunaGrid.AllowSort = true;
                    colunaGrid.ReadOnly = true;
                    colunaGrid.FilterRowOptions.AllowCustomFilter = false;
                    colunaGrid.FilterRowOptions.AllowEmptyFilter = false;
                    colunaGrid.FilterRowOptions.FilterMode = FilterMode.Value;
                    colunaGrid.Appearance.AnyRecordFieldCell.AutoSize = true;
                    colunaGrid.Appearance.AnyRecordFieldCell.HorizontalAlignment = GridHorizontalAlignment.Center;
                    colunaGrid.Appearance.AnyRecordFieldCell.VerticalAlignment = GridVerticalAlignment.Middle;
                    colunaGrid.Appearance.AnyRecordFieldCell.ShowButtons = GridShowButtons.Hide;
                    colunaGrid.Appearance.ColumnHeaderCell.AutoSize = true;
                    colunaGrid.Appearance.ColumnHeaderCell.HorizontalAlignment = GridHorizontalAlignment.Center;
                    colunaGrid.Appearance.ColumnHeaderCell.VerticalAlignment = GridVerticalAlignment.Middle;
                    colunaGrid.Appearance.ColumnHeaderCell.ShowButtons = GridShowButtons.Hide;
                    colunaGrid.Width = 110;
                    ChamadosDashBoardGrid.TableDescriptor.Columns.Add(colunaGrid);

                    colunaGrid = new GridColumnDescriptor("NomeSolicitante", "NomeSolicitante", "Solicitante");
                    colunaGrid.AllowFilter = true;
                    colunaGrid.AllowSort = true;
                    colunaGrid.ReadOnly = true;
                    colunaGrid.FilterRowOptions.AllowCustomFilter = false;
                    colunaGrid.FilterRowOptions.AllowEmptyFilter = false;
                    colunaGrid.FilterRowOptions.FilterMode = FilterMode.Value;
                    colunaGrid.Appearance.AnyRecordFieldCell.AutoSize = false;
                    colunaGrid.Appearance.AnyRecordFieldCell.HorizontalAlignment = GridHorizontalAlignment.Center;
                    colunaGrid.Appearance.AnyRecordFieldCell.VerticalAlignment = GridVerticalAlignment.Middle;
                    colunaGrid.Appearance.AnyRecordFieldCell.ShowButtons = GridShowButtons.Hide;
                    colunaGrid.Appearance.ColumnHeaderCell.AutoSize = false;
                    colunaGrid.Appearance.ColumnHeaderCell.HorizontalAlignment = GridHorizontalAlignment.Center;
                    colunaGrid.Appearance.ColumnHeaderCell.VerticalAlignment = GridVerticalAlignment.Middle;
                    colunaGrid.Appearance.ColumnHeaderCell.ShowButtons = GridShowButtons.Hide;
                    colunaGrid.Width = 100;
                    ChamadosDashBoardGrid.TableDescriptor.Columns.Add(colunaGrid);

                    if (Publicas._usuario.Tipo == Publicas.TipoUsuario.Atendente)
                    {
                        colunaGrid = new GridColumnDescriptor("EmpresaSelecionada", "EmpresaSelecionada", "Empresa");
                        colunaGrid.AllowFilter = true;
                        colunaGrid.AllowSort = true;
                        colunaGrid.ReadOnly = true;
                        colunaGrid.FilterRowOptions.AllowCustomFilter = false;
                        colunaGrid.FilterRowOptions.AllowEmptyFilter = false;
                        colunaGrid.FilterRowOptions.FilterMode = FilterMode.Value;
                        colunaGrid.Appearance.AnyRecordFieldCell.AutoSize = false;
                        colunaGrid.Appearance.AnyRecordFieldCell.HorizontalAlignment = GridHorizontalAlignment.Center;
                        colunaGrid.Appearance.AnyRecordFieldCell.VerticalAlignment = GridVerticalAlignment.Middle;
                        colunaGrid.Appearance.AnyRecordFieldCell.ShowButtons = GridShowButtons.Hide;
                        colunaGrid.Appearance.ColumnHeaderCell.AutoSize = false;
                        colunaGrid.Appearance.ColumnHeaderCell.HorizontalAlignment = GridHorizontalAlignment.Center;
                        colunaGrid.Appearance.ColumnHeaderCell.VerticalAlignment = GridVerticalAlignment.Middle;
                        colunaGrid.Appearance.ColumnHeaderCell.ShowButtons = GridShowButtons.Hide;
                        colunaGrid.Width = 100;
                        ChamadosDashBoardGrid.TableDescriptor.Columns.Add(colunaGrid);
                    }

                    colunaGrid = new GridColumnDescriptor("NomeAnalista", "NomeAnalista", "Analista");
                    colunaGrid.AllowFilter = true;
                    colunaGrid.AllowSort = true;
                    colunaGrid.ReadOnly = true;
                    colunaGrid.FilterRowOptions.AllowCustomFilter = false;
                    colunaGrid.FilterRowOptions.AllowEmptyFilter = false;
                    colunaGrid.FilterRowOptions.FilterMode = FilterMode.Value;
                    colunaGrid.Appearance.AnyRecordFieldCell.AutoSize = false;
                    colunaGrid.Appearance.AnyRecordFieldCell.HorizontalAlignment = GridHorizontalAlignment.Center;
                    colunaGrid.Appearance.AnyRecordFieldCell.VerticalAlignment = GridVerticalAlignment.Middle;
                    colunaGrid.Appearance.AnyRecordFieldCell.ShowButtons = GridShowButtons.Hide;
                    colunaGrid.Appearance.ColumnHeaderCell.AutoSize = false;
                    colunaGrid.Appearance.ColumnHeaderCell.HorizontalAlignment = GridHorizontalAlignment.Center;
                    colunaGrid.Appearance.ColumnHeaderCell.VerticalAlignment = GridVerticalAlignment.Middle;
                    colunaGrid.Appearance.ColumnHeaderCell.ShowButtons = GridShowButtons.Hide;
                    colunaGrid.Width = 100;
                    ChamadosDashBoardGrid.TableDescriptor.Columns.Add(colunaGrid);

                    if (Publicas._usuario.Tipo == Publicas.TipoUsuario.Atendente)
                    {
                        colunaGrid = new GridColumnDescriptor("HorasEstimadas", "HorasEstimadas", "T. Estimado");
                        colunaGrid.AllowFilter = true;
                        colunaGrid.AllowSort = true;
                        colunaGrid.ReadOnly = true;
                        colunaGrid.FilterRowOptions.AllowCustomFilter = false;
                        colunaGrid.FilterRowOptions.AllowEmptyFilter = false;
                        colunaGrid.FilterRowOptions.FilterMode = FilterMode.Value;
                        colunaGrid.Appearance.AnyRecordFieldCell.AutoSize = false;
                        colunaGrid.Appearance.AnyRecordFieldCell.HorizontalAlignment = GridHorizontalAlignment.Center;
                        colunaGrid.Appearance.AnyRecordFieldCell.VerticalAlignment = GridVerticalAlignment.Middle;
                        colunaGrid.Appearance.AnyRecordFieldCell.ShowButtons = GridShowButtons.Hide;
                        colunaGrid.Appearance.ColumnHeaderCell.CellTipText = "Tempo de Estimado para executar o chamado";
                        colunaGrid.Appearance.ColumnHeaderCell.AutoSize = false;
                        colunaGrid.Appearance.ColumnHeaderCell.HorizontalAlignment = GridHorizontalAlignment.Center;
                        colunaGrid.Appearance.ColumnHeaderCell.VerticalAlignment = GridVerticalAlignment.Middle;
                        colunaGrid.Appearance.ColumnHeaderCell.ShowButtons = GridShowButtons.Hide;
                        colunaGrid.Width = 75;
                        ChamadosDashBoardGrid.TableDescriptor.Columns.Add(colunaGrid);

                        colunaGrid = new GridColumnDescriptor("Temporizador", "Temporizador", "T. Usado");
                        colunaGrid.AllowFilter = true;
                        colunaGrid.AllowSort = true;
                        colunaGrid.ReadOnly = true;
                        colunaGrid.FilterRowOptions.AllowCustomFilter = false;
                        colunaGrid.FilterRowOptions.AllowEmptyFilter = false;
                        colunaGrid.FilterRowOptions.FilterMode = FilterMode.Value;
                        colunaGrid.Appearance.AnyRecordFieldCell.AutoSize = false;
                        colunaGrid.Appearance.AnyRecordFieldCell.HorizontalAlignment = GridHorizontalAlignment.Center;
                        colunaGrid.Appearance.AnyRecordFieldCell.VerticalAlignment = GridVerticalAlignment.Middle;
                        colunaGrid.Appearance.AnyRecordFieldCell.ShowButtons = GridShowButtons.Hide;
                        colunaGrid.Appearance.ColumnHeaderCell.CellTipText = "Tempo da execução do chamado";
                        colunaGrid.Appearance.ColumnHeaderCell.AutoSize = false;
                        colunaGrid.Appearance.ColumnHeaderCell.HorizontalAlignment = GridHorizontalAlignment.Center;
                        colunaGrid.Appearance.ColumnHeaderCell.VerticalAlignment = GridVerticalAlignment.Middle;
                        colunaGrid.Appearance.ColumnHeaderCell.ShowButtons = GridShowButtons.Hide;
                        colunaGrid.Width = 60;
                        ChamadosDashBoardGrid.TableDescriptor.Columns.Add(colunaGrid);
                    }

                    colunaGrid = new GridColumnDescriptor("Modulo", "Modulo", "Módulo");
                    colunaGrid.AllowFilter = true;
                    colunaGrid.AllowSort = true;
                    colunaGrid.ReadOnly = true;
                    colunaGrid.FilterRowOptions.AllowCustomFilter = false;
                    colunaGrid.FilterRowOptions.AllowEmptyFilter = false;
                    colunaGrid.FilterRowOptions.FilterMode = FilterMode.Value;
                    colunaGrid.Appearance.AnyRecordFieldCell.AutoSize = false;
                    colunaGrid.Appearance.AnyRecordFieldCell.HorizontalAlignment = GridHorizontalAlignment.Left;
                    colunaGrid.Appearance.AnyRecordFieldCell.VerticalAlignment = GridVerticalAlignment.Middle;
                    colunaGrid.Appearance.AnyRecordFieldCell.ShowButtons = GridShowButtons.Hide;
                    colunaGrid.Appearance.ColumnHeaderCell.AutoSize = false;
                    colunaGrid.Appearance.ColumnHeaderCell.HorizontalAlignment = GridHorizontalAlignment.Left;
                    colunaGrid.Appearance.ColumnHeaderCell.VerticalAlignment = GridVerticalAlignment.Middle;
                    colunaGrid.Appearance.ColumnHeaderCell.ShowButtons = GridShowButtons.Hide;
                    colunaGrid.Width = 150;
                    ChamadosDashBoardGrid.TableDescriptor.Columns.Add(colunaGrid);

                    colunaGrid = new GridColumnDescriptor("Tela", "Tela", "Local");
                    colunaGrid.AllowFilter = true;
                    colunaGrid.AllowSort = true;
                    colunaGrid.ReadOnly = true;
                    colunaGrid.FilterRowOptions.AllowCustomFilter = false;
                    colunaGrid.FilterRowOptions.AllowEmptyFilter = false;
                    colunaGrid.FilterRowOptions.FilterMode = FilterMode.Value;
                    colunaGrid.Appearance.AnyRecordFieldCell.AutoSize = false;
                    colunaGrid.Appearance.AnyRecordFieldCell.HorizontalAlignment = GridHorizontalAlignment.Left;
                    colunaGrid.Appearance.AnyRecordFieldCell.VerticalAlignment = GridVerticalAlignment.Middle;
                    colunaGrid.Appearance.AnyRecordFieldCell.ShowButtons = GridShowButtons.Hide;
                    colunaGrid.Appearance.ColumnHeaderCell.AutoSize = false;
                    colunaGrid.Appearance.ColumnHeaderCell.HorizontalAlignment = GridHorizontalAlignment.Left;
                    colunaGrid.Appearance.ColumnHeaderCell.VerticalAlignment = GridVerticalAlignment.Middle;
                    colunaGrid.Appearance.ColumnHeaderCell.ShowButtons = GridShowButtons.Hide;
                    colunaGrid.Width = 150;
                    ChamadosDashBoardGrid.TableDescriptor.Columns.Add(colunaGrid);

                    if (Publicas._usuario.Tipo == Publicas.TipoUsuario.Atendente)
                    {                       

                        colunaGrid = new GridColumnDescriptor("NomeAutorizador", "NomeAutorizador", "Quem vai autorizar");
                        colunaGrid.AllowFilter = true;
                        colunaGrid.AllowSort = true;
                        colunaGrid.ReadOnly = true;
                        colunaGrid.FilterRowOptions.AllowCustomFilter = false;
                        colunaGrid.FilterRowOptions.AllowEmptyFilter = false;
                        colunaGrid.FilterRowOptions.FilterMode = FilterMode.Value;
                        colunaGrid.Appearance.AnyRecordFieldCell.AutoSize = true;
                        colunaGrid.Appearance.AnyRecordFieldCell.HorizontalAlignment = GridHorizontalAlignment.Center;
                        colunaGrid.Appearance.AnyRecordFieldCell.VerticalAlignment = GridVerticalAlignment.Middle;
                        colunaGrid.Appearance.AnyRecordFieldCell.ShowButtons = GridShowButtons.Hide;
                        colunaGrid.Appearance.ColumnHeaderCell.AutoSize = false;
                        colunaGrid.Appearance.ColumnHeaderCell.HorizontalAlignment = GridHorizontalAlignment.Center;
                        colunaGrid.Appearance.ColumnHeaderCell.VerticalAlignment = GridVerticalAlignment.Middle;
                        colunaGrid.Appearance.ColumnHeaderCell.ShowButtons = GridShowButtons.Hide;
                        ChamadosDashBoardGrid.TableDescriptor.Columns.Add(colunaGrid);                        

                        colunaGrid = new GridColumnDescriptor("Adequacao", "Adequacao", "Terceiro");
                        colunaGrid.AllowFilter = true;
                        colunaGrid.AllowSort = true;
                        colunaGrid.ReadOnly = true;
                        colunaGrid.FilterRowOptions.AllowCustomFilter = false;
                        colunaGrid.FilterRowOptions.AllowEmptyFilter = false;
                        colunaGrid.FilterRowOptions.FilterMode = FilterMode.Value;
                        colunaGrid.Appearance.AnyRecordFieldCell.AutoSize = true;
                        colunaGrid.Appearance.AnyRecordFieldCell.HorizontalAlignment = GridHorizontalAlignment.Center;
                        colunaGrid.Appearance.AnyRecordFieldCell.VerticalAlignment = GridVerticalAlignment.Middle;
                        colunaGrid.Appearance.AnyRecordFieldCell.ShowButtons = GridShowButtons.Hide;
                        colunaGrid.Appearance.ColumnHeaderCell.AutoSize = false;
                        colunaGrid.Appearance.ColumnHeaderCell.HorizontalAlignment = GridHorizontalAlignment.Center;
                        colunaGrid.Appearance.ColumnHeaderCell.VerticalAlignment = GridVerticalAlignment.Middle;
                        colunaGrid.Appearance.ColumnHeaderCell.ShowButtons = GridShowButtons.Hide;
                        ChamadosDashBoardGrid.TableDescriptor.Columns.Add(colunaGrid);
                        
                        colunaGrid = new GridColumnDescriptor("DescricaoAvaliacao", "DescricaoAvaliacao", "Nota p/o Atendente");
                        colunaGrid.AllowFilter = true;
                        colunaGrid.AllowSort = true;
                        colunaGrid.ReadOnly = true;
                        colunaGrid.FilterRowOptions.AllowCustomFilter = false;
                        colunaGrid.FilterRowOptions.AllowEmptyFilter = false;
                        colunaGrid.FilterRowOptions.FilterMode = FilterMode.Value;
                        colunaGrid.Appearance.AnyRecordFieldCell.AutoSize = false;
                        colunaGrid.Appearance.AnyRecordFieldCell.HorizontalAlignment = GridHorizontalAlignment.Center;
                        colunaGrid.Appearance.AnyRecordFieldCell.VerticalAlignment = GridVerticalAlignment.Middle;
                        colunaGrid.Appearance.AnyRecordFieldCell.ShowButtons = GridShowButtons.Hide;
                        colunaGrid.Appearance.ColumnHeaderCell.AutoSize = false;
                        colunaGrid.Appearance.ColumnHeaderCell.HorizontalAlignment = GridHorizontalAlignment.Center;
                        colunaGrid.Appearance.ColumnHeaderCell.VerticalAlignment = GridVerticalAlignment.Middle;
                        colunaGrid.Appearance.ColumnHeaderCell.ShowButtons = GridShowButtons.Hide;
                        colunaGrid.Width = 70;
                        ChamadosDashBoardGrid.TableDescriptor.Columns.Add(colunaGrid);

                        colunaGrid = new GridColumnDescriptor("DescricaoAvaliacaoSolic", "DescricaoAvaliacaoSolic", "Nota p/o Solicitante");
                        colunaGrid.AllowFilter = true;
                        colunaGrid.AllowSort = true;
                        colunaGrid.ReadOnly = true;
                        colunaGrid.FilterRowOptions.AllowCustomFilter = false;
                        colunaGrid.FilterRowOptions.AllowEmptyFilter = false;
                        colunaGrid.FilterRowOptions.FilterMode = FilterMode.Value;
                        colunaGrid.Appearance.AnyRecordFieldCell.AutoSize = false;
                        colunaGrid.Appearance.AnyRecordFieldCell.HorizontalAlignment = GridHorizontalAlignment.Center;
                        colunaGrid.Appearance.AnyRecordFieldCell.VerticalAlignment = GridVerticalAlignment.Middle;
                        colunaGrid.Appearance.AnyRecordFieldCell.ShowButtons = GridShowButtons.Hide;
                        colunaGrid.Appearance.ColumnHeaderCell.AutoSize = false;
                        colunaGrid.Appearance.ColumnHeaderCell.HorizontalAlignment = GridHorizontalAlignment.Center;
                        colunaGrid.Appearance.ColumnHeaderCell.VerticalAlignment = GridVerticalAlignment.Middle;
                        colunaGrid.Appearance.ColumnHeaderCell.ShowButtons = GridShowButtons.Hide;
                        colunaGrid.Width = 70;
                        ChamadosDashBoardGrid.TableDescriptor.Columns.Add(colunaGrid);
                    }
                }

                ChamadosDashBoardGrid.TableDescriptor.FrozenColumn = "Categoria";
                try
                {
                    ChamadosDashBoardGrid.TableDescriptor.SortedColumns.Add("DataOrdenacao", ListSortDirection.Ascending);
                    ChamadosDashBoardGrid.TableDescriptor.SortedColumns.Add("SLA", ListSortDirection.Ascending);
                    ChamadosDashBoardGrid.TableDescriptor.VisibleColumns.Remove("DataOrdenacao");
                }
                catch { }
                #endregion

                #endregion

                if (StatusChamadosDashBoardComboBox.Items.Count == 0)
                {
                    StatusChamadosDashBoardComboBox.Items.AddRange(new object[] { "Aberto/Em Andamento", "Finalizado", "Cancelados", "Sem Avaliação", "Todos" });

                    StatusChamadosDashBoardComboBox.SelectedIndex = 0;

                    datas = new ChamadoBO().Datas();

                    foreach (var item in datas)
                    {
                        AnoChamadosDashBoardComboBox.Items.Add(item);
                    }

                    _chamadosEmPesquisa = false;
                    chamadoTimer_Tick(sender, new EventArgs());
                    AnoChamadosDashBoardComboBox.SelectedIndex = 0;

                    if (_listaChamados != null && _listaChamados.Count != 0)
                        DashBordTabControl.SelectedTab = ChamadosTabPage;
                }

                if (_listaChamados != null)
                    ChamadosDashBoardGrid.DataSource = _listaChamados.Where(w => w.Exibir)
                                                                   //.OrderBy(o => o.Data)
                                                                   .OrderBy(o => o.Ordem).ToList();
                #endregion

                #region Avaliação
                PraparaAvaliacao();
                #endregion

                
            }
            else
            {
                DashBoardPanel.Size = new Size(25, 0);
                BotaoDashboardLabel.Text = "7";
                DashBordTabControl.Visible = false;
            }
        }

        #region SAC

        private void SACDashBoardGrid_TableControlCellClick(object sender, GridTableControlCellClickEventArgs e)
        {
            try
            {
                _rowIndexComunicado = e.TableControl.Table.CurrentRecord.GetRecord().GetRowIndex();

                GridRecordRow rec = this.SACDashBoardGrid.Table.DisplayElements[_rowIndexComunicado] as GridRecordRow;

                if (rec != null)
                {
                    Record dr = rec.GetRecord() as Record;
                    if (dr != null)
                    {
                        Publicas._codigoRetornoPesquisa = (string)dr["Codigo"];
                    }
                }

                foreach (Atendimento item in _listaAtendimentosSAC.Where(w => w.Codigo == Publicas._codigoRetornoPesquisa))
                {
                    atendimentoToolStripMenuItem.Enabled = (item.Situacao == Publicas.SituacaoAtendimento.ManterComAtendente &&
                        (item.Status == Publicas.StatusAtendimento.Ativo || item.Status == Publicas.StatusAtendimento.Respondido)) ||
                        item.IdUsuario == Publicas._usuario.Id;

                    retornarToolStripMenuItem.Enabled = item.Status == Publicas.StatusAtendimento.Finalizado &&
                                    (item.Situacao == Publicas.SituacaoAtendimento.AguardandoRetornoAoCliente ||
                                     item.Situacao == Publicas.SituacaoAtendimento.Finalizado ||
                                     item.Situacao == Publicas.SituacaoAtendimento.EnviadoAoFinalizador) &&
                                    (item.OpcoesDeRetorno == Publicas.OpcaoDeRetornoAtendimento.Telefone ||
                                    item.OpcoesDeRetorno == Publicas.OpcaoDeRetornoAtendimento.Fax) && 
                                    (!item.Retornou || item.IdUsuarioRetornoAoCliente == Publicas._usuario.Id);

                    responderToolStripMenuItem.Enabled = (item.Situacao == Publicas.SituacaoAtendimento.EnviadoAoColaborador ||
                                                        item.IdUsuarioRetorno == Publicas._usuario.Id); // libera para alterar se for o mesmo usuário

                    finalizarToolStripMenuItem.Enabled = (item.Situacao == Publicas.SituacaoAtendimento.EnviadoAoFinalizador ||
                                                item.IdUsuarioFinaliza == Publicas._usuario.Id); // libera para alterar se for o mesmo usuário;

                    satisfacaoDoClienteToolStripMenuItem.Enabled = (item.Status == Publicas.StatusAtendimento.Finalizado &&
                                                                    item.AguardaSatisfacaoCliente &&
                                                                    item.Retornou);
                }
            }
            catch { }
        }

        private void SACDashBoardGrid_TableControlCurrentCellKeyUp(object sender, GridTableControlKeyEventArgs e)
        {
            try
            {
                _rowIndexComunicado = e.TableControl.Table.CurrentRecord.GetRecord().GetRowIndex();

                GridRecordRow rec = ComunidadosDashBoardGrid.Table.DisplayElements[_rowIndexComunicado] as GridRecordRow;

                if (rec != null)
                {
                    Record dr = rec.GetRecord() as Record;
                    if (dr != null)
                    {
                        Publicas._codigoRetornoPesquisa = (string)dr["Codigo"];
                    }
                }

                foreach (Atendimento item in _listaAtendimentosSAC.Where(w => w.Codigo == Publicas._codigoRetornoPesquisa))
                {
                    atendimentoToolStripMenuItem.Enabled = (item.Situacao == Publicas.SituacaoAtendimento.ManterComAtendente &&
                        (item.Status == Publicas.StatusAtendimento.Ativo || item.Status == Publicas.StatusAtendimento.Respondido)) ||
                        item.IdUsuario == Publicas._usuario.Id; 

                    retornarToolStripMenuItem.Enabled = item.Status == Publicas.StatusAtendimento.Finalizado &&
                                    (item.Situacao == Publicas.SituacaoAtendimento.AguardandoRetornoAoCliente ||
                                     item.Situacao == Publicas.SituacaoAtendimento.Finalizado ||
                                     item.Situacao == Publicas.SituacaoAtendimento.EnviadoAoFinalizador) &&
                                    (item.OpcoesDeRetorno == Publicas.OpcaoDeRetornoAtendimento.Telefone ||
                                    item.OpcoesDeRetorno == Publicas.OpcaoDeRetornoAtendimento.Fax) &&
                                     (!item.Retornou || item.IdUsuarioRetornoAoCliente == Publicas._usuario.Id);

                    responderToolStripMenuItem.Enabled = (item.Situacao == Publicas.SituacaoAtendimento.EnviadoAoColaborador ||
                                                        item.IdUsuarioRetorno == Publicas._usuario.Id); // libera para alterar se for o mesmo usuário

                    finalizarToolStripMenuItem.Enabled = (item.Situacao == Publicas.SituacaoAtendimento.EnviadoAoFinalizador ||
                                                item.IdUsuarioFinaliza == Publicas._usuario.Id); // libera para alterar se for o mesmo usuário;

                    satisfacaoDoClienteToolStripMenuItem.Enabled = (item.Status == Publicas.StatusAtendimento.Finalizado &&
                                                                    item.AguardaSatisfacaoCliente &&
                                                                    item.Retornou);
                }
            }
            catch { }
        }

        private void SACDashBoardGrid_QueryCellStyleInfo(object sender, GridTableCellStyleInfoEventArgs e)
        {
            try
            {
                GridRecordRow rec = this.SACDashBoardGrid.Table.DisplayElements[e.TableCellIdentity.RowIndex] as GridRecordRow;
                Record dr = null;

                
                if (e.TableCellIdentity.Column.MappingName == "SLA")
                {
                    if (rec != null)
                    {
                        dr = rec.GetRecord() as Record;

                        if (((Publicas.StatusAtendimento)dr["Status"] == Publicas.StatusAtendimento.Finalizado &&
                            (Publicas.SituacaoAtendimento)dr["Situacao"] == Publicas.SituacaoAtendimento.Finalizado) ||
                            ((Publicas.StatusAtendimento)dr["Status"] == Publicas.StatusAtendimento.Cancelado &&
                            (Publicas.SituacaoAtendimento)dr["Situacao"] == Publicas.SituacaoAtendimento.Cancelado))
                            e.Style.TextColor = Color.Gray;
                        else
                        {

                            if (Convert.ToDateTime(e.Style.Text) >= DateTime.Now.AddMinutes(720))
                            {
                                e.Style.TextColor = Color.Green;
                                e.Style.CellTipText = "Dentro do prazo";
                            }
                            else
                            if (Convert.ToDateTime(e.Style.Text) >= DateTime.Now)
                            {
                                if (Publicas._TemaBlack)
                                    e.Style.TextColor = Color.Yellow;
                                else
                                {
                                    e.Style.BackColor = Color.Khaki;
                                    e.Style.TextColor = Color.Black;
                                }
                            }
                            else
                            {
                                e.Style.TextColor = Color.Red;
                                e.Style.CellTipText = "Passou do prazo";
                            }
                        }
                    }
                }

                if (e.TableCellIdentity.Column.MappingName == "SLAAtendente")
                {
                    if (rec != null)
                    {
                        dr = rec.GetRecord() as Record;

                        if (((Publicas.StatusAtendimento)dr["Status"] == Publicas.StatusAtendimento.Finalizado &&
                            (Publicas.SituacaoAtendimento)dr["Situacao"] == Publicas.SituacaoAtendimento.Finalizado) ||
                            ((Publicas.StatusAtendimento)dr["Status"] == Publicas.StatusAtendimento.Cancelado &&
                            (Publicas.SituacaoAtendimento)dr["Situacao"] == Publicas.SituacaoAtendimento.Cancelado))
                            e.Style.TextColor = Color.Gray;
                        else
                        {

                            if (Convert.ToDateTime(e.Style.Text) >= DateTime.Now.AddMinutes(720))
                            {
                                e.Style.TextColor = Color.Green;
                                e.Style.CellTipText = "Dentro do prazo";
                            }
                            else
                            if (Convert.ToDateTime(e.Style.Text) >= DateTime.Now)
                            {
                                if (Publicas._TemaBlack)
                                    e.Style.TextColor = Color.Yellow;
                                else
                                {
                                    e.Style.BackColor = Color.Khaki;
                                    e.Style.TextColor = Color.Black;
                                }
                                e.Style.CellTipText = "Prazo finalizando";
                            }
                            else
                            {
                                e.Style.TextColor = Color.Red;
                                e.Style.CellTipText = "Passou do prazo";
                            }
                        }
                    }
                }
            }
            catch { }
        }

        private void responderToolStripMenuItem_Click(object sender, EventArgs e)
        {
            FecharDashBoard();
            MensagemSistema();

            SAC.Responder _tela = new SAC.Responder();
            _tela.codigoTextBox.Text = Publicas._codigoRetornoPesquisa;
            _tela.ShowDialog();
            NomePadrao();

            if (Publicas._usuario != null && !_sacEmPesquisa)
            {
                mensagemLabel.Text = "Pesquisando atendimentos, aguarde... ";
                this.Refresh();
                try
                {
                    SACBackgroundWorker.RunWorkerAsync();
                }
                catch { }
                mensagemLabel.Text = "";
                this.Refresh();
            }

            Publicas._codigoRetornoPesquisa = "";
        }

        private void consultarToolStripMenuItem_Click(object sender, EventArgs e)
        {
            FecharDashBoard();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaSAC;
            SAC.Atendimentos _tela = new SAC.Atendimentos();
            _tela.codigoTextBox.Text = Publicas._codigoRetornoPesquisa;

            _tela.ShowDialog();
            NomePadrao();
            if (Publicas._usuario != null && !_sacEmPesquisa)
            {
                mensagemLabel.Text = "Pesquisando atendimentos, aguarde... ";
                this.Refresh();
                try
                {
                    SACBackgroundWorker.RunWorkerAsync();
                }
                catch { }
                mensagemLabel.Text = "";
                this.Refresh();
            }
            Publicas._codigoRetornoPesquisa = "";
        }

        private void atendimentoToolStripMenuItem_Click(object sender, EventArgs e)
        {
            FecharDashBoard();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaSAC;
            SAC.Atendimentos _tela = new SAC.Atendimentos();
            _tela.codigoTextBox.Text = Publicas._codigoRetornoPesquisa;

            _tela.ShowDialog();
            NomePadrao();
            if (Publicas._usuario != null && !_sacEmPesquisa)
            {
                mensagemLabel.Text = "Pesquisando atendimentos, aguarde... ";
                this.Refresh();
                try
                {
                    SACBackgroundWorker.RunWorkerAsync();
                }
                catch { }
                mensagemLabel.Text = "";
                this.Refresh();
            }
            Publicas._codigoRetornoPesquisa = "";
        }

        private void finalizarToolStripMenuItem_Click(object sender, EventArgs e)
        {
            FecharDashBoard();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaSAC;
            SAC.Finalizar _tela = new SAC.Finalizar();
            _tela.codigoTextBox.Text = Publicas._codigoRetornoPesquisa;
            _tela.ShowDialog();
            NomePadrao();
            if (Publicas._usuario != null && !_sacEmPesquisa)
            {
                mensagemLabel.Text = "Pesquisando atendimentos, aguarde... ";
                this.Refresh();
                try
                {
                    SACBackgroundWorker.RunWorkerAsync();
                }
                catch { }
                mensagemLabel.Text = "";
                this.Refresh();
            }
            Publicas._codigoRetornoPesquisa = "";
        }

        private void retornarToolStripMenuItem_Click(object sender, EventArgs e)
        {
            FecharDashBoard();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaSAC;
            SAC.Retornar _tela = new SAC.Retornar();
            _tela.codigoTextBox.Text = Publicas._codigoRetornoPesquisa;
            _tela.ShowDialog();
            NomePadrao();
            if (Publicas._usuario != null && !_sacEmPesquisa)
            {
                mensagemLabel.Text = "Pesquisando atendimentos, aguarde... ";
                this.Refresh();
                try
                {
                    SACBackgroundWorker.RunWorkerAsync();
                }
                catch { }
                mensagemLabel.Text = "";
                this.Refresh();
            }
            Publicas._codigoRetornoPesquisa = "";
        }

        private void satisfacaoDoClienteToolStripMenuItem_Click(object sender, EventArgs e)
        {
            FecharDashBoard();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaSAC;
            SAC.Satisfacao _tela = new SAC.Satisfacao();
            _tela.codigoTextBox.Text = Publicas._codigoRetornoPesquisa;
            _tela.ShowDialog();
            NomePadrao();
            if (Publicas._usuario != null && !_sacEmPesquisa)
            {
                mensagemLabel.Text = "Pesquisando atendimentos, aguarde... ";
                this.Refresh();
                try
                {
                    SACBackgroundWorker.RunWorkerAsync(); 
                }
                catch { }
                mensagemLabel.Text = "";
                this.Refresh();
            }
            Publicas._codigoRetornoPesquisa = "";
        }

        #endregion

        #region Comunicado

        private void StatusComunicadosDashBoardComboBox_SelectedIndexChanged(object sender, EventArgs e)
        {
            if (Publicas._usuario != null)
                AnoComunicadosDashBoardComboBox_SelectedIndexChanged(sender, e);
        }

        private void AnoComunicadosDashBoardComboBox_SelectedIndexChanged(object sender, EventArgs e)
        {
            Publicas._anoSelecionadoComunicado = DateTime.Now.Year;
            _statusComunicadoSelecionado = Publicas.StatusComunicado.Todos;

            try
            {
                if (!AnoComunicadosDashBoardComboBox.Text.Contains("Todos"))
                    Publicas._anoSelecionadoComunicado = Convert.ToInt32(AnoComunicadosDashBoardComboBox.Text);
            }
            catch { }

            switch (StatusComunicadosDashBoardComboBox.SelectedIndex)
            {
                case 0:
                    _statusComunicadoSelecionado = Publicas.StatusComunicado.Novo;
                    break;
                case 1:
                    _statusComunicadoSelecionado = Publicas.StatusComunicado.Aprovado;
                    break;
                case 2:
                    _statusComunicadoSelecionado = Publicas.StatusComunicado.Reprovado;
                    break;
                case 3:
                    _statusComunicadoSelecionado = Publicas.StatusComunicado.Finalizado;
                    break;
                case 4:
                    _statusComunicadoSelecionado = Publicas.StatusComunicado.Cancelado;
                    break;
            }

            try
            {
                if (!_comunicadosEmPesquisa && Publicas._usuario.AcessaJuridico)
                {
                    comunicadoBackgroundWorker.RunWorkerAsync();
                    MensagemComunicadosDashBoardLabel.Text = "Pesquisando comunicados, aguarde... ";
                    _comunicadosEmPesquisa = false;
                }
                else
                    _comunicadosEmPesquisa = true;
            }
            catch { _comunicadosEmPesquisa = false; }

        }

        private void comunicadoBackgroundWorker_DoWork(object sender, DoWorkEventArgs e)
        {
            if (Publicas._usuario.AcessaJuridico)
            {
                _comunicadosEmPesquisa = true;

                try
                {
                    if (AnoComunicadosDashBoardComboBox.Text.Contains("Todos") && StatusComunicadosDashBoardComboBox.Text.Contains("Todos"))
                        _listaComunicados = new ComunicadoBO().Listar();
                    else
                        _listaComunicados = new ComunicadoBO().Listar(0, Convert.ToInt32(AnoComunicadosDashBoardComboBox.Text), _statusComunicadoSelecionado);
                }
                catch
                {
                }
            }
        }

        private void comunicadoBackgroundWorker_RunWorkerCompleted(object sender, RunWorkerCompletedEventArgs e)
        {
            if (Publicas._usuario.AcessaJuridico)
            {
                //comunicadoBackgroundWorker
                mensagemLabel.Text = "Atualizando lista dos comunicados ...";
                mensagemLabel.Cursor = Cursors.WaitCursor;
                this.Refresh();

                //statusComunidadosComboBoxAdv_SelectedIndexChanged(sender, e);
                try
                {
                    ComunidadosDashBoardGrid.DataSource = _listaComunicados;
                }
                catch { }

                mensagemLabel.Cursor = Cursors.Default;
                mensagemLabel.Text = "";

                _comunicadosEmPesquisa = false;

                try
                {
                    MensagemComunicadosDashBoardLabel.Text = string.Empty;
                }
                catch { }
                Refresh();
                comunicadoTimer.Start();
            }
        }

        private void comunicadoTimer_Tick(object sender, EventArgs e)
        {
            if (Publicas._usuario == null || !Publicas._usuario.AcessaJuridico)
                return;

            comunicadoTimer.Stop();

            try
            {
                if (!_comunicadosEmPesquisa)
                {
                    comunicadoBackgroundWorker.RunWorkerAsync();
                    MensagemComunicadosDashBoardLabel.Text = "Pesquisando comunicados, aguarde... ";
                }
            }
            catch { }
        }

        private void ComunidadosDashBoardGrid_TableControlCellClick(object sender, GridTableControlCellClickEventArgs e)
        {
            try
            {
                _rowIndexComunicado = e.TableControl.Table.CurrentRecord.GetRecord().GetRowIndex();

                GridRecordRow rec = this.ComunidadosDashBoardGrid.Table.DisplayElements[_rowIndexComunicado] as GridRecordRow;

                if (rec != null)
                {
                    Record dr = rec.GetRecord() as Record;
                    if (dr != null)
                    {
                        if ((Publicas.StatusComunicado)dr["Status"] == Publicas.StatusComunicado.Alterado ||
                            (Publicas.StatusComunicado)dr["Status"] == Publicas.StatusComunicado.Novo)
                        {
                            alterarToolStripMenuItem.Text = "Alterar";
                            alterarToolStripMenuItem.Enabled = Publicas._usuario.PermiteAlterarComunicado;
                        }
                        else
                        {
                            alterarToolStripMenuItem.Text = "Consultar";
                            alterarToolStripMenuItem.Enabled = true;
                        }

                        aprovarToolStripMenuItem.Enabled = ((Publicas.StatusComunicado)dr["Status"] == Publicas.StatusComunicado.Alterado ||
                                                            (Publicas.StatusComunicado)dr["Status"] == Publicas.StatusComunicado.Novo) &&
                                                            Publicas._usuario.PermiteAprovarComunicado;

                        cancelarToolStripMenuItem.Enabled = ((Publicas.StatusComunicado)dr["Status"] == Publicas.StatusComunicado.Alterado ||
                                                             (Publicas.StatusComunicado)dr["Status"] == Publicas.StatusComunicado.Novo ||
                                                             (Publicas.StatusComunicado)dr["Status"] == Publicas.StatusComunicado.Aprovado) &&
                                                             Publicas._usuario.PermiteCancelarComunicado;

                        finalizarToolStripMenuItem1.Enabled = (Publicas.StatusComunicado)dr["Status"] == Publicas.StatusComunicado.Aprovado &&
                                                                Publicas._usuario.PermiteFinalizarComunicado;

                        reprovarToolStripMenuItem.Enabled = ((Publicas.StatusComunicado)dr["Status"] == Publicas.StatusComunicado.Alterado ||
                                                             (Publicas.StatusComunicado)dr["Status"] == Publicas.StatusComunicado.Novo) &&
                                                             Publicas._usuario.PermiteReprovarComunicado;
                    }
                }
            }
            catch { }
        }

        private void ComunidadosDashBoardGrid_TableControlCurrentCellKeyUp(object sender, GridTableControlKeyEventArgs e)
        {
            try
            {
                _rowIndexComunicado = e.TableControl.Table.CurrentRecord.GetRecord().GetRowIndex();

                GridRecordRow rec = ComunidadosDashBoardGrid.Table.DisplayElements[_rowIndexComunicado] as GridRecordRow;

                if (rec != null)
                {
                    Record dr = rec.GetRecord() as Record;
                    if (dr != null)
                    {
                        if ((Publicas.StatusComunicado)dr["Status"] == Publicas.StatusComunicado.Alterado ||
                            (Publicas.StatusComunicado)dr["Status"] == Publicas.StatusComunicado.Novo)
                        {
                            alterarToolStripMenuItem.Text = "Alterar";
                            alterarToolStripMenuItem.Enabled = Publicas._usuario.PermiteAlterarComunicado;
                        }
                        else
                        {
                            alterarToolStripMenuItem.Text = "Consultar";
                            alterarToolStripMenuItem.Enabled = true;
                        }

                        aprovarToolStripMenuItem.Enabled = ((Publicas.StatusComunicado)dr["Status"] == Publicas.StatusComunicado.Alterado ||
                                                            (Publicas.StatusComunicado)dr["Status"] == Publicas.StatusComunicado.Novo) &&
                                                            Publicas._usuario.PermiteAprovarComunicado;

                        cancelarToolStripMenuItem.Enabled = ((Publicas.StatusComunicado)dr["Status"] == Publicas.StatusComunicado.Alterado ||
                                                             (Publicas.StatusComunicado)dr["Status"] == Publicas.StatusComunicado.Novo ||
                                                             (Publicas.StatusComunicado)dr["Status"] == Publicas.StatusComunicado.Aprovado) &&
                                                             Publicas._usuario.PermiteCancelarComunicado;

                        finalizarToolStripMenuItem1.Enabled = (Publicas.StatusComunicado)dr["Status"] == Publicas.StatusComunicado.Aprovado &&
                                                                Publicas._usuario.PermiteFinalizarComunicado;

                        reprovarToolStripMenuItem.Enabled = ((Publicas.StatusComunicado)dr["Status"] == Publicas.StatusComunicado.Alterado ||
                                                             (Publicas.StatusComunicado)dr["Status"] == Publicas.StatusComunicado.Novo) &&
                                                             Publicas._usuario.PermiteReprovarComunicado;
                    }
                }
            }
            catch { }
        }

        private void ComunidadosDashBoardGrid_TableControlCellDoubleClick(object sender, GridTableControlCellClickEventArgs e)
        {
            GridRecordRow rec = this.ComunidadosDashBoardGrid.Table.DisplayElements[e.Inner.RowIndex] as GridRecordRow;

            if (rec != null)
            {
                Record dr = rec.GetRecord() as Record;
                if (dr != null)
                {
                    Publicas._idComunicado = (int)dr["Id"];
                    FecharDashBoard();
                    MensagemSistema();
                    Publicas._chamadoPeloMenuDeComunicado = Publicas.StatusComunicado.Alterado;
                    tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaJuridico;
                    new Juridico.Comunicado().ShowDialog();
                    NomePadrao();
                    
                    if (Publicas._usuario != null && !_comunicadosEmPesquisa)
                    {
                        mensagemLabel.Text = "Pesquisando comunicados, aguarde... ";
                        this.Refresh();
                        try
                        {
                            comunicadoBackgroundWorker.RunWorkerAsync();
                        }
                        catch { }
                        mensagemLabel.Text = "";
                        this.Refresh();

                    }

                    Publicas._idComunicado = 0;
                }

            }
        }

        private void alterarToolStripMenuItem_Click(object sender, EventArgs e)
        {
            GridRecordRow rec = ComunidadosDashBoardGrid.Table.DisplayElements[_rowIndexComunicado] as GridRecordRow;

            if (rec != null)
            {
                Record dr = rec.GetRecord() as Record;
                if (dr != null)
                {
                    Publicas._idComunicado = (int)dr["Id"];
                    FecharDashBoard();
                    MensagemSistema();
                    tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaJuridico;
                    Publicas._chamadoPeloMenuDeComunicado = Publicas.StatusComunicado.Alterado;
                    Juridico.Comunicado _tela = new Juridico.Comunicado();

                    _tela.tituloLabel.Text = (alterarToolStripMenuItem.Text.Contains("Consultar") ? "Consultar" : "Alterar") + " Comunicado";
                    _tela.statusButton.Text = "Gravar";
                    _tela.ShowDialog();

                    NomePadrao();

                    if (Publicas._usuario != null && !_comunicadosEmPesquisa)
                    {
                        mensagemLabel.Text = "Pesquisando comunicados, aguarde... ";
                        this.Refresh();
                        try
                        {
                            comunicadoBackgroundWorker.RunWorkerAsync();
                        }
                        catch { }
                        mensagemLabel.Text = "";
                        this.Refresh();

                    }

                    Publicas._idComunicado = 0;
                }
            }
        }

        private void reenviarEmailToolStripMenuItem_Click(object sender, EventArgs e)
        {
            GridRecordRow rec = ComunidadosDashBoardGrid.Table.DisplayElements[_rowIndexComunicado] as GridRecordRow;

            if (rec != null)
            {
                Record dr = rec.GetRecord() as Record;
                if (dr != null)
                {
                    Publicas._idComunicado = (int)dr["Id"];
                    FecharDashBoard();
                    MensagemSistema();
                    tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaJuridico;
                    Publicas._chamadoPeloMenuDeComunicado = Publicas.StatusComunicado.Alterado;
                    Juridico.Comunicado _tela = new Juridico.Comunicado();
                    _tela.tituloLabel.Text = "Reeviar e-mail sobre o Comunicado";
                    _tela.gravarButton.Visible = false;
                    _tela.statusButton.Text = "&Enviar Email";
                    _tela.statusButton.Location = new Point(_tela.gravarButton.Left, _tela.gravarButton.Top);
                    _tela.statusButton.Visible = true;
                    _tela.ShowDialog();

                    NomePadrao();

                    if (Publicas._usuario != null && !_comunicadosEmPesquisa)
                    {
                        mensagemLabel.Text = "Pesquisando comunicados, aguarde... ";
                        this.Refresh();
                        try
                        {
                            comunicadoBackgroundWorker.RunWorkerAsync();
                        }
                        catch { }
                        mensagemLabel.Text = "";
                        this.Refresh();

                    }

                    Publicas._idComunicado = 0;
                }
            }
        }

        private void reprovarToolStripMenuItem_Click(object sender, EventArgs e)
        {
            GridRecordRow rec = ComunidadosDashBoardGrid.Table.DisplayElements[_rowIndexComunicado] as GridRecordRow;

            if (rec != null)
            {
                Record dr = rec.GetRecord() as Record;
                if (dr != null)
                {
                    Publicas._idComunicado = (int)dr["Id"];
                    FecharDashBoard();
                    MensagemSistema();
                    tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaJuridico;
                    Publicas._chamadoPeloMenuDeComunicado = Publicas.StatusComunicado.Reprovado;
                    Juridico.Comunicado _tela = new Juridico.Comunicado();
                    _tela.tituloLabel.Text = "Reprovar Comunicado";
                    _tela.gravarButton.Visible = false;
                    _tela.statusButton.Text = "&Reprovar";
                    _tela.statusButton.Location = new Point(_tela.gravarButton.Left, _tela.gravarButton.Top);
                    _tela.statusButton.Visible = true;
                    _tela.ShowDialog();
                    NomePadrao();

                    if (Publicas._usuario != null && !_comunicadosEmPesquisa)
                    {
                        mensagemLabel.Text = "Pesquisando comunicados, aguarde... ";
                        this.Refresh();
                        try
                        {
                            comunicadoBackgroundWorker.RunWorkerAsync();
                        }
                        catch { }
                        mensagemLabel.Text = "";
                        this.Refresh();

                    }

                    Publicas._idComunicado = 0;
                }
            }
        }

        private void cancelarToolStripMenuItem_Click(object sender, EventArgs e)
        {
            GridRecordRow rec = ComunidadosDashBoardGrid.Table.DisplayElements[_rowIndexComunicado] as GridRecordRow;

            if (rec != null)
            {
                Record dr = rec.GetRecord() as Record;
                if (dr != null)
                {
                    Publicas._idComunicado = (int)dr["Id"];
                    FecharDashBoard();
                    MensagemSistema();
                    tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaJuridico;
                    Publicas._chamadoPeloMenuDeComunicado = Publicas.StatusComunicado.Cancelado;
                    Juridico.Comunicado _tela = new Juridico.Comunicado();
                    _tela.tituloLabel.Text = "Cancelar Comunicado";
                    _tela.gravarButton.Visible = false;
                    _tela.statusButton.Text = "&Cancelar";
                    _tela.statusButton.Location = new Point(_tela.gravarButton.Left, _tela.gravarButton.Top);
                    _tela.statusButton.Visible = true;
                    _tela.ShowDialog();
                    NomePadrao();

                    if (Publicas._usuario != null && !_comunicadosEmPesquisa)
                    {
                        mensagemLabel.Text = "Pesquisando comunicados, aguarde... ";
                        this.Refresh();
                        try
                        {
                            comunicadoBackgroundWorker.RunWorkerAsync();
                        }
                        catch { }
                        mensagemLabel.Text = "";
                        this.Refresh();

                    }

                    Publicas._idComunicado = 0;
                }
            }
        }

        private void finalizarToolStripMenuItem1_Click(object sender, EventArgs e)
        {
            GridRecordRow rec = ComunidadosDashBoardGrid.Table.DisplayElements[_rowIndexComunicado] as GridRecordRow;

            if (rec != null)
            {
                Record dr = rec.GetRecord() as Record;
                if (dr != null)
                {
                    Publicas._idComunicado = (int)dr["Id"];
                    FecharDashBoard();
                    MensagemSistema();
                    tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaJuridico;
                    Publicas._chamadoPeloMenuDeComunicado = Publicas.StatusComunicado.Finalizado;
                    Juridico.Comunicado _tela = new Juridico.Comunicado();
                    _tela.tituloLabel.Text = "Finalizar Comunicado";
                    _tela.gravarButton.Visible = false;
                    _tela.statusButton.Text = "&Finalizar";
                    _tela.statusButton.Location = new Point(_tela.gravarButton.Left, _tela.gravarButton.Top);
                    _tela.statusButton.Visible = true;
                    _tela.ShowDialog();
                    NomePadrao();

                    if (Publicas._usuario != null && !_comunicadosEmPesquisa)
                    {
                        mensagemLabel.Text = "Pesquisando comunicados, aguarde... ";
                        this.Refresh();
                        try
                        {
                            comunicadoBackgroundWorker.RunWorkerAsync();
                        }
                        catch { }
                        mensagemLabel.Text = "";
                        this.Refresh();

                    }

                    Publicas._idComunicado = 0;
                }
            }
        }

        private void aprovarToolStripMenuItem_Click(object sender, EventArgs e)
        {
            GridRecordRow rec = ComunidadosDashBoardGrid.Table.DisplayElements[_rowIndexComunicado] as GridRecordRow;

            if (rec != null)
            {
                Record dr = rec.GetRecord() as Record;
                if (dr != null)
                {
                    Publicas._idComunicado = (int)dr["Id"];
                    FecharDashBoard();
                    MensagemSistema();
                    tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaJuridico;
                    Publicas._chamadoPeloMenuDeComunicado = Publicas.StatusComunicado.Aprovado;
                    Juridico.Comunicado _tela = new Juridico.Comunicado();
                    _tela.tituloLabel.Text = "Aprovar Comunicado";
                    _tela.gravarButton.Visible = false;
                    _tela.statusButton.Text = "&Aprovar";
                    _tela.statusButton.Location = new Point(_tela.gravarButton.Left, _tela.gravarButton.Top);
                    _tela.statusButton.Visible = true;
                    _tela.ShowDialog();
                    NomePadrao();
                    
                    if (Publicas._usuario != null && !_comunicadosEmPesquisa)
                    {
                        mensagemLabel.Text = "Pesquisando comunicados, aguarde... ";
                        this.Refresh();
                        try
                        {
                            comunicadoBackgroundWorker.RunWorkerAsync();
                        }
                        catch { }
                        mensagemLabel.Text = "";
                        this.Refresh();

                    }
                    Publicas._idComunicado = 0;
                }
            }
        }

        private void FixarDashBoardPictureBox_Click(object sender, EventArgs e)
        {
            _fixaDashBoard = false;
            FixarDashBoardPictureBox.Visible = false;
            LiberarDashBoardPictureBox.Visible = true;

            if (((Control)sender).Name.Contains("FixarDashBoard"))
            {
                Publicas._usuario.SempreMostrarListaDeChamados = false;
                new UsuarioBO().Gravar(Publicas._usuario);
            }
        }

        private void LiberarDashBoardPictureBox_Click(object sender, EventArgs e)
        {
            _fixaDashBoard = true;

            FixarDashBoardPictureBox.Visible = true;
            LiberarDashBoardPictureBox.Visible = false;

            if (((Control)sender).Name.Contains("LiberarDashBoard"))
            {
                Publicas._usuario.SempreMostrarListaDeChamados = true;

                new UsuarioBO().Gravar(Publicas._usuario);
            }
        }

        private void FixarDashBoardPictureBox_MouseHover(object sender, EventArgs e)
        {
            FixarDashBoardPictureBox.Cursor = Cursors.Hand;
            FixarDashBoardPictureBox.BackColor = _corMenuSelecionado;
        }

        private void FixarDashBoardPictureBox_MouseLeave(object sender, EventArgs e)
        {
            FixarDashBoardPictureBox.Cursor = Cursors.Default;
            FixarDashBoardPictureBox.BackColor = System.Drawing.Color.FromArgb(128, 131, 143); ;
        }

        private void LiberarDashBoardPictureBox_MouseHover(object sender, EventArgs e)
        {
            LiberarDashBoardPictureBox.Cursor = Cursors.Hand;
            LiberarDashBoardPictureBox.BackColor = _corMenuSelecionado;
        }

        private void LiberarDashBoardPictureBox_MouseLeave(object sender, EventArgs e)
        {
            LiberarDashBoardPictureBox.Cursor = Cursors.Default;
            LiberarDashBoardPictureBox.BackColor = System.Drawing.Color.FromArgb(128, 131, 143); ;
        }
        #endregion

        #region Avaliacao
        private void PraparaAvaliacao()
        {
            int qtdGraficosVisiveis = 0;
            DashBordTabControl.Refresh();
            int tamanho = (int)((DashBoardPanel.Width - 65) / 3);
            EmAndamentoPanel.Size = new Size(tamanho, EmAndamentoPanel.Height);
            NaoIniciadoPanel.Size = new Size(tamanho, EmAndamentoPanel.Height);
            FinalizadosPanel.Size = new Size(tamanho, EmAndamentoPanel.Height);

            ReferenciaAvaliacaoLabel.Font = new Font(dataHoraLabel.Font.FontFamily, (float)12);
            ReferenciaAvaliacaoLabel.ForeColor = (Publicas._TemaBlack ? Publicas._fonte : Publicas._panelTitulo);
            TipoAvaliacaoLabel.Font = new Font(dataHoraLabel.Font.FontFamily, (float)12);
            TipoAvaliacaoLabel.ForeColor = (Publicas._TemaBlack ? Publicas._fonte : Publicas._panelTitulo);

            if (Publicas._TemaBlack)
            {
                TipoAvaliacaoComboBox.BackColor = Publicas._fundo;
                TipoAvaliacaoComboBox.ForeColor = Publicas._fonte;
                ReferenciaAvaliacaoComboBox.BackColor = Publicas._fundo;
                ReferenciaAvaliacaoComboBox.ForeColor = Publicas._fonte;
            }

            #region Grid
            filter.WireGrid(this.AvaliacaoEmAndamentoGrid);

            AvaliacaoEmAndamentoGrid.SortIconPlacement = SortIconPlacement.Left;
            AvaliacaoEmAndamentoGrid.TopLevelGroupOptions.ShowFilterBar = true;
            AvaliacaoEmAndamentoGrid.TableOptions.ListBoxSelectionMode = SelectionMode.One;
            AvaliacaoEmAndamentoGrid.TopLevelGroupOptions.ShowAddNewRecordBeforeDetails = false;
            AvaliacaoEmAndamentoGrid.RecordNavigationBar.Label = "Colaboradores";
            AvaliacaoEmAndamentoGrid.TableControl.CellToolTip.Active = true;

            for (int i = 0; i < AvaliacaoEmAndamentoGrid.TableDescriptor.Columns.Count; i++)
            {
                AvaliacaoEmAndamentoGrid.TableDescriptor.Columns[i].AllowFilter = true;
                AvaliacaoEmAndamentoGrid.TableDescriptor.Columns[i].AllowSort = true;
                AvaliacaoEmAndamentoGrid.TableDescriptor.Columns[i].ReadOnly = false;
                AvaliacaoEmAndamentoGrid.TableDescriptor.Columns[i].FilterRowOptions.AllowCustomFilter = false;
                AvaliacaoEmAndamentoGrid.TableDescriptor.Columns[i].FilterRowOptions.AllowEmptyFilter = false;
                AvaliacaoEmAndamentoGrid.TableDescriptor.Columns[i].FilterRowOptions.FilterMode = Syncfusion.Windows.Forms.Grid.Grouping.FilterMode.Value;
            }

            AvaliacaoEmAndamentoGrid.TableOptions.ListBoxSelectionCurrentCellOptions = GridListBoxSelectionCurrentCellOptions.HideCurrentCell;
            if (!Publicas._TemaBlack)
            {
                AvaliacaoEmAndamentoGrid.SetMetroStyle(metroColor);
                AvaliacaoEmAndamentoGrid.TableOptions.SelectionBackColor = Publicas._bordaEntrada;
                AvaliacaoEmAndamentoGrid.TableOptions.SelectionTextColor = Color.WhiteSmoke;
            }
            AvaliacaoEmAndamentoGrid.TableOptions.ListBoxSelectionColorOptions = GridListBoxSelectionColorOptions.ApplySelectionColor;

            filter.WireGrid(this.AvaliacaoNaoIniciadaGrid);

            AvaliacaoNaoIniciadaGrid.SortIconPlacement = SortIconPlacement.Left;
            AvaliacaoNaoIniciadaGrid.TopLevelGroupOptions.ShowFilterBar = true;
            AvaliacaoNaoIniciadaGrid.TableOptions.ListBoxSelectionMode = SelectionMode.One;
            AvaliacaoNaoIniciadaGrid.TopLevelGroupOptions.ShowAddNewRecordBeforeDetails = false;
            AvaliacaoNaoIniciadaGrid.RecordNavigationBar.Label = "Colaboradores";
            AvaliacaoNaoIniciadaGrid.TableControl.CellToolTip.Active = true;

            for (int i = 0; i < AvaliacaoNaoIniciadaGrid.TableDescriptor.Columns.Count; i++)
            {
                AvaliacaoNaoIniciadaGrid.TableDescriptor.Columns[i].AllowFilter = true;
                AvaliacaoNaoIniciadaGrid.TableDescriptor.Columns[i].AllowSort = true;
                AvaliacaoNaoIniciadaGrid.TableDescriptor.Columns[i].ReadOnly = false;
                AvaliacaoNaoIniciadaGrid.TableDescriptor.Columns[i].FilterRowOptions.AllowCustomFilter = false;
                AvaliacaoNaoIniciadaGrid.TableDescriptor.Columns[i].FilterRowOptions.AllowEmptyFilter = false;
                AvaliacaoNaoIniciadaGrid.TableDescriptor.Columns[i].FilterRowOptions.FilterMode = Syncfusion.Windows.Forms.Grid.Grouping.FilterMode.Value;
            }

            AvaliacaoNaoIniciadaGrid.TableOptions.ListBoxSelectionCurrentCellOptions = GridListBoxSelectionCurrentCellOptions.HideCurrentCell;
            if (!Publicas._TemaBlack)
            {
                AvaliacaoNaoIniciadaGrid.SetMetroStyle(metroColor);
                AvaliacaoNaoIniciadaGrid.TableOptions.SelectionBackColor = Publicas._bordaEntrada;
                AvaliacaoNaoIniciadaGrid.TableOptions.SelectionTextColor = Color.WhiteSmoke;
            }
            AvaliacaoNaoIniciadaGrid.TableOptions.ListBoxSelectionColorOptions = GridListBoxSelectionColorOptions.ApplySelectionColor;

            filter.WireGrid(this.AvaliacaoFinalizadasGrid);

            AvaliacaoFinalizadasGrid.SortIconPlacement = SortIconPlacement.Left;
            AvaliacaoFinalizadasGrid.TopLevelGroupOptions.ShowFilterBar = true;
            AvaliacaoFinalizadasGrid.TableOptions.ListBoxSelectionMode = SelectionMode.One;
            AvaliacaoFinalizadasGrid.TopLevelGroupOptions.ShowAddNewRecordBeforeDetails = false;
            AvaliacaoFinalizadasGrid.RecordNavigationBar.Label = "Colaboradores";
            AvaliacaoFinalizadasGrid.TableControl.CellToolTip.Active = true;

            for (int i = 0; i < AvaliacaoFinalizadasGrid.TableDescriptor.Columns.Count; i++)
            {
                AvaliacaoFinalizadasGrid.TableDescriptor.Columns[i].AllowFilter = true;
                AvaliacaoFinalizadasGrid.TableDescriptor.Columns[i].AllowSort = true;
                AvaliacaoFinalizadasGrid.TableDescriptor.Columns[i].ReadOnly = false;
                AvaliacaoFinalizadasGrid.TableDescriptor.Columns[i].FilterRowOptions.AllowCustomFilter = false;
                AvaliacaoFinalizadasGrid.TableDescriptor.Columns[i].FilterRowOptions.AllowEmptyFilter = false;
                AvaliacaoFinalizadasGrid.TableDescriptor.Columns[i].FilterRowOptions.FilterMode = Syncfusion.Windows.Forms.Grid.Grouping.FilterMode.Value;
            }

            AvaliacaoFinalizadasGrid.TableOptions.ListBoxSelectionCurrentCellOptions = GridListBoxSelectionCurrentCellOptions.HideCurrentCell;
            if (!Publicas._TemaBlack)
            {
                AvaliacaoFinalizadasGrid.SetMetroStyle(metroColor);
                AvaliacaoFinalizadasGrid.TableOptions.SelectionBackColor = Publicas._bordaEntrada;
                AvaliacaoFinalizadasGrid.TableOptions.SelectionTextColor = Color.WhiteSmoke;
            }
            AvaliacaoFinalizadasGrid.TableOptions.ListBoxSelectionColorOptions = GridListBoxSelectionColorOptions.ApplySelectionColor;

            filter.WireGrid(this.rankingGridGroupingControl);

            rankingGridGroupingControl.SortIconPlacement = SortIconPlacement.Left;
            rankingGridGroupingControl.TopLevelGroupOptions.ShowFilterBar = true;
            rankingGridGroupingControl.TableOptions.ListBoxSelectionMode = SelectionMode.One;
            rankingGridGroupingControl.TopLevelGroupOptions.ShowAddNewRecordBeforeDetails = false;
            rankingGridGroupingControl.RecordNavigationBar.Label = "Colaboradores";
            rankingGridGroupingControl.TableControl.CellToolTip.Active = true;

            for (int i = 0; i < rankingGridGroupingControl.TableDescriptor.Columns.Count; i++)
            {
                rankingGridGroupingControl.TableDescriptor.Columns[i].AllowFilter = true;
                rankingGridGroupingControl.TableDescriptor.Columns[i].AllowSort = true;
                rankingGridGroupingControl.TableDescriptor.Columns[i].ReadOnly = false;
                rankingGridGroupingControl.TableDescriptor.Columns[i].FilterRowOptions.AllowCustomFilter = false;
                rankingGridGroupingControl.TableDescriptor.Columns[i].FilterRowOptions.AllowEmptyFilter = false;
                rankingGridGroupingControl.TableDescriptor.Columns[i].FilterRowOptions.FilterMode = Syncfusion.Windows.Forms.Grid.Grouping.FilterMode.Value;
            }

            rankingGridGroupingControl.TableOptions.ListBoxSelectionCurrentCellOptions = GridListBoxSelectionCurrentCellOptions.HideCurrentCell;
            if (!Publicas._TemaBlack)
            {
                rankingGridGroupingControl.SetMetroStyle(metroColor);
                rankingGridGroupingControl.TableOptions.SelectionBackColor = Publicas._bordaEntrada;
                rankingGridGroupingControl.TableOptions.SelectionTextColor = Color.WhiteSmoke;
            }
            rankingGridGroupingControl.TableOptions.ListBoxSelectionColorOptions = GridListBoxSelectionColorOptions.ApplySelectionColor;
            #endregion

            if (!_mudouVisualizacaoAndamento)
                andamentoButton_Click(this, new EventArgs());

            rankingGridGroupingControl.DataSource = _listaAvaliacoesNotas.Where(w => w.ReferenciaFormatada == ReferenciaAvaliacaoComboBox.Text).ToList();

            #region prepara os graficos pizza

            double finalizados = 0;
            double iniciados = 0;
            double naoIniciados = 0;
            double todos = 0;

            chartControl1.Series.Clear();
            chartControl2.Series.Clear();
            chartControl3.Series.Clear();
            chartControl4.Series.Clear();
            chartControl5.Series.Clear();
            chartControl6.Series.Clear();
            chartControl7.Series.Clear();
            chartControl8.Series.Clear();
            chartControl9.Series.Clear();
            chartControl10.Series.Clear();
            chartControl11.Series.Clear();

            #region Grafico EOVG Dutra

            ChartSeries _serie1 = new ChartSeries("Não Iniciadas", ChartSeriesType.Pie);

            todos = _listaAvaliacoes.Where(w => w.IdEmpresa == 2).Count();
            finalizados = _listaAvaliacoes.Where(w => w.Status == "F" && w.IdEmpresa == 2).Count();
            iniciados = _listaAvaliacoes.Where(w => w.Status == "I" && w.IdEmpresa == 2).Count();
            naoIniciados = _listaAvaliacoes.Where(w => w.Status == "N" && w.IdEmpresa == 2).Count();
            qtdGraficosVisiveis = qtdGraficosVisiveis + (todos != 0 ? 1 : 0);

            _serie1.Points.Add(0, naoIniciados);
            _serie1.Points.Add(1, iniciados);
            _serie1.Points.Add(2, finalizados);
            _serie1.Points.Add(3, todos);
            _serie1.EnableStyles = true;
            _serie1.PointsToolTipFormat = "{2}";

            try
            {
                _serie1.Styles[0].ToolTipFormat = "Não Iniciadas = " + naoIniciados.ToString() + " - " + Math.Round((naoIniciados / todos) * 100, 2) + "%";
            }
            catch
            {
            }

            try
            {
                _serie1.Styles[1].ToolTipFormat = "Iniciadas = " + iniciados.ToString() + " - " + Math.Round((iniciados / todos) * 100, 2) + "%";
            }
            catch
            {
            }

            try
            {
                _serie1.Styles[2].ToolTipFormat = "Finalizadas = " + finalizados.ToString() + " - " + Math.Round((finalizados / todos) * 100, 2) + "%";
            }
            catch
            {
            }

            try
            {
                _serie1.Styles[3].ToolTipFormat = "Total colaboradores = " + todos.ToString() + " - " + Math.Round((todos / todos) * 100, 2) + "%";
            }
            catch
            {
            }

            graficoEOVGDutraPanel.Visible = todos != 0;
            chartControl1.Series.Add(_serie1);
            chartControl1.BackColor = TipoAvaliacaoComboBox.BackColor;
            #endregion

            #region Grafico EOVG Lavras

            ChartSeries _serieLavras = new ChartSeries("Não Iniciadas", ChartSeriesType.Pie);

            todos = _listaAvaliacoes.Where(w => w.IdEmpresa == 3).Count();
            finalizados = _listaAvaliacoes.Where(w => w.Status == "F" && w.IdEmpresa == 3).Count();
            iniciados = _listaAvaliacoes.Where(w => w.Status == "I" && w.IdEmpresa == 3).Count();
            naoIniciados = _listaAvaliacoes.Where(w => w.Status == "N" && w.IdEmpresa == 3).Count();
            qtdGraficosVisiveis = qtdGraficosVisiveis + (todos != 0 ? 1 : 0);

            _serieLavras.Points.Add(0, naoIniciados);
            _serieLavras.Points.Add(1, iniciados);
            _serieLavras.Points.Add(2, finalizados);
            _serieLavras.Points.Add(3, todos);
            _serieLavras.EnableStyles = true;
            _serieLavras.PointsToolTipFormat = "{2}";

            try
            {
                _serieLavras.Styles[0].ToolTipFormat = "Não Iniciadas = " + naoIniciados.ToString() + " - " + Math.Round((naoIniciados / todos) * 100, 2) + "%";
            }
            catch
            {
            }

            try
            {
                _serieLavras.Styles[1].ToolTipFormat = "Iniciadas = " + iniciados.ToString() + " - " + Math.Round((iniciados / todos) * 100, 2) + "%";
            }
            catch
            {
            }

            try
            {
                _serieLavras.Styles[2].ToolTipFormat = "Finalizadas = " + finalizados.ToString() + " - " + Math.Round((finalizados / todos) * 100, 2) + "%";
            }
            catch
            {
            }

            try
            {
                _serieLavras.Styles[3].ToolTipFormat = "Total colaboradores = " + todos.ToString() + " - " + Math.Round((todos / todos) * 100, 2) + "%";
            }
            catch
            {
            }

            graficoEOVGLavrasPanel.Visible = todos != 0;
            chartControl10.Series.Add(_serieLavras);
            chartControl10.BackColor = TipoAvaliacaoComboBox.BackColor;
            #endregion

            #region Grafico ABC

            ChartSeries _serieABC = new ChartSeries("Não Iniciadas", ChartSeriesType.Pie);

            todos = _listaAvaliacoes.Where(w => w.IdEmpresa == 4).Count();
            finalizados = _listaAvaliacoes.Where(w => w.Status == "F" && w.IdEmpresa == 4).Count();
            iniciados = _listaAvaliacoes.Where(w => w.Status == "I" && w.IdEmpresa == 4).Count();
            naoIniciados = _listaAvaliacoes.Where(w => w.Status == "N" && w.IdEmpresa == 4).Count();
            qtdGraficosVisiveis = qtdGraficosVisiveis + (todos != 0 ? 1 : 0);

            _serieABC.Points.Add(0, naoIniciados);
            _serieABC.Points.Add(1, iniciados);
            _serieABC.Points.Add(2, finalizados);
            _serieABC.Points.Add(3, todos);
            _serieABC.EnableStyles = true;
            _serieABC.PointsToolTipFormat = "{2}";

            try
            {
                _serieABC.Styles[0].ToolTipFormat = "Não Iniciadas = " + naoIniciados.ToString() + " - " + Math.Round((naoIniciados / todos) * 100, 2) + "%";
            }
            catch
            {
            }

            try
            {
                _serieABC.Styles[1].ToolTipFormat = "Iniciadas = " + iniciados.ToString() + " - " + Math.Round((iniciados / todos) * 100, 2) + "%";
            }
            catch
            {
            }

            try
            {
                _serieABC.Styles[2].ToolTipFormat = "Finalizadas = " + finalizados.ToString() + " - " + Math.Round((finalizados / todos) * 100, 2) + "%";
            }
            catch
            {
            }

            try
            {
                _serieABC.Styles[3].ToolTipFormat = "Total colaboradores = " + todos.ToString() + " - " + Math.Round((todos / todos) * 100, 2) + "%";
            }
            catch
            {
            }

            graficoABCPanel.Visible = todos != 0;
            chartControl2.Series.Add(_serieABC);
            chartControl2.BackColor = TipoAvaliacaoComboBox.BackColor;
            #endregion

            #region Grafico Rapido

            ChartSeries _serieRapido = new ChartSeries("Não Iniciadas", ChartSeriesType.Pie);

            todos = _listaAvaliacoes.Where(w => w.IdEmpresa == 5).Count();
            finalizados = _listaAvaliacoes.Where(w => w.Status == "F" && w.IdEmpresa == 5).Count();
            iniciados = _listaAvaliacoes.Where(w => w.Status == "I" && w.IdEmpresa == 5).Count();
            naoIniciados = _listaAvaliacoes.Where(w => w.Status == "N" && w.IdEmpresa == 5).Count();
            qtdGraficosVisiveis = qtdGraficosVisiveis + (todos != 0 ? 1 : 0);

            _serieRapido.Points.Add(0, naoIniciados);
            _serieRapido.Points.Add(1, iniciados);
            _serieRapido.Points.Add(2, finalizados);
            _serieRapido.Points.Add(3, todos);
            _serieRapido.EnableStyles = true;
            _serieRapido.PointsToolTipFormat = "{2}";

            try
            {
                _serieRapido.Styles[0].ToolTipFormat = "Não Iniciadas = " + naoIniciados.ToString() + " - " + Math.Round((naoIniciados / todos) * 100, 2) + "%";
            }
            catch
            {
            }

            try
            {
                _serieRapido.Styles[1].ToolTipFormat = "Iniciadas = " + iniciados.ToString() + " - " + Math.Round((iniciados / todos) * 100, 2) + "%";
            }
            catch
            {
            }

            try
            {
                _serieRapido.Styles[2].ToolTipFormat = "Finalizadas = " + finalizados.ToString() + " - " + Math.Round((finalizados / todos) * 100, 2) + "%";
            }
            catch
            {
            }

            try
            {
                _serieRapido.Styles[3].ToolTipFormat = "Total colaboradores = " + todos.ToString() + " - " + Math.Round((todos / todos) * 100, 2) + "%";
            }
            catch
            {
            }

            graficoRapidoPanel.Visible = todos != 0;
            chartControl3.Series.Add(_serieRapido);
            chartControl3.BackColor = TipoAvaliacaoComboBox.BackColor;
            #endregion

            #region Grafico Cisne

            ChartSeries _serieCisne = new ChartSeries("Não Iniciadas", ChartSeriesType.Pie);

            todos = _listaAvaliacoes.Where(w => w.IdEmpresa == 6).Count();
            finalizados = _listaAvaliacoes.Where(w => w.Status == "F" && w.IdEmpresa == 6).Count();
            iniciados = _listaAvaliacoes.Where(w => w.Status == "I" && w.IdEmpresa == 6).Count();
            naoIniciados = _listaAvaliacoes.Where(w => w.Status == "N" && w.IdEmpresa == 6).Count();
            qtdGraficosVisiveis = qtdGraficosVisiveis + (todos != 0 ? 1 : 0);

            _serieCisne.Points.Add(0, naoIniciados);
            _serieCisne.Points.Add(1, iniciados);
            _serieCisne.Points.Add(2, finalizados);
            _serieCisne.Points.Add(3, todos);
            _serieCisne.EnableStyles = true;
            _serieCisne.PointsToolTipFormat = "{2}";

            try
            {
                _serieCisne.Styles[0].ToolTipFormat = "Não Iniciadas = " + naoIniciados.ToString() + " - " + Math.Round((naoIniciados / todos) * 100, 2) + "%";
            }
            catch
            {
            }

            try
            {
                _serieCisne.Styles[1].ToolTipFormat = "Iniciadas = " + iniciados.ToString() + " - " + Math.Round((iniciados / todos) * 100, 2) + "%";
            }
            catch
            {
            }

            try
            {
                _serieCisne.Styles[2].ToolTipFormat = "Finalizadas = " + finalizados.ToString() + " - " + Math.Round((finalizados / todos) * 100, 2) + "%";
            }
            catch
            {
            }

            try
            {
                _serieCisne.Styles[3].ToolTipFormat = "Total colaboradores = " + todos.ToString() + " - " + Math.Round((todos / todos) * 100, 2) + "%";
            }
            catch
            {
            }

            graficoCisnePanel.Visible = todos != 0;
            chartControl4.Series.Add(_serieCisne);
            chartControl4.BackColor = TipoAvaliacaoComboBox.BackColor;
            #endregion

            #region Grafico NIFF

            ChartSeries _serieNiff = new ChartSeries("Não Iniciadas", ChartSeriesType.Pie);

            todos = _listaAvaliacoes.Where(w => w.IdEmpresa == 1).Count();
            finalizados = _listaAvaliacoes.Where(w => w.Status == "F" && w.IdEmpresa == 1).Count();
            iniciados = _listaAvaliacoes.Where(w => w.Status == "I" && w.IdEmpresa == 1).Count();
            naoIniciados = _listaAvaliacoes.Where(w => w.Status == "N" && w.IdEmpresa == 1).Count();
            qtdGraficosVisiveis = qtdGraficosVisiveis + (todos != 0 ? 1 : 0);

            _serieNiff.Points.Add(0, naoIniciados);
            _serieNiff.Points.Add(1, iniciados);
            _serieNiff.Points.Add(2, finalizados);
            _serieNiff.Points.Add(3, todos);
            _serieNiff.EnableStyles = true;
            _serieNiff.PointsToolTipFormat = "{2}";

            try
            {
                _serieNiff.Styles[0].ToolTipFormat = "Não Iniciadas = " + naoIniciados.ToString() + " - " + Math.Round((naoIniciados / todos) * 100, 2) + "%";
            }
            catch
            {
            }

            try
            {
                _serieNiff.Styles[1].ToolTipFormat = "Iniciadas = " + iniciados.ToString() + " - " + Math.Round((iniciados / todos) * 100, 2) + "%";
            }
            catch
            {
            }

            try
            {
                _serieNiff.Styles[2].ToolTipFormat = "Finalizadas = " + finalizados.ToString() + " - " + Math.Round((finalizados / todos) * 100, 2) + "%";
            }
            catch
            {
            }

            try
            {
                _serieNiff.Styles[3].ToolTipFormat = "Total colaboradores = " + todos.ToString() + " - " + Math.Round((todos / todos) * 100, 2) + "%";
            }
            catch
            {
            }

            graficoNiffPanel.Visible = todos != 0;
            chartControl5.Series.Add(_serieNiff);
            chartControl5.BackColor = TipoAvaliacaoComboBox.BackColor;
            #endregion

            #region Grafico Aruja

            ChartSeries _serieAruja = new ChartSeries("Não Iniciadas", ChartSeriesType.Pie);

            todos = _listaAvaliacoes.Where(w => w.IdEmpresa == 7).Count();
            finalizados = _listaAvaliacoes.Where(w => w.Status == "F" && w.IdEmpresa == 7).Count();
            iniciados = _listaAvaliacoes.Where(w => w.Status == "I" && w.IdEmpresa == 7).Count();
            naoIniciados = _listaAvaliacoes.Where(w => w.Status == "N" && w.IdEmpresa == 7).Count();
            qtdGraficosVisiveis = qtdGraficosVisiveis + (todos != 0 ? 1 : 0);

            _serieAruja.Points.Add(0, naoIniciados);
            _serieAruja.Points.Add(1, iniciados);
            _serieAruja.Points.Add(2, finalizados);
            _serieAruja.Points.Add(3, todos);
            _serieAruja.EnableStyles = true;
            _serieAruja.PointsToolTipFormat = "{2}";

            try
            {
                _serieAruja.Styles[0].ToolTipFormat = "Não Iniciadas = " + naoIniciados.ToString() + " - " + Math.Round((naoIniciados / todos) * 100, 2) + "%";
            }
            catch
            {
            }

            try
            {
                _serieAruja.Styles[1].ToolTipFormat = "Iniciadas = " + iniciados.ToString() + " - " + Math.Round((iniciados / todos) * 100, 2) + "%";
            }
            catch
            {
            }

            try
            {
                _serieAruja.Styles[2].ToolTipFormat = "Finalizadas = " + finalizados.ToString() + " - " + Math.Round((finalizados / todos) * 100, 2) + "%";
            }
            catch
            {
            }

            try
            {
                _serieAruja.Styles[3].ToolTipFormat = "Total colaboradores = " + todos.ToString() + " - " + Math.Round((todos / todos) * 100, 2) + "%";
            }
            catch
            {
            }

            graficoArujaPanel.Visible = todos != 0;
            chartControl6.Series.Add(_serieAruja);
            chartControl6.BackColor = TipoAvaliacaoComboBox.BackColor;
            #endregion

            #region Grafico campibus

            ChartSeries _serieCampibus = new ChartSeries("Não Iniciadas", ChartSeriesType.Pie);

            todos = _listaAvaliacoes.Where(w => w.IdEmpresa == 8).Count();
            finalizados = _listaAvaliacoes.Where(w => w.Status == "F" && w.IdEmpresa == 8).Count();
            iniciados = _listaAvaliacoes.Where(w => w.Status == "I" && w.IdEmpresa == 8).Count();
            naoIniciados = _listaAvaliacoes.Where(w => w.Status == "N" && w.IdEmpresa == 8).Count();
            qtdGraficosVisiveis = qtdGraficosVisiveis + (todos != 0 ? 1 : 0);

            _serieCampibus.Points.Add(0, naoIniciados);
            _serieCampibus.Points.Add(1, iniciados);
            _serieCampibus.Points.Add(2, finalizados);
            _serieCampibus.Points.Add(3, todos);
            _serieCampibus.EnableStyles = true;
            _serieCampibus.PointsToolTipFormat = "{2}";

            try
            {
                _serieCampibus.Styles[0].ToolTipFormat = "Não Iniciadas = " + naoIniciados.ToString() + " - " + Math.Round((naoIniciados / todos) * 100, 2) + "%";
            }
            catch
            {
            }

            try
            {
                _serieCampibus.Styles[1].ToolTipFormat = "Iniciadas = " + iniciados.ToString() + " - " + Math.Round((iniciados / todos) * 100, 2) + "%";
            }
            catch
            {
            }

            try
            {
                _serieCampibus.Styles[2].ToolTipFormat = "Finalizadas = " + finalizados.ToString() + " - " + Math.Round((finalizados / todos) * 100, 2) + "%";
            }
            catch
            {
            }

            try
            {
                _serieCampibus.Styles[3].ToolTipFormat = "Total colaboradores = " + todos.ToString() + " - " + Math.Round((todos / todos) * 100, 2) + "%";
            }
            catch
            {
            }

            graficoCampibusPanel.Visible = todos != 0;
            chartControl7.Series.Add(_serieCampibus);
            chartControl7.BackColor = TipoAvaliacaoComboBox.BackColor;
            #endregion

            #region Grafico Ribe

            ChartSeries _serieRibe = new ChartSeries("Não Iniciadas", ChartSeriesType.Pie);

            todos = _listaAvaliacoes.Where(w => w.IdEmpresa == 9).Count();
            finalizados = _listaAvaliacoes.Where(w => w.Status == "F" && w.IdEmpresa == 9).Count();
            iniciados = _listaAvaliacoes.Where(w => w.Status == "I" && w.IdEmpresa == 9).Count();
            naoIniciados = _listaAvaliacoes.Where(w => w.Status == "N" && w.IdEmpresa == 9).Count();
            qtdGraficosVisiveis = qtdGraficosVisiveis + (todos != 0 ? 1 : 0);

            _serieRibe.Points.Add(0, naoIniciados);
            _serieRibe.Points.Add(1, iniciados);
            _serieRibe.Points.Add(2, finalizados);
            _serieRibe.Points.Add(3, todos);
            _serieRibe.EnableStyles = true;
            _serieRibe.PointsToolTipFormat = "{2}";

            try
            {
                _serieRibe.Styles[0].ToolTipFormat = "Não Iniciadas = " + naoIniciados.ToString() + " - " + Math.Round((naoIniciados / todos) * 100, 2) + "%";
            }
            catch
            {
            }

            try
            {
                _serieRibe.Styles[1].ToolTipFormat = "Iniciadas = " + iniciados.ToString() + " - " + Math.Round((iniciados / todos) * 100, 2) + "%";
            }
            catch
            {
            }

            try
            {
                _serieRibe.Styles[2].ToolTipFormat = "Finalizadas = " + finalizados.ToString() + " - " + Math.Round((finalizados / todos) * 100, 2) + "%";
            }
            catch
            {
            }

            try
            {
                _serieRibe.Styles[3].ToolTipFormat = "Total colaboradores = " + todos.ToString() + " - " + Math.Round((todos / todos) * 100, 2) + "%";
            }
            catch
            {
            }

            graficoRibePanel.Visible = todos != 0;
            chartControl8.Series.Add(_serieRibe);
            chartControl8.BackColor = TipoAvaliacaoComboBox.BackColor;
            #endregion

            #region Grafico VUG Dutra

            ChartSeries _serieVugDutra = new ChartSeries("Não Iniciadas", ChartSeriesType.Pie);

            todos = _listaAvaliacoes.Where(w => w.IdEmpresa == 10).Count();
            finalizados = _listaAvaliacoes.Where(w => w.Status == "F" && w.IdEmpresa == 10).Count();
            iniciados = _listaAvaliacoes.Where(w => w.Status == "I" && w.IdEmpresa == 10).Count();
            naoIniciados = _listaAvaliacoes.Where(w => w.Status == "N" && w.IdEmpresa == 10).Count();
            qtdGraficosVisiveis = qtdGraficosVisiveis + (todos != 0 ? 1 : 0);

            _serieVugDutra.Points.Add(0, naoIniciados);
            _serieVugDutra.Points.Add(1, iniciados);
            _serieVugDutra.Points.Add(2, finalizados);
            _serieVugDutra.Points.Add(3, todos);
            _serieVugDutra.EnableStyles = true;
            _serieVugDutra.PointsToolTipFormat = "{2}";

            try
            {
                _serieVugDutra.Styles[0].ToolTipFormat = "Não Iniciadas = " + naoIniciados.ToString() + " - " + Math.Round((naoIniciados / todos) * 100, 2) + "%";
            }
            catch
            {
            }

            try
            {
                _serieVugDutra.Styles[1].ToolTipFormat = "Iniciadas = " + iniciados.ToString() + " - " + Math.Round((iniciados / todos) * 100, 2) + "%";
            }
            catch
            {
            }

            try
            {
                _serieVugDutra.Styles[2].ToolTipFormat = "Finalizadas = " + finalizados.ToString() + " - " + Math.Round((finalizados / todos) * 100, 2) + "%";
            }
            catch
            {
            }

            try
            {
                _serieVugDutra.Styles[3].ToolTipFormat = "Total colaboradores = " + todos.ToString() + " - " + Math.Round((todos / todos) * 100, 2) + "%";
            }
            catch
            {
            }

            graficoVugDutraPanel.Visible = todos != 0;
            chartControl9.Series.Add(_serieVugDutra);
            chartControl9.BackColor = TipoAvaliacaoComboBox.BackColor;
            #endregion

            #region Grafico VUG Bebedouro

            ChartSeries _serieVugBebedouro = new ChartSeries("Não Iniciadas", ChartSeriesType.Pie);

            todos = _listaAvaliacoes.Where(w => w.IdEmpresa == 11).Count();
            finalizados = _listaAvaliacoes.Where(w => w.Status == "F" && w.IdEmpresa == 11).Count();
            iniciados = _listaAvaliacoes.Where(w => w.Status == "I" && w.IdEmpresa == 11).Count();
            naoIniciados = _listaAvaliacoes.Where(w => w.Status == "N" && w.IdEmpresa == 11).Count();
            qtdGraficosVisiveis = qtdGraficosVisiveis + (todos != 0 ? 1 : 0);

            _serieVugBebedouro.Points.Add(0, naoIniciados);
            _serieVugBebedouro.Points.Add(1, iniciados);
            _serieVugBebedouro.Points.Add(2, finalizados);
            _serieVugBebedouro.Points.Add(3, todos);
            _serieVugBebedouro.EnableStyles = true;
            _serieVugBebedouro.PointsToolTipFormat = "{2}";

            try
            {
                _serieVugBebedouro.Styles[0].ToolTipFormat = "Não Iniciadas = " + naoIniciados.ToString() + " - " + Math.Round((naoIniciados / todos) * 100, 2) + "%";
            }
            catch
            {
            }

            try
            {
                _serieVugBebedouro.Styles[1].ToolTipFormat = "Iniciadas = " + iniciados.ToString() + " - " + Math.Round((iniciados / todos) * 100, 2) + "%";
            }
            catch
            {
            }

            try
            {
                _serieVugBebedouro.Styles[2].ToolTipFormat = "Finalizadas = " + finalizados.ToString() + " - " + Math.Round((finalizados / todos) * 100, 2) + "%";
            }
            catch
            {
            }

            try
            {
                _serieVugBebedouro.Styles[3].ToolTipFormat = "Total colaboradores = " + todos.ToString() + " - " + Math.Round((todos / todos) * 100, 2) + "%";
            }
            catch
            {
            }

            graficoVugBebedouroPanel.Visible = todos != 0;
            chartControl11.Series.Add(_serieVugBebedouro);
            chartControl11.BackColor = TipoAvaliacaoComboBox.BackColor;
            #endregion

            AvaliacaoNaoIniciadaGrid.ShowGroupDropArea = true;
            AvaliacaoNaoIniciadaGrid.GridGroupDropArea.BackColor = Publicas._bordaEntrada;
            AvaliacaoNaoIniciadaGrid.GridGroupDropArea.PrepareViewStyleInfo += new GridPrepareViewStyleInfoEventHandler(ParentTable_PrepareViewStyleInfo);
            AvaliacaoEmAndamentoGrid.ShowGroupDropArea = true;
            AvaliacaoEmAndamentoGrid.GridGroupDropArea.BackColor = Publicas._bordaEntrada;
            AvaliacaoEmAndamentoGrid.GridGroupDropArea.PrepareViewStyleInfo += new GridPrepareViewStyleInfoEventHandler(ParentTable_PrepareViewStyleInfo);
            AvaliacaoFinalizadasGrid.ShowGroupDropArea = true;
            AvaliacaoFinalizadasGrid.GridGroupDropArea.BackColor = Publicas._bordaEntrada;
            AvaliacaoFinalizadasGrid.GridGroupDropArea.PrepareViewStyleInfo += new GridPrepareViewStyleInfoEventHandler(ParentTable_PrepareViewStyleInfo);

            chartControl1.BackInterior = new Syncfusion.Drawing.BrushInfo(TipoAvaliacaoComboBox.BackColor);
            chartControl2.BackInterior = new Syncfusion.Drawing.BrushInfo(TipoAvaliacaoComboBox.BackColor);
            chartControl3.BackInterior = new Syncfusion.Drawing.BrushInfo(TipoAvaliacaoComboBox.BackColor);
            chartControl4.BackInterior = new Syncfusion.Drawing.BrushInfo(TipoAvaliacaoComboBox.BackColor);
            chartControl5.BackInterior = new Syncfusion.Drawing.BrushInfo(TipoAvaliacaoComboBox.BackColor);
            chartControl6.BackInterior = new Syncfusion.Drawing.BrushInfo(TipoAvaliacaoComboBox.BackColor);
            chartControl7.BackInterior = new Syncfusion.Drawing.BrushInfo(TipoAvaliacaoComboBox.BackColor);
            chartControl8.BackInterior = new Syncfusion.Drawing.BrushInfo(TipoAvaliacaoComboBox.BackColor);
            chartControl9.BackInterior = new Syncfusion.Drawing.BrushInfo(TipoAvaliacaoComboBox.BackColor);
            chartControl10.BackInterior = new Syncfusion.Drawing.BrushInfo(TipoAvaliacaoComboBox.BackColor);
            chartControl11.BackInterior = new Syncfusion.Drawing.BrushInfo(TipoAvaliacaoComboBox.BackColor);

            chartControl1.ChartArea.BackInterior = new Syncfusion.Drawing.BrushInfo(TipoAvaliacaoComboBox.BackColor);
            chartControl2.ChartArea.BackInterior = new Syncfusion.Drawing.BrushInfo(TipoAvaliacaoComboBox.BackColor);
            chartControl3.ChartArea.BackInterior = new Syncfusion.Drawing.BrushInfo(TipoAvaliacaoComboBox.BackColor);
            chartControl4.ChartArea.BackInterior = new Syncfusion.Drawing.BrushInfo(TipoAvaliacaoComboBox.BackColor);
            chartControl5.ChartArea.BackInterior = new Syncfusion.Drawing.BrushInfo(TipoAvaliacaoComboBox.BackColor);
            chartControl6.ChartArea.BackInterior = new Syncfusion.Drawing.BrushInfo(TipoAvaliacaoComboBox.BackColor);
            chartControl7.ChartArea.BackInterior = new Syncfusion.Drawing.BrushInfo(TipoAvaliacaoComboBox.BackColor);
            chartControl8.ChartArea.BackInterior = new Syncfusion.Drawing.BrushInfo(TipoAvaliacaoComboBox.BackColor);
            chartControl9.ChartArea.BackInterior = new Syncfusion.Drawing.BrushInfo(TipoAvaliacaoComboBox.BackColor);
            chartControl10.ChartArea.BackInterior = new Syncfusion.Drawing.BrushInfo(TipoAvaliacaoComboBox.BackColor);
            chartControl11.ChartArea.BackInterior = new Syncfusion.Drawing.BrushInfo(TipoAvaliacaoComboBox.BackColor);

            MontaGraficosNotas();

            if (qtdGraficosVisiveis == 0)
                qtdGraficosVisiveis = 1;

            tamanho = (int)((DashBoardPanel.Width - 65) / qtdGraficosVisiveis);
            graficoEOVGDutraPanel.Size = new Size(tamanho, graficoEOVGDutraPanel.Height);
            graficoEOVGLavrasPanel.Size = new Size(tamanho, graficoEOVGLavrasPanel.Height);
            graficoABCPanel.Size = new Size(tamanho, graficoABCPanel.Height);
            graficoRapidoPanel.Size = new Size(tamanho, graficoRapidoPanel.Height);
            graficoCisnePanel.Size = new Size(tamanho, graficoCisnePanel.Height);
            graficoNiffPanel.Size = new Size(tamanho, graficoNiffPanel.Height);
            graficoArujaPanel.Size = new Size(tamanho, graficoArujaPanel.Height);
            graficoCampibusPanel.Size = new Size(tamanho, graficoCampibusPanel.Height);
            graficoVugDutraPanel.Size = new Size(tamanho, graficoCampibusPanel.Height);
            graficoVugBebedouroPanel.Size = new Size(tamanho, graficoCampibusPanel.Height);

            //graficosNotasPanel.Refresh();
            #endregion
        }

        private void andamentoAvaliacaoBackgroundWorker_DoWork(object sender, DoWorkEventArgs e)
        {
            if (!_andamentoAvaliacaoEmPesquisa)
            {
                _andamentoAvaliacaoEmPesquisa = true;

                try
                {
                    _listaAvaliacoesNotas = new AutoAvaliacaoBO().ListarNotas(tipoAvaliacao, idSuperior);

                    _listaAvaliacoes = new AutoAvaliacaoBO().Listar(Convert.ToInt32(ReferenciaAvaliacaoComboBox.Text.Replace("/", "")), _cargo.TipoDoCargo, tipoAvaliacao, idSuperior);
                }
                catch
                {
                    _andamentoAvaliacaoEmPesquisa = false;
                }
            }
        }

        private void andamentoAvaliacaoBackgroundWorker_RunWorkerCompleted(object sender, RunWorkerCompletedEventArgs e)
        {
            _andamentoAvaliacaoEmPesquisa = false;
            MensagemAvaliacaoLabel.Text = "";

            AvaliacaoFinalizadasGrid.DataSource = _listaAvaliacoes.Where(w => w.Status == "F").ToList();
            AvaliacaoEmAndamentoGrid.DataSource = _listaAvaliacoes.Where(w => w.Status == "I").ToList();
            AvaliacaoNaoIniciadaGrid.DataSource = _listaAvaliacoes.Where(w => w.Status == "N").ToList();

            PraparaAvaliacao();
        }

        private void TipoAvaliacaoComboBox_SelectedIndexChanged(object sender, EventArgs e)
        {
            if (TipoAvaliacaoComboBox == null)
                return;
            try
            {
                idSuperior = 0;

                if (Publicas._usuario.AcessoDeGestor && !Publicas._usuario.AcessoDeRH)
                    idSuperior = _colaboradores.Id;

                tipoAvaliacao = (TipoAvaliacaoComboBox.SelectedIndex == 0 ? "AA" : // AutoAvaliacao
                                      (TipoAvaliacaoComboBox.SelectedIndex == 1 ? "FG" : // Feedback Gestor
                                      (TipoAvaliacaoComboBox.SelectedIndex == 2 ? "MN" : // Metas Numericas
                                      (TipoAvaliacaoComboBox.SelectedIndex == 3 ? "AG" : // Avaliação Gestos
                                      (TipoAvaliacaoComboBox.SelectedIndex == 4 ? "AR" : // Avaliação RH
                                      (TipoAvaliacaoComboBox.SelectedIndex == 5 ? "FA" : // FeedBack Avaliado
                                      "PD" // Plano de desenvolvimento
                                      ))))));

                andamentoAvaliacaoBackgroundWorker.RunWorkerAsync();
            }
            catch { }
        }

        private void ReferenciaAvaliacaoComboBox_SelectedIndexChanged(object sender, EventArgs e)
        {
            TipoAvaliacaoComboBox_SelectedIndexChanged(sender, e);
        }

        private void andamentoButton_Click(object sender, EventArgs e)
        {
            AndamentoAvaliacoesPanel.BringToFront();
            AndamentoAvaliacoesPanel.Dock = DockStyle.Fill;
            AndamentoAvaliacoesPanel.Visible = true;
            NotasAvaliacaoPanel.Visible = false;
            RankingAvaliacaoPanel.Visible = false;
            andamentoButton.BackColor = Publicas._botao;
            andamentoButton.ForeColor = Publicas._fonteBotao;
            notasButton.BackColor = TipoAvaliacaoComboBox.BackColor;
            notasButton.ForeColor = rankingButton.MetroColor;
            rankingButton.BackColor = TipoAvaliacaoComboBox.BackColor;
            rankingButton.ForeColor = rankingButton.MetroColor;

            if (Publicas._TemaBlack)
            {
                notasButton.ForeColor = Color.Gray;
                rankingButton.ForeColor = Color.Gray;
            }
            _mudouVisualizacaoAndamento = true;
        }

        private void rankingButton_Click(object sender, EventArgs e)
        {
            RankingAvaliacaoPanel.BringToFront();
            RankingAvaliacaoPanel.Dock = DockStyle.Fill;
            NotasAvaliacaoPanel.Visible = false;
            NotasAvaliacaoPanel.Visible = false;
            RankingAvaliacaoPanel.Visible = true;
            rankingButton.BackColor = Publicas._botao;
            rankingButton.ForeColor = Publicas._fonteBotao;
            notasButton.BackColor = TipoAvaliacaoComboBox.BackColor;
            notasButton.ForeColor = rankingButton.MetroColor;
            andamentoButton.BackColor = TipoAvaliacaoComboBox.BackColor;
            andamentoButton.ForeColor = rankingButton.MetroColor;

            if (Publicas._TemaBlack)
            {
                notasButton.ForeColor = Color.Gray;
                andamentoButton.ForeColor = Color.Gray;
            }

            _mudouVisualizacaoAndamento = true;
        }

        private void notasButton_Click(object sender, EventArgs e)
        {
            NotasAvaliacaoPanel.BringToFront();
            NotasAvaliacaoPanel.Dock = DockStyle.Fill;
            NotasAvaliacaoPanel.Visible = true;
            AndamentoAvaliacoesPanel.Visible = false;
            RankingAvaliacaoPanel.Visible = false;
            andamentoButton.BackColor = TipoAvaliacaoComboBox.BackColor;
            andamentoButton.ForeColor = rankingButton.MetroColor;
            notasButton.BackColor = Publicas._botao;
            notasButton.ForeColor = Publicas._fonteBotao;
            rankingButton.BackColor = TipoAvaliacaoComboBox.BackColor;
            rankingButton.ForeColor = rankingButton.MetroColor;

            if (Publicas._TemaBlack)
            {
                rankingButton.ForeColor = Color.Gray;
                andamentoButton.ForeColor = Color.Gray;
            }

            _mudouVisualizacaoAndamento = true;
        }

        private void chartControl1_Click(object sender, EventArgs e)
        {
            //eovg Dutra
            MontaGraficosNotas(2);
        }

        private void chartControl10_Click(object sender, EventArgs e)
        {
            // Eovg Lavras
            MontaGraficosNotas(3);
        }

        private void chartControl2_Click(object sender, EventArgs e)
        {
            //ABC
            MontaGraficosNotas(4);
        }

        private void chartControl3_Click(object sender, EventArgs e)
        {
            // Rapido
            MontaGraficosNotas(5);
        }

        private void chartControl4_Click(object sender, EventArgs e)
        {
            // Cisne
            MontaGraficosNotas(6);
        }

        private void chartControl5_Click(object sender, EventArgs e)
        {
            //NIFF
            MontaGraficosNotas(1);
        }

        private void chartControl6_Click(object sender, EventArgs e)
        {
            //Aruja
            MontaGraficosNotas(7);
        }

        private void chartControl7_Click(object sender, EventArgs e)
        {
            //Campibus
            MontaGraficosNotas(8);
        }

        private void MontaGraficosNotas(int idEmpresa = 0)
        {
            #region prepara grafico notas

            if (_quantidadeGraficos != 0)
            {
                Control[] controle;
                string nome;

                for (int j = 1; j <= _quantidadeGraficos; j++)
                {
                    nome = "grafico" + j.ToString();

                    controle = this.Controls.Find(nome, true);

                    try
                    {
                        controle[0].Dispose();
                    }
                    catch { }
                }

                _quantidadeGraficos = 0;
            }

            NotasAvaliacaoPanel.Controls.Clear();

            ChartSeries _serieNotas;
            ChartControl _graficoNotas;
            int top = 5;
            int left = 3;
            int i = 1;

            foreach (var item in _listaAvaliacoesNotas.GroupBy(g => new { g.IdColaborador, g.Colaborador, g.Empresa, g.IdEmpresa })
                                                      .Select(s => new {
                                                          IdColaborador = s.Key.IdColaborador,
                                                          Colaborador = s.Key.Colaborador,
                                                          Empresa = s.Key.Empresa,
                                                          IdEmpresa = s.Key.IdEmpresa
                                                      })
                                                      .OrderBy(o => o.Colaborador))
            {
                if (idEmpresa != 0 && idEmpresa != item.IdEmpresa)
                    continue;
                
                if (_listaAvaliacoesNotas.Where(w => w.IdColaborador == item.IdColaborador && 
                                                     w.IdEmpresa == item.IdEmpresa &&
                                                     w.ReferenciaFormatada.Contains(ReferenciaAvaliacaoComboBox.Text.Substring(3, 4))).Count() != 0)
                {
                    _quantidadeGraficos++;

                    _graficoNotas = new ChartControl();
                    _graficoNotas.Name = "grafico" + _quantidadeGraficos.ToString();
                    _graficoNotas.BackInterior = new Syncfusion.Drawing.BrushInfo(TipoAvaliacaoComboBox.BackColor);
                    _graficoNotas.ForeColor = Publicas._fonte;
                    _graficoNotas.ChartArea.BackInterior = new Syncfusion.Drawing.BrushInfo(TipoAvaliacaoComboBox.BackColor);
                    _graficoNotas.Size = new Size(419, 188);
                    _graficoNotas.Location = new Point(left, top);
                    _graficoNotas.PrimaryXAxis.ValueType = ChartValueType.Category;
                    _graficoNotas.Skins = Syncfusion.Windows.Forms.Chart.Skins.Metro;
                    _graficoNotas.Palette = ChartColorPalette.Metro;
                    _graficoNotas.Series3D = false;
                    _graficoNotas.ShowLegend = false;
                    _graficoNotas.Legend.Position = ChartDock.Bottom;
                    _graficoNotas.LegendsPlacement = ChartPlacement.Outside;

                    _serieNotas = new ChartSeries("", ChartSeriesType.Line);

                    foreach (var itemn in _listaAvaliacoesNotas.Where(w => w.IdColaborador == item.IdColaborador &&
                    w.IdEmpresa == item.IdEmpresa &&
                    w.ReferenciaFormatada.Contains(ReferenciaAvaliacaoComboBox.Text.Substring(3, 4))))
                    {
                        _graficoNotas.Text = itemn.Colaborador + " " + item.Empresa;
                        _serieNotas.Points.Add(
                            Publicas.MesExtenso(itemn.ReferenciaFormatada.Substring(0,2)).Substring(0,3), (double)itemn.TotalAvaliacao);
                        _serieNotas.SortPoints = false;
                    }

                    _graficoNotas.Title.Font = TipoAvaliacaoComboBox.Font;
                    _graficoNotas.Series.Add(_serieNotas);
                    

                    _graficoNotas.Series[0].Style.Callout.Enable = true;
                    _graficoNotas.Series[0].Style.Callout.DisplayTextAndFormat = "{2}";
                    _graficoNotas.Series[0].Style.Callout.Position = LabelPosition.Top;

                    NotasAvaliacaoPanel.Controls.Add(_graficoNotas);
                    top = top + _graficoNotas.Height + 10;
                    i++;

                    if (i == 3)
                    {
                        i = 1;
                        left = left + _graficoNotas.Width + 10;
                        top = 5;
                    }
                }
            }

            #endregion
        }

        private void AvaliacaoNaoIniciadaGrid_QueryCellStyleInfo(object sender, GridTableCellStyleInfoEventArgs e)
        {
            if (e.TableCellIdentity.TableCellType == GridTableCellType.GroupCaptionCell && e.TableCellIdentity.GroupedColumn != null)
            {
                string x = e.Style.Text;
            }
        }

        private void ParentTable_PrepareViewStyleInfo(object sender, GridPrepareViewStyleInfoEventArgs e)
        {
            if (e.ColIndex == 2 && e.RowIndex == 2) // Sets the font, color, alignment and text to the dropped column
                e.Style.Text = "";
        }

        private void chartControl9_Click(object sender, EventArgs e)
        {
            //Vug Dutra
            MontaGraficosNotas(10);
        }
        #endregion

        #endregion

        #region Notificação
        private void EnviarEmail_MouseHover(object sender, EventArgs e)
        {
            Imagem1Picture.Cursor = Cursors.Hand;
            Imagem1Picture.BackColor = Publicas._panelTituloFoco;
        }

        private void EnviarEmail_MouseLeave(object sender, EventArgs e)
        {
            tituloMinimizarLabel.Cursor = Cursors.Default;
            Imagem1Picture.BackColor = Publicas._panelTitulo;
        }

        private void EnviarEmail_Click(object sender, EventArgs e)
        {
            int IdLivro = Convert.ToInt32(((PictureBox)sender).Tag);
            int IdColaborador = Convert.ToInt32(((PictureBox)sender).Parent.Tag);

            Classes.Livros _livros = new LivrosBO().Consultar(IdLivro);
            Classes.EmprestimoLivros _emprestimo = new EmprestimoLivrosBO().Consultar(IdLivro, IdColaborador);
            Classes.Colaboradores _colaborador = new ColaboradoresBO().ConsultaColaborador(IdColaborador);

            //string[] _dadosEmail = new string[50];

            //_dadosEmail[0] = _livros.Nome;
            //_dadosEmail[1] = _colaborador.Nome.Split(' ')[0] + "</br>" + 
            //    (_emprestimo.DataAcompanhamento.Date > DateTime.Now.Date ? "O prazo para devolução está próximo." : "Venceu o prazo para devolução.") +
            //    "</br> Precisa de mais tempo para terminar a leitura? </br>Entre em contato com o RH.";
            //_dadosEmail[2] = "A data para a devolução " + (_emprestimo.DataAcompanhamento > DateTime.Now.Date ? "é <b>" : "era <b>")
            //    + _emprestimo.DataAcompanhamento.ToShortDateString() + "</b>. ";
            //_dadosEmail[4] = new LivrosBO().QuantidadeLivros(false).ToString();
            //_dadosEmail[5] = new LivrosBO().Sugestoes(false);
            //_dadosEmail[6] = new LivrosBO().QuantidadeLivros(true).ToString();
            //_dadosEmail[7] = new LivrosBO().Sugestoes(true);

            //List<ResenhaLivros> _pontos = new ResenhaLivrosBO().ListarPontuacao();

            //int classificacao = 0;
            //int _pontuacao = 0;

            //foreach (var item in _pontos.OrderBy(o => o.Classificacao))
            //{                
            //    if (item.NomeColaborador == _colaborador.Nome)
            //    {
            //        classificacao = item.Classificacao;
            //        _pontuacao = item.Pontuacao;
            //        break;
            //    }
            //}

            //if (classificacao != 0)
            //    _dadosEmail[8] = "Você está em <b>" + classificacao.ToString() + "º</b> lugar com <b>" + _pontuacao.ToString() + "</b> pontos.";
            //else
            //    _dadosEmail[8] = "Você ainda não possui pontuação.";

            //Publicas.EnviarEmailBiblioteca(_dadosEmail, new ColaboradoresBO().EmailDoColaborado(_colaborador.Id),
            //                                            new ColaboradoresBO().EmailAdministradorBiblioteca());

        }

        private void QuantidadeNotificacaoLabel_Click(object sender, EventArgs e)
        {
            FechaSubMenuBolao();
            TemaPanel.Visible = false;
            LeituraResenhaLivro.Visible = false;
            ApostasPanel.Visible = false;
            ConsultaRamaisPanel.Visible = false;
            ResultadoTorneioPanel.Visible = false;

            // Mostrar as notificações
            if (MostraNotificacoesPanel.Visible)
            {
                MostraNotificacoesPanel.Visible = false;
                LimpaComponentesNotificacao();
                return;
            }

            MostraNotificacoesPanel.Size = new Size(350, 0);
            DashBoardPanel.Size = new Size(25, 0);
            BotaoDashboardLabel.Text = "7";

            //if (ComunicadoDashBoardPanel != null)
            //{
            //    ComunicadosTabPage.Controls.Remove(ComunicadoDashBoardPanel);
            //    StatusComunicadosDashBoardComboBox.Dispose();
            //    AnoComunicadosDashBoardComboBox.Dispose();
            //    ComunicadoDashBoardPanel.Dispose();
            //}
            //if (SacDashBoardPanel != null)
            //{
            //    SACTabPage.Controls.Remove(SacDashBoardPanel);
            //    StatusSACDashBoardComboBox.Dispose();
            //    AnoSACDashBoardComboBox.Dispose();
            //    SacDashBoardPanel.Dispose();
            //}

            _quantidadeNotificacoesLidas = _quantidadeNotificacoesLidas + _quantidadeNotificacoesNaoLidas;
            try
            {
                int topComunicado = 0;

                Publicas._fecharComunicados = true;
                #region Feriado
                if (_feriado.Existe && _feriado.Tipo == "F")
                {
                    ExibeNotificacaoPanel = new Panel();
                    ExibeNotificacaoPanel.Size = new Size(331, 98);
                    ExibeNotificacaoPanel.Location = new Point(0, topComunicado);

                    TituloNotificacaoPanel = new Panel();
                    TituloNotificacaoPanel.BackColor = Publicas._panelTitulo;
                    TituloNotificacaoPanel.Dock = DockStyle.Top;
                    TituloNotificacaoPanel.Size = new Size(0, 25);

                    TituloNotificacaoLabel = new Label();
                    TituloNotificacaoLabel.Font = new Font(usuarioLogadoLabel.Font, usuarioLogadoLabel.Font.Style);
                    TituloNotificacaoLabel.ForeColor = (Publicas._TemaBlack ? Publicas._fonte : Publicas._fundo);
                    TituloNotificacaoLabel.TextAlign = ContentAlignment.MiddleLeft;
                    TituloNotificacaoLabel.Dock = DockStyle.Fill;
                    TituloNotificacaoLabel.Text = "Amanhã é Feriado";

                    TituloNotificacaoPanel.Controls.Add(TituloNotificacaoLabel);

                    Texto1Label = new Label();
                    Texto1Label.Text = _feriado.Data.ToShortDateString();
                    Texto1Label.TextAlign = ContentAlignment.MiddleRight;
                    Texto1Label.AutoSize = false;
                    Texto1Label.Size = new Size(324, 19);
                    Texto1Label.Location = new Point(4, 28);
                    Texto1Label.Font = new Font("Century Gothic", (float)10.25, FontStyle.Bold);
                    Texto1Label.ForeColor = Publicas._fonte;
                    Texto1Label.SendToBack();

                    Texto2Label = new Label();
                    Texto2Label.Text = _feriado.Nome;
                    Texto2Label.TextAlign = ContentAlignment.MiddleLeft;
                    Texto2Label.AutoSize = false;
                    Texto2Label.Size = new Size(324, 19);
                    Texto2Label.Location = new Point(4, 50);
                    Texto2Label.Font = new Font("Century Gothic", (float)10.25, FontStyle.Bold);
                    Texto2Label.ForeColor = Publicas._fonte;
                    Texto2Label.SendToBack();

                    Texto3Label = new Label();
                    Texto3Label.Text = "Desejamos um ótimo descanso";
                    Texto3Label.TextAlign = ContentAlignment.MiddleLeft;
                    Texto3Label.AutoSize = false;
                    Texto3Label.Size = new Size(324, 19);
                    Texto3Label.Location = new Point(4, 72);
                    Texto3Label.Font = new Font("Century Gothic", (float)10.25, FontStyle.Regular);
                    Texto3Label.ForeColor = Publicas._fonte;
                    Texto3Label.SendToBack();

                    ExibeNotificacaoPanel.Controls.Add(TituloNotificacaoPanel);
                    ExibeNotificacaoPanel.Controls.Add(Texto1Label);
                    ExibeNotificacaoPanel.Controls.Add(Texto2Label);
                    ExibeNotificacaoPanel.Controls.Add(Texto3Label);

                    TextosNotificacaoPanel.Controls.Add(ExibeNotificacaoPanel);
                    topComunicado = topComunicado + (ExibeNotificacaoPanel.Height + 2);
                }
                #endregion

                #region Banco de Horas
                if ((Publicas._usuario.IdEmpresa == 1 || Publicas._usuario.IdEmpresa == 19) && (Publicas._usuario.UsuarioAcesso == "FFLOPES" || Publicas._usuario.UsuarioAcesso == "MDMUNOZ"))
                {
                    #region novo    
                    List<Classes.DepartamentosGerenciadosPeloColaborador> _listaColaboradores;

                    if (Publicas._usuario.Administrador)
                        _listaColaboradores = new DepartamentoBO().ListarColaboradores(0, _colaboradores.IdEmpresa);
                    else
                        _listaColaboradores = new DepartamentoBO().ListarColaboradores(_colaboradores.Id, _colaboradores.IdEmpresa);

                    List<Classes.ControleDeHoras> _listaHorarios = new List<Classes.ControleDeHoras>();
                    foreach (var item2 in _listaColaboradores.OrderBy(o => o.IdColaborador))
                    {

                        List<Classes.PeriodoBancoHorasColaborador> _periodo = new List<PeriodoBancoHorasColaborador>();

                        if (DateTime.Now.Date.Month < 3)
                        {
                            PeriodoBancoHorasColaborador _per = new PeriodoBancoHorasColaborador();
                            _per.Inicio = Convert.ToDateTime("21/11/" + (DateTime.Now.Year - 1).ToString());
                            _per.Fim = Convert.ToDateTime("20/01/" + DateTime.Now.Year.ToString());
                            _periodo.Add(_per);
                        }

                        try
                        {
                            _periodo.AddRange(new PeriodoBancoHorasColaboradorBO().Listar(item2.IdColaborador));
                        }
                        catch { }

                        foreach (var item in _periodo)
                        {
                            try
                            {
                                _listaHorarios.AddRange(new ControleDeHorasBO().Listar(item.Inicio, item.Fim, item2.IdColaborador));
                                
                            }
                            catch { }
                        }
                    }

                    #region Popula tela
                    ExibeNotificacaoPanel = new Panel();
                    ExibeNotificacaoPanel.Size = new Size(331, 400);

                    ExibeNotificacaoPanel.Location = new Point(0, topComunicado);

                    TituloNotificacaoPanel = new Panel();
                    TituloNotificacaoPanel.BackColor = Publicas._panelTitulo;
                    TituloNotificacaoPanel.Dock = DockStyle.Top;
                    TituloNotificacaoPanel.Size = new Size(0, 25);

                    TituloNotificacaoLabel = new Label();
                    TituloNotificacaoLabel.Font = new Font(usuarioLogadoLabel.Font, usuarioLogadoLabel.Font.Style);
                    TituloNotificacaoLabel.ForeColor = (Publicas._TemaBlack ? Publicas._fonte : Publicas._fundo);
                    TituloNotificacaoLabel.TextAlign = ContentAlignment.MiddleLeft;
                    TituloNotificacaoLabel.Dock = DockStyle.Fill;
                    TituloNotificacaoLabel.Text = "Controle de Horas";

                    TituloNotificacaoPanel.Controls.Add(TituloNotificacaoLabel);

                    if (NotificacaoGrid != null)
                        NotificacaoGrid = null;

                    GridDynamicFilter filter = new GridDynamicFilter();
                    GridMetroColors metroColor = new GridMetroColors();
                    GridColumnDescriptor colunaGrid = new GridColumnDescriptor();

                    metroColor.GroupDropAreaColor.BackColor = Publicas._bordaEntrada;

                    metroColor.HeaderBottomBorderColor = Publicas._bordaEntrada;
                    metroColor.HeaderColor.HoverColor = Publicas._bordaEntrada;
                    metroColor.HeaderColor.PressedColor = Publicas._bordaEntrada;

                    metroColor.CheckBoxColor.BorderColor = Publicas._bordaEntrada;
                    metroColor.PushButtonColor.PushedBackColor = Publicas._bordaEntrada;
                    metroColor.PushButtonColor.HoverBackColor = Publicas._bordaEntrada;
                    metroColor.PushButtonColor.NormalBackColor = Color.WhiteSmoke;
                    metroColor.ComboboxColor.NormalBorderColor = Publicas._bordaEntrada;
                    metroColor.ComboboxColor.HoverBorderColor = Publicas._bordaEntrada;
                    metroColor.ComboboxColor.HoverBackColor = Publicas._bordaEntrada;
                    metroColor.ComboboxColor.PressedBackColor = Publicas._bordaEntrada;
                    metroColor.ComboboxColor.NormalBackColor = Color.WhiteSmoke;

                    Texto1Label = new Label();
                    Texto1Label.Text = "Controle de horas individual. Não vem da frequência. Cada Colaborador que digita suas horas.";
                    Texto1Label.TextAlign = ContentAlignment.MiddleLeft;
                    Texto1Label.AutoSize = false;
                    Texto1Label.Size = new Size(324, 69);
                    Texto1Label.Dock = DockStyle.Bottom;
                    Texto1Label.Font = new Font("Century Gothic", (float)9, FontStyle.Bold);
                    Texto1Label.ForeColor = Publicas._fonte;
                    Texto1Label.SendToBack();

                    NotificacaoGrid = new GridGroupingControl();
                    NotificacaoGrid.QueryCellStyleInfo += new Syncfusion.Windows.Forms.Grid.Grouping.GridTableCellStyleInfoEventHandler(this.NotificacaoGrid_QueryCellStyleInfo);
                    filter.WireGrid(NotificacaoGrid);
                    if (Publicas._TemaBlack)
                    {
                        NotificacaoGrid.GridOfficeScrollBars = OfficeScrollBars.Office2010;
                        NotificacaoGrid.ColorStyles = ColorStyles.Office2010Black;
                        NotificacaoGrid.GridVisualStyles = GridVisualStyles.Office2016Black;
                        NotificacaoGrid.BackColor = Publicas._panelTitulo;
                    }

                    NotificacaoGrid.ActivateCurrentCellBehavior = Syncfusion.Windows.Forms.Grid.GridCellActivateAction.SetCurrent;
                    NotificacaoGrid.DefaultGridBorderStyle = Syncfusion.Windows.Forms.Grid.GridBorderStyle.Solid;
                    NotificacaoGrid.Font = new Font(dataHoraLabel.Font.FontFamily, (float)9);
                    NotificacaoGrid.Dock = DockStyle.Fill;
                    NotificacaoGrid.ShowRowHeaders = true;
                    NotificacaoGrid.TopLevelGroupOptions.ShowCaption = false;
                    NotificacaoGrid.TableDescriptor.AllowEdit = false;
                    NotificacaoGrid.TableDescriptor.AllowNew = false;
                    NotificacaoGrid.TableDescriptor.AllowRemove = false;

                    NotificacaoGrid.SortIconPlacement = SortIconPlacement.Left;
                    NotificacaoGrid.TopLevelGroupOptions.ShowFilterBar = true;
                    NotificacaoGrid.TableOptions.ListBoxSelectionMode = SelectionMode.One;
                    NotificacaoGrid.TopLevelGroupOptions.ShowAddNewRecordBeforeDetails = false;
                    NotificacaoGrid.TableControl.CellToolTip.Active = true;

                    if (!Publicas._TemaBlack)
                    {
                        NotificacaoGrid.GridOfficeScrollBars = Syncfusion.Windows.Forms.OfficeScrollBars.Metro;
                        NotificacaoGrid.GridVisualStyles = Syncfusion.Windows.Forms.GridVisualStyles.Metro;
                        NotificacaoGrid.SetMetroStyle(metroColor);
                        NotificacaoGrid.TableOptions.SelectionBackColor = Publicas._bordaEntrada;
                        NotificacaoGrid.TableOptions.SelectionTextColor = Color.WhiteSmoke;
                    }

                    NotificacaoGrid.TableOptions.ListBoxSelectionCurrentCellOptions = GridListBoxSelectionCurrentCellOptions.HideCurrentCell;
                    NotificacaoGrid.TableOptions.ListBoxSelectionColorOptions = GridListBoxSelectionColorOptions.ApplySelectionColor;

                    colunaGrid = new GridColumnDescriptor("Nome", "Nome", "Nome");
                    colunaGrid.AllowFilter = true;
                    colunaGrid.AllowSort = true;
                    colunaGrid.FilterRowOptions.AllowCustomFilter = false;
                    colunaGrid.FilterRowOptions.AllowEmptyFilter = false;
                    colunaGrid.FilterRowOptions.FilterMode = FilterMode.Value;
                    colunaGrid.Width = 139;

                    colunaGrid.Appearance.AnyRecordFieldCell.AutoSize = false;
                    colunaGrid.Appearance.AnyRecordFieldCell.HorizontalAlignment = GridHorizontalAlignment.Left;
                    colunaGrid.Appearance.AnyRecordFieldCell.TextColor = Color.DimGray;
                    colunaGrid.Appearance.AnyRecordFieldCell.VerticalAlignment = GridVerticalAlignment.Middle;
                    colunaGrid.Appearance.AnyRecordFieldCell.Font = new GridFontInfo(new Font(dataHoraLabel.Font.FontFamily, (float)8, FontStyle.Bold));
                    colunaGrid.Appearance.ColumnHeaderCell.AutoSize = false;
                    colunaGrid.Appearance.ColumnHeaderCell.HorizontalAlignment = GridHorizontalAlignment.Left;
                    colunaGrid.Appearance.ColumnHeaderCell.VerticalAlignment = GridVerticalAlignment.Middle;
                    NotificacaoGrid.TableDescriptor.Columns.Add(colunaGrid);

                    colunaGrid = new GridColumnDescriptor("ExtraFormatada", "ExtraFormatada", "Horas");
                    colunaGrid.AllowFilter = true;
                    colunaGrid.AllowSort = true;
                    colunaGrid.FilterRowOptions.AllowCustomFilter = false;
                    colunaGrid.FilterRowOptions.AllowEmptyFilter = false;
                    colunaGrid.FilterRowOptions.FilterMode = FilterMode.Value;

                    colunaGrid.Appearance.AnyRecordFieldCell.AutoSize = true;
                    colunaGrid.Appearance.AnyRecordFieldCell.HorizontalAlignment = GridHorizontalAlignment.Center;
                    colunaGrid.Appearance.AnyRecordFieldCell.TextColor = Color.DimGray;
                    colunaGrid.Appearance.AnyRecordFieldCell.VerticalAlignment = GridVerticalAlignment.Middle;
                    colunaGrid.Appearance.AnyRecordFieldCell.Font = new GridFontInfo(new Font(dataHoraLabel.Font.FontFamily, (float)8, FontStyle.Bold));
                    colunaGrid.Appearance.ColumnHeaderCell.AutoSize = true;
                    colunaGrid.Appearance.ColumnHeaderCell.HorizontalAlignment = GridHorizontalAlignment.Center;
                    colunaGrid.Appearance.ColumnHeaderCell.VerticalAlignment = GridVerticalAlignment.Middle;
                    NotificacaoGrid.TableDescriptor.Columns.Add(colunaGrid);

                    colunaGrid = new GridColumnDescriptor("Tipo", "Tipo", "Tipo");
                    colunaGrid.AllowFilter = true;
                    colunaGrid.AllowSort = true;
                    colunaGrid.FilterRowOptions.AllowCustomFilter = false;
                    colunaGrid.FilterRowOptions.AllowEmptyFilter = false;
                    colunaGrid.FilterRowOptions.FilterMode = FilterMode.Value;

                    colunaGrid.Appearance.AnyRecordFieldCell.AutoSize = true;
                    colunaGrid.Appearance.AnyRecordFieldCell.HorizontalAlignment = GridHorizontalAlignment.Left;
                    colunaGrid.Appearance.AnyRecordFieldCell.TextColor = Color.DimGray;
                    colunaGrid.Appearance.AnyRecordFieldCell.VerticalAlignment = GridVerticalAlignment.Middle;
                    colunaGrid.Appearance.AnyRecordFieldCell.Font = new GridFontInfo(new Font(dataHoraLabel.Font.FontFamily, (float)8, FontStyle.Bold));
                    colunaGrid.Appearance.ColumnHeaderCell.AutoSize = true;
                    colunaGrid.Appearance.ColumnHeaderCell.HorizontalAlignment = GridHorizontalAlignment.Left;
                    colunaGrid.Appearance.ColumnHeaderCell.VerticalAlignment = GridVerticalAlignment.Middle;
                    NotificacaoGrid.TableDescriptor.Columns.Add(colunaGrid);

                    colunaGrid = new GridColumnDescriptor("IncompletaFormatada", "IncompletaFormatada", "Período");
                    colunaGrid.AllowFilter = true;
                    colunaGrid.AllowSort = true;
                    colunaGrid.FilterRowOptions.AllowCustomFilter = false;
                    colunaGrid.FilterRowOptions.AllowEmptyFilter = false;
                    colunaGrid.FilterRowOptions.FilterMode = FilterMode.Value;

                    colunaGrid.Appearance.AnyRecordFieldCell.AutoSize = true;
                    colunaGrid.Appearance.AnyRecordFieldCell.HorizontalAlignment = GridHorizontalAlignment.Left;
                    colunaGrid.Appearance.AnyRecordFieldCell.TextColor = Color.DimGray;
                    colunaGrid.Appearance.AnyRecordFieldCell.VerticalAlignment = GridVerticalAlignment.Middle;
                    colunaGrid.Appearance.AnyRecordFieldCell.Font = new GridFontInfo(new Font(dataHoraLabel.Font.FontFamily, (float)8, FontStyle.Regular));
                    colunaGrid.Appearance.ColumnHeaderCell.AutoSize = true;
                    colunaGrid.Appearance.ColumnHeaderCell.HorizontalAlignment = GridHorizontalAlignment.Left;
                    colunaGrid.Appearance.ColumnHeaderCell.VerticalAlignment = GridVerticalAlignment.Middle;
                    NotificacaoGrid.TableDescriptor.Columns.Add(colunaGrid);

                    NotificacaoGrid.TableDescriptor.Appearance.AnyCell.VerticalAlignment = GridVerticalAlignment.Middle;

                    NotificacaoGrid.TableDescriptor.GroupedColumns.Add("IncompletaFormatada", ListSortDirection.Ascending);

                    NotificacaoGrid.Table.DefaultRecordRowHeight = 35;

                    NotificacaoGrid.DataSource = _listaHorarios.OrderBy(o => o.Nome)
                        .OrderBy(o => o.IncompletaFormatada) // periodo
                        .ToList();

                    ExibeNotificacaoPanel.Controls.Add(TituloNotificacaoPanel);
                    ExibeNotificacaoPanel.Controls.Add(NotificacaoGrid);
                    ExibeNotificacaoPanel.Controls.Add(Texto1Label);

                    TextosNotificacaoPanel.Controls.Add(ExibeNotificacaoPanel);
                    topComunicado = topComunicado + (ExibeNotificacaoPanel.Height + 2);

                    #endregion
                    #endregion

                }
                #endregion

                #region Aniversários
                if (MostrarAnivervariosCheckBox.Checked)
                {
                    foreach (var item in _listaAniversariantes.Where(w => w.DataNascimento >= DateTime.Now.Date))
                    {
                        ExibeNotificacaoPanel = new Panel();
                        ExibeNotificacaoPanel.Size = new Size(331, 98);
                        ExibeNotificacaoPanel.Location = new Point(0, topComunicado);

                        TituloNotificacaoPanel = new Panel();
                        TituloNotificacaoPanel.BackColor = Publicas._panelTitulo;
                        TituloNotificacaoPanel.Dock = DockStyle.Top;
                        TituloNotificacaoPanel.Size = new Size(0, 25);

                        TituloNotificacaoLabel = new Label();
                        TituloNotificacaoLabel.Font = new Font(usuarioLogadoLabel.Font, usuarioLogadoLabel.Font.Style);
                        TituloNotificacaoLabel.ForeColor = (Publicas._TemaBlack ? Publicas._fonte : Publicas._fundo);
                        TituloNotificacaoLabel.TextAlign = ContentAlignment.MiddleLeft;
                        TituloNotificacaoLabel.Dock = DockStyle.Fill;
                        TituloNotificacaoLabel.Text = "Aniversariante";

                        TituloNotificacaoPanel.Controls.Add(TituloNotificacaoLabel);

                        Texto1Label = new Label();
                        Texto1Label.Text = item.DataNascimento.ToShortDateString();
                        Texto1Label.TextAlign = ContentAlignment.MiddleRight;
                        Texto1Label.AutoSize = false;
                        Texto1Label.Size = new Size(324, 19);
                        Texto1Label.Location = new Point(4, 28);
                        Texto1Label.Font = new Font("Century Gothic", (float)10.25, FontStyle.Bold);
                        Texto1Label.ForeColor = Publicas._fonte;
                        Texto1Label.SendToBack();

                        Texto2Label = new Label();
                        Texto2Label.Text = item.Nome;
                        Texto2Label.TextAlign = ContentAlignment.MiddleLeft;
                        Texto2Label.AutoSize = false;
                        Texto2Label.Size = new Size(324, 19);
                        Texto2Label.Location = new Point(4, 50);
                        Texto2Label.Font = new Font("Century Gothic", (float)10.25, FontStyle.Bold);
                        Texto2Label.ForeColor = Publicas._fonte;
                        Texto2Label.SendToBack();

                        Texto3Label = new Label();
                        Texto3Label.Text = item.Empresa;
                        Texto3Label.TextAlign = ContentAlignment.MiddleLeft;
                        Texto3Label.AutoSize = false;
                        Texto3Label.Size = new Size(324, 19);
                        Texto3Label.Location = new Point(4, 72);
                        Texto3Label.Font = new Font("Century Gothic", (float)10.25, FontStyle.Regular);
                        Texto3Label.ForeColor = Publicas._fonte;
                        Texto3Label.SendToBack();

                        Imagem1Picture = new PictureBox();
                        Imagem1Picture.Size = new Size(50, 44);
                        Imagem1Picture.ImageLocation = @"Imagens\BalaoNiver.png";
                        Imagem1Picture.SizeMode = PictureBoxSizeMode.StretchImage;
                        Imagem1Picture.Location = new Point(276, 50);

                        ExibeNotificacaoPanel.Controls.Add(TituloNotificacaoPanel);
                        ExibeNotificacaoPanel.Controls.Add(Texto1Label);
                        ExibeNotificacaoPanel.Controls.Add(Texto2Label);
                        ExibeNotificacaoPanel.Controls.Add(Texto3Label);
                        ExibeNotificacaoPanel.Controls.Add(Imagem1Picture);
                        Imagem1Picture.BringToFront();

                        TextosNotificacaoPanel.Controls.Add(ExibeNotificacaoPanel);
                        topComunicado = topComunicado + (ExibeNotificacaoPanel.Height + 2);
                        Refresh();
                    }
                }
                #endregion

                #region Ferias Aprovadas/Reprovadas
                if (_listaProgramacaoAprovadas != null)
                {
                    foreach (var item in _listaProgramacaoAprovadas.Where(w => w.Status != "G" && !w.Gozadas).OrderBy(o => o.DataInicio))
                    {
                        ExibeNotificacaoPanel = new Panel();
                        ExibeNotificacaoPanel.Size = new Size(331, 98);
                        ExibeNotificacaoPanel.Location = new Point(0, topComunicado);

                        TituloNotificacaoPanel = new Panel();
                        TituloNotificacaoPanel.BackColor = Publicas._panelTitulo;
                        TituloNotificacaoPanel.Dock = DockStyle.Top;
                        TituloNotificacaoPanel.Size = new Size(0, 25);

                        TituloNotificacaoLabel = new Label();
                        TituloNotificacaoLabel.Font = new Font(usuarioLogadoLabel.Font, usuarioLogadoLabel.Font.Style);
                        TituloNotificacaoLabel.ForeColor = (Publicas._TemaBlack ? Publicas._fonte : Publicas._fundo);
                        TituloNotificacaoLabel.TextAlign = ContentAlignment.MiddleLeft;
                        TituloNotificacaoLabel.Dock = DockStyle.Fill;
                        TituloNotificacaoLabel.Text = "Programação de Férias";

                        TituloNotificacaoPanel.Controls.Add(TituloNotificacaoLabel);

                        Texto1Label_Chamados = new Label();
                        Texto1Label_Chamados.Text = "Período de " + item.DataInicio.ToShortDateString() + " até " + item.DataFim.ToShortDateString();
                        Texto1Label_Chamados.TextAlign = ContentAlignment.MiddleLeft;
                        Texto1Label_Chamados.AutoSize = false;
                        Texto1Label_Chamados.Size = new Size(324, 19);
                        Texto1Label_Chamados.Location = new Point(4, 50);
                        Texto1Label_Chamados.Font = new Font("Century Gothic", (float)10.25, FontStyle.Bold);
                        Texto1Label_Chamados.ForeColor = Publicas._fonte;

                        Texto3Label = new Label();
                        Texto3Label.Text = (item.Status == "A" ? "Aprovada" : "Reprovada");
                        Texto3Label.TextAlign = ContentAlignment.MiddleRight;
                        Texto3Label.AutoSize = false;
                        Texto3Label.Size = new Size(324, 19);
                        Texto3Label.Location = new Point(4, 72);
                        Texto3Label.Font = new Font("Century Gothic", (float)10, FontStyle.Bold);
                        Texto3Label.ForeColor = Publicas._fonte;

                        ExibeNotificacaoPanel.Controls.Add(TituloNotificacaoPanel);
                        ExibeNotificacaoPanel.Controls.Add(Texto1Label_Chamados);
                        ExibeNotificacaoPanel.Controls.Add(Texto3Label);

                        TextosNotificacaoPanel.Controls.Add(ExibeNotificacaoPanel);

                        topComunicado = topComunicado + (ExibeNotificacaoPanel.Height + 2);
                        Refresh();
                    }
                }
                #endregion

                #region Chamados
                if (_listaChamadosNotificacao != null)
                {
                    foreach (var item in _listaChamadosNotificacao)
                    {
                        ExibeNotificacaoPanel = new Panel();
                        ExibeNotificacaoPanel.Size = new Size(331, 140);
                        ExibeNotificacaoPanel.Location = new Point(0, topComunicado);

                        TituloNotificacaoPanel = new Panel();
                        TituloNotificacaoPanel.BackColor = Publicas._panelTitulo;
                        TituloNotificacaoPanel.Dock = DockStyle.Top;
                        TituloNotificacaoPanel.Size = new Size(0, 25);

                        TituloNotificacaoLabel = new Label();
                        TituloNotificacaoLabel.Font = new Font(usuarioLogadoLabel.Font, usuarioLogadoLabel.Font.Style);
                        TituloNotificacaoLabel.ForeColor = (Publicas._TemaBlack ? Publicas._fonte : Publicas._fundo);
                        TituloNotificacaoLabel.TextAlign = ContentAlignment.MiddleLeft;
                        TituloNotificacaoLabel.Dock = DockStyle.Fill;
                        TituloNotificacaoLabel.Text = (item.DescricaoStatus == "N" ? "Novo" : "") + " Chamado " + (item.DescricaoStatus == "R" ? "Respondido" : "");

                        TituloNotificacaoPanel.Controls.Add(TituloNotificacaoLabel);

                        Texto1Label_Chamados = new Label();
                        Texto1Label_Chamados.Text = "Nº " + item.Numero;
                        Texto1Label_Chamados.Tag = item.IdChamado;
                        Texto1Label_Chamados.TextAlign = ContentAlignment.MiddleRight;
                        Texto1Label_Chamados.AutoSize = false;
                        Texto1Label_Chamados.Size = new Size(324, 19);
                        Texto1Label_Chamados.Location = new Point(4, 28);
                        Texto1Label_Chamados.Font = new Font("Century Gothic", (float)10.25, FontStyle.Bold);
                        Texto1Label_Chamados.ForeColor = Publicas._fonte;
                        Texto1Label_Chamados.Click += new System.EventHandler(this.Texto1Label_Chamados_Click);
                        Texto1Label_Chamados.MouseHover += new EventHandler(this.Texto1Label_Chamados_MouseHover);
                        Texto1Label_Chamados.MouseLeave += new EventHandler(this.Texto1Label_Chamados_MouseLeave);

                        Texto2Label = new Label();
                        Texto2Label.Text = item.Assunto;
                        Texto2Label.TextAlign = ContentAlignment.MiddleLeft;
                        Texto2Label.AutoSize = false;
                        Texto2Label.Size = new Size(324, 19);
                        Texto2Label.Location = new Point(4, 50);
                        Texto2Label.Font = new Font("Century Gothic", (float)9, FontStyle.Bold);
                        Texto2Label.ForeColor = Publicas._fonte;

                        Texto3Label = new Label();
                        Texto3Label.Text = item.Categoria;
                        Texto3Label.TextAlign = ContentAlignment.MiddleLeft;
                        Texto3Label.AutoSize = false;
                        Texto3Label.Size = new Size(324, 19);
                        Texto3Label.Location = new Point(4, 72);
                        Texto3Label.Font = new Font("Century Gothic", (float)9, FontStyle.Regular);
                        Texto3Label.ForeColor = Publicas._fonte;

                        Texto4Label = new Label();
                        Texto4Label.Text = item.Tela;
                        Texto4Label.TextAlign = ContentAlignment.MiddleLeft;
                        Texto4Label.AutoSize = false;
                        Texto4Label.Size = new Size(324, 19);
                        Texto4Label.Location = new Point(4, 95);
                        Texto4Label.Font = new Font("Century Gothic", (float)9, FontStyle.Regular);
                        Texto4Label.ForeColor = Publicas._fonte;

                        Texto5Label = new Label();
                        Texto5Label.Text = (item.DescricaoTipo == "A" ? "Analista " : "Solicitante ") + item.NomeSolicitante;
                        Texto5Label.TextAlign = ContentAlignment.MiddleLeft;
                        Texto5Label.AutoSize = false;
                        Texto5Label.Size = new Size(324, 19);
                        Texto5Label.Location = new Point(4, 118);
                        Texto5Label.Font = new Font("Century Gothic", (float)9, FontStyle.Regular);
                        Texto5Label.ForeColor = Publicas._fonte;

                        ExibeNotificacaoPanel.Controls.Add(TituloNotificacaoPanel);
                        ExibeNotificacaoPanel.Controls.Add(Texto1Label_Chamados);
                        ExibeNotificacaoPanel.Controls.Add(Texto2Label);
                        ExibeNotificacaoPanel.Controls.Add(Texto3Label);
                        ExibeNotificacaoPanel.Controls.Add(Texto4Label);
                        ExibeNotificacaoPanel.Controls.Add(Texto5Label);

                        TextosNotificacaoPanel.Controls.Add(ExibeNotificacaoPanel);

                        topComunicado = topComunicado + (ExibeNotificacaoPanel.Height + 2);
                        Refresh();
                    }
                }
                #endregion

                #region Bolão
                DateTime _dataTeste = DateTime.Now;
                int qtdDias = 1;

                if (_listaJogosEncerrados != null && _listaJogosEncerrados.Count != 0)
                {
                    if (DateTime.Now.DayOfWeek == DayOfWeek.Monday)
                        qtdDias = 3;

                    foreach (var item in _listaJogosEncerrados.Where(w => w.Data.Date >= DateTime.Now.Date.AddDays(-qtdDias))
                                                          .OrderBy(o => o.Data))
                    {
                        ExibeNotificacaoPanel = new Panel();
                        ExibeNotificacaoPanel.Size = new Size(331, 98);
                        ExibeNotificacaoPanel.Location = new Point(0, topComunicado);

                        TituloNotificacaoPanel = new Panel();
                        TituloNotificacaoPanel.BackColor = Publicas._panelTitulo;
                        TituloNotificacaoPanel.Dock = DockStyle.Top;
                        TituloNotificacaoPanel.Size = new Size(0, 25);

                        TituloNotificacaoLabel = new Label();
                        TituloNotificacaoLabel.Font = new Font(usuarioLogadoLabel.Font, usuarioLogadoLabel.Font.Style);
                        TituloNotificacaoLabel.ForeColor = (Publicas._TemaBlack ? Publicas._fonte : Publicas._fundo);
                        TituloNotificacaoLabel.TextAlign = ContentAlignment.MiddleLeft;
                        TituloNotificacaoLabel.Dock = DockStyle.Fill;
                        TituloNotificacaoLabel.Text = "Bolão da Copa - Partida encerrada";

                        TituloNotificacaoPanel.Controls.Add(TituloNotificacaoLabel);

                        Texto1Label = new Label();
                        Texto1Label.Text = item.Data.ToShortDateString() + " " + item.Data.ToShortTimeString();
                        Texto1Label.TextAlign = ContentAlignment.MiddleRight;
                        Texto1Label.AutoSize = false;
                        Texto1Label.Size = new Size(324, 19);
                        Texto1Label.Location = new Point(4, 28);
                        Texto1Label.Font = new Font("Century Gothic", (float)10.25, FontStyle.Bold);
                        Texto1Label.ForeColor = Publicas._fonte;
                        Texto1Label.SendToBack();

                        Texto2Label = new Label();
                        Texto2Label.Text = item.Nome1;
                        Texto2Label.TextAlign = ContentAlignment.MiddleRight;
                        Texto2Label.AutoSize = false;
                        Texto2Label.Size = new Size(88, 38);
                        Texto2Label.Location = new Point(51, 55);
                        Texto2Label.Font = new Font("Century Gothic", (float)10.25, FontStyle.Regular);
                        Texto2Label.ForeColor = Publicas._fonte;
                        Texto2Label.SendToBack();

                        Texto3Label = new Label();
                        Texto3Label.Text = item.Placar1.ToString();
                        Texto3Label.TextAlign = ContentAlignment.MiddleRight;
                        Texto3Label.AutoSize = false;
                        Texto3Label.Size = new Size(22, 38);
                        Texto3Label.Location = new Point(140, 55);
                        Texto3Label.Font = new Font("Century Gothic", (float)10.25, FontStyle.Bold);
                        Texto3Label.ForeColor = Publicas._fonte;
                        Texto3Label.SendToBack();

                        Texto4Label = new Label();
                        Texto4Label.Text = "x";
                        Texto4Label.TextAlign = ContentAlignment.MiddleLeft;
                        Texto4Label.AutoSize = false;
                        Texto4Label.Size = new Size(17, 38);
                        Texto4Label.Location = new Point(158, 55);
                        Texto4Label.Font = new Font("Century Gothic", (float)10.25, FontStyle.Regular);
                        Texto4Label.ForeColor = Publicas._fonte;
                        Texto4Label.SendToBack();

                        Texto5Label = new Label();
                        Texto5Label.Text = item.Placar2.ToString();
                        Texto5Label.TextAlign = ContentAlignment.MiddleLeft;
                        Texto5Label.AutoSize = false;
                        Texto5Label.Size = new Size(22, 38);
                        Texto5Label.Location = new Point(172, 55);
                        Texto5Label.Font = new Font("Century Gothic", (float)10.25, FontStyle.Bold);
                        Texto5Label.ForeColor = Publicas._fonte;
                        Texto5Label.SendToBack();

                        Texto6Label = new Label();
                        Texto6Label.Text = item.Nome2;
                        Texto6Label.TextAlign = ContentAlignment.MiddleLeft;
                        Texto6Label.AutoSize = false;
                        Texto6Label.Size = new Size(88, 38);
                        Texto6Label.Location = new Point(195, 55);
                        Texto6Label.Font = new Font("Century Gothic", (float)10.25, FontStyle.Regular);
                        Texto6Label.ForeColor = Publicas._fonte;
                        Texto6Label.SendToBack();

                        Imagem1Picture = new PictureBox();
                        Imagem1Picture.Size = new Size(41, 23);
                        Imagem1Picture.SizeMode = PictureBoxSizeMode.StretchImage;
                        Imagem1Picture.Location = new Point(8, 59);

                        Imagem2Picture = new PictureBox();
                        Imagem2Picture.Size = new Size(41, 23);
                        Imagem2Picture.SizeMode = PictureBoxSizeMode.StretchImage;
                        Imagem2Picture.Location = new Point(284, 59);


                        try
                        {
                            using (MemoryStream mStream = new MemoryStream())
                            {
                                mStream.Write(item.Bandeira1, 0, item.Bandeira1.Length);
                                mStream.Seek(0, SeekOrigin.Begin);

                                Imagem1Picture.Image = new Bitmap(mStream);
                            }

                            Imagem1Picture.SizeMode = PictureBoxSizeMode.StretchImage;
                            Imagem1Picture.Refresh();
                        }
                        catch { }

                        try
                        {
                            using (MemoryStream mStream = new MemoryStream())
                            {
                                mStream.Write(item.Bandeira2, 0, item.Bandeira2.Length);
                                mStream.Seek(0, SeekOrigin.Begin);

                                Imagem2Picture.Image = new Bitmap(mStream);
                            }

                            Imagem2Picture.SizeMode = PictureBoxSizeMode.StretchImage;
                            Imagem2Picture.Refresh();
                        }
                        catch { }

                        ExibeNotificacaoPanel.Controls.Add(TituloNotificacaoPanel);
                        ExibeNotificacaoPanel.Controls.Add(Texto1Label);
                        ExibeNotificacaoPanel.Controls.Add(Texto2Label);
                        ExibeNotificacaoPanel.Controls.Add(Texto3Label);
                        ExibeNotificacaoPanel.Controls.Add(Texto4Label);
                        ExibeNotificacaoPanel.Controls.Add(Texto5Label);
                        ExibeNotificacaoPanel.Controls.Add(Texto6Label);
                        ExibeNotificacaoPanel.Controls.Add(Imagem1Picture);
                        ExibeNotificacaoPanel.Controls.Add(Imagem2Picture);

                        TextosNotificacaoPanel.Controls.Add(ExibeNotificacaoPanel);
                        topComunicado = topComunicado + (ExibeNotificacaoPanel.Height + 2);

                        BolaoNotificacao _not = new BolaoNotificacao();
                        _not.IdJogo = item.Id;
                        _not.IdColaborador = Publicas._idColaborador;

                        new BolaoNotificacaoBO().Gravar(_not);
                    }
                }

                if (_listaJogosDos3Dias != null && _listaJogosDos3Dias.Count != 0)
                {
                    qtdDias = 1;

                    if (DateTime.Now.DayOfWeek == DayOfWeek.Friday)
                        qtdDias = 3;

                    foreach (var item in _listaJogosDos3Dias.Where(w => w.Data.Date >= DateTime.Now && w.Data.Date <= DateTime.Now.Date.AddDays(qtdDias))
                                                        .OrderBy(o => o.Data))
                    {
                        ExibeNotificacaoPanel = new Panel();
                        ExibeNotificacaoPanel.Size = new Size(331, 98);
                        ExibeNotificacaoPanel.Location = new Point(0, topComunicado);

                        TituloNotificacaoPanel = new Panel();
                        TituloNotificacaoPanel.BackColor = Publicas._panelTitulo;
                        TituloNotificacaoPanel.Dock = DockStyle.Top;
                        TituloNotificacaoPanel.Size = new Size(0, 25);

                        TituloNotificacaoLabel = new Label();
                        TituloNotificacaoLabel.Font = new Font(usuarioLogadoLabel.Font, usuarioLogadoLabel.Font.Style);
                        TituloNotificacaoLabel.ForeColor = Publicas._fundo;
                        TituloNotificacaoLabel.TextAlign = ContentAlignment.MiddleLeft;
                        TituloNotificacaoLabel.Dock = DockStyle.Fill;
                        TituloNotificacaoLabel.Text = "Bolão - Partidas sem seus palpites";

                        TituloNotificacaoPanel.Controls.Add(TituloNotificacaoLabel);

                        Texto1Label = new Label();
                        Texto1Label.Text = item.Data.ToShortDateString() + " " + item.Data.ToShortTimeString();
                        Texto1Label.TextAlign = ContentAlignment.MiddleRight;
                        Texto1Label.AutoSize = false;
                        Texto1Label.Size = new Size(324, 19);
                        Texto1Label.Location = new Point(4, 28);
                        Texto1Label.Font = new Font("Century Gothic", (float)10.25, FontStyle.Bold);
                        Texto1Label.ForeColor = Publicas._fonte;
                        Texto1Label.SendToBack();

                        Texto2Label = new Label();
                        Texto2Label.Text = item.Nome1;
                        Texto2Label.TextAlign = ContentAlignment.MiddleRight;
                        Texto2Label.AutoSize = false;
                        Texto2Label.Size = new Size(88, 38);
                        Texto2Label.Location = new Point(51, 55);
                        Texto2Label.Font = new Font("Century Gothic", (float)10.25, FontStyle.Regular);
                        Texto2Label.ForeColor = Publicas._fonte;
                        Texto2Label.SendToBack();

                        Texto3Label = new Label();
                        Texto3Label.Text = item.Placar1.ToString();
                        Texto3Label.TextAlign = ContentAlignment.MiddleRight;
                        Texto3Label.AutoSize = false;
                        Texto3Label.Size = new Size(22, 38);
                        Texto3Label.Location = new Point(140, 55);
                        Texto3Label.Font = new Font("Century Gothic", (float)10.25, FontStyle.Bold);
                        Texto3Label.ForeColor = Publicas._fonte;
                        Texto3Label.SendToBack();

                        Texto4Label = new Label();
                        Texto4Label.Text = "x";
                        Texto4Label.TextAlign = ContentAlignment.MiddleLeft;
                        Texto4Label.AutoSize = false;
                        Texto4Label.Size = new Size(17, 38);
                        Texto4Label.Location = new Point(158, 55);
                        Texto4Label.Font = new Font("Century Gothic", (float)10.25, FontStyle.Regular);
                        Texto4Label.ForeColor = Publicas._fonte;
                        Texto4Label.SendToBack();

                        Texto5Label = new Label();
                        Texto5Label.Text = item.Placar2.ToString();
                        Texto5Label.TextAlign = ContentAlignment.MiddleLeft;
                        Texto5Label.AutoSize = false;
                        Texto5Label.Size = new Size(22, 38);
                        Texto5Label.Location = new Point(172, 55);
                        Texto5Label.Font = new Font("Century Gothic", (float)10.25, FontStyle.Bold);
                        Texto5Label.ForeColor = Publicas._fonte;
                        Texto5Label.SendToBack();

                        Texto6Label = new Label();
                        Texto6Label.Text = item.Nome2;
                        Texto6Label.TextAlign = ContentAlignment.MiddleLeft;
                        Texto6Label.AutoSize = false;
                        Texto6Label.Size = new Size(88, 38);
                        Texto6Label.Location = new Point(195, 55);
                        Texto6Label.Font = new Font("Century Gothic", (float)10.25, FontStyle.Regular);
                        Texto6Label.ForeColor = Publicas._fonte;
                        Texto6Label.SendToBack();

                        Imagem1Picture = new PictureBox();
                        Imagem1Picture.Size = new Size(41, 23);
                        Imagem1Picture.SizeMode = PictureBoxSizeMode.StretchImage;
                        Imagem1Picture.Location = new Point(8, 59);

                        Imagem2Picture = new PictureBox();
                        Imagem2Picture.Size = new Size(41, 23);
                        Imagem2Picture.SizeMode = PictureBoxSizeMode.StretchImage;
                        Imagem2Picture.Location = new Point(284, 59);

                        try
                        {
                            using (MemoryStream mStream = new MemoryStream())
                            {
                                mStream.Write(item.Bandeira1, 0, item.Bandeira1.Length);
                                mStream.Seek(0, SeekOrigin.Begin);

                                Imagem1Picture.Image = new Bitmap(mStream);
                            }

                            Imagem1Picture.SizeMode = PictureBoxSizeMode.StretchImage;
                            Imagem1Picture.Refresh();
                        }
                        catch { }

                        try
                        {
                            using (MemoryStream mStream = new MemoryStream())
                            {
                                mStream.Write(item.Bandeira2, 0, item.Bandeira2.Length);
                                mStream.Seek(0, SeekOrigin.Begin);

                                Imagem2Picture.Image = new Bitmap(mStream);
                            }

                            Imagem2Picture.SizeMode = PictureBoxSizeMode.StretchImage;
                            Imagem2Picture.Refresh();
                        }
                        catch { }

                        ExibeNotificacaoPanel.Controls.Add(TituloNotificacaoPanel);
                        ExibeNotificacaoPanel.Controls.Add(Texto1Label);
                        ExibeNotificacaoPanel.Controls.Add(Texto2Label);
                        ExibeNotificacaoPanel.Controls.Add(Texto3Label);
                        ExibeNotificacaoPanel.Controls.Add(Texto4Label);
                        ExibeNotificacaoPanel.Controls.Add(Texto5Label);
                        ExibeNotificacaoPanel.Controls.Add(Texto6Label);
                        ExibeNotificacaoPanel.Controls.Add(Imagem1Picture);
                        ExibeNotificacaoPanel.Controls.Add(Imagem2Picture);

                        TextosNotificacaoPanel.Controls.Add(ExibeNotificacaoPanel);
                        topComunicado = topComunicado + (ExibeNotificacaoPanel.Height + 2);

                        BolaoNotificacao _not = new BolaoNotificacao();
                        _not.IdJogo = item.Id;
                        _not.IdColaborador = Publicas._idColaborador;

                        new BolaoNotificacaoBO().Gravar(_not);
                    }
                }
                #endregion

                #region Corridas
                if (Publicas._usuario != null && !Publicas._usuario.NaoNotificaCorridas && (Publicas._usuario.IdEmpresa == 1 || Publicas._usuario.IdEmpresa == 19))
                {
                    if (_participante.Classificacao != 0 && !_participante.Visualizado)
                    {
                        ExibeNotificacaoPanel = new Panel();
                        ExibeNotificacaoPanel.Size = new Size(331, 120);
                        ExibeNotificacaoPanel.Location = new Point(0, topComunicado);

                        TituloNotificacaoPanel = new Panel();
                        TituloNotificacaoPanel.BackColor = Publicas._panelTitulo;
                        TituloNotificacaoPanel.Dock = DockStyle.Top;
                        TituloNotificacaoPanel.Size = new Size(0, 25);

                        TituloNotificacaoLabel = new Label();
                        TituloNotificacaoLabel.Font = new Font(usuarioLogadoLabel.Font, usuarioLogadoLabel.Font.Style);
                        TituloNotificacaoLabel.ForeColor = (Publicas._TemaBlack ? Publicas._fonte : Publicas._fundo);
                        TituloNotificacaoLabel.TextAlign = ContentAlignment.MiddleLeft;
                        TituloNotificacaoLabel.Dock = DockStyle.Fill;
                        TituloNotificacaoLabel.Text = "Seu resultado na corrida do dia" + _participante.DataCorrida.ToShortDateString();

                        TituloNotificacaoPanel.Controls.Add(TituloNotificacaoLabel);

                        Texto1Label = new Label();
                        Texto1Label.Text = "Classificação " + _participante.Classificacao.ToString();
                        Texto1Label.TextAlign = ContentAlignment.MiddleLeft;
                        Texto1Label.AutoSize = false;
                        Texto1Label.Size = new Size(138, 19);
                        Texto1Label.Location = new Point(4, 28);
                        Texto1Label.Font = new Font("Century Gothic", (float)10.25, FontStyle.Bold);
                        Texto1Label.ForeColor = Publicas._fonte;
                        Texto1Label.SendToBack();

                        Texto2Label = new Label();
                        Texto2Label.Text = "Classificação geral " + _participante.ClassificacaoGeral.ToString();
                        Texto2Label.TextAlign = ContentAlignment.MiddleRight;
                        Texto2Label.AutoSize = false;
                        Texto2Label.Size = new Size(179, 19);
                        Texto2Label.Location = new Point(147, 28);
                        Texto2Label.Font = new Font("Century Gothic", (float)10.25, FontStyle.Bold);
                        Texto2Label.ForeColor = Publicas._fonte;
                        Texto2Label.SendToBack();

                        Texto3Label = new Label();
                        Texto3Label.Text = "Tempo Bruto " + _participante.TempoBrutoFormatado;
                        Texto3Label.TextAlign = ContentAlignment.MiddleLeft;
                        Texto3Label.AutoSize = false;
                        Texto3Label.Size = new Size(177, 19);
                        Texto3Label.Location = new Point(4, 53);
                        Texto3Label.Font = new Font("Century Gothic", (float)10.25, FontStyle.Regular);
                        Texto3Label.ForeColor = Publicas._fonte;
                        Texto3Label.SendToBack();

                        Texto4Label = new Label();
                        Texto4Label.Text = "Tempo Liquido " + _participante.TempoLiquidoFormatado;
                        Texto4Label.TextAlign = ContentAlignment.MiddleLeft;
                        Texto4Label.AutoSize = false;
                        Texto4Label.Size = new Size(177, 19);
                        Texto4Label.Location = new Point(4, 75);
                        Texto4Label.Font = new Font("Century Gothic", (float)10.25, FontStyle.Bold);
                        Texto4Label.ForeColor = Publicas._fonte;
                        Texto4Label.SendToBack();

                        Texto5Label = new Label();
                        Texto5Label.Text = "Ritmo " + _participante.RitmoFormatado;
                        Texto5Label.TextAlign = ContentAlignment.MiddleLeft;
                        Texto5Label.AutoSize = false;
                        Texto5Label.Size = new Size(177, 19);
                        Texto5Label.Location = new Point(4, 97);
                        Texto5Label.Font = new Font("Century Gothic", (float)10.25, FontStyle.Regular);
                        Texto5Label.ForeColor = Publicas._fonte;
                        Texto5Label.SendToBack();

                        ExibeNotificacaoPanel.Controls.Add(TituloNotificacaoPanel);
                        ExibeNotificacaoPanel.Controls.Add(Texto1Label);
                        ExibeNotificacaoPanel.Controls.Add(Texto2Label);
                        ExibeNotificacaoPanel.Controls.Add(Texto3Label);
                        ExibeNotificacaoPanel.Controls.Add(Texto4Label);
                        ExibeNotificacaoPanel.Controls.Add(Texto5Label);

                        TextosNotificacaoPanel.Controls.Add(ExibeNotificacaoPanel);
                        topComunicado = topComunicado + (ExibeNotificacaoPanel.Height + 2);

                        new ParticipanteCorridaBO().ResultadoVisualizado(_participante.Id);
                        Refresh();
                    }

                    foreach (var item in _listaCorrida.Where(w => w.Data >= DateTime.Now.Date))
                    {
                        ExibeNotificacaoPanel = new Panel();
                        ExibeNotificacaoPanel.Size = new Size(331, 98);
                        ExibeNotificacaoPanel.Location = new Point(0, topComunicado);

                        TituloNotificacaoPanel = new Panel();
                        TituloNotificacaoPanel.BackColor = Publicas._panelTitulo;
                        TituloNotificacaoPanel.Dock = DockStyle.Top;
                        TituloNotificacaoPanel.Size = new Size(0, 25);

                        TituloNotificacaoLabel = new Label();
                        TituloNotificacaoLabel.Font = new Font(usuarioLogadoLabel.Font, usuarioLogadoLabel.Font.Style);
                        TituloNotificacaoLabel.ForeColor = (Publicas._TemaBlack ? Publicas._fonte : Publicas._fundo);
                        TituloNotificacaoLabel.TextAlign = ContentAlignment.MiddleLeft;
                        TituloNotificacaoLabel.Dock = DockStyle.Fill;
                        TituloNotificacaoLabel.Text = "Inscreva-se para a corrida";

                        TituloNotificacaoPanel.Controls.Add(TituloNotificacaoLabel);

                        Texto1Label = new Label();
                        Texto1Label.Text = item.Data.ToShortDateString();
                        Texto1Label.TextAlign = ContentAlignment.MiddleRight;
                        Texto1Label.AutoSize = false;
                        Texto1Label.Size = new Size(138, 19);
                        Texto1Label.Location = new Point(4, 28);
                        Texto1Label.Font = new Font("Century Gothic", (float)10.25, FontStyle.Bold);
                        Texto1Label.ForeColor = Publicas._fonte;
                        Texto1Label.SendToBack();

                        Texto2Label = new Label();
                        Texto2Label.Text = item.Nome;
                        Texto2Label.TextAlign = ContentAlignment.MiddleLeft;
                        Texto2Label.AutoSize = false;
                        Texto2Label.Size = new Size(179, 19);
                        Texto2Label.Location = new Point(147, 28);
                        Texto2Label.Tag = item.Id;
                        Texto2Label.Font = new Font("Century Gothic", (float)9, FontStyle.Regular);
                        Texto2Label.ForeColor = Publicas._fonte;
                        Texto2Label.SendToBack();

                        Texto3Label = new Label();
                        Texto3Label.Text = item.Local;
                        Texto3Label.TextAlign = ContentAlignment.MiddleLeft;
                        Texto3Label.AutoSize = false;
                        Texto3Label.Size = new Size(177, 19);
                        Texto3Label.Location = new Point(4, 53);
                        Texto3Label.Font = new Font("Century Gothic", (float)10.25, FontStyle.Regular);
                        Texto3Label.ForeColor = Publicas._fonte;
                        Texto3Label.SendToBack();

                        ExibeNotificacaoPanel.Controls.Add(TituloNotificacaoPanel);
                        ExibeNotificacaoPanel.Controls.Add(Texto1Label);
                        ExibeNotificacaoPanel.Controls.Add(Texto2Label);
                        ExibeNotificacaoPanel.Controls.Add(Texto3Label);

                        TextosNotificacaoPanel.Controls.Add(ExibeNotificacaoPanel);
                        topComunicado = topComunicado + (ExibeNotificacaoPanel.Height + 2);

                        Refresh();
                    }
                }
                #endregion

                #region Comunicados
                if (_listaComunicadosNotificacao != null)
                {
                    foreach (var item in _listaComunicadosNotificacao)
                    {
                        ExibeNotificacaoPanel = new Panel();
                        ExibeNotificacaoPanel.Size = new Size(331, 120);
                        ExibeNotificacaoPanel.Location = new Point(0, topComunicado);

                        TituloNotificacaoPanel = new Panel();
                        TituloNotificacaoPanel.BackColor = Publicas._panelTitulo;
                        TituloNotificacaoPanel.Dock = DockStyle.Top;
                        TituloNotificacaoPanel.Size = new Size(0, 25);

                        TituloNotificacaoLabel = new Label();
                        TituloNotificacaoLabel.Font = new Font(usuarioLogadoLabel.Font, usuarioLogadoLabel.Font.Style);
                        TituloNotificacaoLabel.ForeColor = (Publicas._TemaBlack ? Publicas._fonte : Publicas._fundo);
                        TituloNotificacaoLabel.TextAlign = ContentAlignment.MiddleLeft;
                        TituloNotificacaoLabel.Dock = DockStyle.Fill;
                        TituloNotificacaoLabel.Text = " Comunicado " + item.Status;

                        TituloNotificacaoPanel.Controls.Add(TituloNotificacaoLabel);

                        Texto1Label = new Label();
                        Texto1Label.Text = "Processo nº " + item.Processo;
                        Texto1Label.TextAlign = ContentAlignment.MiddleLeft;
                        Texto1Label.AutoSize = false;
                        Texto1Label.Size = new Size(324, 19);
                        Texto1Label.Location = new Point(4, 28);
                        Texto1Label.Font = new Font("Century Gothic", (float)10.25, FontStyle.Bold);
                        Texto1Label.ForeColor = Publicas._fonte;

                        Texto2Label = new Label();
                        Texto2Label.Text = "Vara " + item.Vara;
                        Texto2Label.TextAlign = ContentAlignment.MiddleLeft;
                        Texto2Label.AutoSize = false;
                        Texto2Label.Size = new Size(324, 19);
                        Texto2Label.Location = new Point(4, 50);
                        Texto2Label.Font = new Font("Century Gothic", (float)10.25, FontStyle.Bold);
                        Texto2Label.ForeColor = Publicas._fonte;

                        Texto3Label = new Label();
                        Texto3Label.Text = item.Empresa;
                        Texto3Label.TextAlign = ContentAlignment.MiddleLeft;
                        Texto3Label.AutoSize = false;
                        Texto3Label.Size = new Size(324, 19);
                        Texto3Label.Location = new Point(4, 72);
                        Texto3Label.Font = new Font("Century Gothic", (float)10.25, FontStyle.Regular);
                        Texto3Label.ForeColor = Publicas._fonte;

                        Texto4Label = new Label();

                        Texto4Label.Text = (item.Status == Publicas.StatusComunicado.Novo ? "Aberto por " :
                                (item.Status == Publicas.StatusComunicado.Alterado ? "Alterado por " :
                                (item.Status == Publicas.StatusComunicado.Aprovado ? "Aprovado por " :
                                (item.Status == Publicas.StatusComunicado.Cancelado ? "Cancelado por " :
                                (item.Status == Publicas.StatusComunicado.Finalizado ? "Finalizado por" : "Reprovado por "))))) +
                                (item.Status == Publicas.StatusComunicado.Novo ? item.Solicitante :
                                (item.Status == Publicas.StatusComunicado.Alterado ? item.UsuarioAlterador :
                                (item.Status == Publicas.StatusComunicado.Aprovado ? item.UsuarioAprovador :
                                (item.Status == Publicas.StatusComunicado.Cancelado ? item.UsuarioCancelador :
                                (item.Status == Publicas.StatusComunicado.Finalizado ? item.UsuarioFinaliza : item.UsuarioReprovador)))));

                        Texto4Label.TextAlign = ContentAlignment.MiddleLeft;
                        Texto4Label.AutoSize = false;
                        Texto4Label.Size = new Size(324, 19);
                        Texto4Label.Location = new Point(4, 95);
                        Texto4Label.Font = new Font("Century Gothic", (float)10.25, FontStyle.Regular);
                        Texto4Label.ForeColor = Publicas._fonte;

                        Imagem1Picture = new PictureBox();
                        Imagem1Picture.Size = new Size(50, 44);
                        Imagem1Picture.ImageLocation = @"Imagens\Juridico.png";
                        Imagem1Picture.SizeMode = PictureBoxSizeMode.StretchImage;
                        Imagem1Picture.Location = new Point(276, 50);

                        ExibeNotificacaoPanel.Controls.Add(TituloNotificacaoPanel);
                        ExibeNotificacaoPanel.Controls.Add(Texto1Label);
                        ExibeNotificacaoPanel.Controls.Add(Texto2Label);
                        ExibeNotificacaoPanel.Controls.Add(Texto3Label);
                        ExibeNotificacaoPanel.Controls.Add(Texto4Label);
                        ExibeNotificacaoPanel.Controls.Add(Imagem1Picture);
                        Imagem1Picture.BringToFront();

                        TextosNotificacaoPanel.Controls.Add(ExibeNotificacaoPanel);

                        topComunicado = topComunicado + (ExibeNotificacaoPanel.Height + 2);
                        new ComunicadoBO().GravarNotificacao(item);
                        Refresh();
                    }
                }
                #endregion

                #region Arquivei
                string nomeArquivo = "";
                if (_listaArquiveiImportados != null)
                {
                    foreach (var item in _listaArquiveiImportados)
                    {
                        if (nomeArquivo == "" || nomeArquivo != item.NomeArquivo)
                        {
                            nomeArquivo = item.NomeArquivo;
                            ExibeNotificacaoPanel = new Panel();
                            ExibeNotificacaoPanel.Size = new Size(331, 128);
                            ExibeNotificacaoPanel.Location = new Point(0, topComunicado);

                            TituloNotificacaoPanel = new Panel();
                            TituloNotificacaoPanel.BackColor = Publicas._panelTitulo;
                            TituloNotificacaoPanel.Dock = DockStyle.Top;
                            TituloNotificacaoPanel.Size = new Size(0, 25);

                            TituloNotificacaoLabel = new Label();
                            TituloNotificacaoLabel.Font = new Font(usuarioLogadoLabel.Font, usuarioLogadoLabel.Font.Style);
                            TituloNotificacaoLabel.ForeColor = (Publicas._TemaBlack ? Publicas._fonte : Publicas._fundo);
                            TituloNotificacaoLabel.TextAlign = ContentAlignment.MiddleLeft;
                            TituloNotificacaoLabel.Dock = DockStyle.Fill;
                            TituloNotificacaoLabel.Text = "Arquivei";

                            TituloNotificacaoPanel.Controls.Add(TituloNotificacaoLabel);

                            Texto1Label = new Label();
                            Texto1Label.Text = item.DataImportado.ToShortDateString();
                            Texto1Label.TextAlign = ContentAlignment.MiddleRight;
                            Texto1Label.AutoSize = false;
                            Texto1Label.Size = new Size(324, 19);
                            Texto1Label.Location = new Point(4, 28);
                            Texto1Label.Font = new Font("Century Gothic", (float)10.25, FontStyle.Bold);
                            Texto1Label.ForeColor = Publicas._fonte;
                            Texto1Label.SendToBack();

                            Texto2Label = new Label();
                            Texto2Label.Text = "Arquivo importado: " + Path.GetFileName(item.NomeArquivo);
                            Texto2Label.TextAlign = ContentAlignment.MiddleLeft;
                            Texto2Label.AutoSize = false;
                            Texto2Label.Size = new Size(324, 38);
                            Texto2Label.Location = new Point(4, 50);
                            Texto2Label.Font = new Font("Century Gothic", (float)9.25, FontStyle.Bold);
                            Texto2Label.ForeColor = Publicas._fonte;
                            Texto2Label.SendToBack();

                            Texto3Label = new Label();
                            Texto3Label.Text = "Empresa: " + item.NomeEmpresa;
                            Texto3Label.TextAlign = ContentAlignment.MiddleLeft;
                            Texto3Label.AutoSize = false;
                            Texto3Label.Size = new Size(324, 19);
                            Texto3Label.Location = new Point(4, 92);
                            Texto3Label.Font = new Font("Century Gothic", (float)10.25, FontStyle.Regular);
                            Texto3Label.ForeColor = Publicas._fonte;
                            Texto3Label.SendToBack();

                            ExibeNotificacaoPanel.Controls.Add(TituloNotificacaoPanel);
                            ExibeNotificacaoPanel.Controls.Add(Texto1Label);
                            ExibeNotificacaoPanel.Controls.Add(Texto2Label);
                            ExibeNotificacaoPanel.Controls.Add(Texto3Label);

                            TextosNotificacaoPanel.Controls.Add(ExibeNotificacaoPanel);
                            topComunicado = topComunicado + (ExibeNotificacaoPanel.Height + 2);
                        }
                    }
                }
                #endregion

                #region Biblioteca    
                if (_listaEmprestimos != null)
                {
                    foreach (var item in _listaEmprestimos.OrderBy(o => o.DataAcompanhamento))
                    {
                        ExibeNotificacaoPanel = new Panel();
                        ExibeNotificacaoPanel.Size = new Size(331, 118);
                        ExibeNotificacaoPanel.Location = new Point(0, topComunicado);

                        TituloNotificacaoPanel = new Panel();
                        TituloNotificacaoPanel.BackColor = Publicas._panelTitulo;
                        TituloNotificacaoPanel.Dock = DockStyle.Top;
                        TituloNotificacaoPanel.Size = new Size(0, 25);
                        TituloNotificacaoPanel.Tag = item.IdColaborador;

                        TituloNotificacaoLabel = new Label();
                        TituloNotificacaoLabel.Font = new Font(usuarioLogadoLabel.Font, usuarioLogadoLabel.Font.Style);
                        TituloNotificacaoLabel.ForeColor = (Publicas._TemaBlack ? Publicas._fonte : Publicas._fundo);
                        TituloNotificacaoLabel.TextAlign = ContentAlignment.MiddleLeft;
                        TituloNotificacaoLabel.Dock = DockStyle.Fill;
                        TituloNotificacaoLabel.Text = "Biblioteca - Devolver até";
                        TituloNotificacaoPanel.Controls.Add(TituloNotificacaoLabel);

                        if (Publicas._usuario.AdministraBiblioteca || Publicas._usuario.Administrador)
                        {
                            Imagem1Picture = new PictureBox();
                            Imagem1Picture.ImageLocation = @"Imagens\Email.png";
                            Imagem1Picture.SizeMode = PictureBoxSizeMode.Zoom;
                            Imagem1Picture.Dock = DockStyle.Right;
                            Imagem1Picture.Size = new Size(25, 25);

                            ToolTipInfo _tool = new ToolTipInfo();
                            _tool.Footer.Font = TituloNotificacaoLabel.Font;
                            _tool.Footer.Text = "Enviar e-mail notificando" + Environment.NewLine + "o prazo de devolução" + Environment.NewLine + "ao colaborador.";
                            superToolTip1.SetToolTip(Imagem1Picture, _tool);
                            Imagem1Picture.Tag = item.IdLivro;
                            Imagem1Picture.Click += new System.EventHandler(EnviarEmail_Click);
                            Imagem1Picture.MouseHover += new EventHandler(this.EnviarEmail_MouseHover);
                            Imagem1Picture.MouseLeave += new EventHandler(this.EnviarEmail_MouseLeave);

                            TituloNotificacaoPanel.Controls.Add(Imagem1Picture);
                        }

                        Texto1Label = new Label();
                        Texto1Label.Text = item.DataAcompanhamento.ToShortDateString();
                        Texto1Label.TextAlign = ContentAlignment.MiddleRight;
                        Texto1Label.AutoSize = false;
                        Texto1Label.Size = new Size(324, 19);
                        Texto1Label.Location = new Point(4, 28);
                        Texto1Label.Font = new Font("Century Gothic", (float)10.25, FontStyle.Bold);
                        Texto1Label.ForeColor = Publicas._fonte;
                        Texto1Label.SendToBack();

                        Texto2Label = new Label();
                        Texto2Label.Text = "Livro: " + item.NomeLivro;
                        Texto2Label.TextAlign = ContentAlignment.MiddleLeft;
                        Texto2Label.AutoSize = false;
                        Texto2Label.Size = new Size(324, 19);
                        Texto2Label.Location = new Point(4, 50);
                        Texto2Label.Font = new Font("Century Gothic", (float)9.25, FontStyle.Bold);
                        Texto2Label.ForeColor = Publicas._fonte;
                        Texto2Label.SendToBack();

                        Texto3Label = new Label();
                        Texto3Label.Text = item.NomeColaborador;
                        Texto3Label.TextAlign = ContentAlignment.MiddleLeft;
                        Texto3Label.AutoSize = false;
                        Texto3Label.Size = new Size(324, 19);
                        Texto3Label.Location = new Point(4, 72);
                        Texto3Label.Font = new Font("Century Gothic", (float)10.25, FontStyle.Bold);
                        Texto3Label.ForeColor = Publicas._fonte;
                        Texto3Label.SendToBack();

                        Texto4Label = new Label();
                        Texto4Label.Text = "Emprestado em " + item.Data.ToShortDateString();
                        Texto4Label.TextAlign = ContentAlignment.MiddleLeft;
                        Texto4Label.AutoSize = false;
                        Texto4Label.Size = new Size(324, 19);
                        Texto4Label.Location = new Point(4, 92);
                        Texto4Label.Font = new Font("Century Gothic", (float)10.25, FontStyle.Regular);
                        Texto4Label.ForeColor = Publicas._fonte;
                        Texto4Label.SendToBack();

                        ExibeNotificacaoPanel.Controls.Add(TituloNotificacaoPanel);
                        ExibeNotificacaoPanel.Controls.Add(Texto1Label);
                        ExibeNotificacaoPanel.Controls.Add(Texto2Label);
                        ExibeNotificacaoPanel.Controls.Add(Texto3Label);
                        ExibeNotificacaoPanel.Controls.Add(Texto4Label);

                        TextosNotificacaoPanel.Controls.Add(ExibeNotificacaoPanel);
                        topComunicado = topComunicado + (ExibeNotificacaoPanel.Height + 2);
                    }
                }

                if (_listaReservas != null)
                {
                    foreach (var item in _listaReservas.OrderBy(o => o.DataSolicitado))
                    {
                        ExibeNotificacaoPanel = new Panel();
                        ExibeNotificacaoPanel.Size = new Size(331, 98);
                        ExibeNotificacaoPanel.Location = new Point(0, topComunicado);

                        TituloNotificacaoPanel = new Panel();
                        TituloNotificacaoPanel.BackColor = Publicas._panelTitulo;
                        TituloNotificacaoPanel.Dock = DockStyle.Top;
                        TituloNotificacaoPanel.Size = new Size(0, 25);

                        TituloNotificacaoLabel = new Label();
                        TituloNotificacaoLabel.Font = new Font(usuarioLogadoLabel.Font, usuarioLogadoLabel.Font.Style);
                        TituloNotificacaoLabel.ForeColor = (Publicas._TemaBlack ? Publicas._fonte : Publicas._fundo);
                        TituloNotificacaoLabel.TextAlign = ContentAlignment.MiddleLeft;
                        TituloNotificacaoLabel.Dock = DockStyle.Fill;
                        TituloNotificacaoLabel.Text = "Biblioteca - Reservas em aberto";

                        TituloNotificacaoPanel.Controls.Add(TituloNotificacaoLabel);

                        Texto1Label = new Label();
                        Texto1Label.Text = item.DataSolicitado.ToShortDateString();
                        Texto1Label.TextAlign = ContentAlignment.MiddleRight;
                        Texto1Label.AutoSize = false;
                        Texto1Label.Size = new Size(324, 19);
                        Texto1Label.Location = new Point(4, 28);
                        Texto1Label.Font = new Font("Century Gothic", (float)10.25, FontStyle.Bold);
                        Texto1Label.ForeColor = Publicas._fonte;
                        Texto1Label.SendToBack();

                        Texto2Label = new Label();
                        Texto2Label.Text = "Livro: " + item.NomeLivro;
                        Texto2Label.TextAlign = ContentAlignment.MiddleLeft;
                        Texto2Label.AutoSize = false;
                        Texto2Label.Size = new Size(324, 19);
                        Texto2Label.Location = new Point(4, 50);
                        Texto2Label.Font = new Font("Century Gothic", (float)9.25, FontStyle.Bold);
                        Texto2Label.ForeColor = Publicas._fonte;
                        Texto2Label.SendToBack();

                        Texto3Label = new Label();
                        Texto3Label.Text = "Solicitante " + item.NomeColaborador;
                        Texto3Label.TextAlign = ContentAlignment.MiddleLeft;
                        Texto3Label.AutoSize = false;
                        Texto3Label.Size = new Size(324, 19);
                        Texto3Label.Location = new Point(4, 72);
                        Texto3Label.Font = new Font("Century Gothic", (float)10.25, FontStyle.Regular);
                        Texto3Label.ForeColor = Publicas._fonte;
                        Texto3Label.SendToBack();

                        ExibeNotificacaoPanel.Controls.Add(TituloNotificacaoPanel);
                        ExibeNotificacaoPanel.Controls.Add(Texto1Label);
                        ExibeNotificacaoPanel.Controls.Add(Texto2Label);
                        ExibeNotificacaoPanel.Controls.Add(Texto3Label);

                        TextosNotificacaoPanel.Controls.Add(ExibeNotificacaoPanel);
                        topComunicado = topComunicado + (ExibeNotificacaoPanel.Height + 2);
                    }
                }

                #region campanha 2018
                //if (_listaResenhas != null)
                //{
                //    foreach (var item in _listaResenhas.OrderBy(o => o.Data))
                //    {
                //        ExibeNotificacaoPanel = new Panel();
                //        ExibeNotificacaoPanel.Size = new Size(331, 98);
                //        ExibeNotificacaoPanel.Location = new Point(0, topComunicado);

                //        TituloNotificacaoPanel = new Panel();
                //        TituloNotificacaoPanel.BackColor = Publicas._panelTitulo;
                //        TituloNotificacaoPanel.Dock = DockStyle.Top;
                //        TituloNotificacaoPanel.Size = new Size(0, 25);

                //        TituloNotificacaoLabel = new Label();
                //        TituloNotificacaoLabel.Font = new Font(usuarioLogadoLabel.Font, usuarioLogadoLabel.Font.Style);
                //        TituloNotificacaoLabel.ForeColor = (Publicas._TemaBlack ? Publicas._fonte : Publicas._fundo);
                //        TituloNotificacaoLabel.TextAlign = ContentAlignment.MiddleLeft;
                //        TituloNotificacaoLabel.Dock = DockStyle.Fill;

                //        if (item.Ativo)
                //            TituloNotificacaoLabel.Text = "Biblioteca - Resenha liberada";
                //        else
                //            TituloNotificacaoLabel.Text = "Biblioteca - Resenha cadastrada não liberada";

                //        TituloNotificacaoPanel.Controls.Add(TituloNotificacaoLabel);

                //        Texto1Label = new Label();

                //        if (item.Ativo && item.DataLiberacao != DateTime.MinValue)
                //            Texto1Label.Text = item.DataLiberacao.ToShortDateString();
                //        else
                //            Texto1Label.Text = item.Data.ToShortDateString();

                //        Texto1Label.TextAlign = ContentAlignment.MiddleRight;
                //        Texto1Label.AutoSize = false;
                //        Texto1Label.Size = new Size(324, 19);
                //        Texto1Label.Location = new Point(4, 28);
                //        Texto1Label.Font = new Font("Century Gothic", (float)10.25, FontStyle.Bold);
                //        Texto1Label.ForeColor = Publicas._fonte;
                //        Texto1Label.SendToBack();

                //        Texto2Label = new Label();
                //        Texto2Label.Text = "Livro: " + item.NomeLivro;
                //        Texto2Label.TextAlign = ContentAlignment.MiddleLeft;
                //        Texto2Label.AutoSize = false;
                //        Texto2Label.Size = new Size(324, 19);
                //        Texto2Label.Location = new Point(4, 50);
                //        Texto2Label.Font = new Font("Century Gothic", (float)9.25, FontStyle.Bold);
                //        Texto2Label.ForeColor = Publicas._fonte;
                //        Texto2Label.SendToBack();

                //        Texto3Label = new Label();
                //        if (!item.Ativo)
                //            Texto3Label.Text = "Colaborador " + item.NomeColaborador;
                //        else
                //            Texto3Label.Text = item.Pontuacao.ToString() + " Pontos pela participação";
                //        Texto3Label.TextAlign = ContentAlignment.MiddleLeft;
                //        Texto3Label.AutoSize = false;
                //        Texto3Label.Size = new Size(324, 19);
                //        Texto3Label.Location = new Point(4, 72);
                //        Texto3Label.Font = new Font("Century Gothic", (float)10.25, FontStyle.Regular);
                //        Texto3Label.ForeColor = Publicas._fonte;
                //        Texto3Label.SendToBack();

                //        ExibeNotificacaoPanel.Controls.Add(TituloNotificacaoPanel);
                //        ExibeNotificacaoPanel.Controls.Add(Texto1Label);
                //        ExibeNotificacaoPanel.Controls.Add(Texto2Label);
                //        ExibeNotificacaoPanel.Controls.Add(Texto3Label);

                //        TextosNotificacaoPanel.Controls.Add(ExibeNotificacaoPanel);
                //        topComunicado = topComunicado + (ExibeNotificacaoPanel.Height + 2);
                //    }
                //} 

                //if (_listaResenhasNaoCadastradas != null)
                //{
                //    foreach (var item in _listaResenhasNaoCadastradas.OrderBy(o => o.Data))
                //    {
                //        ExibeNotificacaoPanel = new Panel();
                //        ExibeNotificacaoPanel.Size = new Size(331, 98);
                //        ExibeNotificacaoPanel.Location = new Point(0, topComunicado);

                //        TituloNotificacaoPanel = new Panel();
                //        TituloNotificacaoPanel.BackColor = Publicas._panelTitulo;
                //        TituloNotificacaoPanel.Dock = DockStyle.Top;
                //        TituloNotificacaoPanel.Size = new Size(0, 25);

                //        TituloNotificacaoLabel = new Label();
                //        TituloNotificacaoLabel.Font = new Font(usuarioLogadoLabel.Font, usuarioLogadoLabel.Font.Style);
                //        TituloNotificacaoLabel.ForeColor = (Publicas._TemaBlack ? Publicas._fonte : Publicas._fundo);
                //        TituloNotificacaoLabel.TextAlign = ContentAlignment.MiddleLeft;
                //        TituloNotificacaoLabel.Dock = DockStyle.Fill;
                //        TituloNotificacaoLabel.Text = "Biblioteca - Livro sem resenha";
                //        TituloNotificacaoPanel.Controls.Add(TituloNotificacaoLabel);

                //        Texto1Label = new Label();
                //        Texto1Label.Text = item.Data.ToShortDateString();
                //        Texto1Label.TextAlign = ContentAlignment.MiddleRight;
                //        Texto1Label.AutoSize = false;
                //        Texto1Label.Size = new Size(324, 19);
                //        Texto1Label.Location = new Point(4, 28);
                //        Texto1Label.Font = new Font("Century Gothic", (float)10.25, FontStyle.Bold);
                //        Texto1Label.ForeColor = Publicas._fonte;
                //        Texto1Label.SendToBack();

                //        Texto2Label = new Label();
                //        Texto2Label.Text = "Livro: " + item.NomeLivro;
                //        Texto2Label.TextAlign = ContentAlignment.MiddleLeft;
                //        Texto2Label.AutoSize = false;
                //        Texto2Label.Size = new Size(324, 19);
                //        Texto2Label.Location = new Point(4, 50);
                //        Texto2Label.Font = new Font("Century Gothic", (float)9.25, FontStyle.Bold);
                //        Texto2Label.ForeColor = Publicas._fonte;
                //        Texto2Label.SendToBack();

                //        Texto3Label = new Label();
                //        Texto3Label.Text = "Colaborador " + item.NomeColaborador;
                //        Texto3Label.TextAlign = ContentAlignment.MiddleLeft;
                //        Texto3Label.AutoSize = false;
                //        Texto3Label.Size = new Size(324, 19);
                //        Texto3Label.Location = new Point(4, 72);
                //        Texto3Label.Font = new Font("Century Gothic", (float)10.25, FontStyle.Regular);
                //        Texto3Label.ForeColor = Publicas._fonte;
                //        Texto3Label.SendToBack();

                //        ExibeNotificacaoPanel.Controls.Add(TituloNotificacaoPanel);
                //        ExibeNotificacaoPanel.Controls.Add(Texto1Label);
                //        ExibeNotificacaoPanel.Controls.Add(Texto2Label);
                //        ExibeNotificacaoPanel.Controls.Add(Texto3Label);

                //        TextosNotificacaoPanel.Controls.Add(ExibeNotificacaoPanel);
                //        topComunicado = topComunicado + (ExibeNotificacaoPanel.Height + 2);
                //    }
                //}

                //if (_listaDownLoad != null)
                //{
                //    foreach (var item in _listaDownLoad.OrderBy(o => o.DataAcompanhamento))
                //    {
                //        ExibeNotificacaoPanel = new Panel();
                //        ExibeNotificacaoPanel.Size = new Size(331, 158);
                //        ExibeNotificacaoPanel.Location = new Point(0, topComunicado);

                //        TituloNotificacaoPanel = new Panel();
                //        TituloNotificacaoPanel.BackColor = Publicas._panelTitulo;
                //        TituloNotificacaoPanel.Dock = DockStyle.Top;
                //        TituloNotificacaoPanel.Size = new Size(0, 25);
                //        TituloNotificacaoPanel.Tag = item.IdColaborador;

                //        TituloNotificacaoLabel = new Label();
                //        TituloNotificacaoLabel.Font = new Font(usuarioLogadoLabel.Font, usuarioLogadoLabel.Font.Style);
                //        TituloNotificacaoLabel.ForeColor = (Publicas._TemaBlack ? Publicas._fonte : Publicas._fundo);
                //        TituloNotificacaoLabel.TextAlign = ContentAlignment.MiddleLeft;
                //        TituloNotificacaoLabel.Dock = DockStyle.Fill;
                //        TituloNotificacaoLabel.Text = "Biblioteca - Livros baixados";

                //        TituloNotificacaoPanel.Controls.Add(TituloNotificacaoLabel);


                //        if (Publicas._usuario.AdministraBiblioteca || Publicas._usuario.Administrador)
                //        {
                //            Imagem1Picture = new PictureBox();
                //            Imagem1Picture.ImageLocation = @"Imagens\Email.png";
                //            Imagem1Picture.SizeMode = PictureBoxSizeMode.Zoom;
                //            Imagem1Picture.Dock = DockStyle.Right;
                //            Imagem1Picture.Size = new Size(25, 25);

                //            ToolTipInfo _tool = new ToolTipInfo();
                //            _tool.Footer.Font = TituloNotificacaoLabel.Font;
                //            _tool.Footer.Text = "Enviar e-mail notificando" + Environment.NewLine + "o prazo de devolução" + Environment.NewLine + "ao colaborador.";
                //            superToolTip1.SetToolTip(Imagem1Picture, _tool);
                //            Imagem1Picture.Tag = item.IdLivro;
                //            Imagem1Picture.Click += new System.EventHandler(EnviarEmail_Click);
                //            Imagem1Picture.MouseHover += new EventHandler(this.EnviarEmail_MouseHover);
                //            Imagem1Picture.MouseLeave += new EventHandler(this.EnviarEmail_MouseLeave);

                //            TituloNotificacaoPanel.Controls.Add(Imagem1Picture);
                //        }

                //        Texto1Label = new Label();
                //        Texto1Label.Text = "Data para devolução " + item.DataAcompanhamento.ToShortDateString();
                //        Texto1Label.TextAlign = ContentAlignment.MiddleRight;
                //        Texto1Label.AutoSize = false;
                //        Texto1Label.Size = new Size(324, 19);
                //        Texto1Label.Location = new Point(4, 28);
                //        Texto1Label.Font = new Font("Century Gothic", (float)10.25, FontStyle.Bold);
                //        Texto1Label.ForeColor = Publicas._fonte;
                //        Texto1Label.SendToBack();

                //        Texto2Label = new Label();
                //        Texto2Label.Text = "Livro: " + item.NomeLivro;
                //        Texto2Label.TextAlign = ContentAlignment.MiddleLeft;
                //        Texto2Label.AutoSize = false;
                //        Texto2Label.Size = new Size(324, 19);
                //        Texto2Label.Location = new Point(4, 50);
                //        Texto2Label.Font = new Font("Century Gothic", (float)9.25, FontStyle.Bold);
                //        Texto2Label.ForeColor = Publicas._fonte;
                //        Texto2Label.SendToBack();

                //        Texto3Label = new Label();
                //        Texto3Label.Text = item.NomeColaborador;
                //        Texto3Label.TextAlign = ContentAlignment.MiddleLeft;
                //        Texto3Label.AutoSize = false;
                //        Texto3Label.Size = new Size(324, 19);
                //        Texto3Label.Location = new Point(4, 72);
                //        Texto3Label.Font = new Font("Century Gothic", (float)10.25, FontStyle.Bold);
                //        Texto3Label.ForeColor = Publicas._fonte;
                //        Texto3Label.SendToBack();

                //        Texto4Label = new Label();
                //        Texto4Label.Text = "Emprestado em " + item.Data.ToShortDateString();
                //        Texto4Label.TextAlign = ContentAlignment.MiddleLeft;
                //        Texto4Label.AutoSize = false;
                //        Texto4Label.Size = new Size(324, 19);
                //        Texto4Label.Location = new Point(4, 92);
                //        Texto4Label.Font = new Font("Century Gothic", (float)10.25, FontStyle.Regular);
                //        Texto4Label.ForeColor = Publicas._fonte;
                //        Texto4Label.SendToBack();

                //        Texto5Label = new Label();
                //        Texto5Label.Text = "Último acesso " + (item.UltimoAcesso == DateTime.MinValue ? item.DataDownLoad.ToShortDateString() : item.UltimoAcesso.ToShortDateString());
                //        Texto5Label.TextAlign = ContentAlignment.MiddleLeft;
                //        Texto5Label.AutoSize = false;
                //        Texto5Label.Size = new Size(324, 19);
                //        Texto5Label.Location = new Point(4, 112);
                //        Texto5Label.Font = new Font("Century Gothic", (float)10.25, FontStyle.Regular);
                //        Texto5Label.ForeColor = Publicas._fonte;
                //        Texto5Label.SendToBack();

                //        Texto6Label = new Label();
                //        Texto6Label.Text = "Página " + item.Pagina.ToString() + "/" + item.TotalPagina.ToString();
                //        Texto6Label.TextAlign = ContentAlignment.MiddleLeft;
                //        Texto6Label.AutoSize = false;
                //        Texto6Label.Size = new Size(324, 19);
                //        Texto6Label.Location = new Point(4, 132);
                //        Texto6Label.Font = new Font("Century Gothic", (float)10.25, FontStyle.Regular);
                //        Texto6Label.ForeColor = Publicas._fonte;
                //        Texto6Label.SendToBack();

                //        ExibeNotificacaoPanel.Controls.Add(TituloNotificacaoPanel);
                //        ExibeNotificacaoPanel.Controls.Add(Texto1Label);
                //        ExibeNotificacaoPanel.Controls.Add(Texto2Label);
                //        ExibeNotificacaoPanel.Controls.Add(Texto3Label);
                //        ExibeNotificacaoPanel.Controls.Add(Texto4Label);
                //        ExibeNotificacaoPanel.Controls.Add(Texto5Label);
                //        ExibeNotificacaoPanel.Controls.Add(Texto6Label);

                //        TextosNotificacaoPanel.Controls.Add(ExibeNotificacaoPanel);
                //        topComunicado = topComunicado + (ExibeNotificacaoPanel.Height + 2);
                //    }
                //}

                //if (_livrosComRespostas != null)
                //{
                //    foreach (var item in _livrosComRespostas.OrderBy(o => o.Data))
                //    {
                //        ExibeNotificacaoPanel = new Panel();
                //        ExibeNotificacaoPanel.Size = new Size(331, 98);
                //        ExibeNotificacaoPanel.Location = new Point(0, topComunicado);

                //        TituloNotificacaoPanel = new Panel();
                //        TituloNotificacaoPanel.BackColor = Publicas._panelTitulo;
                //        TituloNotificacaoPanel.Dock = DockStyle.Top;
                //        TituloNotificacaoPanel.Size = new Size(0, 25);

                //        TituloNotificacaoLabel = new Label();
                //        TituloNotificacaoLabel.Font = new Font(usuarioLogadoLabel.Font, usuarioLogadoLabel.Font.Style);
                //        TituloNotificacaoLabel.ForeColor = (Publicas._TemaBlack ? Publicas._fonte : Publicas._fundo);
                //        TituloNotificacaoLabel.TextAlign = ContentAlignment.MiddleLeft;
                //        TituloNotificacaoLabel.Dock = DockStyle.Fill;
                //        if (item.Aprovada)
                //            TituloNotificacaoLabel.Text = "Biblioteca - Respostas Aprovadas";
                //        else
                //            TituloNotificacaoLabel.Text = "Biblioteca - Perguntas respondidas";

                //        TituloNotificacaoPanel.Controls.Add(TituloNotificacaoLabel);

                //        Texto1Label = new Label();
                //        Texto1Label.Text = item.Data.ToShortDateString();
                //        Texto1Label.TextAlign = ContentAlignment.MiddleRight;
                //        Texto1Label.AutoSize = false;
                //        Texto1Label.Size = new Size(324, 19);
                //        Texto1Label.Location = new Point(4, 28);
                //        Texto1Label.Font = new Font("Century Gothic", (float)10.25, FontStyle.Bold);
                //        Texto1Label.ForeColor = Publicas._fonte;
                //        Texto1Label.SendToBack();

                //        Texto2Label = new Label();
                //        Texto2Label.Text = "Livro: " + item.NomeLivro;
                //        Texto2Label.TextAlign = ContentAlignment.MiddleLeft;
                //        Texto2Label.AutoSize = false;
                //        Texto2Label.Size = new Size(324, 19);
                //        Texto2Label.Location = new Point(4, 50);
                //        Texto2Label.Font = new Font("Century Gothic", (float)9.25, FontStyle.Bold);
                //        Texto2Label.ForeColor = Publicas._fonte;
                //        Texto2Label.SendToBack();

                //        Texto3Label = new Label();
                //        Texto3Label.Text = item.NomeColaborador;
                //        Texto3Label.TextAlign = ContentAlignment.MiddleLeft;
                //        Texto3Label.AutoSize = false;
                //        Texto3Label.Size = new Size(324, 19);
                //        Texto3Label.Location = new Point(4, 72);
                //        Texto3Label.Font = new Font("Century Gothic", (float)10.25, FontStyle.Bold);
                //        Texto3Label.ForeColor = Publicas._fonte;
                //        Texto3Label.SendToBack();

                //        ExibeNotificacaoPanel.Controls.Add(TituloNotificacaoPanel);
                //        ExibeNotificacaoPanel.Controls.Add(Texto1Label);
                //        ExibeNotificacaoPanel.Controls.Add(Texto2Label);
                //        ExibeNotificacaoPanel.Controls.Add(Texto3Label);

                //        TextosNotificacaoPanel.Controls.Add(ExibeNotificacaoPanel);
                //        topComunicado = topComunicado + (ExibeNotificacaoPanel.Height + 2);
                //    }
                //}
                #endregion

                #endregion

                


                _notificacaoEmPesquisa = false;
                _notificacaoBolaoEmPesquisa = false;

            }
            catch { }
            finally
            {
                MostraNotificacoesPanel.BringToFront();
                MostraNotificacoesPanel.Visible = true;

                _quantidadeNotificacoesNaoLidas = 0;
                QuantidadeNotificacaoLabel.Text = "";
            }
        }

        private void Texto1Label_Chamados_MouseHover(object sender, EventArgs e)
        {
            ((Label)sender).Cursor = Cursors.Hand;
            ((Label)sender).BackColor = _corMenuSelecionado;
        }

        private void Texto1Label_Chamados_MouseLeave(object sender, EventArgs e)
        {
            ((Label)sender).Cursor = Cursors.Default;
            ((Label)sender).BackColor = Texto2Label.BackColor;
        }

        private void Texto1Label_Chamados_Click(object sender, EventArgs e)
        {
            Publicas._idChamado = Convert.ToInt32(((Label)sender).Tag);
            foreach (var item in _listaChamados.Where(w => w.IdChamado == Publicas._idChamado))
            {
                Publicas._idTemporizador = item.IdTemporizador;
            }
            FecharDashBoard();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaChamado;
            Chamados.Tramites _tela = new Chamados.Tramites();

            if (_tela.Width > this.Width)
                _tela.Size = new Size(this.Width - 5, this.Height - (tituloPanel.Height + panel2.Height + 2));

            _tela.ShowDialog();

            _chamadosEmPesquisa = false;
            NomePadrao();

            if (Publicas._usuario != null && !_chamadosEmPesquisa)
            {
                MensagemChamadosDashBoardLabel.Text = "Aguarde... Pesquisando os chamados.";
                this.Refresh();
                try
                {
                    chamadosBackgroundWorker.RunWorkerAsync();
                }
                catch { }
                MensagemChamadosDashBoardLabel.Text = "";
                this.Refresh();

            }
        }

        private void LimpaComponentesNotificacao()
        {
            foreach (Control controle in TextosNotificacaoPanel.Controls)
            {
                try
                {
                    controle.Dispose();
                }
                catch { }
            }

            if (TextosNotificacaoPanel.Controls.Count != 0)
            {
                LimpaComponentesNotificacao();
                return;
            }
        }

        private void NotificacaoGrid_QueryCellStyleInfo(object sender, GridTableCellStyleInfoEventArgs e)
        {

            if (!Publicas._TemaBlack)
            {
                Record dr;
                try
                { // buscar da empresa do usuario
                    if (e.TableCellIdentity.RowIndex != -1)
                    {
                        GridRecordRow rec = this.NotificacaoGrid.Table.DisplayElements[e.TableCellIdentity.RowIndex] as GridRecordRow;

                        if (rec != null)
                        {
                            dr = rec.GetRecord() as Record;
                            if (dr != null && dr["Tipo"].ToString().Contains("Extras"))
                            {
                                e.Style.TextColor = (Publicas._TemaBlack ? Color.SteelBlue : Color.Navy);
                            }
                            if (dr != null && dr["Tipo"].ToString().Contains("Incompletas"))
                            {
                                e.Style.TextColor = Color.Red;
                            }
                        }
                    }
                }
                catch { }
            }
        }

        private void notificacaoComunicadoBackgroundWorker_DoWork(object sender, DoWorkEventArgs e)
        {
            _notificacaoEmPesquisa = true;

            try
            {
                _listaComunicadosNotificacao = new ComunicadoBO().ListarNotificacoes(DateTime.Now.Year);
            }
            catch
            {
            }
        }

        private void notificacaoTimer_Tick(object sender, EventArgs e)
        {
            if (Publicas._usuario == null || !Publicas._usuario.AcessaJuridico)
                return;

            notificacaoTimer.Stop();

            try
            {
                if (!_notificacaoEmPesquisa)
                {
                    notificacaoComunicadoBackgroundWorker.RunWorkerAsync();
                }
            }
            catch { }
        }

        private void notificacaoComunicadoBackgroundWorker_RunWorkerCompleted(object sender, RunWorkerCompletedEventArgs e)
        {
            notificacaoTimer.Start();
        }

        private void QuantidadeNotificacaoLabel_MouseHover(object sender, EventArgs e)
        {
            QuantidadeNotificacaoLabel.Cursor = Cursors.Hand;
            QuantidadeNotificacaoLabel.BackColor = _corMenuSelecionado;
        }

        private void QuantidadeNotificacaoLabel_MouseLeave(object sender, EventArgs e)
        {
            QuantidadeNotificacaoLabel.Cursor = Cursors.Default;
            QuantidadeNotificacaoLabel.BackColor = System.Drawing.Color.FromArgb(128, 131, 143);
        }

        private void LimparNotificacoesButton_Click(object sender, EventArgs e)
        {
            LimpaComponentesNotificacao();

            try
            {
                _listaArquivei.Clear();
            }
            catch { }
            try
            {
                _listaAniversariantes.Clear();
            }
            catch { }
            try
            {
                _listaComunicadosNotificacao.Clear();
            }
            catch { }

            try
            {
                _listaChamadosNotificacao.Clear();
            }
            catch { }
            try
            {
                _listaCorrida.Clear();
            }
            catch { }
            _listaJogosDos3Dias.Clear();
            try
            {
                _listaJogosEncerrados.Clear();
            }
            catch { }
            try
            {
                _listaResenhas.Clear();
            }
            catch { }
            try
            {
                _listaResenhasNaoCadastradas.Clear();
            }
            catch { }
            try
            {
                _listaEmprestimos.Clear();
            }
            catch { }
            try
            {
                _listaResenhas.Clear();
            }
            catch { }

            MostraNotificacoesPanel.Visible = false;
        }

        private void StatusSACDashBoardComboBox_SelectedIndexChanged(object sender, EventArgs e)
        {
            if (Publicas._usuario != null)
                AnoSACDashBoardComboBox_SelectedIndexChanged(sender, e);
        }

        private void AnoSACDashBoardComboBox_SelectedIndexChanged(object sender, EventArgs e)
        {
            _anoSAC = DateTime.Now.Year.ToString();
            _statusSAC = "T";

            if (AnoSACDashBoardComboBox.Text != "")
                _anoSAC = AnoSACDashBoardComboBox.Text;

            switch (StatusSACDashBoardComboBox.SelectedIndex)
            {
                case 0:
                    _statusSAC = "A";
                    break;
                case 1:
                    _statusSAC = "F";
                    break;
                case 2:
                    _statusSAC = "C";
                    break;
                case 3:
                    _statusSAC = "R";
                    break;
                case 5:
                    _statusSAC = "T";
                    break;
            }

            try
            {
                if (!_sacEmPesquisa && Publicas._usuario.AcessaSac)
                {
                    SACBackgroundWorker.RunWorkerAsync();
                    MensagemSACDashBoardLabel.Text = "Aguarde, Pesquisando atendimentos... ";
                }
            }
            catch { }

        }

        private void SACBackgroundWorker_DoWork(object sender, DoWorkEventArgs e)
        {
            _sacEmPesquisa = true;

            try
            {
                if (Publicas._usuario.Administrador)
                    _listaAtendimentosSAC = new AtendimentoBO().Listar(5, Publicas.TelaPesquisaSAC.Grid, 0, Convert.ToInt32(_anoSAC), _statusSAC);
                else
                    _listaAtendimentosSAC = new AtendimentoBO().Listar(Publicas._usuario.IdEmpresa, Publicas.TelaPesquisaSAC.Grid, 0, Convert.ToInt32(_anoSAC), _statusSAC);
            }
            catch
            {
            }
        }

        private void SACBackgroundWorker_RunWorkerCompleted(object sender, RunWorkerCompletedEventArgs e)
        {
            if (SACDashBoardGrid != null)
                SACDashBoardGrid.DataSource = _listaAtendimentosSAC.OrderBy(o => o.Codigo).OrderBy(o => o.DataAbertura).ToList();

            if (MensagemSACDashBoardLabel != null)
                MensagemSACDashBoardLabel.Text = "";
            _sacEmPesquisa = false;
            sacTimer.Start();
        }

        private void sacTimer_Tick(object sender, EventArgs e)
        {
            if (Publicas._usuario == null || !Publicas._usuario.AcessaSac)
                return;

            sacTimer.Stop();

            try
            {
                if (!_sacEmPesquisa)
                {
                    SACBackgroundWorker.RunWorkerAsync();
                }
            }
            catch { }
        }
        #endregion

        #region Bolão

        private void BolaoPictureBox_MouseHover(object sender, EventArgs e)
        {
            BolaoPictureBox.Cursor = Cursors.Hand;
            BolaoPictureBox.BackColor = _corMenuSelecionado;
        }

        private void BolaoPictureBox_MouseLeave(object sender, EventArgs e)
        {
            BolaoPictureBox.Cursor = Cursors.Default;
            BolaoPictureBox.BackColor = System.Drawing.Color.FromArgb(128, 131, 143);
        }

        private void BolaoPictureBox_Click(object sender, EventArgs e)
        {
            TemaPanel.Visible = false;
            List<BolaoPalpitesDosColaboradores> _listaApostas = new List<BolaoPalpitesDosColaboradores>();
            List<BolaoPalpiteFinalDoColaborador> _listaPalpiteFinal = new List<BolaoPalpiteFinalDoColaborador>();
            ApostasPanel.Size = new Size(661, 0);
            ApostasPanel.BringToFront();
            ApostasPanel.Dock = DockStyle.Right;
            //filter.WireGrid(ApostasBolaoGrid);
            ApostasBolaoGrid.TopLevelGroupOptions.ShowFilterBar = true;

            if (!ApostasPanel.Visible)
            {
                ApostasBolaoGrid.SortIconPlacement = SortIconPlacement.Left;
                ApostasBolaoGrid.TableOptions.ListBoxSelectionMode = SelectionMode.One;
                ApostasBolaoGrid.TopLevelGroupOptions.ShowAddNewRecordBeforeDetails = false;
                ApostasBolaoGrid.TableControl.CellToolTip.Active = true;

                ApostasBolaoGrid.SetMetroStyle(metroColor);

                // para permitir editar dados.
                ApostasBolaoGrid.TableOptions.ListBoxSelectionCurrentCellOptions = GridListBoxSelectionCurrentCellOptions.HideCurrentCell;
                if (Publicas._TemaBlack)
                {
                    ApostasBolaoGrid.TableOptions.SelectionBackColor = Publicas._botaoFocado;
                    ApostasBolaoGrid.TableOptions.SelectionTextColor = Publicas._fonte;
                    ApostasBolaoGrid.BackColor = Publicas._fundo;
                    ApostasBolaoGrid.ForeColor = Publicas._fonte;
                }
                else
                {
                    ApostasBolaoGrid.TableOptions.SelectionBackColor = Publicas._bordaEntrada;
                    ApostasBolaoGrid.TableOptions.SelectionTextColor = Color.WhiteSmoke;
                }
                ApostasBolaoGrid.TableOptions.ListBoxSelectionColorOptions = GridListBoxSelectionColorOptions.ApplySelectionColor;

                _listaApostas = new BolaoPalpitesDosColaboradoresBO().AcompanharJogos(DateTime.Now.Year);

                ApostasBolaoGrid.DataSource = _listaApostas;

                FinalistasGrid.SortIconPlacement = SortIconPlacement.Left;
                FinalistasGrid.TableOptions.ListBoxSelectionMode = SelectionMode.One;
                FinalistasGrid.TopLevelGroupOptions.ShowAddNewRecordBeforeDetails = false;
                FinalistasGrid.TableControl.CellToolTip.Active = true;
                FinalistasGrid.TopLevelGroupOptions.ShowFilterBar = true;
                FinalistasGrid.SetMetroStyle(metroColor);

                // para permitir editar dados.
                FinalistasGrid.TableOptions.ListBoxSelectionCurrentCellOptions = GridListBoxSelectionCurrentCellOptions.HideCurrentCell;
                if (Publicas._TemaBlack)
                {
                    FinalistasGrid.TableOptions.SelectionBackColor = Publicas._botaoFocado;
                    FinalistasGrid.TableOptions.SelectionTextColor = Publicas._fonte;
                    FinalistasGrid.BackColor = Publicas._fundo;
                    FinalistasGrid.ForeColor = Publicas._fonte;
                }
                else
                {
                    FinalistasGrid.TableOptions.SelectionBackColor = Publicas._bordaEntrada;
                    FinalistasGrid.TableOptions.SelectionTextColor = Color.WhiteSmoke;
                }

                FinalistasGrid.TableOptions.ListBoxSelectionColorOptions = GridListBoxSelectionColorOptions.ApplySelectionColor;

                if (DateTime.Now.Date > new DateTime(2018, 06, 29))
                    _listaPalpiteFinal = new BolaoPalpiteFinalDoColaboradorBO().Listar(DateTime.Now.Year);

                FinalistasGrid.DataSource = _listaPalpiteFinal;
                FinalistasTabPage.TabVisible = DateTime.Now.Date > new DateTime(2018, 06, 29);
            }

            ApostasPanel.Visible = !ApostasPanel.Visible && (_listaApostas.Count() > 0 || _listaPalpiteFinal.Count() > 0);
        }

        private void BolaoCopaPanel_Click(object sender, EventArgs e)
        {
            FechaMenuSistema();
            FechaMenuUsuario();

            if (MenuBolaoPanel != null)
            {
                FechaSubMenuBolao();
                return;
            }

            if (Publicas._usuario == null)
                return;

            MenuBolaoPanel = new Panel();
            MenuBolaoPanel.Size = new Size(BolaoCopaPanel.Width, 25 * (Publicas._usuario.AdministraBolaoCopa ? 7 : 3));
            MenuBolaoPanel.Location = new Point(BolaoCopaPanel.Left, AcessoAoMenuPanel.Height);
            MenuBolaoPanel.BackColor = _corFundoDivisao;
            this.Controls.Add(MenuBolaoPanel);
            MenuBolaoPanel.BringToFront();
            MenuBolaoPanel.Visible = true;

            #region Seleção
            SelecaoPanel = new Panel();
            SelecaoPanel.Font = CorFontepadraoLabel.Font;
            SelecaoPanel.Size = new Size(0, 25);
            SelecaoPanel.Dock = DockStyle.Top;
            SelecaoPanel.BackColor = _corFundoMenu;

            SelecaoLabel = new Label();
            SelecaoLabel.AutoSize = false;
            SelecaoLabel.Size = new Size(_widthLabelMenuSistema, 0);
            SelecaoLabel.Dock = DockStyle.Fill;
            SelecaoLabel.Text = "Seleções";
            SelecaoLabel.Font = CorFontepadraoLabel.Font;
            SelecaoLabel.ForeColor = Color.WhiteSmoke;
            SelecaoLabel.TextAlign = ContentAlignment.MiddleLeft;
            SelecaoLabel.MouseHover += new EventHandler(this.SelecaoPanel_MouseHover);
            SelecaoLabel.Click += new System.EventHandler(this.SelecaoLabel_Click);
            SelecaoLabel.Name = "SelecaoLabel";

            DivisoriaSelecaoImagem = new PictureBox();
            DivisoriaSelecaoImagem.Size = new Size(0, 2);
            DivisoriaSelecaoImagem.Dock = DockStyle.Bottom;
            DivisoriaSelecaoImagem.BackColor = _corFundoDivisao;

            SelecaoPanel.Controls.Add(SelecaoLabel);
            SelecaoPanel.Controls.Add(DivisoriaSelecaoImagem);

            MenuBolaoPanel.Controls.Add(SelecaoPanel);
            #endregion

            #region Jogos
            JogosPanel = new Panel();
            JogosPanel.Font = CorFontepadraoLabel.Font;
            JogosPanel.Size = new Size(0, 25);
            JogosPanel.Dock = DockStyle.Top;
            JogosPanel.BackColor = _corFundoMenu;

            JogosLabel = new Label();
            JogosLabel.AutoSize = false;
            JogosLabel.Size = new Size(_widthLabelMenuSistema, 0);
            JogosLabel.Dock = DockStyle.Fill;
            JogosLabel.Text = "Jogos";
            JogosLabel.Font = CorFontepadraoLabel.Font;
            JogosLabel.ForeColor = Color.WhiteSmoke;
            JogosLabel.TextAlign = ContentAlignment.MiddleLeft;
            JogosLabel.MouseHover += new EventHandler(this.SelecaoPanel_MouseHover);
            JogosLabel.Click += new System.EventHandler(this.JogosLabel_Click);
            JogosLabel.Name = "JogosLabel";

            DivisoriaJogosImagem = new PictureBox();
            DivisoriaJogosImagem.Size = new Size(0, 2);
            DivisoriaJogosImagem.Dock = DockStyle.Bottom;
            DivisoriaJogosImagem.BackColor = _corFundoDivisao;

            JogosPanel.Controls.Add(JogosLabel);
            JogosPanel.Controls.Add(DivisoriaJogosImagem);

            MenuBolaoPanel.Controls.Add(JogosPanel);
            #endregion

            #region Resultado
            ResultadoBolaoPanel = new Panel();
            ResultadoBolaoPanel.Font = CorFontepadraoLabel.Font;
            ResultadoBolaoPanel.Size = new Size(0, 25);
            ResultadoBolaoPanel.Dock = DockStyle.Top;
            ResultadoBolaoPanel.BackColor = _corFundoMenu;

            ResultadoBolaoLabel = new Label();
            ResultadoBolaoLabel.AutoSize = false;
            ResultadoBolaoLabel.Size = new Size(_widthLabelMenuSistema, 0);
            ResultadoBolaoLabel.Dock = DockStyle.Fill;
            ResultadoBolaoLabel.Text = "Resultados";
            ResultadoBolaoLabel.Font = CorFontepadraoLabel.Font;
            ResultadoBolaoLabel.ForeColor = Color.WhiteSmoke;
            ResultadoBolaoLabel.TextAlign = ContentAlignment.MiddleLeft;
            ResultadoBolaoLabel.MouseHover += new EventHandler(this.SelecaoPanel_MouseHover);
            ResultadoBolaoLabel.Click += new System.EventHandler(this.ResultadoBolaoLabel_Click);
            ResultadoBolaoLabel.Name = "ResultadosLabel";

            DivisoriaResultadoBolaoImagem = new PictureBox();
            DivisoriaResultadoBolaoImagem.Size = new Size(0, 2);
            DivisoriaResultadoBolaoImagem.Dock = DockStyle.Bottom;
            DivisoriaResultadoBolaoImagem.BackColor = _corFundoDivisao;

            ResultadoBolaoPanel.Controls.Add(ResultadoBolaoLabel);
            ResultadoBolaoPanel.Controls.Add(DivisoriaResultadoBolaoImagem);

            MenuBolaoPanel.Controls.Add(ResultadoBolaoPanel);
            #endregion

            #region Palpites Finalistas
            PalpitesFinalistasPanel = new Panel();
            PalpitesFinalistasPanel.Font = CorFontepadraoLabel.Font;
            PalpitesFinalistasPanel.Size = new Size(0, 25);
            PalpitesFinalistasPanel.Dock = DockStyle.Top;
            PalpitesFinalistasPanel.BackColor = _corFundoMenu;

            PalpitesFinalistasLabel = new Label();
            PalpitesFinalistasLabel.AutoSize = false;
            PalpitesFinalistasLabel.Size = new Size(_widthLabelMenuSistema, 0);
            PalpitesFinalistasLabel.Dock = DockStyle.Fill;
            PalpitesFinalistasLabel.Text = "Palpites de Finalistas";
            PalpitesFinalistasLabel.Font = CorFontepadraoLabel.Font;
            PalpitesFinalistasLabel.ForeColor = Color.WhiteSmoke;
            PalpitesFinalistasLabel.TextAlign = ContentAlignment.MiddleLeft;
            PalpitesFinalistasLabel.MouseHover += new EventHandler(this.SelecaoPanel_MouseHover);
            PalpitesFinalistasLabel.Click += new System.EventHandler(this.PalpitesFinalistasLabel_Click);
            PalpitesFinalistasLabel.Name = "PalpitesFinalistasLabel";

            DivisoriaPalpitesFinalistasImagem = new PictureBox();
            DivisoriaPalpitesFinalistasImagem.Size = new Size(0, 2);
            DivisoriaPalpitesFinalistasImagem.Dock = DockStyle.Bottom;
            DivisoriaPalpitesFinalistasImagem.BackColor = _corFundoDivisao;

            PalpitesFinalistasPanel.Controls.Add(PalpitesFinalistasLabel);
            PalpitesFinalistasPanel.Controls.Add(DivisoriaPalpitesFinalistasImagem);

            MenuBolaoPanel.Controls.Add(PalpitesFinalistasPanel);
            #endregion

            #region Palpites de placar
            PalpitesPlacarPanel = new Panel();
            PalpitesPlacarPanel.Font = CorFontepadraoLabel.Font;
            PalpitesPlacarPanel.Size = new Size(0, 25);
            PalpitesPlacarPanel.Dock = DockStyle.Top;
            PalpitesPlacarPanel.BackColor = _corFundoMenu;

            PalpitesPlacarLabel = new Label();
            PalpitesPlacarLabel.AutoSize = false;
            PalpitesPlacarLabel.Size = new Size(_widthLabelMenuSistema, 0);
            PalpitesPlacarLabel.Dock = DockStyle.Fill;
            PalpitesPlacarLabel.Text = "Palpites de Placar";
            PalpitesPlacarLabel.Font = CorFontepadraoLabel.Font;
            PalpitesPlacarLabel.ForeColor = Color.WhiteSmoke;
            PalpitesPlacarLabel.TextAlign = ContentAlignment.MiddleLeft;
            PalpitesPlacarLabel.MouseHover += new EventHandler(this.SelecaoPanel_MouseHover);
            PalpitesPlacarLabel.Click += new System.EventHandler(this.PalpitesPlacarLabel_Click);
            PalpitesPlacarLabel.Name = "PalpitesPlacarLabel";

            DivisoriaPalpitesPlacarImagem = new PictureBox();
            DivisoriaPalpitesPlacarImagem.Size = new Size(0, 2);
            DivisoriaPalpitesPlacarImagem.Dock = DockStyle.Bottom;
            DivisoriaPalpitesPlacarImagem.BackColor = _corFundoDivisao;

            PalpitesPlacarPanel.Controls.Add(PalpitesPlacarLabel);
            PalpitesPlacarPanel.Controls.Add(DivisoriaPalpitesPlacarImagem);

            MenuBolaoPanel.Controls.Add(PalpitesPlacarPanel);
            #endregion

            #region Ranking
            RankingBolaoPanel = new Panel();
            RankingBolaoPanel.Font = CorFontepadraoLabel.Font;
            RankingBolaoPanel.Size = new Size(0, 25);
            RankingBolaoPanel.Dock = DockStyle.Top;
            RankingBolaoPanel.BackColor = _corFundoMenu;

            RankingBolaoLabel = new Label();
            RankingBolaoLabel.AutoSize = false;
            RankingBolaoLabel.Size = new Size(_widthLabelMenuSistema, 0);
            RankingBolaoLabel.Dock = DockStyle.Fill;
            RankingBolaoLabel.Text = "Ranking";
            RankingBolaoLabel.Font = CorFontepadraoLabel.Font;
            RankingBolaoLabel.ForeColor = Color.WhiteSmoke;
            RankingBolaoLabel.TextAlign = ContentAlignment.MiddleLeft;
            RankingBolaoLabel.MouseHover += new EventHandler(this.SelecaoPanel_MouseHover);
            RankingBolaoLabel.Click += new System.EventHandler(this.RankingLabel_Click);
            RankingBolaoLabel.Name = "RankingLabel";

            DivisoriaRankingBolaoImagem = new PictureBox();
            DivisoriaRankingBolaoImagem.Size = new Size(0, 2);
            DivisoriaRankingBolaoImagem.Dock = DockStyle.Bottom;
            DivisoriaRankingBolaoImagem.BackColor = _corFundoDivisao;

            RankingBolaoPanel.Controls.Add(RankingBolaoLabel);
            RankingBolaoPanel.Controls.Add(DivisoriaRankingBolaoImagem);

            MenuBolaoPanel.Controls.Add(RankingBolaoPanel);
            #endregion

            #region Valor Arrecadado
            ValorArrecadadoPanel = new Panel();
            ValorArrecadadoPanel.Font = CorFontepadraoLabel.Font;
            ValorArrecadadoPanel.Size = new Size(0, 25);
            ValorArrecadadoPanel.Dock = DockStyle.Top;
            ValorArrecadadoPanel.BackColor = _corFundoMenu;

            ValorArrecadadoLabel = new Label();
            ValorArrecadadoLabel.AutoSize = false;
            ValorArrecadadoLabel.Size = new Size(_widthLabelMenuSistema, 0);
            ValorArrecadadoLabel.Dock = DockStyle.Fill;
            ValorArrecadadoLabel.Text = "Valor Arrecadado";
            ValorArrecadadoLabel.Font = CorFontepadraoLabel.Font;
            ValorArrecadadoLabel.ForeColor = Color.WhiteSmoke;
            ValorArrecadadoLabel.TextAlign = ContentAlignment.MiddleLeft;
            ValorArrecadadoLabel.MouseHover += new EventHandler(this.SelecaoPanel_MouseHover);
            ValorArrecadadoLabel.Click += new System.EventHandler(this.ValorArrecadadoLabel_Click);
            ValorArrecadadoLabel.Name = "ValorArrecadadoLabel";

            DivisoriaValorArrecadadoImagem = new PictureBox();
            DivisoriaValorArrecadadoImagem.Size = new Size(0, 2);
            DivisoriaValorArrecadadoImagem.Dock = DockStyle.Bottom;
            DivisoriaValorArrecadadoImagem.BackColor = _corFundoDivisao;

            ValorArrecadadoPanel.Controls.Add(ValorArrecadadoLabel);
            ValorArrecadadoPanel.Controls.Add(DivisoriaValorArrecadadoImagem);

            MenuBolaoPanel.Controls.Add(ValorArrecadadoPanel);
            #endregion

            SelecaoPanel.Visible = Publicas._usuario.AdministraBolaoCopa;
            JogosPanel.Visible = Publicas._usuario.AdministraBolaoCopa;
            ResultadoBolaoPanel.Visible = Publicas._usuario.AdministraBolaoCopa;
            ValorArrecadadoPanel.Visible = Publicas._usuario.AdministraBolaoCopa;
        }

        private void SelecaoPanel_MouseHover(object sender, EventArgs e)
        {
            MudaSelecaoDeCoresSubMenuBolao();
            FechaMenuUsuario();
            FechaMenuSistema();

            if (((Control)sender).Name.Contains("Selecao"))
            {
                SelecaoLabel.Font = new Font(SelecaoLabel.Font, FontStyle.Bold);
                SelecaoLabel.ForeColor = Publicas._fonteBotaoFocado;
                SelecaoLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Jogos"))
            {
                JogosLabel.Font = new Font(JogosLabel.Font, FontStyle.Bold);
                JogosLabel.ForeColor = Publicas._fonteBotaoFocado;
                JogosLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Finalistas"))
            {
                PalpitesFinalistasLabel.Font = new Font(PalpitesFinalistasLabel.Font, FontStyle.Bold);
                PalpitesFinalistasLabel.ForeColor = Publicas._fonteBotaoFocado;
                PalpitesFinalistasLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Placar"))
            {
                PalpitesPlacarLabel.Font = new Font(PalpitesPlacarLabel.Font, FontStyle.Bold);
                PalpitesPlacarLabel.ForeColor = Publicas._fonteBotaoFocado;
                PalpitesPlacarLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Ranking"))
            {
                RankingBolaoLabel.Font = new Font(RankingBolaoLabel.Font, FontStyle.Bold);
                RankingBolaoLabel.ForeColor = Publicas._fonteBotaoFocado;
                RankingBolaoLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Valor"))
            {
                ValorArrecadadoLabel.Font = new Font(ValorArrecadadoLabel.Font, FontStyle.Bold);
                ValorArrecadadoLabel.ForeColor = Publicas._fonteBotaoFocado;
                ValorArrecadadoLabel.BackColor = _corMenuSelecionado;
                return;
            }

            if (((Control)sender).Name.Contains("Resultado"))
            {
                ResultadoBolaoLabel.Font = new Font(ResultadoBolaoLabel.Font, FontStyle.Bold);
                ResultadoBolaoLabel.ForeColor = Publicas._fonteBotaoFocado;
                ResultadoBolaoLabel.BackColor = _corMenuSelecionado;
                return;
            }
        }

        private void MudaSelecaoDeCoresSubMenuBolao()
        {
            SelecaoLabel.Font = new Font(SelecaoLabel.Font, SelecaoLabel.Font.Style & ~FontStyle.Bold);
            JogosLabel.Font = new Font(JogosLabel.Font, JogosLabel.Font.Style & ~FontStyle.Bold);
            PalpitesFinalistasLabel.Font = new Font(PalpitesFinalistasLabel.Font, PalpitesFinalistasLabel.Font.Style & ~FontStyle.Bold);
            PalpitesPlacarLabel.Font = new Font(PalpitesPlacarLabel.Font, PalpitesPlacarLabel.Font.Style & ~FontStyle.Bold);
            RankingBolaoLabel.Font = new Font(RankingBolaoLabel.Font, RankingBolaoLabel.Font.Style & ~FontStyle.Bold);
            ValorArrecadadoLabel.Font = new Font(ValorArrecadadoLabel.Font, ValorArrecadadoLabel.Font.Style & ~FontStyle.Bold);
            ResultadoBolaoLabel.Font = new Font(ResultadoBolaoLabel.Font, ResultadoBolaoLabel.Font.Style & ~FontStyle.Bold);

            SelecaoLabel.BackColor = _corFundoMenu;
            JogosLabel.BackColor = SelecaoLabel.BackColor;
            PalpitesFinalistasLabel.BackColor = SelecaoLabel.BackColor;
            PalpitesPlacarLabel.BackColor = SelecaoLabel.BackColor;
            RankingBolaoLabel.BackColor = SelecaoLabel.BackColor;
            ValorArrecadadoLabel.BackColor = SelecaoLabel.BackColor;
            ResultadoBolaoLabel.BackColor = SelecaoLabel.BackColor;

            SelecaoLabel.ForeColor = Color.WhiteSmoke;
            JogosLabel.ForeColor = Color.WhiteSmoke;
            PalpitesFinalistasLabel.ForeColor = Color.WhiteSmoke;
            PalpitesPlacarLabel.ForeColor = Color.WhiteSmoke;
            RankingBolaoLabel.ForeColor = Color.WhiteSmoke;
            ValorArrecadadoLabel.ForeColor = Color.WhiteSmoke;
            ResultadoBolaoLabel.ForeColor = Color.WhiteSmoke;
        }

        private void FechaSubMenuBolao()
        {
            if (MenuBolaoPanel != null)
            {
                MenuBolaoPanel.Visible = false;
                this.Controls.Remove(MenuBolaoPanel);
                MenuBolaoPanel.Dispose();
                MenuBolaoPanel = null;
            }

            Refresh();
        }

        private void SelecaoLabel_Click(object sender, EventArgs e)
        {
            FechaSubMenuBolao();
            MensagemSistema();
            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaBolaoCopa;
            BolaoCopadoMundo.Selecoes _tela = new BolaoCopadoMundo.Selecoes();

            _tela.ShowDialog();
            NomePadrao();
        }

        private void JogosLabel_Click(object sender, EventArgs e)
        {
            MensagemSistema();
            FechaSubMenuBolao();
            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaBolaoCopa;
            BolaoCopadoMundo.Jogos _tela = new BolaoCopadoMundo.Jogos();

            _tela.ShowDialog();
            NomePadrao();
        }

        private void PalpitesFinalistasLabel_Click(object sender, EventArgs e)
        {
            MensagemSistema();
            FechaSubMenuBolao();
            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaBolaoCopa;
            BolaoCopadoMundo.PalpiteFinal _tela = new BolaoCopadoMundo.PalpiteFinal();

            _tela.ShowDialog();
            NomePadrao();
        }

        private void PalpitesPlacarLabel_Click(object sender, EventArgs e)
        {
            MensagemSistema();
            FechaSubMenuBolao();
            Refresh();
            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaBolaoCopa;
            BolaoCopadoMundo.PalpiteJogos _tela = new BolaoCopadoMundo.PalpiteJogos();

            _tela.ShowDialog();
            NomePadrao();
        }

        private void RankingLabel_Click(object sender, EventArgs e)
        {
            MensagemSistema();
            FechaSubMenuBolao();
            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaBolaoCopa;
            BolaoCopadoMundo.Ranking _tela = new BolaoCopadoMundo.Ranking();
            _tela.Size = new Size(_tela.Width, this.Height - (tituloPanel.Height + panel2.Height + 2));

            _tela.ShowDialog();
            NomePadrao();
        }

        private void ValorArrecadadoLabel_Click(object sender, EventArgs e)
        {
            MensagemSistema();
            FechaSubMenuBolao();
            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaBolaoCopa;
            BolaoCopadoMundo.ValorArrecadado _tela = new BolaoCopadoMundo.ValorArrecadado();

            _tela.ShowDialog();
            NomePadrao();
        }

        private void ResultadoBolaoLabel_Click(object sender, EventArgs e)
        {
            MensagemSistema();
            FechaSubMenuBolao();
            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaBolaoCopa;
            BolaoCopadoMundo.ResultadosJogos _tela = new BolaoCopadoMundo.ResultadosJogos();

            _tela.ShowDialog();
            NomePadrao();
        }

        private void BolaoCopaPanel_MouseHover(object sender, EventArgs e)
        {
            BolaoCopaPanel.Cursor = Cursors.Hand;
            BolaoCopaPanel.BackColor = Publicas._panelTituloFoco;
        }

        private void BolaoCopaPanel_MouseLeave(object sender, EventArgs e)
        {
            BolaoCopaPanel.Cursor = Cursors.Default;
            BolaoCopaPanel.BackColor = Publicas._panelTitulo;
        }

        private void BolaoCopaBackgroundWorker_DoWork(object sender, DoWorkEventArgs e)
        {
            if (!_notificacaoBolaoEmPesquisa)
            {
                _notificacaoBolaoEmPesquisa = true;
                Publicas._jogosNaoFinalizados = false;
                _listaJogosEncerrados = new BolaoJogosBO().Listar(DateTime.Now.Year, true);
                _listaJogosDos3Dias = new BolaoJogosBO().ListarJogosSemPalpites(DateTime.Now.Year);
            }
        }

        private void BolaoCopaBackgroundWorker_RunWorkerCompleted(object sender, RunWorkerCompletedEventArgs e)
        {
            notificacaoBolaoTimer.Start();
        }

        private void notificacaoBolaoTimer_Tick(object sender, EventArgs e)
        {
            notificacaoBolaoTimer.Stop();

            if (Publicas._usuario == null || !Publicas._usuario.ParticipaBolaoCopa)
                return;

            try
            {
                if (!_notificacaoBolaoEmPesquisa)
                {
                    BolaoCopaBackgroundWorker.RunWorkerAsync();
                }
            }
            catch { }
        }


        #endregion

        #region Biblioteca
        private void BibliotecaBackgroundWorker_DoWork(object sender, DoWorkEventArgs e)
        {
            _bibliotecaEmPesquisa = true;

            if (!(Publicas._usuario.IdEmpresa == 1 || Publicas._usuario.IdEmpresa == 19 || Publicas._usuario.UsuarioAcesso == "ELSILVA" || Publicas._usuario.UsuarioAcesso == "VBSANTOS")) // apenas para NIFF
                return;

            if (Publicas._usuario.Administrador ||
                Publicas._usuario.Departamento.Contains("RH") || Publicas._usuario.Departamento.ToUpper().Contains("Recursos Humanos".ToUpper()))
            {
                _listaEmprestimos = new EmprestimoLivrosBO().Listar(true);
                _listaResenhas = new ResenhaLivrosBO().Listar(false, 0);
                _listaResenhasNaoCadastradas = new ResenhaLivrosBO().ListarLivroSemResenha(0);
                _listaReservas = new ReservaLivrosBO().Listar();
                _listaDownLoad = new EmprestimoLivrosBO().ListarDownload(0);
                _livrosComRespostas = new ResenhaLivrosBO().ListarLivrosComRespostas(true);
            }
            else
            {
                _listaEmprestimos = new EmprestimoLivrosBO().Listar(true, Publicas._idColaborador);
                _listaDownLoad = new EmprestimoLivrosBO().ListarDownload(Publicas._idColaborador);
                _listaResenhas = new ResenhaLivrosBO().Listar(true, Publicas._idColaborador);
                _listaResenhasNaoCadastradas = new ResenhaLivrosBO().ListarLivroSemResenha(Publicas._idColaborador);
                _livrosComRespostas = new ResenhaLivrosBO().ListarLivrosComRespostas(false);
            }
        }

        private void BibliotecaBackgroundWorker_RunWorkerCompleted(object sender, RunWorkerCompletedEventArgs e)
        {
            _bibliotecaEmPesquisa = false;

            //if (Publicas._usuario.IdEmpresa != 1) // apenas para NIFF
            if (!(Publicas._usuario.IdEmpresa == 1 || Publicas._usuario.IdEmpresa == 19 || Publicas._usuario.UsuarioAcesso == "ELSILVA" || Publicas._usuario.UsuarioAcesso == "VBSANTOS")) // apenas para NIFF
                return;

            NotificacaoBibliotecaTimer.Start();
        }

        private void NotificaoBibliotecaTimer_Tick(object sender, EventArgs e)
        {
            NotificacaoBibliotecaTimer.Stop();

            if (Publicas._usuario == null ||
                (!(Publicas._usuario.IdEmpresa == 1 || Publicas._usuario.IdEmpresa == 19 || Publicas._usuario.UsuarioAcesso == "ELSILVA" || Publicas._usuario.UsuarioAcesso == "VBSANTOS"))) // apenas para NIFF)
                return;

            try
            {
                if (!_bibliotecaEmPesquisa)
                {
                    BibliotecaBackgroundWorker.RunWorkerAsync();
                }
            }
            catch { }
        }

        private void AbrirLivros_Click(object sender, EventArgs e)
        {
            AbrirLivros.Cursor = Cursors.WaitCursor;
            TemaPanel.Visible = false;
            ApostasPanel.Visible = false;
            ConsultaRamaisPanel.Visible = false;
            ResultadoTorneioPanel.Visible = false;

            // Mostrar as notificações
            if (MostraNotificacoesPanel.Visible)
            {
                MostraNotificacoesPanel.Visible = false;
                LimpaComponentesNotificacao();
            }

            LeituraResenhaLivro.Size = new Size(585, 0);
            LeituraResenhaLivro.BringToFront();
            LeituraResenhaLivro.Dock = DockStyle.Right;

            if (!LeituraResenhaLivro.Visible)
            {
                Publicas._mensagemSistema = "Aguarde, Pesquisando livros...";
                mensagemLabel.Text = Publicas._mensagemSistema;
                this.Refresh();
                LivrosResenhaGrid.SortIconPlacement = SortIconPlacement.Left;
                LivrosResenhaGrid.TableOptions.ListBoxSelectionMode = SelectionMode.One;
                LivrosResenhaGrid.TopLevelGroupOptions.ShowAddNewRecordBeforeDetails = false;
                LivrosResenhaGrid.TableControl.CellToolTip.Active = true;

                LivrosResenhaGrid.SetMetroStyle(metroColor);

                // para permitir editar dados.
                LivrosResenhaGrid.TableOptions.ListBoxSelectionCurrentCellOptions = GridListBoxSelectionCurrentCellOptions.None;
                if (Publicas._TemaBlack)
                {
                    LivrosResenhaGrid.TableOptions.SelectionBackColor = Publicas._botaoFocado;
                    LivrosResenhaGrid.TableOptions.SelectionTextColor = Publicas._fonte;
                    LivrosResenhaGrid.BackColor = Publicas._fundo;
                    LivrosResenhaGrid.ForeColor = Publicas._fonte;
                }
                else
                {
                    LivrosResenhaGrid.TableOptions.SelectionBackColor = Publicas._bordaEntrada;
                    LivrosResenhaGrid.TableOptions.SelectionTextColor = Color.WhiteSmoke;
                }
                LivrosResenhaGrid.TableOptions.ListBoxSelectionColorOptions = GridListBoxSelectionColorOptions.ApplySelectionColor;
                LivrosResenhaGrid.Table.DefaultRecordRowHeight = 150;

                _listaLivrosComResenha = new ResenhaLivrosBO().ListarComResenha(true);

                LivrosResenhaGrid.DataSource = _listaLivrosComResenha.Where(w => w.Imagem != null)
                                                                     .OrderBy(o => o.NomeLivro)
                                                                     .OrderByDescending(o => o.Lendo).ToList();
            }

            Publicas._mensagemSistema = "";
            LeituraResenhaLivro.Visible = !LeituraResenhaLivro.Visible;
            AbrirLivros.Cursor = Cursors.Default;

        }

        private void LivrosResenhaGrid_TableControlCellClick(object sender, GridTableControlCellClickEventArgs e)
        {
            try
            {
                int i = LivrosResenhaGrid.Table.CurrentRecord.GetRecord().GetRowIndex();
                GridRecordRow _registro = LivrosResenhaGrid.Table.DisplayElements[i] as GridRecordRow;

                int IdLivro = 0;
                if (_registro != null)
                {
                    Record dr = _registro.GetRecord() as Record;

                    if (dr != null)
                    {
                        IdLivro = Convert.ToInt32(dr["IdLivros"].ToString());

                        foreach (var item in _listaLivrosComResenha.Where(w => w.IdLivros == IdLivro))
                        {
                            _livro = item;
                        }

                        if (_livro != null)
                        {
                            _paginaLivros = 1;
                            richTextBox1.ReadOnly = true;
                            richTextBox1.ScrollBars = RichTextBoxScrollBars.Vertical;

                            try
                            {

                                using (MemoryStream mStream = new MemoryStream())
                                {
                                    mStream.Write(_livro.Imagem, 0, _livro.Imagem.Length);
                                    mStream.Seek(0, SeekOrigin.Begin);

                                    fotoPictureBox.Image = new Bitmap(mStream);
                                }

                                fotoPictureBox.SizeMode = PictureBoxSizeMode.StretchImage;
                                fotoPictureBox.Refresh();
                                fotoPictureBox.BringToFront();
                                richTextBox1.Visible = false;
                                fotoPictureBox.Visible = true;
                                VoltarLabel.Visible = false;
                                AvancarLabel.Visible = true;
                                LerLivroButton.Enabled = _livro.EBook;
                                BaixarArquivoButton.Enabled = _livro.EBook;
                                LivroPDFLabel.Visible = _livro.EBook;
                                LivroFisicoLabel.Visible = _livro.Fisico;
                            }
                            catch
                            {
                                if (_livro.Sinopse != "")
                                {
                                    _paginaLivros = 2;
                                    richTextBox1.Text = Environment.NewLine + Environment.NewLine +
                                                        (Publicas._usuario.Administrador ? _livro.IdLivros.ToString() : "") + _livro.NomeLivro +
                                                        Environment.NewLine + Environment.NewLine +
                                                        _livro.Sinopse;

                                }
                                else
                                {
                                    _paginaLivros = 3;
                                    richTextBox1.Text = Environment.NewLine + Environment.NewLine + "Resenha do " +
                                                        (Publicas._usuario.Administrador ? _livro.IdLivros.ToString() : "") + _livro.NomeLivro +
                                                        Environment.NewLine +
                                                        Environment.NewLine +
                                                        _livro.Resenha;
                                }
                                richTextBox1.Visible = true;
                                fotoPictureBox.Visible = false;
                                VoltarLabel.Visible = false;
                                AvancarLabel.Visible = false;
                            }
                        }
                    }
                }
            }
            catch { }
        }

        private void AvancarLabel_Click(object sender, EventArgs e)
        {
            richTextBox1.Visible = true;
            fotoPictureBox.Visible = false;

            if (_paginaLivros == 1)
            {
                VoltarLabel.Visible = _livro.Imagem != null;
                AvancarLabel.Visible = _livro.Resenha != null;
                richTextBox1.Text = Environment.NewLine + Environment.NewLine +
                    (Publicas._usuario.Administrador ? _livro.IdLivros.ToString() : "") + _livro.NomeLivro +
                    Environment.NewLine + Environment.NewLine +
                    _livro.Sinopse;
            }
            else
            {
                AvancarLabel.Visible = false;
                richTextBox1.Text = Environment.NewLine + Environment.NewLine + "Resenha do " +
                                    (Publicas._usuario.Administrador ? _livro.IdLivros.ToString() : "") + _livro.NomeLivro +
                                    Environment.NewLine +
                                    Environment.NewLine +
                                    _livro.Resenha;
            }
            _paginaLivros++;
        }

        private void VoltarLabel_Click(object sender, EventArgs e)
        {
            if (_paginaLivros == 3 && _livro.Sinopse != "")
            {
                VoltarLabel.Visible = _livro.Imagem != null;
                richTextBox1.Text = Environment.NewLine + Environment.NewLine +
                                    (Publicas._usuario.Administrador ? _livro.IdLivros.ToString() : "") + _livro.NomeLivro +
                                    Environment.NewLine + Environment.NewLine +
                                    _livro.Sinopse;

            }

            if (_paginaLivros == 2 && _livro.Imagem != null)
            {
                richTextBox1.Visible = false;
                fotoPictureBox.Visible = true;
                VoltarLabel.Visible = false;
                AvancarLabel.Visible = true;
            }

            _paginaLivros--;
        }

        private void AbrirLivros_MouseHover(object sender, EventArgs e)
        {
            AbrirLivros.Cursor = Cursors.Hand;
            AbrirLivros.BackColor = _corMenuSelecionado;
        }

        private void AbrirLivros_MouseLeave(object sender, EventArgs e)
        {
            AbrirLivros.Cursor = Cursors.Default;
            AbrirLivros.BackColor = System.Drawing.Color.FromArgb(128, 131, 143);
        }

        private void LivrosResenhaGrid_TableControlCurrentCellKeyUp(object sender, GridTableControlKeyEventArgs e)
        {
            try
            {
                int i = LivrosResenhaGrid.Table.CurrentRecord.GetRecord().GetRowIndex();
                GridRecordRow _registro = LivrosResenhaGrid.Table.DisplayElements[i] as GridRecordRow;

                int IdLivro = 0;
                if (_registro != null)
                {
                    Record dr = _registro.GetRecord() as Record;

                    if (dr != null)
                    {
                        IdLivro = Convert.ToInt32(dr["IdLivros"].ToString());

                        foreach (var item in _listaLivrosComResenha.Where(w => w.IdLivros == IdLivro))
                        {
                            _livro = item;
                        }

                        if (_livro != null)
                        {
                            _paginaLivros = 1;
                            richTextBox1.ReadOnly = true;
                            richTextBox1.ScrollBars = RichTextBoxScrollBars.Vertical;

                            try
                            {

                                using (MemoryStream mStream = new MemoryStream())
                                {
                                    mStream.Write(_livro.Imagem, 0, _livro.Imagem.Length);
                                    mStream.Seek(0, SeekOrigin.Begin);

                                    fotoPictureBox.Image = new Bitmap(mStream);
                                }

                                fotoPictureBox.SizeMode = PictureBoxSizeMode.StretchImage;
                                fotoPictureBox.Refresh();
                                fotoPictureBox.BringToFront();
                                richTextBox1.Visible = false;
                                fotoPictureBox.Visible = true;
                                VoltarLabel.Visible = false;
                                AvancarLabel.Visible = true;

                                LerLivroButton.Enabled = _livro.EBook;
                                BaixarArquivoButton.Enabled = _livro.EBook;
                                LivroPDFLabel.Visible = _livro.EBook;
                                LivroFisicoLabel.Visible = _livro.Fisico;
                            }
                            catch
                            {
                                if (_livro.Sinopse != "")
                                {
                                    _paginaLivros = 2;
                                    richTextBox1.Text = Environment.NewLine + Environment.NewLine +
                                                        _livro.NomeLivro +
                                                        Environment.NewLine + Environment.NewLine +
                                                        _livro.Sinopse;

                                }
                                else
                                {
                                    _paginaLivros = 3;
                                    richTextBox1.Text = Environment.NewLine + Environment.NewLine + "Resenha do " +
                                                        _livro.NomeLivro +
                                                        Environment.NewLine +
                                                        Environment.NewLine +
                                                        _livro.Resenha;
                                }
                                richTextBox1.Visible = true;
                                fotoPictureBox.Visible = false;
                                VoltarLabel.Visible = false;
                                AvancarLabel.Visible = false;
                            }

                        }
                    }
                }
            }
            catch { }
        }

        private void reservarToolStripMenuItem_Click(object sender, EventArgs e)
        {
            int IdLivro = 0;

            try
            {
                int i = LivrosResenhaGrid.Table.CurrentRecord.GetRecord().GetRowIndex();
                GridRecordRow _registro = LivrosResenhaGrid.Table.DisplayElements[i] as GridRecordRow;

                if (_registro != null)
                {
                    Record dr = _registro.GetRecord() as Record;

                    if (dr != null)
                    {
                        IdLivro = Convert.ToInt32(dr["IdLivros"].ToString());
                    }
                }
            }
            catch
            {
                return;
            }

            LeituraResenhaLivro.Visible = false;
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaBiblioteca;
            Biblioteca.Reserva _tela = new Biblioteca.Reserva();
            _tela.codigoTextBox.Text = IdLivro.ToString();
            _tela.ColaboradorTextBox.Text = Publicas._idColaborador.ToString();

            _tela.ShowDialog();
            NomePadrao();
        }

        private void LerLivroButton_Click(object sender, EventArgs e)
        {
            string _nomeArquivo = "";
            string local = @"c:\portalNiff\Ebook\";

            if (Environment.MachineName.ToUpper().Contains("CORPTS") || Environment.MachineName.ToUpper().Contains("CORPRDP"))
            {
                local = @"d:\portalNiff\Ebook\";
            }

            if (_livro != null)
            {
                if (_livro.LocalArmazenamento == "")
                {
                    Classes.Ebook _ebook = new LivrosBO().ConsultaEbook(_livro.IdLivros);
                    try
                    {
                        if (!System.IO.Directory.Exists(local))
                            System.IO.Directory.CreateDirectory(local);

                        using (FileStream fs = new FileStream
                                            (local + _livro.NomeArquivo + ".pdf", FileMode.Create, FileAccess.Write))
                        {
                            fs.Write(_ebook.Arquivo, 0, _ebook.Arquivo.Length);
                        }
                    }
                    catch { }

                    _nomeArquivo = local + _livro.NomeArquivo + ".pdf";
                }
                else
                {
                    if (_livro.LocalArmazenamento != "")
                        _nomeArquivo = _livro.LocalArmazenamento;
                }

                Publicas._idLivro = _livro.IdLivros;
                Publicas._chamouPelaTeladeLivros = false;
                Biblioteca.Leitor _tela = new Biblioteca.Leitor();
                _tela._arquivo = _nomeArquivo;
                _tela.Show();

                EmprestimoLivros _emprestimo = new EmprestimoLivrosBO().Consultar(Publicas._idLivro, Publicas._idColaborador);

                if (!_emprestimo.Existe)
                {
                    _emprestimo.IdLivro = Publicas._idLivro;
                    _emprestimo.IdColaborador = Publicas._idColaborador;
                    _emprestimo.Data = DateTime.Now;
                    _emprestimo.DataDevolucao = _emprestimo.Data.AddDays(30);
                    _emprestimo.QuantidadeDiasEmprestimo = 30;
                    _emprestimo.Ebook = true;

                    if (!new EmprestimoLivrosBO().Gravar(_emprestimo))
                    {
                        new Notificacoes.Mensagem("Problemas durante a gravação." + Environment.NewLine + Publicas.mensagemDeErro, Publicas.TipoMensagem.Erro).ShowDialog();
                        return;
                    }

                    new LivrosBO().AtualizaQuantidadeDownload(Publicas._idLivro);

                }

                _leitura = new LivrosBO().ConsultarLeitura(Publicas._idLivro);

                if (!_leitura.Existe)
                {
                    _leitura.IdColaborador = Publicas._idColaborador;
                    _leitura.IdLivros = Publicas._idLivro;
                    _leitura.Pagina = 1;
                    _leitura.DataDownLoad = DateTime.Now;
                    _leitura.EfetuouDownLoad = true;
                    _leitura.UltimoAcesso = DateTime.Now;

                    new LivrosBO().GravarLeitura(_leitura);
                }
            }
        }

        private void BaixarArquivoButton_Click(object sender, EventArgs e)
        {
            if (_livro != null)
            {
                Publicas._idLivro = _livro.IdLivros;
                string local = @"c:\portalNiff\Ebook\";

                if (Environment.MachineName.ToUpper().Contains("CORPTS") || Environment.MachineName.ToUpper().Contains("CORPRDP"))
                {
                    local = @"d:\portalNiff\Ebook\";
                }

                EmprestimoLivros _emprestimo = new EmprestimoLivrosBO().Consultar(Publicas._idLivro, Publicas._idColaborador);
                if (!_emprestimo.Existe)
                {

                    if (_livro.LocalArmazenamento == "")
                    {
                        Classes.Ebook _ebook = new LivrosBO().ConsultaEbook(_livro.IdLivros);
                        try
                        {
                            if (!System.IO.Directory.Exists(local))
                                System.IO.Directory.CreateDirectory(local);

                            using (FileStream fs = new FileStream
                                                (local + _livro.NomeArquivo, FileMode.Create, FileAccess.Write))
                            {
                                fs.Write(_ebook.Arquivo, 0, _ebook.Arquivo.Length);
                            }
                        }
                        catch { }
                    }
                    else
                    {
                        if (_livro.LocalArmazenamento != "")
                        {
                            File.Copy(_livro.LocalArmazenamento, local + _livro.NomeArquivo);
                        }
                    }

                    new Notificacoes.Mensagem("Arquivo baixado com sucesso." + Environment.NewLine +
                        local + _livro.NomeArquivo + Environment.NewLine +
                         Environment.NewLine + "Boa leitura"
                        , Publicas.TipoMensagem.Sucesso).ShowDialog();

                    _emprestimo.IdLivro = Publicas._idLivro;
                    _emprestimo.IdColaborador = Publicas._idColaborador;
                    _emprestimo.Data = DateTime.Now;
                    _emprestimo.DataDevolucao = _emprestimo.Data.AddDays(30);
                    _emprestimo.QuantidadeDiasEmprestimo = 30;
                    _emprestimo.Ebook = true;

                    if (!new EmprestimoLivrosBO().Gravar(_emprestimo))
                    {
                        new Notificacoes.Mensagem("Problemas durante a gravação." + Environment.NewLine + Publicas.mensagemDeErro, Publicas.TipoMensagem.Erro).ShowDialog();
                        return;
                    }

                    new LivrosBO().AtualizaQuantidadeDownload(Publicas._idLivro);

                    //string[] _dadosEmail = new string[50];

                    //_dadosEmail[0] = _livro.NomeLivro;
                    //_dadosEmail[1] = "Download efetuado.";
                    //_dadosEmail[2] = "A data para a devolução é <b>" + _emprestimo.DataDevolucao.ToShortDateString() + "</b>. ";
                    //_dadosEmail[4] = new LivrosBO().QuantidadeLivros(false).ToString();
                    //_dadosEmail[5] = new LivrosBO().Sugestoes(false);
                    //_dadosEmail[6] = new LivrosBO().QuantidadeLivros(true).ToString();
                    //_dadosEmail[7] = new LivrosBO().Sugestoes(true);

                    //List<ResenhaLivros> _pontos = new ResenhaLivrosBO().ListarPontuacao();

                    //int classificacao = 0;
                    //int _pontuacao = 0;
                    //Colaboradores _colaborador = new ColaboradoresBO().ConsultaColaborador(Publicas._idColaborador);

                    //foreach (var item in _pontos.OrderBy(o => o.Classificacao))
                    //{
                    //    if (item.NomeColaborador == _colaborador.Nome)
                    //    {
                    //        classificacao = item.Classificacao;
                    //        _pontuacao = item.Pontuacao;
                    //        break;
                    //    }
                    //}

                    //if (classificacao != 0)
                    //    _dadosEmail[8] = "Você está em <b>" + classificacao.ToString() + "º</b> lugar com <b>" + _pontuacao.ToString() + "</b> pontos.";
                    //else
                    //    _dadosEmail[8] = "Você ainda não possui pontuação.";

                    //Publicas.EnviarEmailBiblioteca(_dadosEmail, new ColaboradoresBO().EmailDoColaborado(_colaborador.Id), 
                    //                                            new ColaboradoresBO().EmailAdministradorBiblioteca());
                }

                _leitura = new LivrosBO().ConsultarLeitura(Publicas._idLivro);

                if (!_leitura.Existe)
                {
                    Publicas._idLivro = _livro.IdLivros;
                    Publicas._chamouPelaTeladeLivros = false;
                    Biblioteca.Leitor _tela = new Biblioteca.Leitor();
                    _tela._arquivo = _livro.NomeArquivo;


                    _leitura.IdColaborador = Publicas._idColaborador;
                    _leitura.IdLivros = Publicas._idLivro;
                    _leitura.Pagina = 1;
                    _leitura.Pagina = _tela.pdfViewerControl.CurrentPageIndex;
                    _leitura.DataDownLoad = DateTime.Now;
                    _leitura.EfetuouDownLoad = true;

                    _tela.Close();

                    new LivrosBO().GravarLeitura(_leitura);
                }
            }
        }
        #endregion

        #region Ramais
        private void RamaisLabel_MouseHover(object sender, EventArgs e)
        {
            RamaisLlabel.Cursor = Cursors.Hand;
            RamaisLlabel.BackColor = _corMenuSelecionado;
        }

        private void RamaisLabel_MouseLeave(object sender, EventArgs e)
        {
            RamaisLlabel.Cursor = Cursors.Default;
            RamaisLlabel.BackColor = System.Drawing.Color.FromArgb(128, 131, 143);
        }

        private void RamaisLlabel_Click(object sender, EventArgs e)
        {
            TemaPanel.Visible = false;
            FechaSubMenuBolao();
            LeituraResenhaLivro.Visible = false;
            ApostasPanel.Visible = false;

            if (MostraNotificacoesPanel.Visible)
            {
                MostraNotificacoesPanel.Visible = false;
                LimpaComponentesNotificacao();
                return;
            }

            ConsultaRamaisPanel.Dock = DockStyle.Right;
            ConsultaRamaisPanel.Size = new Size(350, 0);
            DashBoardPanel.Size = new Size(25, 0);
            BotaoDashboardLabel.Text = "7";


            //if (ComunicadoDashBoardPanel != null)
            //{
            //    ComunicadosTabPage.Controls.Remove(ComunicadoDashBoardPanel);
            //    StatusComunicadosDashBoardComboBox.Dispose();
            //    AnoComunicadosDashBoardComboBox.Dispose();
            //    ComunicadoDashBoardPanel.Dispose();
            //}
            //if (SacDashBoardPanel != null)
            //{
            //    SACTabPage.Controls.Remove(SacDashBoardPanel);
            //    StatusSACDashBoardComboBox.Dispose();
            //    AnoSACDashBoardComboBox.Dispose();
            //    SacDashBoardPanel.Dispose();
            //}

            #region Configura grid
            filter.WireGrid(RamaisGrid);

            RamaisGrid.GridOfficeScrollBars = Syncfusion.Windows.Forms.OfficeScrollBars.Metro;
            RamaisGrid.ActivateCurrentCellBehavior = Syncfusion.Windows.Forms.Grid.GridCellActivateAction.SetCurrent;
            RamaisGrid.DefaultGridBorderStyle = Syncfusion.Windows.Forms.Grid.GridBorderStyle.Solid;
            RamaisGrid.ShowNavigationBar = false;
            RamaisGrid.GridVisualStyles = Syncfusion.Windows.Forms.GridVisualStyles.Metro;
            RamaisGrid.ShowRowHeaders = false;
            RamaisGrid.TopLevelGroupOptions.ShowCaption = false;
            RamaisGrid.TableDescriptor.AllowEdit = false;
            RamaisGrid.TableDescriptor.AllowNew = false;
            RamaisGrid.TableDescriptor.AllowRemove = false;

            RamaisGrid.SortIconPlacement = SortIconPlacement.Left;
            RamaisGrid.TopLevelGroupOptions.ShowFilterBar = true;
            RamaisGrid.TableOptions.ListBoxSelectionMode = SelectionMode.One;
            RamaisGrid.TopLevelGroupOptions.ShowAddNewRecordBeforeDetails = false;
            RamaisGrid.TableControl.CellToolTip.Active = true;
            RamaisGrid.SetMetroStyle(metroColor);
            RamaisGrid.RecordNavigationBar.Label = "Ramais";

            RamaisGrid.TableOptions.ListBoxSelectionCurrentCellOptions = GridListBoxSelectionCurrentCellOptions.HideCurrentCell;
            if (Publicas._TemaBlack)
            {

                RamaisGrid.GridOfficeScrollBars = OfficeScrollBars.Office2010;
                RamaisGrid.ColorStyles = ColorStyles.Office2010Black;
                RamaisGrid.GridVisualStyles = GridVisualStyles.Office2016Black;
                RamaisGrid.BackColor = Publicas._panelTitulo;

                RamaisGrid.TableOptions.SelectionBackColor = Publicas._botaoFocado;
                RamaisGrid.TableOptions.SelectionTextColor = Publicas._fonte;
                RamaisGrid.BackColor = Publicas._fundo;
                RamaisGrid.ForeColor = Publicas._fonte;
            }
            else
            {
                RamaisGrid.TableOptions.SelectionBackColor = Publicas._bordaEntrada;
                RamaisGrid.TableOptions.SelectionTextColor = Color.WhiteSmoke;
            }
            RamaisGrid.TableOptions.ListBoxSelectionColorOptions = GridListBoxSelectionColorOptions.ApplySelectionColor;

            #endregion
            if (!ConsultaRamaisPanel.Visible)
            {
                _ramais = new RamaisBO().ListarRamais();
                SetorRamalComboBox.Items.Clear();
                EmpresaRamalComboBox.Items.Clear();
                EmpresaRamalComboBox.Items.Add("Selecione");
                RamaisGrid.DataSource = new List<Classes.LocalizaRamais>();
                foreach (var item in _ramais.OrderBy(o => o.Empresa).GroupBy(g => g.Empresa).Select(s => s.Key))
                {
                    EmpresaRamalComboBox.Items.Add(item);
                }

                EmpresaRamalComboBox.SelectedIndex = 0;
                EmpresaRamalComboBox.Focus();
            }
            ConsultaRamaisPanel.BringToFront();
            ConsultaRamaisPanel.Visible = !ConsultaRamaisPanel.Visible;
        }

        private void EmpresaRamalComboBox_SelectedIndexChanged(object sender, EventArgs e)
        {
            SetorRamalComboBox.Items.Clear();
            SetorRamalComboBox.Items.Add("Selecione");
            foreach (var item in _ramais.OrderBy(o => o.Grupo).GroupBy(g => new { g.Grupo, g.Empresa })
                .Select(s => new { Grupo = s.Key.Grupo, Empresa = s.Key.Empresa })
                .Where(w => w.Empresa == EmpresaRamalComboBox.Text))
            {
                SetorRamalComboBox.Items.Add(item.Grupo);
            }
            SetorRamalComboBox.SelectedIndex = 0;
        }

        private void SetorRamalComboBox_SelectedIndexChanged(object sender, EventArgs e)
        {
            RamaisGrid.DataSource = _ramais.Where(w => w.Empresa == EmpresaRamalComboBox.Text &&
                                                       w.Grupo == SetorRamalComboBox.Text).ToList();
        }

        private void EmpresaRamalComboBox_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.Enter || e.KeyCode == Keys.Return)
                SetorRamalComboBox.Focus();
            Publicas._escTeclado = false;
            if (e.KeyCode == Keys.Escape)
            {
                Publicas._escTeclado = true;
                EmpresaRamalComboBox.Focus();
            }
        }

        private void SetorRamalComboBox_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.Enter || e.KeyCode == Keys.Return)
                SetorRamalComboBox.Focus();
            Publicas._escTeclado = false;
            if (e.KeyCode == Keys.Escape)
            {
                Publicas._escTeclado = true;
                EmpresaRamalComboBox.Focus();
            }
        }

        private void EmpresaRamalComboBox_Enter(object sender, EventArgs e)
        {
            ((ComboBoxAdv)sender).FlatBorderColor = Publicas._bordaEntrada;
        }

        private void EmpresaRamalComboBox_Validating(object sender, CancelEventArgs e)
        {
            ((ComboBoxAdv)sender).FlatBorderColor = Publicas._bordaSaida;
        }
        #endregion

        #region Enquete
        private void EnquetePictureBox_Click(object sender, EventArgs e)
        {
            FechaSubMenuBolao();
            LeituraResenhaLivro.Visible = false;
            ApostasPanel.Visible = false;

            EnquetePanel.Dock = DockStyle.Right;
            EnquetePanel.Size = new Size(434, 0);
            DashBoardPanel.Size = new Size(25, 0);
            BotaoDashboardLabel.Text = "7";
            //if (ComunicadoDashBoardPanel != null)
            //{
            //    ComunicadosTabPage.Controls.Remove(ComunicadoDashBoardPanel);
            //    StatusComunicadosDashBoardComboBox.Dispose();
            //    AnoComunicadosDashBoardComboBox.Dispose();
            //    ComunicadoDashBoardPanel.Dispose();
            //}
            //if (SacDashBoardPanel != null)
            //{
            //    SACTabPage.Controls.Remove(SacDashBoardPanel);
            //    StatusSACDashBoardComboBox.Dispose();
            //    AnoSACDashBoardComboBox.Dispose();
            //    SacDashBoardPanel.Dispose();
            //}

            EnquetePanel.BringToFront();
            EnquetePanel.Visible = !EnquetePanel.Visible;
            buttonAdv1.Visible = !new BolaoEnqueteBO().Consultar(Publicas._idColaborador);

            comboBoxAdv1.Enabled = Publicas._usuario.ParticipaBolaoCopa;
            checkBoxAdv1.Enabled = Publicas._usuario.ParticipaBolaoCopa;
            checkBoxAdv2.Enabled = Publicas._usuario.ParticipaBolaoCopa;
            checkBoxAdv3.Enabled = Publicas._usuario.ParticipaBolaoCopa;
            checkBoxAdv4.Enabled = Publicas._usuario.ParticipaBolaoCopa;

            if (!buttonAdv1.Visible)
            {
                List<BolaoEnquete> _lista = new BolaoEnqueteBO().Listar(Publicas._idColaborador);

                foreach (var item in _lista.OrderBy(o => o.IdPergunta))
                {
                    if (item.IdPergunta.Equals(1))
                        comboBoxAdv1.Text = (item.Opcao.Equals("S") ? "Sim" : "Não");

                    if (item.IdPergunta.Equals(3))
                        checkBoxAdv1.Checked = item.Opcao.Equals("S");

                    if (item.IdPergunta.Equals(4))
                        checkBoxAdv2.Checked = item.Opcao.Equals("S");

                    if (item.IdPergunta.Equals(5))
                        checkBoxAdv3.Checked = item.Opcao.Equals("S");

                    if (item.IdPergunta.Equals(6))
                        checkBoxAdv4.Checked = item.Opcao.Equals("S");

                    if (item.IdPergunta.Equals(7))
                    {
                        comboBoxAdv2.Text = (item.Opcao.Equals("S") ? "Sim" : "Não");
                        comentarioTextBox.Text = item.Sugestao;
                    }
                }

                #region Mostrar Grafico
                int[] _qtd = new BolaoEnqueteBO().QuantidadeGostouBolao();
                progressBarAdv1.Maximum = _qtd[2];
                progressBarAdv1.Value = _qtd[0];
                progressBarAdv1.Visible = true;

                _qtd = new BolaoEnqueteBO().QuantidadeMudarDivisaoPremiacao();
                progressBarAdv2.Maximum = _qtd[2];
                progressBarAdv2.Value = _qtd[0];
                progressBarAdv2.Visible = true;

                _qtd = new BolaoEnqueteBO().QuantidadeMudarPontuacao();
                progressBarAdv3.Maximum = _qtd[2];
                progressBarAdv3.Value = _qtd[0];
                progressBarAdv3.Visible = true;

                _qtd = new BolaoEnqueteBO().QuantidadeMudarArtilheiro();
                progressBarAdv4.Maximum = _qtd[2];
                progressBarAdv4.Value = _qtd[0];
                progressBarAdv4.Visible = true;

                _qtd = new BolaoEnqueteBO().QuantidadeMudarPlacarInverso();
                progressBarAdv5.Maximum = _qtd[2];
                progressBarAdv5.Value = _qtd[0];
                progressBarAdv5.Visible = true;

                _qtd = new BolaoEnqueteBO().QuantidadeParticipantes();
                progressBarAdv6.Maximum = _qtd[2];
                progressBarAdv6.Value = _qtd[0];
                progressBarAdv6.Visible = true;

                #endregion
            }
        }

        private void label21_Click(object sender, EventArgs e)
        {
            axWindowsMediaPlayer.URL = @"Imagens\Video_MarioKart.mp4";
        }

        private void label22_Click(object sender, EventArgs e)
        {
            axWindowsMediaPlayer.URL = @"Imagens\Video_ARMS.mp4";
        }

        private void label23_Click(object sender, EventArgs e)
        {
            axWindowsMediaPlayer.URL = @"Imagens\Video_Pinball_mesa1.wmv";
        }

        private void label24_Click(object sender, EventArgs e)
        {
            axWindowsMediaPlayer.URL = @"Imagens\Video_Pinball_mesa2.wmv";
        }

        private void label25_Click(object sender, EventArgs e)
        {
            axWindowsMediaPlayer.URL = @"Imagens\Video_Pinball_mesa3.wmv";
        }

        private void label26_Click(object sender, EventArgs e)
        {
            axWindowsMediaPlayer.URL = @"Imagens\Video_Pinball_mesa4.wmv";
        }

        private void buttonAdv1_Click(object sender, EventArgs e)
        {
            #region Gravar
            BolaoEnquete _enquete = new BolaoEnquete();

            if (Publicas._usuario.ParticipaBolaoCopa)
            {
                _enquete.IdColaborador = Publicas._idColaborador;
                _enquete.IdPergunta = Convert.ToInt32(comboBoxAdv1.Tag);
                _enquete.Opcao = comboBoxAdv1.Text.ToUpper().Substring(0, 1);

                new BolaoEnqueteBO().Grava(_enquete);

                _enquete = new BolaoEnquete();

                _enquete.IdColaborador = Publicas._idColaborador;
                _enquete.IdPergunta = Convert.ToInt32(checkBoxAdv1.Tag);
                _enquete.Opcao = (checkBoxAdv1.Checked ? "S" : "N");

                new BolaoEnqueteBO().Grava(_enquete);

                _enquete = new BolaoEnquete();

                _enquete.IdColaborador = Publicas._idColaborador;
                _enquete.IdPergunta = Convert.ToInt32(checkBoxAdv2.Tag);
                _enquete.Opcao = (checkBoxAdv2.Checked ? "S" : "N");

                new BolaoEnqueteBO().Grava(_enquete);

                _enquete = new BolaoEnquete();

                _enquete.IdColaborador = Publicas._idColaborador;
                _enquete.IdPergunta = Convert.ToInt32(checkBoxAdv3.Tag);
                _enquete.Opcao = (checkBoxAdv3.Checked ? "S" : "N");

                new BolaoEnqueteBO().Grava(_enquete);

                _enquete = new BolaoEnquete();

                _enquete.IdColaborador = Publicas._idColaborador;
                _enquete.IdPergunta = Convert.ToInt32(checkBoxAdv4.Tag);
                _enquete.Opcao = (checkBoxAdv4.Checked ? "S" : "N");

                new BolaoEnqueteBO().Grava(_enquete);

                _enquete = new BolaoEnquete();
            }

            _enquete.IdColaborador = Publicas._idColaborador;
            _enquete.IdPergunta = Convert.ToInt32(comboBoxAdv2.Tag);
            _enquete.Opcao = comboBoxAdv2.Text.ToUpper().Substring(0, 1);
            _enquete.Sugestao = comentarioTextBox.Text;

            new BolaoEnqueteBO().Grava(_enquete);
            #endregion

            #region Mostrar Grafico
            int[] _qtd = new BolaoEnqueteBO().QuantidadeGostouBolao();
            progressBarAdv1.Maximum = _qtd[2];
            progressBarAdv1.Value = _qtd[0];
            progressBarAdv1.Visible = true;

            _qtd = new BolaoEnqueteBO().QuantidadeMudarDivisaoPremiacao();
            progressBarAdv2.Maximum = _qtd[2];
            progressBarAdv2.Value = _qtd[0];
            progressBarAdv2.Visible = true;

            _qtd = new BolaoEnqueteBO().QuantidadeMudarPontuacao();
            progressBarAdv3.Maximum = _qtd[2];
            progressBarAdv3.Value = _qtd[0];
            progressBarAdv3.Visible = true;

            _qtd = new BolaoEnqueteBO().QuantidadeMudarArtilheiro();
            progressBarAdv4.Maximum = _qtd[2];
            progressBarAdv4.Value = _qtd[0];
            progressBarAdv4.Visible = true;

            _qtd = new BolaoEnqueteBO().QuantidadeMudarPlacarInverso();
            progressBarAdv5.Maximum = _qtd[2];
            progressBarAdv5.Value = _qtd[0];
            progressBarAdv5.Visible = true;

            _qtd = new BolaoEnqueteBO().QuantidadeParticipantes();
            progressBarAdv6.Maximum = _qtd[2];
            progressBarAdv6.Value = _qtd[0];
            progressBarAdv6.Visible = true;

            #endregion
            buttonAdv1.Visible = false;
        }

        private void label21_MouseHover(object sender, EventArgs e)
        {
            ((Label)sender).Font = new Font(((Label)sender).Font, FontStyle.Underline);
            ((Label)sender).Cursor = Cursors.Hand;
        }

        private void label21_MouseLeave(object sender, EventArgs e)
        {
            ((Label)sender).Font = new Font(((Label)sender).Font, ((Label)sender).Font.Style & ~FontStyle.Underline);
            ((Label)sender).Cursor = Cursors.Default;
        }

        #endregion

        #region Torneio
        private void TorneioPictureBox_Click(object sender, EventArgs e)
        {
            LeituraResenhaLivro.Visible = false;
            TemaPanel.Visible = false;
            ApostasPanel.Visible = false;
            ConsultaRamaisPanel.Visible = false;

            DashBoardPanel.Size = new Size(25, 0);
            BotaoDashboardLabel.Text = "7";
            
            //if (ComunicadoDashBoardPanel != null)
            //{
            //    ComunicadosTabPage.Controls.Remove(ComunicadoDashBoardPanel);
            //    StatusComunicadosDashBoardComboBox.Dispose();
            //    AnoComunicadosDashBoardComboBox.Dispose();
            //    ComunicadoDashBoardPanel.Dispose();
            //}
            //if (SacDashBoardPanel != null)
            //{
            //    SACTabPage.Controls.Remove(SacDashBoardPanel);
            //    StatusSACDashBoardComboBox.Dispose();
            //    AnoSACDashBoardComboBox.Dispose();
            //    SacDashBoardPanel.Dispose();
            //}
            List<Classes.Participantes> _listaApostas = new List<Classes.Participantes>();
            List<AgendaTorneio> _listaAgendaTorneio = new List<AgendaTorneio>();

            ResultadoTorneioPanel.Size = new Size(431, 0);
            ResultadoTorneioPanel.BringToFront();
            ResultadoTorneioPanel.Dock = DockStyle.Right;
            filter.WireGrid(ResultadoTorneioGrid);

            if (!ResultadoTorneioPanel.Visible)
            {
                _listaApostas = new TorneioBO().ListarClassificacao();
                _listaAgendaTorneio = new TorneioBO().ListarPartidas();

                #region Feminino
                ResultadoTorneioGrid.SortIconPlacement = SortIconPlacement.Left;
                ResultadoTorneioGrid.TableOptions.ListBoxSelectionMode = SelectionMode.One;
                ResultadoTorneioGrid.TopLevelGroupOptions.ShowAddNewRecordBeforeDetails = false;
                ResultadoTorneioGrid.TableControl.CellToolTip.Active = true;

                // para permitir editar dados.
                ResultadoTorneioGrid.TableOptions.ListBoxSelectionCurrentCellOptions = GridListBoxSelectionCurrentCellOptions.HideCurrentCell;

                if (!Publicas._TemaBlack)
                {
                    ResultadoTorneioGrid.SetMetroStyle(metroColor);  
                    ResultadoTorneioGrid.TableOptions.SelectionBackColor = Publicas._bordaEntrada;
                    ResultadoTorneioGrid.TableOptions.SelectionTextColor = Color.WhiteSmoke;
                    ResultadoTorneioGrid.BackColor = backGroundOriginal;
                    ResultadoTorneioGrid.GridOfficeScrollBars = Syncfusion.Windows.Forms.OfficeScrollBars.Metro;
                    ResultadoTorneioGrid.GridVisualStyles = Syncfusion.Windows.Forms.GridVisualStyles.Metro;
                }
                else
                {
                    ResultadoTorneioGrid.GridOfficeScrollBars = OfficeScrollBars.Office2010;
                    ResultadoTorneioGrid.ColorStyles = ColorStyles.Office2010Black;
                    ResultadoTorneioGrid.GridVisualStyles = GridVisualStyles.Office2016Black;
                    ResultadoTorneioGrid.BackColor = Publicas._panelTitulo;
                }

                ResultadoTorneioGrid.TableOptions.ListBoxSelectionColorOptions = GridListBoxSelectionColorOptions.ApplySelectionColor;


                ResultadoTorneioGrid.DataSource = _listaApostas.Where(w => w.Sexo == "Feminino").ToList();
                ResultadoTorneioGrid.TopLevelGroupOptions.ShowFilterBar = false;

                for (int i = 0; i < ResultadoTorneioGrid.TableDescriptor.Relations.Count; i++)
                {

                    ResultadoTorneioGrid.TableDescriptor.Relations[i].ChildTableDescriptor.TableOptions.RecordRowHeight = 50;
                    ResultadoTorneioGrid.TableDescriptor.Relations[i].ChildTableDescriptor.TableOptions.ShowRowHeader = false;

                    for (int j = 0; j < ResultadoTorneioGrid.TableDescriptor.Relations[i].ChildTableDescriptor.Columns.Count; j++)
                    {
                        ResultadoTorneioGrid.TableDescriptor.Relations[i].ChildTableDescriptor.Columns[i].AllowFilter = false;
                        ResultadoTorneioGrid.TableDescriptor.Relations[i].ChildTableDescriptor.Columns[i].FilterRowOptions.AllowCustomFilter = false;
                        ResultadoTorneioGrid.TableDescriptor.Relations[i].ChildTableDescriptor.Columns[i].FilterRowOptions.AllowEmptyFilter = false;
                        ResultadoTorneioGrid.TableDescriptor.Relations[i].ChildTableDescriptor.Columns[j].Appearance.AnyRecordFieldCell.Font = new GridFontInfo(new Font(dataHoraLabel.Font.FontFamily, (float)8, FontStyle.Regular));

                        if (ResultadoTorneioGrid.TableDescriptor.Relations[i].ChildTableDescriptor.Columns[j].MappingName != "Torneio" &&
                            !ResultadoTorneioGrid.TableDescriptor.Relations[i].ChildTableDescriptor.Columns[j].MappingName.StartsWith("Round") &&
                            ResultadoTorneioGrid.TableDescriptor.Relations[i].ChildTableDescriptor.Columns[j].MappingName != "Total" &&
                            ResultadoTorneioGrid.TableDescriptor.Relations[i].ChildTableDescriptor.Columns[j].MappingName != "Data")

                            ResultadoTorneioGrid.TableDescriptor.Relations[i].ChildTableDescriptor.VisibleColumns.Remove(ResultadoTorneioGrid.TableDescriptor.Relations[i].ChildTableDescriptor.Columns[j].MappingName);
                        else
                        {
                            ResultadoTorneioGrid.TableDescriptor.Relations[i].ChildTableDescriptor.Columns[j].Appearance.AnyRecordFieldCell.VerticalAlignment = GridVerticalAlignment.Middle;
                            ResultadoTorneioGrid.TableDescriptor.Relations[i].ChildTableDescriptor.Columns[j].Appearance.ColumnHeaderCell.HorizontalAlignment = GridHorizontalAlignment.Left;

                            if (ResultadoTorneioGrid.TableDescriptor.Relations[i].ChildTableDescriptor.Columns[j].MappingName.StartsWith("Torneio"))
                                ResultadoTorneioGrid.TableDescriptor.Relations[i].ChildTableDescriptor.Columns[j].Width = 150;

                            if (ResultadoTorneioGrid.TableDescriptor.Relations[i].ChildTableDescriptor.Columns[j].MappingName.StartsWith("Round"))
                            {
                                ResultadoTorneioGrid.TableDescriptor.Relations[i].ChildTableDescriptor.Columns[j].HeaderText = ResultadoTorneioGrid.TableDescriptor.Relations[i].ChildTableDescriptor.Columns[j].MappingName.Replace("Round", "");
                                ResultadoTorneioGrid.TableDescriptor.Relations[i].ChildTableDescriptor.Columns[j].Width = 40;
                                ResultadoTorneioGrid.TableDescriptor.Relations[i].ChildTableDescriptor.Columns[j].Appearance.ColumnHeaderCell.HorizontalAlignment = GridHorizontalAlignment.Right;
                                ResultadoTorneioGrid.TableDescriptor.Relations[i].ChildTableDescriptor.Columns[j].Appearance.AnyRecordFieldCell.HorizontalAlignment = GridHorizontalAlignment.Right;
                            }
                            if (ResultadoTorneioGrid.TableDescriptor.Relations[i].ChildTableDescriptor.Columns[j].MappingName.StartsWith("Total"))
                            {
                                ResultadoTorneioGrid.TableDescriptor.Relations[i].ChildTableDescriptor.Columns[j].Appearance.ColumnHeaderCell.HorizontalAlignment = GridHorizontalAlignment.Right;
                                ResultadoTorneioGrid.TableDescriptor.Relations[i].ChildTableDescriptor.Columns[j].Appearance.AnyRecordFieldCell.HorizontalAlignment = GridHorizontalAlignment.Right;
                            }
                            if (ResultadoTorneioGrid.TableDescriptor.Relations[i].ChildTableDescriptor.Columns[j].MappingName.StartsWith("Data"))
                            {
                                ResultadoTorneioGrid.TableDescriptor.Relations[i].ChildTableDescriptor.FrozenColumn = "Data";
                                ResultadoTorneioGrid.TableDescriptor.Relations[i].ChildTableDescriptor.Columns[j].Appearance.AnyRecordFieldCell.Font = new GridFontInfo(new Font(dataHoraLabel.Font.FontFamily, (float)8, FontStyle.Bold));
                                try
                                {
                                    ResultadoTorneioGrid.TableDescriptor.Relations[i].ChildTableDescriptor.SortedColumns.Add("Data");
                                }
                                catch { }
                                ResultadoTorneioGrid.TableDescriptor.Relations[i].ChildTableDescriptor.Columns[j].Appearance.ColumnHeaderCell.HorizontalAlignment = GridHorizontalAlignment.Center;
                                ResultadoTorneioGrid.TableDescriptor.Relations[i].ChildTableDescriptor.Columns[j].Appearance.AnyRecordFieldCell.HorizontalAlignment = GridHorizontalAlignment.Center;
                                ResultadoTorneioGrid.TableDescriptor.Relations[i].ChildTableDescriptor.Columns[j].Appearance.AnyRecordFieldCell.VerticalAlignment = GridVerticalAlignment.Middle;
                                ResultadoTorneioGrid.TableDescriptor.Relations[i].ChildTableDescriptor.Columns[j].Appearance.AnyRecordFieldCell.ShowButtons = GridShowButtons.Hide;
                                ResultadoTorneioGrid.TableDescriptor.Relations[i].ChildTableDescriptor.Columns[j].Appearance.AnyRecordFieldCell.Format = "d";
                                ResultadoTorneioGrid.TableDescriptor.Relations[i].ChildTableDescriptor.Columns[j].Width = 70;
                            }
                        }
                    }
                }
                #endregion

                #region Masculino
                ResultadoTorneioGrid2.SortIconPlacement = SortIconPlacement.Left;
                ResultadoTorneioGrid2.TableOptions.ListBoxSelectionMode = SelectionMode.One;
                ResultadoTorneioGrid2.TopLevelGroupOptions.ShowAddNewRecordBeforeDetails = false;
                ResultadoTorneioGrid2.TableControl.CellToolTip.Active = true;

                // para permitir editar dados.
                ResultadoTorneioGrid2.TableOptions.ListBoxSelectionCurrentCellOptions = GridListBoxSelectionCurrentCellOptions.HideCurrentCell;

                if (!Publicas._TemaBlack)
                {
                    ResultadoTorneioGrid2.SetMetroStyle(metroColor);
                    ResultadoTorneioGrid2.TableOptions.SelectionBackColor = Publicas._bordaEntrada;
                    ResultadoTorneioGrid2.TableOptions.SelectionTextColor = Color.WhiteSmoke;
                    ResultadoTorneioGrid2.BackColor = backGroundOriginal;
                    ResultadoTorneioGrid2.GridOfficeScrollBars = Syncfusion.Windows.Forms.OfficeScrollBars.Metro;
                    ResultadoTorneioGrid2.GridVisualStyles = Syncfusion.Windows.Forms.GridVisualStyles.Metro;
                }
                else
                {
                    ResultadoTorneioGrid2.GridOfficeScrollBars = OfficeScrollBars.Office2010;
                    ResultadoTorneioGrid2.ColorStyles = ColorStyles.Office2010Black;
                    ResultadoTorneioGrid2.GridVisualStyles = GridVisualStyles.Office2016Black;
                    ResultadoTorneioGrid2.BackColor = Publicas._panelTitulo;
                }

                ResultadoTorneioGrid2.TableOptions.ListBoxSelectionColorOptions = GridListBoxSelectionColorOptions.ApplySelectionColor;


                ResultadoTorneioGrid2.DataSource = _listaApostas.Where(w => w.Sexo == "Masculino").ToList();
                ResultadoTorneioGrid2.TopLevelGroupOptions.ShowFilterBar = false;

                for (int i = 0; i < ResultadoTorneioGrid2.TableDescriptor.Relations.Count; i++)
                {

                    ResultadoTorneioGrid2.TableDescriptor.Relations[i].ChildTableDescriptor.TableOptions.RecordRowHeight = 50;
                    ResultadoTorneioGrid2.TableDescriptor.Relations[i].ChildTableDescriptor.TableOptions.ShowRowHeader = false;

                    for (int j = 0; j < ResultadoTorneioGrid2.TableDescriptor.Relations[i].ChildTableDescriptor.Columns.Count; j++)
                    {
                        ResultadoTorneioGrid2.TableDescriptor.Relations[i].ChildTableDescriptor.Columns[i].AllowFilter = false;
                        ResultadoTorneioGrid2.TableDescriptor.Relations[i].ChildTableDescriptor.Columns[i].FilterRowOptions.AllowCustomFilter = false;
                        ResultadoTorneioGrid2.TableDescriptor.Relations[i].ChildTableDescriptor.Columns[i].FilterRowOptions.AllowEmptyFilter = false;
                        ResultadoTorneioGrid2.TableDescriptor.Relations[i].ChildTableDescriptor.Columns[j].Appearance.AnyRecordFieldCell.Font = new GridFontInfo(new Font(dataHoraLabel.Font.FontFamily, (float)8, FontStyle.Regular));

                        if (ResultadoTorneioGrid2.TableDescriptor.Relations[i].ChildTableDescriptor.Columns[j].MappingName != "Torneio" &&
                            !ResultadoTorneioGrid2.TableDescriptor.Relations[i].ChildTableDescriptor.Columns[j].MappingName.StartsWith("Round") &&
                            ResultadoTorneioGrid2.TableDescriptor.Relations[i].ChildTableDescriptor.Columns[j].MappingName != "Total" &&
                            ResultadoTorneioGrid2.TableDescriptor.Relations[i].ChildTableDescriptor.Columns[j].MappingName != "Data")

                            ResultadoTorneioGrid2.TableDescriptor.Relations[i].ChildTableDescriptor.VisibleColumns.Remove(ResultadoTorneioGrid2.TableDescriptor.Relations[i].ChildTableDescriptor.Columns[j].MappingName);
                        else
                        {
                            ResultadoTorneioGrid2.TableDescriptor.Relations[i].ChildTableDescriptor.Columns[j].Appearance.AnyRecordFieldCell.VerticalAlignment = GridVerticalAlignment.Middle;
                            ResultadoTorneioGrid2.TableDescriptor.Relations[i].ChildTableDescriptor.Columns[j].Appearance.ColumnHeaderCell.HorizontalAlignment = GridHorizontalAlignment.Left;

                            if (ResultadoTorneioGrid2.TableDescriptor.Relations[i].ChildTableDescriptor.Columns[j].MappingName.StartsWith("Torneio"))
                                ResultadoTorneioGrid2.TableDescriptor.Relations[i].ChildTableDescriptor.Columns[j].Width = 150;

                            if (ResultadoTorneioGrid2.TableDescriptor.Relations[i].ChildTableDescriptor.Columns[j].MappingName.StartsWith("Round"))
                            {
                                ResultadoTorneioGrid2.TableDescriptor.Relations[i].ChildTableDescriptor.Columns[j].HeaderText = ResultadoTorneioGrid2.TableDescriptor.Relations[i].ChildTableDescriptor.Columns[j].MappingName.Replace("Round", "");
                                ResultadoTorneioGrid2.TableDescriptor.Relations[i].ChildTableDescriptor.Columns[j].Width = 40;
                                ResultadoTorneioGrid2.TableDescriptor.Relations[i].ChildTableDescriptor.Columns[j].Appearance.ColumnHeaderCell.HorizontalAlignment = GridHorizontalAlignment.Right;
                                ResultadoTorneioGrid2.TableDescriptor.Relations[i].ChildTableDescriptor.Columns[j].Appearance.AnyRecordFieldCell.HorizontalAlignment = GridHorizontalAlignment.Right;
                            }
                            if (ResultadoTorneioGrid2.TableDescriptor.Relations[i].ChildTableDescriptor.Columns[j].MappingName.StartsWith("Total"))
                            {
                                ResultadoTorneioGrid2.TableDescriptor.Relations[i].ChildTableDescriptor.Columns[j].Appearance.ColumnHeaderCell.HorizontalAlignment = GridHorizontalAlignment.Right;
                                ResultadoTorneioGrid2.TableDescriptor.Relations[i].ChildTableDescriptor.Columns[j].Appearance.AnyRecordFieldCell.HorizontalAlignment = GridHorizontalAlignment.Right;
                            }
                            if (ResultadoTorneioGrid2.TableDescriptor.Relations[i].ChildTableDescriptor.Columns[j].MappingName.StartsWith("Data"))
                            {
                                ResultadoTorneioGrid2.TableDescriptor.Relations[i].ChildTableDescriptor.FrozenColumn = "Data";
                                ResultadoTorneioGrid2.TableDescriptor.Relations[i].ChildTableDescriptor.Columns[j].Appearance.AnyRecordFieldCell.Font = new GridFontInfo(new Font(dataHoraLabel.Font.FontFamily, (float)8, FontStyle.Bold));
                                try
                                {
                                    ResultadoTorneioGrid2.TableDescriptor.Relations[i].ChildTableDescriptor.SortedColumns.Add("Data");
                                }
                                catch { }
                                ResultadoTorneioGrid2.TableDescriptor.Relations[i].ChildTableDescriptor.Columns[j].Appearance.ColumnHeaderCell.HorizontalAlignment = GridHorizontalAlignment.Center;
                                ResultadoTorneioGrid2.TableDescriptor.Relations[i].ChildTableDescriptor.Columns[j].Appearance.AnyRecordFieldCell.HorizontalAlignment = GridHorizontalAlignment.Center;
                                ResultadoTorneioGrid2.TableDescriptor.Relations[i].ChildTableDescriptor.Columns[j].Appearance.AnyRecordFieldCell.VerticalAlignment = GridVerticalAlignment.Middle;
                                ResultadoTorneioGrid2.TableDescriptor.Relations[i].ChildTableDescriptor.Columns[j].Appearance.AnyRecordFieldCell.ShowButtons = GridShowButtons.Hide;
                                ResultadoTorneioGrid2.TableDescriptor.Relations[i].ChildTableDescriptor.Columns[j].Appearance.AnyRecordFieldCell.Format = "d";
                                ResultadoTorneioGrid2.TableDescriptor.Relations[i].ChildTableDescriptor.Columns[j].Width = 70;
                            }
                        }
                    }
                }
                #endregion

                #region Agenda
                AgendaTorneioGrid.SortIconPlacement = SortIconPlacement.Left;
                AgendaTorneioGrid.TableOptions.ListBoxSelectionMode = SelectionMode.One;
                AgendaTorneioGrid.TopLevelGroupOptions.ShowAddNewRecordBeforeDetails = false;
                AgendaTorneioGrid.TableControl.CellToolTip.Active = true;

                // para permitir editar dados.
                AgendaTorneioGrid.TableOptions.ListBoxSelectionCurrentCellOptions = GridListBoxSelectionCurrentCellOptions.HideCurrentCell;

                if (!Publicas._TemaBlack)
                {
                    AgendaTorneioGrid.SetMetroStyle(metroColor);
                    AgendaTorneioGrid.TableOptions.SelectionBackColor = Publicas._bordaEntrada;
                    AgendaTorneioGrid.TableOptions.SelectionTextColor = Color.WhiteSmoke;
                    AgendaTorneioGrid.BackColor = backGroundOriginal;
                    AgendaTorneioGrid.GridOfficeScrollBars = Syncfusion.Windows.Forms.OfficeScrollBars.Metro;
                    AgendaTorneioGrid.GridVisualStyles = Syncfusion.Windows.Forms.GridVisualStyles.Metro;
                }
                else
                {
                    AgendaTorneioGrid.GridOfficeScrollBars = OfficeScrollBars.Office2010;
                    AgendaTorneioGrid.ColorStyles = ColorStyles.Office2010Black;
                    AgendaTorneioGrid.GridVisualStyles = GridVisualStyles.Office2016Black;
                    AgendaTorneioGrid.BackColor = Publicas._panelTitulo;
                }

                AgendaTorneioGrid.TableOptions.ListBoxSelectionColorOptions = GridListBoxSelectionColorOptions.ApplySelectionColor;


                AgendaTorneioGrid.DataSource = _listaAgendaTorneio;
                AgendaTorneioGrid.TopLevelGroupOptions.ShowFilterBar = false;

                #endregion
            }

            ResultadoTorneioPanel.Visible = !ResultadoTorneioPanel.Visible;
        }

        private void buttonAdv2_Click(object sender, EventArgs e)
        {
            ResultadoTorneioPanel.Visible = false;
            new BolaoCopadoMundo.Campeonato().ShowDialog();
        }

        private void TorneioPictureBox_MouseHover(object sender, EventArgs e)
        {
            TorneioPictureBox.Cursor = Cursors.Hand;
            TorneioPictureBox.BackColor = _corMenuSelecionado;
        }

        private void TorneioPictureBox_MouseLeave(object sender, EventArgs e)
        {
            TorneioPictureBox.Cursor = Cursors.Default;
            TorneioPictureBox.BackColor = System.Drawing.Color.FromArgb(128, 131, 143);
        }
        #endregion

        private void button1_Click(object sender, EventArgs e)
        {
            
        }

        #region Chamados
        private void StatusChamadosDashBoardComboBox_SelectedIndexChanged(object sender, EventArgs e)
        {
            if (Publicas._usuario != null)
                AnoChamadosDashBoardComboBox_SelectedIndexChanged(sender, e);
        }

        private void AnoChamadosDashBoardComboBox_SelectedIndexChanged(object sender, EventArgs e)
        {
            if (_listaChamados == null)
                return;

            _anoChamados = AnoChamadosDashBoardComboBox.Text;

            switch (StatusChamadosDashBoardComboBox.SelectedIndex)
            {
                case 0: // não Finalizados
                    _statusChamados = "A";
                    break;
                case 1: // Finalizados 
                    _statusChamados = "F";
                    break;
                case 2: // Cancelados
                    _statusChamados = "C";
                    break;
                case 3: // Não avaliados
                    _statusChamados = "S";
                    break;
                case 4: // Todos
                    _statusChamados = "T";
                    break;
            }

            if (Publicas._usuario != null && !_chamadosEmPesquisa)
            {
                MensagemChamadosDashBoardLabel.Text = "Aguarde... Pesquisando os chamados.";
                this.Refresh();
                try
                {
                    chamadosBackgroundWorker.RunWorkerAsync();
                }
                catch { }
            }
        }

        private void chamadosBackgroundWorker_DoWork(object sender, DoWorkEventArgs e)
        {
            if (!_chamadosEmPesquisa) 
            {
                _chamadosEmPesquisa = true;

                try
                { 
                    if (Publicas._usuario.Tipo != Publicas.TipoUsuario.Atendente)
                    {
                        _listaChamados = new ChamadoBO().Listar(Publicas._usuario.IdDepartamento, Publicas._usuario.SoChamadosDesseUsuario, _statusChamados, _anoChamados);
                        _listaChamadosNotificacao = new ChamadoBO().ListarNotificacoes(Publicas._usuario.IdDepartamento);
                        _listaChamadosFinalizados = new ChamadoBO().Listar(Publicas._usuario.IdDepartamento, Publicas._usuario.SoChamadosDesseUsuario, "F", _anoChamados);
                        _listaChamadosCancelados = new ChamadoBO().Listar(Publicas._usuario.IdDepartamento, Publicas._usuario.SoChamadosDesseUsuario, "C", _anoChamados);
                    }
                    else
                    {
                        _listaChamados = new ChamadoBO().Listar(0, Publicas._usuario.SoChamadosDesseUsuario, _statusChamados, _anoChamados);
                        _listaChamadosNotificacao = new ChamadoBO().ListarNotificacoes();
                        _listaChamadosFinalizados = new ChamadoBO().Listar(0, Publicas._usuario.SoChamadosDesseUsuario, "F", _anoChamados);
                        _listaChamadosCancelados = new ChamadoBO().Listar(0, Publicas._usuario.SoChamadosDesseUsuario, "C", _anoChamados);
                    }
                }
                catch
                {
                }

            }
        }

        private void chamadosBackgroundWorker_RunWorkerCompleted(object sender, RunWorkerCompletedEventArgs e)
        { 
            if (ChamadosDashBoardGrid.TableDescriptor.Columns.Count != 0)
                ChamadosDashBoardGrid.DataSource = _listaChamados.Where(w => w.Exibir)
                                                              // .OrderBy(o => o.Data)
                                                               .OrderBy(o => o.Ordem).ToList();

            int _contaPopupAberto = 0;

            #region Verifica chamados finalizados sem avaliação 

            int n = 1;
            if (!_avaliarMaisTarde)
            {

                numerosChamados2Label.Visible = false;
                numerosChamados3Label.Visible = false;
                numerosChamados4Label.Visible = false;
                numerosChamados5Label.Visible = false;
                numerosChamados6Label.Visible = false;

                Publicas._prazoReabrir = _parametro.PrazoReabertura;
                 
                if (_parametro.ExigeAvaliacao && _listaChamadosFinalizados != null && Publicas._usuario != null)
                {
                    List<Classes.Chamado> _lista = new List<Chamado>();

                    if (Publicas._usuario.Tipo == Publicas.TipoUsuario.Socilitante)
                        _lista = _listaChamadosFinalizados.Where(w => w.Status == Publicas.StatusChamado.Finalizado &&
                                                                       w.IdUsuario == Publicas._idUsuario &&
                                                                      (w.Avaliacao == Publicas.TipoDeSatisfacaoAtendimento.SemAvaliacao ||
                                                                      (!w.Reavaliado && w.Reavaliar))).ToList();
                    else
                        _lista = _listaChamadosFinalizados.Where(w => w.Status == Publicas.StatusChamado.Finalizado &&
                                                                  ((w.AvaliacaoSolicitante == Publicas.TipoDeSatisfacaoAtendimento.SemAvaliacao &&
                                                                    w.IdAtendente == Publicas._idUsuario) ||
                                                                   (w.IdUsuario == Publicas._idUsuario &&
                                                                    w.Avaliacao == Publicas.TipoDeSatisfacaoAtendimento.SemAvaliacao))).ToList();

                    foreach (var item in _lista)
                    {
                        switch (n)
                        {
                            case 1:
                                numerosChamadosLabel.Text = item.Numero;
                                numerosChamadosLabel.Tag = item.IdChamado;
                                break;
                            case 2:
                                numerosChamados2Label.Text = item.Numero;
                                numerosChamados2Label.Tag = item.IdChamado;
                                numerosChamados2Label.Visible = true;
                                break;
                            case 3:
                                numerosChamados3Label.Text = item.Numero;
                                numerosChamados3Label.Tag = item.IdChamado;
                                numerosChamados3Label.Visible = true;
                                break;
                            case 4:
                                numerosChamados4Label.Text = item.Numero;
                                numerosChamados4Label.Tag = item.IdChamado;
                                numerosChamados4Label.Visible = true;
                                break;
                            case 5:
                                numerosChamados5Label.Text = item.Numero;
                                numerosChamados5Label.Tag = item.IdChamado;
                                numerosChamados5Label.Visible = true;
                                break;
                            case 6:
                                numerosChamados6Label.Text = item.Numero;
                                numerosChamados6Label.Tag = item.IdChamado;
                                numerosChamados6Label.Visible = true;
                                break;
                        }
                        n++;
                    }

                    chamadosFinalizadosPanel.BringToFront();
                    chamadosFinalizadosPanel.Left = (this.Width / 2) - chamadosFinalizadosPanel.Width / 2;
                    chamadosFinalizadosPanel.Top = (this.Height / 2) - chamadosFinalizadosPanel.Height / 2;

                    {
                        if (Publicas._usuario.Tipo == Publicas.TipoUsuario.Socilitante)
                        {
                            chamadosFinalizadosPanel.Visible = _lista.Where(w => w.Status == Publicas.StatusChamado.Finalizado &&
                                                                                         w.Avaliacao == Publicas.TipoDeSatisfacaoAtendimento.SemAvaliacao &&
                                                                                         w.IdUsuario == Publicas._idUsuario).Count() != 0;

                            if (_lista.Where(w => w.Status == Publicas.StatusChamado.Finalizado &&
                                                                                         w.Avaliacao == Publicas.TipoDeSatisfacaoAtendimento.SemAvaliacao &&
                                                                                         w.IdUsuario == Publicas._idUsuario).Count() != 0)
                                _contaPopupAberto++;

                        }
                        else
                        {
                            chamadosFinalizadosPanel.Visible = _lista.Where(w => w.Status == Publicas.StatusChamado.Finalizado &&
                                                                                  ((w.AvaliacaoSolicitante == Publicas.TipoDeSatisfacaoAtendimento.SemAvaliacao &&
                                                                    w.IdAtendente == Publicas._idUsuario) ||
                                                                   (w.IdUsuario == Publicas._idUsuario &&
                                                                    w.Avaliacao == Publicas.TipoDeSatisfacaoAtendimento.SemAvaliacao))).Count() != 0;
                            if (_lista.Where(w => w.Status == Publicas.StatusChamado.Finalizado &&
                                                                                  ((w.AvaliacaoSolicitante == Publicas.TipoDeSatisfacaoAtendimento.SemAvaliacao &&
                                                                    w.IdAtendente == Publicas._idUsuario) ||
                                                                   (w.IdUsuario == Publicas._idUsuario &&
                                                                    w.Avaliacao == Publicas.TipoDeSatisfacaoAtendimento.SemAvaliacao))).Count() != 0)
                                _contaPopupAberto++;

                        }
                    }
                }
            }
            #endregion

            #region Verifica se tem chamados com lembrete
            if (!_verLembretesMaisTarde)
            {

                n = 1;
                Chamado2Label.Visible = false;
                Chamado3Label.Visible = false;
                Chamado4Label.Visible = false;
                Chamado5Label.Visible = false;
                Chamado6Label.Visible = false;

                if (_listaChamadosFinalizados != null && Publicas._usuario != null)
                {
                    List<Classes.Chamado> _lista = new List<Chamado>();

                    if (Publicas._usuario.Tipo == Publicas.TipoUsuario.Atendente)
                        _lista = _listaChamadosFinalizados.Where(w => w.Status == Publicas.StatusChamado.Finalizado &&
                                                           w.IdAtendente == Publicas._idUsuario &&
                                                           w.DiasDoLembrete != 0).ToList();

                    foreach (var item in _lista.Where(w => w.DataLembrete.Date == DateTime.Now.Date || w.DataLembrete.Date == DateTime.Now.Date.AddDays(1)))
                    {
                        ToolTipInfo _tool = new ToolTipInfo();
                        switch (n)
                        {
                            case 1:
                                Chamado1Label.Text = item.Numero;
                                Chamado1Label.Tag = item.IdChamado;
                                _tool.Footer.Font = Chamado1Label.Font;
                                _tool.Footer.Text = item.DataLembrete.ToShortDateString() + " " + item.MotivoLembrete;
                                superToolTip1.SetToolTip(Chamado1Label, _tool);

                                break;
                            case 2:
                                Chamado2Label.Text = item.Numero;
                                Chamado2Label.Tag = item.IdChamado;
                                Chamado2Label.Visible = true;
                                _tool = new ToolTipInfo();
                                _tool.Footer.Font = Chamado1Label.Font;
                                _tool.Footer.Text = item.DataLembrete.ToShortDateString() + " " + item.MotivoLembrete;
                                superToolTip1.SetToolTip(Chamado2Label, _tool);
                                break;
                            case 3:
                                Chamado3Label.Text = item.Numero;
                                Chamado3Label.Tag = item.IdChamado;
                                Chamado3Label.Visible = true;
                                _tool = new ToolTipInfo();
                                _tool.Footer.Font = Chamado1Label.Font;
                                _tool.Footer.Text = item.DataLembrete.ToShortDateString() + " " + item.MotivoLembrete;
                                superToolTip1.SetToolTip(Chamado3Label, _tool);
                                break;
                            case 4:
                                Chamado4Label.Text = item.Numero;
                                Chamado4Label.Tag = item.IdChamado;
                                Chamado4Label.Visible = true;
                                _tool = new ToolTipInfo();
                                _tool.Footer.Font = Chamado1Label.Font;
                                _tool.Footer.Text = item.DataLembrete.ToShortDateString() + " " + item.MotivoLembrete;
                                superToolTip1.SetToolTip(Chamado4Label, _tool);
                                break;
                            case 5:
                                Chamado5Label.Text = item.Numero;
                                Chamado5Label.Tag = item.IdChamado;
                                Chamado5Label.Visible = true;
                                _tool = new ToolTipInfo();
                                _tool.Footer.Font = Chamado1Label.Font;
                                _tool.Footer.Text = item.DataLembrete.ToShortDateString() + " " + item.MotivoLembrete;
                                superToolTip1.SetToolTip(Chamado5Label, _tool);
                                break;
                            case 6:
                                Chamado6Label.Text = item.Numero;
                                Chamado6Label.Tag = item.IdChamado;
                                Chamado6Label.Visible = true;
                                _tool = new ToolTipInfo();
                                _tool.Footer.Font = Chamado1Label.Font;
                                _tool.Footer.Text = item.DataLembrete.ToShortDateString() + " " + item.MotivoLembrete;
                                superToolTip1.SetToolTip(Chamado6Label, _tool);
                                break;
                        }
                        n++;
                    }

                    LembreteChamadosPanel.BringToFront();
                    LembreteChamadosPanel.Left = ((this.Width / 2) - chamadosFinalizadosPanel.Width / 2) + (_contaPopupAberto *2 );
                    LembreteChamadosPanel.Top = ((this.Height / 2) - chamadosFinalizadosPanel.Height / 2) + (_contaPopupAberto *2 );

                    {
                        if (Publicas._usuario.Tipo == Publicas.TipoUsuario.Atendente)
                        {
                            LembreteChamadosPanel.Visible = _lista.Where(w => w.DataLembrete.Date == DateTime.Now.Date || w.DataLembrete.Date == DateTime.Now.Date.AddDays(1)).Count() != 0;
                            if (_lista.Where(w => w.DataLembrete.Date == DateTime.Now.Date || w.DataLembrete.Date == DateTime.Now.Date.AddDays(1)).Count() != 0)
                                _contaPopupAberto++;
                        }
                    }
                }
            }
            #endregion

            #region Verifica se tem chamados para autorizar

            n = 1;
            ChamadoAutorizar2Label.Visible = false;
            ChamadoAutorizar3Label.Visible = false;
            ChamadoAutorizar4Label.Visible = false;
            ChamadoAutorizar5Label.Visible = false;
            ChamadoAutorizar6Label.Visible = false;

            if (_listaChamados != null && Publicas._usuario != null)
            {
                List<Classes.Chamado> _lista = new List<Chamado>();
                
                _lista = _listaChamados.Where(w => w.Status == Publicas.StatusChamado.AguardandoAutorizacao &&
                                                   w.IdUsuarioAutorizacao != 0).ToList();

                foreach (var item in _lista)
                {
                    ToolTipInfo _tool = new ToolTipInfo();
                    switch (n)
                    {
                        case 1:
                            ChamadoAutorizar1Label.Text = item.Numero;
                            ChamadoAutorizar1Label.Tag = item.IdChamado;

                            break;
                        case 2:
                            ChamadoAutorizar2Label.Text = item.Numero;
                            ChamadoAutorizar2Label.Tag = item.IdChamado;
                            ChamadoAutorizar2Label.Visible = true;
                            break;
                        case 3:
                            ChamadoAutorizar3Label.Text = item.Numero;
                            ChamadoAutorizar3Label.Tag = item.IdChamado;
                            ChamadoAutorizar3Label.Visible = true;
                            break;
                        case 4:
                            ChamadoAutorizar4Label.Text = item.Numero;
                            ChamadoAutorizar4Label.Tag = item.IdChamado;
                            ChamadoAutorizar4Label.Visible = true;
                            break;
                        case 5:
                            ChamadoAutorizar5Label.Text = item.Numero;
                            ChamadoAutorizar5Label.Tag = item.IdChamado;
                            ChamadoAutorizar5Label.Visible = true;
                            break;
                        case 6:
                            ChamadoAutorizar6Label.Text = item.Numero;
                            ChamadoAutorizar6Label.Tag = item.IdChamado;
                            ChamadoAutorizar6Label.Visible = true;
                            break;
                    }
                    n++;
                }

                ChamadoAutorizarPanel.BringToFront();
                ChamadoAutorizarPanel.Left = ((this.Width / 2) - ChamadoAutorizarPanel.Width / 2) + (_contaPopupAberto *2);
                ChamadoAutorizarPanel.Top = ((this.Height / 2) - ChamadoAutorizarPanel.Height / 2) + (_contaPopupAberto *2);

                //if (Publicas._usuario.Administrador || Publicas._usuario.IdEmpresa == 1  || Publicas._usuario.IdEmpresa == 19|| Publicas._usuario.IdEmpresa == 2 || Publicas._usuario.IdEmpresa == 10)
                ChamadoAutorizarPanel.Visible = _lista.Count() != 0;
                if (_lista.Count() != 0)
                    _contaPopupAberto++;
            }
            #endregion

            #region Verifica se tem chamados para autorizados ou não
            if (!_verAutorizadosMaisTarde)
            {
                n = 1;
                AutorizadosNumero2Label.Visible = false;
                AutorizadosNumero3Label.Visible = false;
                AutorizadosNumero4Label.Visible = false;
                AutorizadosNumero5Label.Visible = false;
                AutorizadosNumero6Label.Visible = false;

                if (_listaChamados != null && Publicas._usuario != null)
                {
                    List<Classes.Chamado> _lista = new List<Chamado>();

                    _lista = _listaChamados.Where(w => w.Status == Publicas.StatusChamado.EmAndamento &&
                                                       w.IdUsuarioAutorizacao != 0 && w.RespondeuAutorizacao &&
                                                       Publicas._usuario.Tipo == Publicas.TipoUsuario.Atendente &&
                                                       w.IdAtendente == Publicas._usuario.Id).ToList();

                    foreach (var item in _lista)
                    {
                        ToolTipInfo _tool = new ToolTipInfo();
                        switch (n)
                        {
                            case 1:
                                AutorizadosNumero1Label.Text = item.Numero;
                                AutorizadosNumero1Label.Tag = item.IdChamado;

                                break;
                            case 2:
                                AutorizadosNumero2Label.Text = item.Numero;
                                AutorizadosNumero2Label.Tag = item.IdChamado;
                                AutorizadosNumero2Label.Visible = true;
                                break;
                            case 3:
                                AutorizadosNumero3Label.Text = item.Numero;
                                AutorizadosNumero3Label.Tag = item.IdChamado;
                                AutorizadosNumero3Label.Visible = true;
                                break;
                            case 4:
                                AutorizadosNumero4Label.Text = item.Numero;
                                AutorizadosNumero4Label.Tag = item.IdChamado;
                                AutorizadosNumero4Label.Visible = true;
                                break;
                            case 5:
                                AutorizadosNumero5Label.Text = item.Numero;
                                AutorizadosNumero5Label.Tag = item.IdChamado;
                                AutorizadosNumero5Label.Visible = true;
                                break;
                            case 6:
                                AutorizadosNumero6Label.Text = item.Numero;
                                AutorizadosNumero6Label.Tag = item.IdChamado;
                                AutorizadosNumero6Label.Visible = true;
                                break;
                        }
                        n++;
                    }

                    AutorizadosPanel.BringToFront();
                    AutorizadosPanel.Left = ((this.Width / 2) - AutorizadosPanel.Width / 2) + (_contaPopupAberto*2);
                    AutorizadosPanel.Top = ((this.Height / 2) - AutorizadosPanel.Height / 2) + (_contaPopupAberto * 2);

                    AutorizadosPanel.Visible = _lista.Count() != 0;
                    if (_lista.Count() != 0)
                        _contaPopupAberto++;
                }
            }
            #endregion

            #region Verifica se tem chamados aguaradndo solicitante em atraso

            if (!_atrasadosMaisTarde)
            {
                n = 1;
                AtrasoChamados2Label.Visible = false;
                AtrasoChamados3Label.Visible = false;
                AtrasoChamados4Label.Visible = false;
                AtrasoChamados5Label.Visible = false;
                AtrasoChamados6Label.Visible = false;

                if (_listaChamados != null && Publicas._usuario != null)
                {
                    List<Classes.Chamado> _lista = new List<Chamado>();

                    _lista = _listaChamados.Where(w => w.Status == Publicas.StatusChamado.Pendente &&
                                                       Publicas._usuario.Tipo == Publicas.TipoUsuario.Atendente &&
                                                       w.SLA < DateTime.Now
                                                       ).ToList();

                    foreach (var item in _lista)
                    {
                        ToolTipInfo _tool = new ToolTipInfo();
                        switch (n)
                        {
                            case 1:
                                AtrasoChamadosLabel.Text = item.Numero;
                                AtrasoChamadosLabel.Tag = item.IdChamado;

                                break;
                            case 2:
                                AtrasoChamados2Label.Text = item.Numero;
                                AtrasoChamados2Label.Tag = item.IdChamado;
                                AtrasoChamados2Label.Visible = true;
                                break;
                            case 3:
                                AtrasoChamados3Label.Text = item.Numero;
                                AtrasoChamados3Label.Tag = item.IdChamado;
                                AtrasoChamados3Label.Visible = true;
                                break;
                            case 4:
                                AtrasoChamados4Label.Text = item.Numero;
                                AtrasoChamados4Label.Tag = item.IdChamado;
                                AtrasoChamados4Label.Visible = true;
                                break;
                            case 5:
                                AtrasoChamados5Label.Text = item.Numero;
                                AtrasoChamados5Label.Tag = item.IdChamado;
                                AtrasoChamados5Label.Visible = true;
                                break;
                            case 6:
                                AtrasoChamados6Label.Text = item.Numero;
                                AtrasoChamados6Label.Tag = item.IdChamado;
                                AtrasoChamados6Label.Visible = true;
                                break;
                        }
                        n++;
                    }

                    ChamadosAtrasadosComSolicitantePanel.BringToFront();
                    ChamadosAtrasadosComSolicitantePanel.Left = ((this.Width / 2) - ChamadosAtrasadosComSolicitantePanel.Width / 2) + (_contaPopupAberto * 2); ;
                    ChamadosAtrasadosComSolicitantePanel.Top = ((this.Height / 2) - ChamadosAtrasadosComSolicitantePanel.Height / 2) + (_contaPopupAberto * 2);

                    ChamadosAtrasadosComSolicitantePanel.Visible = _lista.Count() != 0;
                    if (_lista.Count() != 0)
                        _contaPopupAberto++;
                }
            }
            #endregion

            #region Verifica se tem chamados reaberto
            if (!_verMaisTardeReaberto)
            {
                n = 1;
                Reaberto2Label.Visible = false;
                Reaberto3Label.Visible = false;
                Reaberto4Label.Visible = false;
                Reaberto5Label.Visible = false;
                Reaberto6Label.Visible = false;

                if (_listaChamados != null && Publicas._usuario != null)
                {
                    List<Classes.Chamado> _lista = new List<Chamado>();

                    _lista = _listaChamados.Where(w => w.Status == Publicas.StatusChamado.Reaberto &&
                                                       Publicas._usuario.Tipo == Publicas.TipoUsuario.Atendente &&
                                                       w.IdAtendente == Publicas._usuario.Id).ToList();

                    foreach (var item in _lista)
                    {
                        ToolTipInfo _tool = new ToolTipInfo();
                        switch (n)
                        {
                            case 1:
                                Reaberto1Label.Text = item.Numero;
                                Reaberto1Label.Tag = item.IdChamado;

                                break;
                            case 2:
                                Reaberto2Label.Text = item.Numero;
                                Reaberto2Label.Tag = item.IdChamado;
                                Reaberto2Label.Visible = true;
                                break;
                            case 3:
                                Reaberto3Label.Text = item.Numero;
                                Reaberto3Label.Tag = item.IdChamado;
                                Reaberto3Label.Visible = true;
                                break;
                            case 4:
                                Reaberto4Label.Text = item.Numero;
                                Reaberto4Label.Tag = item.IdChamado;
                                Reaberto4Label.Visible = true;
                                break;
                            case 5:
                                Reaberto5Label.Text = item.Numero;
                                Reaberto5Label.Tag = item.IdChamado;
                                Reaberto5Label.Visible = true;
                                break;
                            case 6:
                                Reaberto6Label.Text = item.Numero;
                                Reaberto6Label.Tag = item.IdChamado;
                                Reaberto6Label.Visible = true;
                                break;
                        }
                        n++;
                    }

                    ReabertoPanel.BringToFront();
                    ReabertoPanel.Left = ((this.Width / 2) - ReabertoPanel.Width / 2) + (_contaPopupAberto * 2);
                    ReabertoPanel.Top = ((this.Height / 2) - ReabertoPanel.Height / 2) + (_contaPopupAberto * 2);

                    ReabertoPanel.Visible = _lista.Count() != 0;
                    if (_lista.Count() != 0)
                        _contaPopupAberto++;
                }
            }
            #endregion

            _chamadosEmPesquisa = false;
            chamadoTimer.Start();

            if (MensagemChamadosDashBoardLabel != null)
                MensagemChamadosDashBoardLabel.Text = "";

            this.Refresh();

            try
            {
                if (ChamadosDashBoardGrid != null)
                {
                    if (_recordSelecionado != null)
                        ChamadosDashBoardGrid.Table.CurrentRecord = _recordSelecionado;
                    ChamadosDashBoardGrid.Focus();
                }
            }
            catch { }
        }

        private void chamadoTimer_Tick(object sender, EventArgs e)
        {
            chamadoTimer.Stop();

            MensagemChamadosDashBoardLabel.Text = "Aguarde... Pesquisando os chamados.";
            this.Refresh();
            try
            {
                if (!_chamadosEmPesquisa)
                    chamadosBackgroundWorker.RunWorkerAsync();
                else
                    chamadoTimer.Start();

            }
            catch { }

            MensagemChamadosDashBoardLabel.Text = "";
            this.Refresh();

        }

        private void ChamadosDashBoardGrid_TableControlCellClick(object sender, GridTableControlCellClickEventArgs e)
        {
            try
            {
                if (ChamadosDashBoardGrid.TableDescriptor.Columns[e.Inner.ColIndex - 1].MappingName == "Agrupar")
                    ChamadosDashBoardGrid.TableOptions.ListBoxSelectionCurrentCellOptions = GridListBoxSelectionCurrentCellOptions.None;
                else
                    ChamadosDashBoardGrid.TableOptions.ListBoxSelectionCurrentCellOptions = GridListBoxSelectionCurrentCellOptions.HideCurrentCell;

                _rowIndexComunicado = e.TableControl.Table.CurrentRecord.GetRecord().GetRowIndex();

                GridRecordRow rec = this.ChamadosDashBoardGrid.Table.DisplayElements[_rowIndexComunicado] as GridRecordRow;
                                
                if (rec != null)
                {
                    
                    Record dr = rec.GetRecord() as Record;
                    _recordSelecionado = rec.GetRecord() as Record;

                    if (dr != null)
                        Publicas._codigoRetornoPesquisa = (string)dr["Numero"];
                }

                foreach (Chamado item in _listaChamados.Where(w => w.Numero == Publicas._codigoRetornoPesquisa))
                {
                    agruparChamadosToolStripMenuItem.Visible = Publicas._usuario.Tipo == Publicas.TipoUsuario.Atendente;
                    agruparChamadosToolStripMenuItem.Enabled = item.Agrupar && Publicas._usuario.Tipo == Publicas.TipoUsuario.Atendente;
                    moverChamadosToolStripMenuItem.Visible = Publicas._usuario.Tipo == Publicas.TipoUsuario.Atendente;
                    atribuirPraMimToolStripMenuItem.Visible = Publicas._usuario.Tipo == Publicas.TipoUsuario.Atendente && (item.NomeAnalista == "" || item.NomeAnalista == null);
                    atribuirParaOAnalistaToolStripMenuItem.Visible = Publicas._usuario.Tipo == Publicas.TipoUsuario.Atendente;
                    cobrarRetornoToolStripMenuItem.Visible = Publicas._usuario.Tipo == Publicas.TipoUsuario.Atendente && (item.SLA < DateTime.Now || item.Status == Publicas.StatusChamado.Finalizado);
                }
            }
            catch { }
        }

        private void ChamadosDashBoardGrid_TableControlCurrentCellKeyUp(object sender, GridTableControlKeyEventArgs e)
        {
            try
            {
                _rowIndexComunicado = e.TableControl.Table.CurrentRecord.GetRecord().GetRowIndex();

                GridRecordRow rec = ComunidadosDashBoardGrid.Table.DisplayElements[_rowIndexComunicado] as GridRecordRow;
                
                if (rec != null)
                {
                    Record dr = rec.GetRecord() as Record;
                    _recordSelecionado = rec.GetRecord() as Record;

                    if (dr != null)
                        Publicas._codigoRetornoPesquisa = (string)dr["Numero"];
                }

                foreach (Chamado item in _listaChamados.Where(w => w.Numero == Publicas._codigoRetornoPesquisa))
                {
                    agruparChamadosToolStripMenuItem.Visible = Publicas._usuario.Tipo == Publicas.TipoUsuario.Atendente;
                    agruparChamadosToolStripMenuItem.Enabled = item.Agrupar && Publicas._usuario.Tipo == Publicas.TipoUsuario.Atendente;
                    moverChamadosToolStripMenuItem.Visible = Publicas._usuario.Tipo == Publicas.TipoUsuario.Atendente;
                    atribuirPraMimToolStripMenuItem.Visible = Publicas._usuario.Tipo == Publicas.TipoUsuario.Atendente && (item.NomeAnalista == "" || item.NomeAnalista == null);
                    atribuirParaOAnalistaToolStripMenuItem.Visible = Publicas._usuario.Tipo == Publicas.TipoUsuario.Atendente;
                    cobrarRetornoToolStripMenuItem.Visible = Publicas._usuario.Tipo == Publicas.TipoUsuario.Atendente && (item.SLA < DateTime.Now || item.Status == Publicas.StatusChamado.Finalizado);
                }
            }
            catch { }
        }

        private void ChamadosDashBoardGrid_QueryCellStyleInfo(object sender, GridTableCellStyleInfoEventArgs e)
        {
            try 
            {
                GridRecordRow rec = this.ChamadosDashBoardGrid.Table.DisplayElements[e.TableCellIdentity.RowIndex] as GridRecordRow;
                Record dr = null;

                if (rec != null)
                {
                    dr = rec.GetRecord() as Record;

                    if ((Publicas.StatusChamado)dr["Status"] == Publicas.StatusChamado.Cancelado)
                        e.Style.TextColor = Color.Gray;
                    else
                    if (!(bool)dr["Lido"] && (Publicas.StatusChamado)dr["Status"] != Publicas.StatusChamado.Finalizado)
                        e.Style.TextColor = (Publicas._TemaBlack ? Color.SteelBlue : Color.Navy);
                    /*else
                    if (Publicas._usuario.Tipo == Publicas.TipoUsuario.Atendente && (bool)dr["Privado"])
                        e.Style.TextColor = (Publicas._TemaBlack ? Color.SteelBlue : Color.Navy);*/

                    if ((bool)dr["TemporizadorEmAndamento"] && Publicas._usuario.Tipo == Publicas.TipoUsuario.Atendente)
                        e.Style.TextColor = (Publicas._TemaBlack ? Color.LightGreen : Color.DarkGreen);

                    if ((int)dr["MinutosTemporizador"] > (int)dr["MinutosEstimados"] && (int)dr["MinutosEstimados"] > 0 &&
                        e.TableCellIdentity.Column.MappingName == "Temporizador")
                        e.Style.TextColor = (Publicas._TemaBlack ? Color.DarkOrange : Color.Red);
                }
                try
                {
                    if (e.TableCellIdentity.Column.MappingName == "DescricaoStatus")
                    {
                        if (((string)dr["DescricaoStatus"]).Contains("Autorização"))
                        {
                            e.Style.TextColor = (Publicas._TemaBlack ? System.Drawing.Color.FromArgb(255, 201, 14) : System.Drawing.Color.FromArgb(2, 91, 149));
                        }
                    }
                }
                catch(NullReferenceException excessao)
                {
                    Console.WriteLine(excessao.StackTrace);
                }
                try
                {
                    if (e.TableCellIdentity.Column.MappingName == "Numero")
                    {
                        e.Style.CellTipText = "Prioridade -> " + Publicas.GetDescription((Publicas.Prioridades)dr["Prioridade"], "");

                        if ((Publicas.Prioridades)dr["Prioridade"] == Publicas.Prioridades.Critico)
                        {
                            e.Style.TextColor = Color.OrangeRed;
                        }
                    }
                }
                catch (NullReferenceException excesso)
                {
                    Console.WriteLine(excesso.StackTrace);
                }
                

                if (e.TableCellIdentity.Column.MappingName == "SLA")
                {

                    DateTime _data = Convert.ToDateTime(e.Style.Text);

                    if (dr != null)
                    {
                        if ((Publicas._usuario.Tipo == Publicas.TipoUsuario.Atendente &&
                            (Publicas.StatusChamado)dr["Status"] != Publicas.StatusChamado.Pendente) ||
                            (Publicas._usuario.Tipo == Publicas.TipoUsuario.Socilitante &&
                             ((Publicas.StatusChamado)dr["Status"] == Publicas.StatusChamado.Pendente ||
                              (Publicas.StatusChamado)dr["Status"] == Publicas.StatusChamado.AguardandoAutorizacao)))
                        {
                            if ((Publicas.StatusChamado)dr["Status"] != Publicas.StatusChamado.Finalizado &&
                                (Publicas.StatusChamado)dr["Status"] != Publicas.StatusChamado.Cancelado &&
                                (Publicas.StatusChamado)dr["Status"] != Publicas.StatusChamado.AguardandoCronograma)
                            {
                                if (_data > DateTime.Now && _data.Date > DateTime.Now.Date)
                                {
                                    if ((Publicas.StatusChamado)dr["Status"] != Publicas.StatusChamado.Adequacao &&
                                        (Publicas.StatusChamado)dr["Status"] != Publicas.StatusChamado.AguardandoConserto)
                                    {
                                        e.Style.TextColor = Color.Green;
                                        e.Style.CellTipText = "Dentro do prazo";
                                    }
                                }
                                else
                                {
                                    // Ficará vermelho ou Amarelo se o Status diferente do Aguardando Autorização ou se o Usuário logado é o que precisa autorizar
                                    if (((Publicas.StatusChamado)dr["Status"] == Publicas.StatusChamado.AguardandoAutorizacao &&
                                         (int)dr["IdUsuarioAutorizacao"] == Publicas._usuario.Id) ||
                                         (Publicas.StatusChamado)dr["Status"] != Publicas.StatusChamado.AguardandoAutorizacao)
                                    {
                                        if (_data.Date == DateTime.Now.Date && _data.TimeOfDay > DateTime.Now.TimeOfDay)
                                        {
                                            if (Publicas._TemaBlack)
                                                e.Style.TextColor = Color.Yellow;
                                            else
                                            {
                                                e.Style.BackColor = Color.Khaki;
                                                e.Style.TextColor = Color.Black;
                                            }
                                            e.Style.CellTipText = "Prazo finalizando";
                                        }
                                        else
                                        {
                                            e.Style.TextColor = Color.Red;
                                            e.Style.CellTipText = "Passou do prazo";
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                else
                {
                    if (e.TableCellIdentity.Column.MappingName == "Assunto")
                    {
                        e.Style.CommentTip.CommentIndicatorColor = Publicas._TemaBlack ? Color.Gray : Color.Navy;
                        e.Style.CommentTip.CommentFont = new Font("sans serif", 9, FontStyle.Regular);
                        e.Style.CommentTip.ForeColor = Publicas._fonte;
                        e.Style.CommentTip.BackColor = Publicas._fundo;
                        e.Style.CommentTip.CommentWindowSize = new Size(400, 300);
                        

                        if (dr != null && (Publicas.StatusChamado)dr["Status"] == Publicas.StatusChamado.Novo)
                            //e.Style.CellTipText = ((string)dr["Descricao"]) +
                            e.Style.CommentTip.CommentText = "Prioridade -> " + Publicas.GetDescription((Publicas.Prioridades)dr["Prioridade"], "")
                                + Environment.NewLine 
                                + Environment.NewLine + ((string)dr["Descricao"]);
                        else
                        {
                            if (dr != null && (Publicas.StatusChamado)dr["Status"] != Publicas.StatusChamado.Novo && Publicas._usuario.Tipo == Publicas.TipoUsuario.Atendente)
                                //e.Style.CellTipText = 
                                e.Style.CommentTip.CommentText =
                                    "Prioridade -> " + Publicas.GetDescription((Publicas.Prioridades)dr["Prioridade"], "") +
                                    Environment.NewLine +
                                    Environment.NewLine + "Último tramite -> " + ((bool)dr["Privado"] ? "[Privado] " : "") +
                                    Environment.NewLine + ((string)dr["Descricao"]) +
                                    Environment.NewLine + Environment.NewLine + 
                                    (((string)dr["Adequacao"]) == "" || ((string)dr["Adequacao"]) == null ? "" : "[ " + ((string)dr["Adequacao"]) + " ]")
                                    ;
                        }
                    }
                    else
                    if (e.TableCellIdentity.Column.MappingName == "NomeSolicitante")
                    {
                        if (dr != null && (string)dr["UltimoUsuario"] != (string)dr["NomeSolicitante"])
                            e.Style.CellTipText = "Respondido por -> " + ((string)dr["UltimoUsuario"]);
                    }
                    else
                    if (e.TableCellIdentity.Column.MappingName == "NomeAnalista")
                    {
                        if (dr != null && (string)dr["PrimeiroAtendente"] != (string)dr["NomeAnalista"] && (string)dr["PrimeiroAtendente"] != "")
                            e.Style.CellTipText = "1º Atendente -> " + ((string)dr["PrimeiroAtendente"]);
                    }
                }
            }
            catch { }
        }

        private void ChamadosDashBoardGrid_TableControlCellDoubleClick(object sender, GridTableControlCellClickEventArgs e)
        {
            // abrir a tela de tramites/historicos do chamado
            try
            {
                GridRecordRow rec = this.ChamadosDashBoardGrid.Table.DisplayElements[e.Inner.RowIndex] as GridRecordRow;

                if (rec != null)
                {
                    Record dr = rec.GetRecord() as Record;
                    _recordSelecionado = rec.GetRecord() as Record;

                    if (dr != null)
                    {
                        Publicas._idChamado = (int)dr["IdChamado"];
                        Publicas._sla = (DateTime)dr["SLA"];
                        Publicas._idTemporizador = (int)dr["IdTemporizador"];
                        FecharDashBoard();
                        MensagemSistema();

                        tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaChamado;
                        Chamados.Tramites _tela = new Chamados.Tramites();

                        if (_tela.Width > this.Width)
                            _tela.Size = new Size(this.Width - 5, this.Height - (tituloPanel.Height + panel2.Height + 2));

                        _tela.ShowDialog();

                        NomePadrao();
                        _chamadosEmPesquisa = false;


                        if (Publicas._usuario != null && !_chamadosEmPesquisa)
                        {
                            MensagemChamadosDashBoardLabel.Text = "Aguarde... Pesquisando os chamados.";
                            this.Refresh();
                            try
                            {
                                chamadosBackgroundWorker.RunWorkerAsync();
                            }
                            catch { }
                            MensagemChamadosDashBoardLabel.Text = "";
                            this.Refresh();

                        }
                    }
                }
            }
            catch { }
        }

        private void ChamadosDashBoardGrid_TableControlCurrentCellChanged(object sender, GridTableControlEventArgs e)
        {
            try
            {
                GridRecordRow rec = this.ChamadosDashBoardGrid.Table.DisplayElements[e.TableControl.Table.CurrentRecord.GetRecord().GetRowIndex()] as GridRecordRow;

                bool marcado = false;

                if (rec != null)
                {
                    Record dr = rec.GetRecord() as Record;
                    _recordSelecionado = rec.GetRecord() as Record;

                    if (dr != null)
                    {
                        marcado = (bool)dr["Agrupar"];

                        foreach (var item in _listaChamados.Where(w => w.IdChamado == (int)dr["IdChamado"]))
                        {
                            if (!marcado)
                                item.Agrupar = false;
                            else
                                item.Agrupar = marcado;
                        }
                    }
                }
            }
            catch { }

            ChamadosDashBoardGrid.Refresh();
        }

        private void agruparChamadosToolStripMenuItem_Click(object sender, EventArgs e)
        {
            new ChamadoBO().Agrupar(_listaChamados);
            if (Publicas._usuario != null && !_chamadosEmPesquisa)
            {
                if (MensagemChamadosDashBoardLabel != null)
                    MensagemChamadosDashBoardLabel.Text = "Aguarde... Pesquisando os chamados.";
                this.Refresh();
                try
                {
                    chamadosBackgroundWorker.RunWorkerAsync();
                }
                catch { }
                MensagemChamadosDashBoardLabel.Text = "";
                this.Refresh();

            }
        }

        private void responderToolStripMenuItem1_Click(object sender, EventArgs e)
        {
            try
            {
                GridRecordRow rec = this.ChamadosDashBoardGrid.Table.DisplayElements[ChamadosDashBoardGrid.TableControl.CurrentCell.RowIndex] as GridRecordRow;

                
                    
                if (rec != null)
                {
                    Record dr = rec.GetRecord() as Record;
                    _recordSelecionado = rec.GetRecord() as Record;

                    if (dr != null)
                    {
                        Publicas._idChamado = (int)dr["IdChamado"];
                        Publicas._sla = (DateTime)dr["SLA"];
                        Publicas._idTemporizador = (int)dr["IdTemporizador"];
                        FecharDashBoard();
                        MensagemSistema();

                        tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaChamado;
                        Chamados.Tramites _tela = new Chamados.Tramites();

                        if (_tela.Width > this.Width)
                            _tela.Size = new Size(this.Width - 5, this.Height - (tituloPanel.Height + panel2.Height + 2));

                        _tela.ShowDialog();
                        _chamadosEmPesquisa = false;
                        NomePadrao();

                        if (Publicas._usuario != null && !_chamadosEmPesquisa)
                        {
                            MensagemChamadosDashBoardLabel.Text = "Aguarde... Pesquisando os chamados.";
                            this.Refresh();
                            try
                            {
                                chamadosBackgroundWorker.RunWorkerAsync();
                            }
                            catch { }
                            MensagemChamadosDashBoardLabel.Text = "";
                            this.Refresh();
                        }
                    }
                }
            }
            catch (Exception)
            { }

            if (Publicas._usuario != null && !_chamadosEmPesquisa)
            {
                MensagemChamadosDashBoardLabel.Text = "Aguarde... Pesquisando os chamados.";
                this.Refresh();

                try
                {
                    chamadosBackgroundWorker.RunWorkerAsync();
                }
                catch { }
                MensagemChamadosDashBoardLabel.Text = "";
                this.Refresh();
            }
        }

        private void moverChamadosToolStripMenuItem_Click(object sender, EventArgs e)
        {
            try
            {
                GridRecordRow rec = this.ChamadosDashBoardGrid.Table.DisplayElements[ChamadosDashBoardGrid.TableControl.CurrentCell.RowIndex] as GridRecordRow;

                if (rec != null)
                {
                    Record dr = rec.GetRecord() as Record;
                    if (dr != null)
                    {
                        Publicas._idChamado = (int)dr["IdChamado"];
                        Publicas._sla = (DateTime)dr["SLA"];
                        FecharDashBoard();
                        MensagemSistema();

                        tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaChamado;
                        new Chamados.MoverCategoria().ShowDialog();
                        NomePadrao();
                    }
                }
            }
            catch { }
            if (Publicas._usuario != null && !_chamadosEmPesquisa)
            {

                MensagemChamadosDashBoardLabel.Text = "Aguarde... Pesquisando os chamados.";
                this.Refresh();
                try
                {
                    chamadosBackgroundWorker.RunWorkerAsync();
                }
                catch { }
                MensagemChamadosDashBoardLabel.Text = "";
                this.Refresh();
            }
        }

        private void abrirChamadoToolStripMenuItem_Click(object sender, EventArgs e)
        {
            AbrirChamadoPanel_Click(sender, e);

            if (Publicas._usuario != null && !_chamadosEmPesquisa)
            {
                MensagemChamadosDashBoardLabel.Text = "Aguarde... Pesquisando os chamados.";
                this.Refresh();
                try
                {
                    chamadosBackgroundWorker.RunWorkerAsync();
                }
                catch { }
                MensagemChamadosDashBoardLabel.Text = "";
                this.Refresh();

            }
        }

        private void numerosChamadosLabel_Click(object sender, EventArgs e)
        {
            chamadosFinalizadosPanel.Visible = false;
            Publicas._idChamado = Convert.ToInt32(((Label)sender).Tag);
            foreach (var item in _listaChamados.Where(w => w.IdChamado == Publicas._idChamado))
            {
                Publicas._idTemporizador = item.IdTemporizador;
            }
            FecharDashBoard();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaChamado;

            Chamados.Tramites _tela = new Chamados.Tramites();

            if (_tela.Width > this.Width)
                _tela.Size = new Size(this.Width - 5, this.Height - (tituloPanel.Height + panel2.Height + 2));

            _tela.ShowDialog();

            _chamadosEmPesquisa = false;
            NomePadrao();

            if (Publicas._usuario != null && !_chamadosEmPesquisa)
            {
                MensagemChamadosDashBoardLabel.Text = "Aguarde... Pesquisando os chamados.";

                try
                {
                    chamadosBackgroundWorker.RunWorkerAsync();
                }
                catch { }
                MensagemChamadosDashBoardLabel.Text = "";
                this.Refresh();

            }

        }

        private void AvaliarMaisTardeLabel_Click(object sender, EventArgs e)
        {
            chamadosFinalizadosPanel.Visible = false;
            _avaliarMaisTarde = true;
            _timeInicioAvaliarMaisTarde = DateTime.Now;
        }

        private void numerosChamadosLabel_MouseHover(object sender, EventArgs e)
        {
            ((Label)sender).Cursor = Cursors.Hand; 
        }

        private void numerosChamadosLabel_MouseLeave(object sender, EventArgs e)
        {
            ((Label)sender).Cursor = Cursors.Default;
        }

        private void MeusChamadosDashBoardCheckBox_CheckStateChanged(object sender, EventArgs e)
        {
            Publicas._usuario.SoChamadosDesseUsuario = MeusChamadosDashBoardCheckBox.Checked;
            new UsuarioBO().FiltroChamado();

            if (Publicas._usuario != null && !_chamadosEmPesquisa)
            {
                MensagemChamadosDashBoardLabel.Text = "Aguarde... Pesquisando os chamados.";
                this.Refresh();
                try
                {
                    chamadosBackgroundWorker.RunWorkerAsync();
                }
                catch { }
                MensagemChamadosDashBoardLabel.Text = "";
                this.Refresh();

            }
        }

        private void cobrarRetornoToolStripMenuItem_Click(object sender, EventArgs e)
        {
            try
            {
                string[] nomeUsu = Publicas._usuario.Nome.Split(' ');
                GridRecordRow rec = this.ChamadosDashBoardGrid.Table.DisplayElements[ChamadosDashBoardGrid.TableControl.CurrentCell.RowIndex] as GridRecordRow;

                if (rec != null)
                {
                    string[] _dadosEmail = new string[50];
                    string _emailDestino = "";
                    Record dr = rec.GetRecord() as Record;
                    Classes.Empresa _empresa;
                    Publicas.StatusChamado _statusAtual = Publicas.StatusChamado.Pendente;
                    bool _avaliadoPeloSolicitante = false;
                    bool _avaliadoPeloAnalista = false;
                    List<Usuario> _listaUsuarios = new List<Usuario>();
                    Classes.Usuario _solicitante;

                    if (dr != null)
                    {
                        Publicas._idChamado = (int)dr["IdChamado"];
                        Publicas._sla = (DateTime)dr["SLA"];

                        foreach (var item in _listaChamados.Where(w => w.IdChamado == Publicas._idChamado))
                        {
                            Publicas._idTemporizador = item.IdTemporizador;

                            _empresa = new EmpresaBO().Consultar(item.IdEmpresa);
                            _statusAtual = item.Status;
                            _avaliadoPeloSolicitante = item.Avaliacao != Publicas.TipoDeSatisfacaoAtendimento.SemAvaliacao;
                            _avaliadoPeloAnalista = item.AvaliacaoSolicitante != Publicas.TipoDeSatisfacaoAtendimento.SemAvaliacao;

                            if (Publicas._usuario.Tipo == Publicas.TipoUsuario.Atendente)
                            {
                                if (_statusAtual != Publicas.StatusChamado.Finalizado)
                                {
                                    _solicitante = new UsuarioBO().ConsultarPorId(item.IdUsuario);
                                    _emailDestino = _emailDestino + Publicas._usuario.Email + "; " + _solicitante.Email + "; ";
                                }
                                else
                                {
                                    if (!_avaliadoPeloAnalista && !_avaliadoPeloSolicitante)
                                    {
                                        _solicitante = new UsuarioBO().ConsultarPorId(item.IdUsuario);
                                        _emailDestino = _emailDestino + Publicas._usuario.Email + "; " + _solicitante.Email + "; ";
                                        _solicitante = new UsuarioBO().ConsultarPorId(item.IdAtendente);
                                        _emailDestino = _emailDestino + _solicitante.Email + "; ";
                                    }
                                    else
                                    {
                                        if (!_avaliadoPeloAnalista)
                                        {
                                            _solicitante = new UsuarioBO().ConsultarPorId(item.IdAtendente);
                                            _emailDestino = _emailDestino + Publicas._usuario.Email + "; " + _solicitante.Email + "; ";
                                        }
                                        else
                                        {
                                            _solicitante = new UsuarioBO().ConsultarPorId(item.IdUsuario);
                                            _emailDestino = _emailDestino + Publicas._usuario.Email + "; " + _solicitante.Email + "; ";
                                        }
                                    }
                                }
                            }
                            else
                            {
                                _solicitante = new UsuarioBO().ConsultarPorId(item.IdAtendente);
                                _emailDestino = _emailDestino + Publicas._usuario.Email + "; " + _solicitante.Email + "; ";
                            }

                            if (_statusAtual == Publicas.StatusChamado.Finalizado && (_avaliadoPeloAnalista || _avaliadoPeloSolicitante))
                                _dadosEmail[0] = "Chamado " + item.Numero + " sem avaliação ";
                            else
                                _dadosEmail[0] = "Alteração do chamado " + item.Numero;

                            _dadosEmail[1] = DateTime.Now.ToShortDateString() + " " + DateTime.Now.ToShortTimeString();
                            _dadosEmail[3] = _empresa.NomeAbreviado;
                            _dadosEmail[4] = item.Numero;

                            _dadosEmail[5] = "Alterado";

                            _dadosEmail[6] = item.Assunto;
                            _dadosEmail[7] = item.Categoria;
                            _dadosEmail[8] = item.Modulo;
                            _dadosEmail[9] = item.Tela;
                            _dadosEmail[10] = item.DescricaoTipo;
                            _dadosEmail[11] = item.DescricaoPrioridade;

                            List<HistoricoDoChamado> _ultimoHistoricos = new ChamadoBO().ListarHistoricos(item.IdChamado, true, true);

                            if (_statusAtual == Publicas.StatusChamado.Finalizado)
                                _dadosEmail[12] = "Por gentileza avalie o chamado. </br> Chamado finalizado em ";
                            else
                                _dadosEmail[12] = "Por gentileza, poderia nos dar Retorno sobre o chamado! </br> Estamos sem retono desde ";

                            foreach (var itemH in _ultimoHistoricos.OrderByDescending(o => o.Data)) // pega o ultimo status
                            {
                                _dadosEmail[12] = _dadosEmail[12] + item.DataRetorno.ToShortDateString();
                                break;
                            }

                            _dadosEmail[13] = "0";
                            _dadosEmail[14] = "";
                        }

                        string[] nome = Publicas._usuario.Nome.Split(' ');

                        if (Publicas._usuario.AssinaturaChamado == "")
                        {
                            _dadosEmail[16] = "<p style = 'color: #4169e1; font-family: Arial, sans-serif; font-size: 13px'/> Atenciosamente,</br> " +
                                            nome[0] + " " + nome[nome.Length - 1] +
                                            "</font></p>";
                        }
                        else
                        {
                            _dadosEmail[16] = "<p style = 'color: #4169e1; font-family: arial, sans-serif; font-size: 13px'/>" +
                                Publicas._usuario.AssinaturaChamado + "</font></p>";
                        }
                        
                        if (!Publicas.EnviarEmailChamado(_dadosEmail, true, false, false, _emailDestino, _dadosEmail[0], false, ""))
                        {
                            new Notificacoes.Mensagem("Problemas durante o envio do e-mail." + Environment.NewLine + Publicas.mensagemDeErro, Publicas.TipoMensagem.Erro).ShowDialog();
                            return;
                        }
                    }
                }
            }
            catch { }

            if (Publicas._usuario != null && !_chamadosEmPesquisa)
            {
                MensagemChamadosDashBoardLabel.Text = "Aguarde... Pesquisando os chamados.";
                this.Refresh();
                try
                {
                    chamadosBackgroundWorker.RunWorkerAsync();
                }
                catch { }
                MensagemChamadosDashBoardLabel.Text = "";
                this.Refresh();

            }
        }

        private void atribuirPraMimToolStripMenuItem_Click(object sender, EventArgs e)
        {
            try
            {
                GridRecordRow rec = this.ChamadosDashBoardGrid.Table.DisplayElements[ChamadosDashBoardGrid.TableControl.CurrentCell.RowIndex] as GridRecordRow;

                if (rec != null)
                {
                    Record dr = rec.GetRecord() as Record;
                    if (dr != null)
                    {
                        Publicas._idChamado = (int)dr["IdChamado"];
                        Publicas._sla = (DateTime)dr["SLA"];

                        // verificar se já foi finalizado ou respondido por outro 
                        Classes.Chamado _chamadoAux = new ChamadoBO().Consulta(Publicas._idChamado);
                        if (_chamadoAux.NomeAnalista != null)
                            new Notificacoes.Mensagem("Chamado em atendimento." + Environment.NewLine + Publicas.mensagemDeErro, Publicas.TipoMensagem.Alerta).ShowDialog();
                        else
                        {

                            foreach (var item in _listaChamados.Where(w => w.IdChamado == Publicas._idChamado))
                            {
                                item.Status = Publicas.StatusChamado.EmAndamento;
                                if (!new ChamadoBO().Gravar(item))
                                {
                                    new Notificacoes.Mensagem("Problemas durante a gravação." + Environment.NewLine + Publicas.mensagemDeErro, Publicas.TipoMensagem.Erro).ShowDialog();
                                    return;
                                }
                            }

                            new ChamadoBO().GravarHistorico(new HistoricoDoChamado()
                            {
                                IdChamado = Publicas._idChamado,
                                Data = DateTime.Now,
                                IdUsuario = Publicas._usuario.Id,
                                Descricao = (DateTime.Now.Hour < 12 ? "Bom dia" : (DateTime.Now.Hour > 12 && DateTime.Now.Hour < 18 ? "Boa tarde" : "Boa noite")) +
                                Environment.NewLine +
                                Environment.NewLine + "Serei o responsável por esse ticket." +
                                Environment.NewLine + "Em breve darei um retorno à respeito." +
                                Environment.NewLine + ";)",
                                Privado = false,
                                Status = Publicas.StatusChamado.EmAndamento,
                                Usuario = "A"
                            }, new List<AnexoDoHistorico>(), Publicas._sla);
                        }
                    }
                }
            }
            catch { }

            if (Publicas._usuario != null && !_chamadosEmPesquisa)
            {
                MensagemChamadosDashBoardLabel.Text = "Aguarde... Pesquisando os chamados.";
                this.Refresh();
                try
                {
                    chamadosBackgroundWorker.RunWorkerAsync();
                }
                catch { }
                MensagemChamadosDashBoardLabel.Text = "";
                this.Refresh();

            }
        }

        private void liberarParaReavaliaçãoToolStripMenuItem_Click(object sender, EventArgs e)
        {
            try
            {
                GridRecordRow rec = this.ChamadosDashBoardGrid.Table.DisplayElements[ChamadosDashBoardGrid.TableControl.CurrentCell.RowIndex] as GridRecordRow;

                if (rec != null)
                {
                    Record dr = rec.GetRecord() as Record;
                    if (dr != null)
                    {
                        Publicas._idChamado = (int)dr["IdChamado"];

                        Classes.Chamado _chamadoAux = new ChamadoBO().Consulta(Publicas._idChamado);

                        if (!new ChamadoBO().LiberarParaReavaliacao(_chamadoAux))
                        {
                            new Notificacoes.Mensagem("Problemas durante a gravação." + Environment.NewLine + Publicas.mensagemDeErro, Publicas.TipoMensagem.Erro).ShowDialog();
                            return;
                        }
                    }

                    if (Publicas._usuario != null && !_chamadosEmPesquisa)
                    {
                        MensagemChamadosDashBoardLabel.Text = "Aguarde... Pesquisando os chamados.";
                        this.Refresh();
                        try
                        {
                            chamadosBackgroundWorker.RunWorkerAsync();
                        }
                        catch { }
                        MensagemChamadosDashBoardLabel.Text = "";
                        this.Refresh();

                    }
                }
            }
            catch { }
        }

        #endregion

        #region Mudança de Tema
        private void TemaPictureBox_Click(object sender, EventArgs e)
        {
            FechaSubMenuBolao();
            FecharDashBoard();
            LeituraResenhaLivro.Visible = false;
            ApostasPanel.Visible = false;
            ConsultaRamaisPanel.Visible = false;
            ResultadoTorneioPanel.Visible = false;

            // Mostrar as notificações
            if (TemaPanel.Visible)
            {
                TemaPanel.Visible = false;
                return;
            }
            
            TemaPanel.Dock = DockStyle.Right;
            TemaPanel.BringToFront();
            TemaPanel.Size = new Size(250, 0);

            MostraNotificacoesPanel.Size = new Size(350, 0);
            DashBoardPanel.Size = new Size(25, 0);
            BotaoDashboardLabel.Text = "7";

            TemaClaroPanel.BackColor = Publicas.padraoNiffClaro_Fundo;
            AplicarTemaButton.ForeColor = Color.Black;
            NaoAplicarTemasCheckBox.Checked = !_temasComemorativos;

            if (Publicas._TemaBlack)
                NaoAplicarTemasCheckBox.ForeColor = Publicas._fonte;

            TemaPanel.Visible = true;

        }

        private void TemaPanel_Paint(object sender, PaintEventArgs e)
        {

        }

        private void TemaClaroPanel_Paint(object sender, PaintEventArgs e)
        {
            Rectangle rect = ((Panel)sender).ClientRectangle;
            rect.Width--;
            rect.Height--;
            e.Graphics.DrawRectangle(Pens.DimGray, rect);
        }

        private void TemaClaroPanel_MouseHover(object sender, EventArgs e)
        {
            TemaClaroPanel.Cursor = Cursors.Hand;
        }

        private void TemaClaroPanel_MouseLeave(object sender, EventArgs e)
        {
            TemaClaroPanel.Cursor = Cursors.Default;
        }

        private void TemaBlackPanel_MouseHover(object sender, EventArgs e)
        {
            TemaBlackPanel.Cursor = Cursors.Hand;
        }

        private void TemaBlackPanel_MouseLeave(object sender, EventArgs e)
        {
            TemaBlackPanel.Cursor = Cursors.Default;
        }

        private void TemaClaroPanel_Click(object sender, EventArgs e)
        {
            TemaPanel.Visible = false;
            if (Publicas._TemaBlack)
            {
                Publicas._TemaBlack = false;
                Publicas._mensagemSistema = (Publicas._alterouSkin ? "Aguarde, aplicando o tema." : string.Empty);
                mensagemLabel.Text = Publicas._mensagemSistema;
                FundoPictureBox.ImageLocation = @"Imagens\FundoAzul.png";
                _imagemUsada = @"Imagens\FundoAzul.png";
                this.Refresh();
                Publicas._fonte = Publicas.padraoNIFFClaro_FonteEscura;
                Publicas._fundo = Publicas.padraoNiffClaro_Fundo;
                Publicas._bordaSaida = Publicas.padraoNIFFClaro_BordaSaida;
                Publicas._bordaEntrada = Publicas.padraoNIFFClaro_BordaEntrada;
                Publicas._tabPageAtiva = Publicas.padraoNIFFClaro_BordaEntrada;
                Publicas._botaoFocado = Publicas.padraoNIFFClaro_BotaoFocado;
                Publicas._botao = Publicas.padraoNIFFClaro_Botao;
                Publicas._fonteBotao = Publicas.padraoNIFFClaro_FonteBotao;
                Publicas._fonteBotaoFocado = Publicas.padraoNIFFClaro_FonteBotaoFocado;
                Publicas._panelTitulo = Publicas.padraoNIFFClaro_PanelTitulo;
                Publicas._panelTituloFoco = Publicas.padraoNIFFClaro_PanelTituloFoco;
                Publicas.AplicarSkin(this);
            }

            #region Cor Grids
            metroColor.GroupDropAreaColor.BackColor = Publicas._bordaEntrada;
            metroColor.HeaderBottomBorderColor = Publicas._bordaEntrada;
            metroColor.HeaderColor.HoverColor = Publicas._bordaEntrada;
            metroColor.HeaderColor.PressedColor = Publicas._bordaEntrada;

            if (Publicas._TemaBlack)
                metroColor.HeaderColor.NormalColor = Publicas._bordaEntrada;

            metroColor.CheckBoxColor.BorderColor = Publicas._bordaEntrada;
            metroColor.PushButtonColor.PushedBackColor = Publicas._bordaEntrada;
            metroColor.PushButtonColor.HoverBackColor = Publicas._bordaEntrada;
            metroColor.PushButtonColor.NormalBackColor = Color.WhiteSmoke;
            metroColor.ComboboxColor.NormalBorderColor = Publicas._bordaEntrada;
            metroColor.ComboboxColor.HoverBorderColor = Publicas._bordaEntrada;
            metroColor.ComboboxColor.HoverBackColor = Publicas._bordaEntrada;
            metroColor.ComboboxColor.PressedBackColor = Publicas._bordaEntrada;
            if (Publicas._TemaBlack)
                metroColor.ComboboxColor.NormalBackColor = Publicas._fundo;
            else
                metroColor.ComboboxColor.NormalBackColor = Color.WhiteSmoke;
            #endregion

            TemaClaroSelecionadoLabel.Visible = true;
            TemaBlackSelecionadoLabel.Visible = false;
            Publicas._alterouSkin = false;
            Publicas._mensagemSistema = "";
            mensagemLabel.Text = Publicas._mensagemSistema;
            NaoAplicarTemasCheckBox.ForeColor = Publicas._bordaEntrada;
            _corFundoMenu = System.Drawing.Color.FromArgb(128, 131, 143);
            _corFundoDivisao = Color.Silver;

            this.Refresh();
        }

        private void TemaBlackPanel_Click(object sender, EventArgs e)
        {
            TemaPanel.Visible = false;
            Publicas._TemaBlack = true;
            Publicas._alterouSkin = true;
            Publicas._mensagemSistema = (Publicas._alterouSkin ? "Aguarde, aplicando o tema." : string.Empty);
            mensagemLabel.Text = Publicas._mensagemSistema;
            int pos = new Random().Next(0, 3); 
            FundoPictureBox.ImageLocation = @"Imagens\" + _fundoBlackNome[pos];
            _imagemUsada = @"Imagens\" + _fundoBlackNome[pos];
            this.Refresh();
            Publicas._fonte = Publicas.padraoEscuroPreto_FonteEscura;
            Publicas._fundo = Publicas.padraoEscuroPreto_Fundo; ;
            Publicas._bordaSaida = Publicas.padraoEscuroPreto_BordaSaida;
            Publicas._bordaEntrada = Publicas.padraoEscuroPreto_BordaEntrada;
            Publicas._tabPageAtiva = Publicas.padraoEscuroPreto_BordaEntrada;
            Publicas._botaoFocado = Publicas.padraoEscuroPreto_BotaoFocado;
            Publicas._botao = Publicas.padraoEscuroPreto_Botao;
            Publicas._fonteBotao = Publicas.padraoEscuroPreto_FonteBotao;
            Publicas._fonteBotaoFocado = Publicas.padraoEscuroPreto_FonteBotaoFocado;
            Publicas._panelTitulo = Publicas.padraoEscuroPreto_PanelTitulo;
            Publicas._panelTituloFoco = Publicas.padraoEscuroPreto_PanelTituloFoco;
            Publicas.AplicarSkin(this);
            Publicas._mensagemSistema = "";
            mensagemLabel.Text = Publicas._mensagemSistema;
            TemaClaroSelecionadoLabel.Visible = false;
            TemaBlackSelecionadoLabel.Visible = true;
            NaoAplicarTemasCheckBox.ForeColor = Publicas._fonte;
            _corFundoMenu = Publicas._panelTitulo;
            _corFundoDivisao = Publicas._botaoFocado;

            #region Cor Grids
            metroColor.GroupDropAreaColor.BackColor = Publicas._bordaEntrada;
            metroColor.HeaderBottomBorderColor = Publicas._bordaEntrada;
            metroColor.HeaderColor.HoverColor = Publicas._bordaEntrada;
            metroColor.HeaderColor.PressedColor = Publicas._bordaEntrada;

            if (Publicas._TemaBlack)
                metroColor.HeaderColor.NormalColor = Publicas._bordaEntrada;

            metroColor.CheckBoxColor.BorderColor = Publicas._bordaEntrada;
            metroColor.PushButtonColor.PushedBackColor = Publicas._bordaEntrada;
            metroColor.PushButtonColor.HoverBackColor = Publicas._bordaEntrada;
            metroColor.PushButtonColor.NormalBackColor = Color.WhiteSmoke;
            metroColor.ComboboxColor.NormalBorderColor = Publicas._bordaEntrada;
            metroColor.ComboboxColor.HoverBorderColor = Publicas._bordaEntrada;
            metroColor.ComboboxColor.HoverBackColor = Publicas._bordaEntrada;
            metroColor.ComboboxColor.PressedBackColor = Publicas._bordaEntrada;
            if (Publicas._TemaBlack)
                metroColor.ComboboxColor.NormalBackColor = Publicas._fundo;
            else
                metroColor.ComboboxColor.NormalBackColor = Color.WhiteSmoke;
            #endregion

            pictureBox129.BackColor = System.Drawing.Color.FromArgb(115, 117, 128);
            pictureBox2.BackColor = System.Drawing.Color.FromArgb(115, 117, 128);
            pictureBox4.BackColor = System.Drawing.Color.FromArgb(115, 117, 128);

            LivrosResenhaGrid.GridOfficeScrollBars = OfficeScrollBars.Office2010;
            LivrosResenhaGrid.ColorStyles = ColorStyles.Office2010Black;
            LivrosResenhaGrid.GridVisualStyles = GridVisualStyles.Office2016Black;
            LivrosResenhaGrid.BackColor = Publicas._panelTitulo;
            ApostasBolaoGrid.GridOfficeScrollBars = OfficeScrollBars.Office2010;
            ApostasBolaoGrid.ColorStyles = ColorStyles.Office2010Black;
            ApostasBolaoGrid.GridVisualStyles = GridVisualStyles.Office2016Black;
            ApostasBolaoGrid.BackColor = Publicas._panelTitulo;
            FinalistasGrid.GridOfficeScrollBars = OfficeScrollBars.Office2010;
            FinalistasGrid.ColorStyles = ColorStyles.Office2010Black;
            FinalistasGrid.GridVisualStyles = GridVisualStyles.Office2016Black;
            FinalistasGrid.BackColor = Publicas._panelTitulo;
            RamaisGrid.GridOfficeScrollBars = OfficeScrollBars.Office2010;
            RamaisGrid.ColorStyles = ColorStyles.Office2010Black;
            RamaisGrid.GridVisualStyles = GridVisualStyles.Office2016Black;
            RamaisGrid.BackColor = Publicas._panelTitulo;

            AvaliacaoEmAndamentoGrid.GridOfficeScrollBars = OfficeScrollBars.Office2010;
            AvaliacaoEmAndamentoGrid.ColorStyles = ColorStyles.Office2010Black;
            AvaliacaoEmAndamentoGrid.GridVisualStyles = GridVisualStyles.Office2016Black;
            AvaliacaoEmAndamentoGrid.BackColor = Publicas._panelTitulo;
            AvaliacaoFinalizadasGrid.GridOfficeScrollBars = OfficeScrollBars.Office2010;
            AvaliacaoFinalizadasGrid.ColorStyles = ColorStyles.Office2010Black;
            AvaliacaoFinalizadasGrid.GridVisualStyles = GridVisualStyles.Office2016Black;
            AvaliacaoFinalizadasGrid.BackColor = Publicas._panelTitulo;
            AvaliacaoNaoIniciadaGrid.GridOfficeScrollBars = OfficeScrollBars.Office2010;
            AvaliacaoNaoIniciadaGrid.ColorStyles = ColorStyles.Office2010Black;
            AvaliacaoNaoIniciadaGrid.GridVisualStyles = GridVisualStyles.Office2016Black;
            AvaliacaoNaoIniciadaGrid.BackColor = Publicas._panelTitulo;
            rankingGridGroupingControl.GridOfficeScrollBars = OfficeScrollBars.Office2010;
            rankingGridGroupingControl.ColorStyles = ColorStyles.Office2010Black;
            rankingGridGroupingControl.GridVisualStyles = GridVisualStyles.Office2016Black;
            rankingGridGroupingControl.BackColor = Publicas._panelTitulo;

            botoesPanel.BackColor = Publicas._fundo;
            DashBordTabControl.BackColor = Publicas._fundo;
            DashBordTabControl.ActiveTabColor = Publicas._botao;
            DashBordTabControl.InactiveTabColor = Publicas._fundo;
            DashBordTabControl.ActiveTabForeColor = Publicas._fonte;
            DashBordTabControl.InActiveTabForeColor = Publicas._fonteBotaoFocado;
            DashBordTabControl.TabPanelBackColor = Publicas._fundo;

            MostrarAnivervariosCheckBox.ForeColor = Publicas._fonte;
            this.Refresh();
        }

        private void AplicarTemaButton_Click(object sender, EventArgs e)
        {
            string texto = (Publicas._TemaBlack ? "Tema Escuro" : "Tema Claro") +
                (NaoAplicarTemasCheckBox.Checked ? "Sem Temas Comemorativos" : "Com Temas Comemorativos");

            string Arquivo = "";
            if (Environment.MachineName.ToUpper().Contains("CORPTS") || Environment.MachineName.ToUpper().Contains("CORPRDP"))
                Arquivo = Path.GetDirectoryName(Application.ExecutablePath) + @"\" + "PortalNiff_" + Environment.UserName + ".ini";
            else
                Arquivo = Publicas._caminhoPortal + "PortalNiff.ini";

                StreamWriter writer = new StreamWriter(Arquivo);
            writer.WriteLine(Publicas.Encrypta(texto, Publicas.CryptProvider.DES));

            if (checkBoxAdv5.Checked)
                writer.WriteLine(_imagemUsada.Replace("Natal.png", ".jpg").Replace("Halloween.png", ".jpg").Replace("Criancas.png", ".jpg").Replace("Pascoa.png", ".jpg").Replace("Carnaval.png", "jpg"));
            //writer.WriteLine(Publicas.Encrypta(_imagemUsada.Replace("Natal", "").Replace("Halloween", "").Replace("Criancas", "").Replace("Pascoa", "").Replace("Carnaval", "").Replace(".png", "").Replace(".jpg", ""), Publicas.CryptProvider.DES));
             
            writer.Close();

            Publicas._usuario.TemaBlackSelecionado = Publicas._TemaBlack;
            new UsuarioBO().AplicarTema();
        }

        private void TemaPictureBox_MouseHover(object sender, EventArgs e)
        {
            TemaPictureBox.Cursor = Cursors.Hand;
            TemaPictureBox.BackColor = _corMenuSelecionado;
        }

        private void TemaPictureBox_MouseLeave(object sender, EventArgs e)
        {
            TemaPictureBox.Cursor = Cursors.Default;
            TemaPictureBox.BackColor = System.Drawing.Color.FromArgb(128, 131, 143); 
        }
        #endregion

        #region Controle de Horario
        private void ControleDeHorarioPictureBox_MouseHover(object sender, EventArgs e)
        {
            ControleDeHorarioPictureBox.Cursor = Cursors.Hand;
            ControleDeHorarioPictureBox.BackColor = _corMenuSelecionado;
        }

        private void ControleDeHorarioPictureBox_MouseLeave(object sender, EventArgs e)
        {
            ControleDeHorarioPictureBox.Cursor = Cursors.Default;
            ControleDeHorarioPictureBox.BackColor = System.Drawing.Color.FromArgb(128, 131, 143);

        }

        private void ControleDeHorarioPictureBox_Click(object sender, EventArgs e)
        {
            new Cadastros.ControleDeHoras().ShowDialog();
        }
        #endregion

        private void PraxioPictureBox_Click(object sender, EventArgs e)
        {
            if (Environment.MachineName.ToUpper().Contains("CORPTS") || Environment.MachineName.ToUpper().Contains("CORPRDP"))
                Publicas._caminhoPortalGlobus = @"d:\Globus\Sistemas\Menu\PortalDeAcessoAoGlobus.exe";
            else
                Publicas._caminhoPortalGlobus = @"g:\Globus\Sistemas\Menu\PortalDeAcessoAoGlobus.exe";

            try
            {
                System.Diagnostics.Process.Start(Publicas._caminhoPortalGlobus);
            }
            catch
            {
                new Notificacoes.Mensagem("Problemas ao abrir o atalho do Globus." + Environment.NewLine + Publicas._caminhoPortalGlobus, Publicas.TipoMensagem.Alerta).ShowDialog();
                return;
            }

            Log _log = new Log();
            _log.IdUsuario = Publicas._usuario.Id;
            _log.Descricao = "Abriu o Portal do Globus. " + Environment.MachineName.ToUpper(); 
            _log.Tela = "Principal - Globus";

            try
            {
                new LogBO().Gravar(_log);
            }
            catch { }
        }

        private void chamadosMenuStrip_Opening(object sender, CancelEventArgs e)
        {
            responderToolStripMenuItem1.Visible = false;
            agruparChamadosToolStripMenuItem.Visible = false;
            agruparChamadosToolStripMenuItem.Enabled = false;
            moverChamadosToolStripMenuItem.Visible = false;
            atribuirPraMimToolStripMenuItem.Visible = false;
            atribuirParaOAnalistaToolStripMenuItem.Visible = false;
            cobrarRetornoToolStripMenuItem.Visible = false;
            alterarStatusToolStripMenuItem.Visible = false;
            reabrirChamadoToolStripMenuItem.Visible = false;

            convidarOutroUsuárioToolStripMenuItem.Visible = Publicas._usuario.Tipo == Publicas.TipoUsuario.Atendente;
            trocarSolicitanteToolStripMenuItem.Visible = Publicas._usuario.Tipo == Publicas.TipoUsuario.Atendente;

            finalizarChamadoToolStripMenuItem.Visible = false;
            cancelaChamadoToolStripMenuItem.Visible = false;
            aguardandoCronogramaToolStripMenuItem.Visible = false;
            iniciarTemporizadorToolStripMenuItem.Visible = false;
            pausarTemporizadorToolStripMenuItem.Visible = false;
            estimarHorasToolStripMenuItem.Visible = false;
            toolStripMenuItem4.Visible = Publicas._usuario.Tipo == Publicas.TipoUsuario.Atendente;
            toolStripMenuItem5.Visible = Publicas._usuario.Tipo == Publicas.TipoUsuario.Atendente;
            toolStripMenuItem7.Visible = Publicas._usuario.Tipo == Publicas.TipoUsuario.Atendente;
            toolStripMenuItem9.Visible = false;
            liberarParaReavaliaçãoToolStripMenuItem.Visible = Publicas._usuario.Administrador;

            try
            {
                _rowIndexComunicado = ChamadosDashBoardGrid.Table.CurrentRecord.GetRecord().GetRowIndex();

                GridRecordRow rec = this.ChamadosDashBoardGrid.Table.DisplayElements[_rowIndexComunicado] as GridRecordRow;
                if (rec != null)
                {
                    Record dr = rec.GetRecord() as Record;
                    if (dr != null)
                    {
                        Publicas._codigoRetornoPesquisa = (string)dr["Numero"];
                    }
                }

                int pos = 0;
                
                try
                {
                    _listaChamadosPesquisas.AddRange(_listaChamados);
                }
                catch { }

                try
                {
                    _listaChamadosPesquisas.AddRange(_listaChamadosFinalizados);
                }
                catch { }

                try
                {
                    _listaChamadosPesquisas.AddRange(_listaChamadosCancelados);
                }
                catch { }

                foreach (Chamado item in _listaChamadosPesquisas.Where(w => w.Numero == Publicas._codigoRetornoPesquisa))
                {
                    responderToolStripMenuItem1.Visible = true;
                    agruparChamadosToolStripMenuItem.Visible = Publicas._usuario.Tipo == Publicas.TipoUsuario.Atendente;
                    agruparChamadosToolStripMenuItem.Enabled = item.Agrupar && Publicas._usuario.Tipo == Publicas.TipoUsuario.Atendente;
                    moverChamadosToolStripMenuItem.Visible = Publicas._usuario.Tipo == Publicas.TipoUsuario.Atendente;
                    atribuirPraMimToolStripMenuItem.Visible = Publicas._usuario.Tipo == Publicas.TipoUsuario.Atendente && (item.NomeAnalista == "" || item.NomeAnalista == null);
                    atribuirParaOAnalistaToolStripMenuItem.Visible = Publicas._usuario.Tipo == Publicas.TipoUsuario.Atendente;
                    cobrarRetornoToolStripMenuItem.Visible = Publicas._usuario.Tipo == Publicas.TipoUsuario.Atendente && (item.SLA < DateTime.Now || item.Status == Publicas.StatusChamado.Finalizado);
                    alterarStatusToolStripMenuItem.Visible = Publicas._usuario.Tipo == Publicas.TipoUsuario.Atendente && item.Status != Publicas.StatusChamado.Finalizado && item.Status != Publicas.StatusChamado.Cancelado;
                    reabrirChamadoToolStripMenuItem.Visible = Publicas._usuario.Tipo == Publicas.TipoUsuario.Atendente && (item.Status == Publicas.StatusChamado.Finalizado || item.Status == Publicas.StatusChamado.Cancelado);

                    finalizarChamadoToolStripMenuItem.Visible = item.Status != Publicas.StatusChamado.Finalizado && item.Status != Publicas.StatusChamado.Cancelado &&
                        item.Status != Publicas.StatusChamado.Novo && item.Status != Publicas.StatusChamado.Reaberto &&
                        item.Status != Publicas.StatusChamado.AguardandoCronograma;

                    cancelaChamadoToolStripMenuItem.Visible = Publicas._usuario.Tipo == Publicas.TipoUsuario.Atendente;
                    aguardandoCronogramaToolStripMenuItem.Visible = item.IdCategoria == 9 || item.IdCategoria == 10; // Support e PowerBI

                    toolStripMenuItem9.Visible = item.Status != Publicas.StatusChamado.Finalizado && item.Status != Publicas.StatusChamado.Cancelado &&
                        item.Status != Publicas.StatusChamado.Novo && item.Status != Publicas.StatusChamado.Reaberto &&
                        item.Status != Publicas.StatusChamado.AguardandoCronograma;

                    aguardandoAnalistaToolStripMenuItem.Visible = Publicas._usuario.Tipo == Publicas.TipoUsuario.Atendente && item.Status != Publicas.StatusChamado.Finalizado && item.Status != Publicas.StatusChamado.Cancelado;
                    aguardandoSolicitanteToolStripMenuItem.Visible = Publicas._usuario.Tipo == Publicas.TipoUsuario.Atendente && item.Status != Publicas.StatusChamado.Finalizado && item.Status != Publicas.StatusChamado.Cancelado;
                    
                    liberarParaReavaliaçãoToolStripMenuItem.Enabled = Publicas._usuario.Administrador && item.Status == Publicas.StatusChamado.Finalizado && 
                                                                      item.Avaliacao != Publicas.TipoDeSatisfacaoAtendimento.SemAvaliacao &&
                                                                      !item.Reavaliar;

                    iniciarTemporizadorToolStripMenuItem.Visible = Publicas._usuario.Tipo == Publicas.TipoUsuario.Atendente &&
                                                                   item.Status != Publicas.StatusChamado.Finalizado && 
                                                                   item.Status != Publicas.StatusChamado.Cancelado &&
                                                                   item.Status != Publicas.StatusChamado.Novo &&
                                                                   item.IdUsuario != Publicas._usuario.Id && 
                                                                   _listaChamados.Where(w => w.IdAtendente == Publicas._usuario.Id && w.TemporizadorEmAndamento).Count() == 0;

                    pausarTemporizadorToolStripMenuItem.Visible = Publicas._usuario.Tipo == Publicas.TipoUsuario.Atendente &&
                                                                  item.Status != Publicas.StatusChamado.Finalizado && 
                                                                  item.Status != Publicas.StatusChamado.Cancelado &&
                                                                  item.Status != Publicas.StatusChamado.Novo &&
                                                                  item.IdUsuario != Publicas._usuario.Id 
                                                                  && item.TemporizadorEmAndamento
                                                                   ;

                    estimarHorasToolStripMenuItem.Visible = Publicas._usuario.Tipo == Publicas.TipoUsuario.Atendente &&
                        item.Status == Publicas.StatusChamado.Novo &&
                        item.IdUsuario != Publicas._usuario.Id;

                    List<Usuario> _listaUsuarios = new UsuarioBO().ConsultaAtendentesParaACategoria(item.IdCategoria);

                    Analista1toolStripMenuItem7.Visible = false;
                    Analista2toolStripMenuItem8.Visible = false;
                    Analista3toolStripMenuItem9.Visible = false;
                    Analista4toolStripMenuItem10.Visible = false;
                    Analista5toolStripMenuItem11.Visible = false;
                    Analista6toolStripMenuItem12.Visible = false;
                    Analista7toolStripMenuItem13.Visible = false;

                    pos = 0;
                    foreach (var itemU in _listaUsuarios.OrderBy(o => o.Nome))
                    {
                        string[] nome = itemU.Nome.Split(' ');
                        pos++;
                        switch (pos)
                        {
                            case 1 : Analista1toolStripMenuItem7.Text = nome[0] + " " + nome[nome.Length - 1];
                                Analista1toolStripMenuItem7.Tag = itemU.Id;
                                Analista1toolStripMenuItem7.Visible = true;
                                break;
                            case 2:
                                Analista2toolStripMenuItem8.Text = nome[0] + " " + nome[nome.Length - 1];
                                Analista2toolStripMenuItem8.Tag = itemU.Id;
                                Analista2toolStripMenuItem8.Visible = true;
                                break;
                            case 3:
                                Analista3toolStripMenuItem9.Text = nome[0] + " " + nome[nome.Length - 1];
                                Analista3toolStripMenuItem9.Tag = itemU.Id;
                                Analista3toolStripMenuItem9.Visible = true;
                                break;
                            case 4:
                                Analista4toolStripMenuItem10.Text = nome[0] + " " + nome[nome.Length - 1];
                                Analista4toolStripMenuItem10.Tag = itemU.Id;
                                Analista4toolStripMenuItem10.Visible = true;
                                break;
                            case 5:
                                Analista5toolStripMenuItem11.Visible = true;
                                Analista5toolStripMenuItem11.Tag = itemU.Id;
                                Analista5toolStripMenuItem11.Text = nome[0] + " " + nome[nome.Length - 1];
                                break;
                            case 6:
                                Analista6toolStripMenuItem12.Text = nome[0] + " " + nome[nome.Length - 1];
                                Analista6toolStripMenuItem12.Visible = true;
                                Analista6toolStripMenuItem12.Tag = item.IdUsuario;
                                break;
                            case 7:
                                Analista7toolStripMenuItem13.Text = nome[0] + " " + nome[nome.Length - 1];
                                Analista7toolStripMenuItem13.Visible = true;
                                Analista7toolStripMenuItem13.Tag = itemU.Id;
                                break;
                            default:
                                break;
                        }
                    }
                }
            }
            catch { }
        }

        private void Analista1toolStripMenuItem7_Click(object sender, EventArgs e)
        {
            int _id = Convert.ToInt32(((ToolStripMenuItem)sender).Tag);
            string[] nomeUsu = Publicas._usuario.Nome.Split(' ');
            try
            {
                GridRecordRow rec = this.ChamadosDashBoardGrid.Table.DisplayElements[ChamadosDashBoardGrid.TableControl.CurrentCell.RowIndex] as GridRecordRow;

                if (rec != null)
                {
                    string[] _dadosEmail = new string[50];
                    string _emailDestino = "";
                    Record dr = rec.GetRecord() as Record;
                    Classes.Empresa _empresa;
                    if (dr != null)
                    {
                        Publicas._idChamado = (int)dr["IdChamado"];
                        Publicas._sla = (DateTime)dr["SLA"];

                        // verificar se já foi finalizado ou respondido por outro 
                        Classes.Chamado _chamadoAux = new ChamadoBO().Consulta(Publicas._idChamado);
                        //if (_chamadoAux.NomeAnalista != null)
                        //    new Notificacoes.Mensagem("Chamado em atendimento." + Environment.NewLine + Publicas.mensagemDeErro, Publicas.TipoMensagem.Alerta).ShowDialog();
                        //else
                        {
                            foreach (var item in _listaChamados.Where(w => w.IdChamado == Publicas._idChamado))
                            {
                                item.Status = Publicas.StatusChamado.EmAndamento;
                                if (!new ChamadoBO().Gravar(item))
                                {
                                    new Notificacoes.Mensagem("Problemas durante a gravação." + Environment.NewLine + Publicas.mensagemDeErro, Publicas.TipoMensagem.Erro).ShowDialog();
                                    return;
                                }
                                _empresa = new EmpresaBO().Consultar(item.IdEmpresa);

                                List<HistoricoDoChamado> _ultimoHistoricos = new ChamadoBO().ListarHistoricos(item.IdChamado, true, true);
                                Classes.Usuario usuario = new UsuarioBO().ConsultarPorId(_id);

                                // Se nao encontrou o atendente nos tramites irá buscar todos os atendentes para a categoria
                                if (_emailDestino == "")
                                    _emailDestino = _emailDestino + usuario.Email + "; ";

                                _dadosEmail[0] = "Chamado " + item.Numero + " atribuido para você";

                                _dadosEmail[1] = DateTime.Now.ToShortDateString() + " " + DateTime.Now.ToShortTimeString();
                                _dadosEmail[3] = _empresa.NomeAbreviado;
                                _dadosEmail[4] = item.Numero;

                                _dadosEmail[5] = "Atribuido para você, pelo(a) " + nomeUsu[0] + " " + nomeUsu[nomeUsu.Length - 1];
                                _dadosEmail[6] = item.Assunto;
                                _dadosEmail[7] = item.Categoria;
                                _dadosEmail[8] = item.Modulo;
                                _dadosEmail[9] = item.Tela;
                                _dadosEmail[10] = item.DescricaoTipo;
                                _dadosEmail[11] = item.DescricaoPrioridade;
                                foreach (var itemH in _ultimoHistoricos.OrderBy(o => o.Data))
                                {
                                    _dadosEmail[12] = itemH.Descricao;
                                    break;
                                }

                                _dadosEmail[13] = "0";
                                _dadosEmail[14] = _parametro.PrazoRetorno.ToString();
                            }

                            string[] nome = Publicas._usuario.Nome.Split(' ');

                            if (Publicas._usuario.AssinaturaChamado == "")
                            {
                                _dadosEmail[16] = "<p style = 'color: #4169e1; font-family: Arial, sans-serif; font-size: 13px'/> Atenciosamente,</br> " +
                                               nome[0] + " " + nome[nome.Length - 1] +
                                               "</font></p>";
                            }
                            else
                            {
                                _dadosEmail[16] = "<p style = 'color: #4169e1; font-family: arial, sans-serif; font-size: 13px'/>" +
                                    Publicas._usuario.AssinaturaChamado + "</font></p>";
                            }

                            new ChamadoBO().GravarHistorico(new HistoricoDoChamado()
                            {
                                IdChamado = Publicas._idChamado,
                                Data = DateTime.Now,
                                IdUsuario = _id,
                                Descricao = (DateTime.Now.Hour < 12 ? "Bom dia" : (DateTime.Now.Hour > 12 && DateTime.Now.Hour < 18 ? "Boa tarde" : "Boa noite")) +
                                Environment.NewLine +
                                Environment.NewLine + "Serei o responsável por esse ticket." +
                                Environment.NewLine + "Em breve darei um retorno à respeito." +
                                Environment.NewLine + ";)",
                                Privado = false,
                                Status = Publicas.StatusChamado.EmAndamento,
                                Usuario = "A"
                            }, new List<AnexoDoHistorico>(), Publicas._sla);


                            if (!Publicas.EnviarEmailChamado(_dadosEmail, true, false, false, _emailDestino, _dadosEmail[0], false, "mdmunoz@niff.com.br"))
                            {
                                new Notificacoes.Mensagem("Problemas durante o envio do e-mail." + Environment.NewLine + Publicas.mensagemDeErro, Publicas.TipoMensagem.Erro).ShowDialog();
                                return;
                            }
                        }
                    }
                }
            }
            catch { }

            if (Publicas._usuario != null && !_chamadosEmPesquisa)
            {
                MensagemChamadosDashBoardLabel.Text = "Aguarde... Pesquisando os chamados.";
                this.Refresh();
                try
                {
                    chamadosBackgroundWorker.RunWorkerAsync();
                }
                catch { }
                MensagemChamadosDashBoardLabel.Text = "";
                this.Refresh();

            }
        }

        private void Analista2toolStripMenuItem8_Click(object sender, EventArgs e)
        {
            Analista1toolStripMenuItem7_Click(sender, new EventArgs());
        }

        private void Analista3toolStripMenuItem9_Click(object sender, EventArgs e)
        {
            Analista1toolStripMenuItem7_Click(sender, new EventArgs());
        }

        private void Analista4toolStripMenuItem10_Click(object sender, EventArgs e)
        {
            Analista1toolStripMenuItem7_Click(sender, new EventArgs());
        }

        private void Analista5toolStripMenuItem11_Click(object sender, EventArgs e)
        {
            Analista1toolStripMenuItem7_Click(sender, new EventArgs());
        }

        private void Analista6toolStripMenuItem12_Click(object sender, EventArgs e)
        {
            Analista1toolStripMenuItem7_Click(sender, new EventArgs());
        }

        private void Analista7toolStripMenuItem13_Click(object sender, EventArgs e)
        {
            Analista1toolStripMenuItem7_Click(sender, new EventArgs());
        }

        private void Chamado6Label_MouseHover(object sender, EventArgs e)
        {
            ((Label)sender).Cursor = Cursors.Hand;
        }

        private void Chamado6Label_MouseLeave(object sender, EventArgs e)
        {
            ((Label)sender).Cursor = Cursors.Default;
        }

        private void Chamado6Label_Click(object sender, EventArgs e)
        {
            LembreteChamadosPanel.Visible = false;
            Publicas._idChamado = Convert.ToInt32(((Label)sender).Tag);
            foreach (var item in _listaChamados.Where(w => w.IdChamado == Publicas._idChamado))
            {
                Publicas._idTemporizador = item.IdTemporizador;
            }
            FecharDashBoard();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaChamado;
            Chamados.Tramites _tela = new Chamados.Tramites();

            if (_tela.Width > this.Width)
                _tela.Size = new Size(this.Width - 5, this.Height - (tituloPanel.Height + panel2.Height + 2));

            _tela.ShowDialog();

            _chamadosEmPesquisa = false;
            NomePadrao();

            if (Publicas._usuario != null && !_chamadosEmPesquisa)
            {
                MensagemChamadosDashBoardLabel.Text = "Aguarde... Pesquisando os chamados.";
                this.Refresh();
                try
                {
                    chamadosBackgroundWorker.RunWorkerAsync();
                }
                catch { }
                MensagemChamadosDashBoardLabel.Text = "";
                this.Refresh();

            }
        }

        private void VerMaisTardeLabel_Click(object sender, EventArgs e)
        {
            LembreteChamadosPanel.Visible = false;
            _verLembretesMaisTarde = true;
            _timeIniciolembrarMaisTarde = DateTime.Now;
        }

        private void aguardandoSolicitanteToolStripMenuItem_Click(object sender, EventArgs e)
        {
            try
            {
                GridRecordRow rec = this.ChamadosDashBoardGrid.Table.DisplayElements[ChamadosDashBoardGrid.TableControl.CurrentCell.RowIndex] as GridRecordRow;

                if (rec != null)
                {
                    Record dr = rec.GetRecord() as Record;

                    if (dr != null)
                    {
                        Publicas._idChamado = (int)dr["IdChamado"];

                        Classes.Chamado _chamadoAux = new ChamadoBO().Consulta(Publicas._idChamado);
                        _chamadoAux.Status = Publicas.StatusChamado.Pendente;

                        if (!new ChamadoBO().Gravar(_chamadoAux))
                        {
                            new Notificacoes.Mensagem("Problemas durante a gravação." + Environment.NewLine + Publicas.mensagemDeErro, Publicas.TipoMensagem.Erro).ShowDialog();
                            return;
                        }

                    }

                    if (Publicas._usuario != null && !_chamadosEmPesquisa)
                    {
                        MensagemChamadosDashBoardLabel.Text = "Aguarde... Pesquisando os chamados.";
                        this.Refresh();
                        try
                        {
                            chamadosBackgroundWorker.RunWorkerAsync();
                        }
                        catch { }
                        MensagemChamadosDashBoardLabel.Text = "";
                        this.Refresh();

                    }
                }

            }
            catch { }
        }

        private void aguardandoAnalistaToolStripMenuItem_Click(object sender, EventArgs e)
        {
            try
            {
                GridRecordRow rec = this.ChamadosDashBoardGrid.Table.DisplayElements[ChamadosDashBoardGrid.TableControl.CurrentCell.RowIndex] as GridRecordRow;

                if (rec != null)
                {
                    Record dr = rec.GetRecord() as Record;

                    if (dr != null)
                    {
                        Publicas._idChamado = (int)dr["IdChamado"];

                        Classes.Chamado _chamadoAux = new ChamadoBO().Consulta(Publicas._idChamado);
                        _chamadoAux.Status = Publicas.StatusChamado.EmAndamento;

                        if (!new ChamadoBO().Gravar(_chamadoAux))
                        {
                            new Notificacoes.Mensagem("Problemas durante a gravação." + Environment.NewLine + Publicas.mensagemDeErro, Publicas.TipoMensagem.Erro).ShowDialog();
                            return;
                        }
                    }

                    if (Publicas._usuario != null && !_chamadosEmPesquisa)
                    {
                        MensagemChamadosDashBoardLabel.Text = "Aguarde... Pesquisando os chamados.";
                        this.Refresh();
                        try
                        {
                            chamadosBackgroundWorker.RunWorkerAsync();
                        }
                        catch { }
                        MensagemChamadosDashBoardLabel.Text = "";
                        this.Refresh();

                    }
                }
            }
            catch { }
        }

        private void ChamadoAutorizar1Label_Click(object sender, EventArgs e)
        {
            LembreteChamadosPanel.Visible = false;
            Publicas._idChamado = Convert.ToInt32(((Label)sender).Tag);
            FecharDashBoard();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaChamado;
            Chamados.Tramites _tela = new Chamados.Tramites();

            if (_tela.Width > this.Width)
                _tela.Size = new Size(this.Width - 5, this.Height - (tituloPanel.Height + panel2.Height + 2));

            _tela.ShowDialog();

            _chamadosEmPesquisa = false;
            NomePadrao();

            if (Publicas._usuario != null && !_chamadosEmPesquisa)
            {
                MensagemChamadosDashBoardLabel.Text = "Aguarde... Pesquisando os chamados.";
                this.Refresh();
                try
                {
                    chamadosBackgroundWorker.RunWorkerAsync();
                }
                catch { }
                MensagemChamadosDashBoardLabel.Text = "";
                this.Refresh();

            }
        }

        private void ChamadoAutorizar1Label_MouseLeave(object sender, EventArgs e)
        {
            ((Label)sender).Cursor = Cursors.Default;
        }

        private void ChamadoAutorizar1Label_MouseHover(object sender, EventArgs e)
        {
            ((Label)sender).Cursor = Cursors.Hand;
        }

        private void CapituraTelaPictureBox_Click(object sender, EventArgs e)
        {

            try
            {
                System.Diagnostics.Process snippingToolProcess = new System.Diagnostics.Process();
                snippingToolProcess.EnableRaisingEvents = true;
                if (!Environment.Is64BitProcess)
                {
                    snippingToolProcess.StartInfo.FileName = "C:\\Windows\\sysnative\\SnippingTool.exe";
                    snippingToolProcess.Start();
                }
                else
                {
                    snippingToolProcess.StartInfo.FileName = "C:\\Windows\\system32\\SnippingTool.exe";
                    snippingToolProcess.Start();
                }
            }
            catch
            {
                new Notificacoes.Mensagem("Não foi possível abril a ferramenta de captura de tela.", Publicas.TipoMensagem.Erro).ShowDialog();
                return;
            }
        }

        private void FolderPictureBox_Click(object sender, EventArgs e)
        {
            Publicas.AbrirGerenciadorDeArquivos(Publicas._caminhoAnexosChamado);
        }

        private void TelaInicial_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.F5)
                CapituraTelaPictureBox_Click(sender, e);
            if (e.KeyCode == Keys.F6)
                FolderPictureBox_Click(sender, e);
        }

        private void Ferias01label_Click(object sender, EventArgs e)
        {

            Classes.Usuario _usuario = new Classes.Usuario();
            Classes.ProgramacaoFerias _prog = new ProgramacaoFerias();
            List<Empresa> _listaEmpresas = new EmpresaBO().Listar(false);

            foreach (var item in _listaProgramacao.Where(w => w.Id == Convert.ToInt32(((Label)sender).Tag)))
            {
                _prog = item;
            }

            _usuario = new UsuarioBO().ConsultaUsuarioPorCodigoFuncionarioGlobus(_prog.CodIntFunc);

            new ProgramacaoFeriasBO().GravarComoVisto(_prog.Id);

                DepartamentoPessoal.AutorizacaoProgramacaoDeFerias _tela = new DepartamentoPessoal.AutorizacaoProgramacaoDeFerias();

                _tela.empresaComboBoxAdv.DataSource = _listaEmpresas.OrderBy(o => o.CodigoeNome).ToList();
                _tela.empresaComboBoxAdv.DisplayMember = "CodigoeNome";
                _tela.empresaComboBoxAdv.Focus();

                _empresa = new EmpresaBO().Consultar(_usuario.IdEmpresa);

                for (int i = 0; i < _tela.empresaComboBoxAdv.Items.Count; i++)
                {
                    _tela.empresaComboBoxAdv.SelectedIndex = i;
                    if (_tela.empresaComboBoxAdv.Text == _empresa.CodigoeNome)
                    {
                        break;
                    }
                }

                _tela.usuarioTextBox.Text = _usuario.RegistroFuncionario;
                _tela.inicialDateTimePicker.Value = _prog.DataInicio;

                _tela.ShowDialog();
        }

        private void Ferias01label_MouseHover(object sender, EventArgs e)
        {
            ((Label)sender).Cursor = Cursors.Hand;
        }

        private void Ferias01label_MouseLeave(object sender, EventArgs e)
        {
            ((Label)sender).Cursor = Cursors.Default;
        }

        private void label34_Click(object sender, EventArgs e)
        {
            FeriasAutorizarPanel.Visible = false;
            _autorizarFeriasMaisTarde = true;
            _timeInicioAutorizarFeriasMaisTarde = DateTime.Now;

        }

        private void convidarOutroUsuárioToolStripMenuItem_Click(object sender, EventArgs e)
        {
            try
            {
                new Pesquisas.Usuarios().ShowDialog();

                if (Publicas._usuarioAcesso != "")
                {
                    Classes.Usuario _usu = new UsuarioBO().Consultar(Publicas._usuarioAcesso);

                    GridRecordRow rec = this.ChamadosDashBoardGrid.Table.DisplayElements[ChamadosDashBoardGrid.TableControl.CurrentCell.RowIndex] as GridRecordRow;

                    if (rec != null)
                    {
                        Record dr = rec.GetRecord() as Record;

                        if (dr != null)
                        {
                            Publicas._idChamado = (int)dr["IdChamado"];

                            Classes.Chamado _chamadoAux = new ChamadoBO().Consulta(Publicas._idChamado);
                            _chamadoAux.IdUsuarioAcompanhamento = _usu.Id;


                            if (!new ChamadoBO().Gravar(_chamadoAux))
                            {
                                new Notificacoes.Mensagem("Problemas durante a gravação." + Environment.NewLine + Publicas.mensagemDeErro, Publicas.TipoMensagem.Erro).ShowDialog();
                                return;
                            }

                            Log _log = new Log();
                            _log.IdUsuario = Publicas._usuario.Id;

                            _log.Descricao = "Convidou o o usuário " + _usu.Nome + " para acompanhar o chamado " + _chamadoAux.Numero + "do Solicitante " + _chamadoAux.NomeSolicitante;
                            _log.Tela = "Tramites - Chamado";

                            try
                            {
                                new LogBO().Gravar(_log);
                            }
                            catch { }

                            string[] _dadosEmail = new string[50];

                            List<HistoricoDoChamado> _ultimoHistoricos = new ChamadoBO().ListarHistoricos(_chamadoAux.IdChamado, false, true);

                            string _emailDestino = "";
                            string[] nome = Publicas._usuario.Nome.Split(' ');

                            _emailDestino = _usu.Email + "; ";

                            _dadosEmail[2] = nome[0];

                            _emailDestino = _emailDestino.Substring(0, _emailDestino.Length - 2);

                            _dadosEmail[0] = "Convite para acompanhar o Chamado " + _chamadoAux.Numero;

                            _dadosEmail[1] = DateTime.Now.ToShortDateString() + " " + DateTime.Now.ToShortTimeString();
                            _dadosEmail[3] = _chamadoAux.EmpresaSelecionada;
                            _dadosEmail[4] = _chamadoAux.Numero;

                            _dadosEmail[5] = (_chamadoAux.Status == Publicas.StatusChamado.Finalizado ? "Finalizado" :
                                             (_chamadoAux.Status == Publicas.StatusChamado.Reaberto ? "Reaberto" : "Convite"));
                            _dadosEmail[6] = _chamadoAux.Assunto;
                            _dadosEmail[7] = _chamadoAux.Categoria;
                            _dadosEmail[8] = _chamadoAux.Modulo;
                            _dadosEmail[9] = _chamadoAux.Tela;
                            _dadosEmail[14] = _parametro.PrazoRetorno.ToString();

                            if (Publicas._usuario.AssinaturaChamado == "")
                            {
                                _dadosEmail[16] = "<p style = 'color: #4169e1; font-family: Arial, sans-serif; font-size: 13px'/> Atenciosamente,</br> " +
                                               nome[0] + " " + nome[nome.Length - 1] +
                                               "</font></p>";
                            }
                            else
                            {
                                _dadosEmail[16] = "<p style = 'color: #4169e1; font-family: arial, sans-serif; font-size: 13px'/>" +
                                    Publicas._usuario.AssinaturaChamado + "</font></p>";
                            }

                            _dadosEmail[12] = _ultimoHistoricos[0].Descricao +
                                "</br> (último tramite do chamado) </br> Você foi convidado para acompanhar este chamado. </br></br>" + 
                                "Caso este chamado estiver finalizado, filtre para mostrar os finalizados que ele aparecerá na sua lista.";

                            if (!Publicas.EnviarEmailChamado(_dadosEmail, true, false, false, _usu.Email + ";" + Publicas._usuario.Email, _dadosEmail[0], false, ""))
                            {
                                new Notificacoes.Mensagem("Problemas durante o envio do e-mail." + Environment.NewLine + Publicas.mensagemDeErro, Publicas.TipoMensagem.Erro).ShowDialog();
                                return;
                            }
                        }

                        if (Publicas._usuario != null && !_chamadosEmPesquisa)
                        {
                            MensagemChamadosDashBoardLabel.Text = "Aguarde... Pesquisando os chamados.";
                            this.Refresh();
                            try
                            {
                                chamadosBackgroundWorker.RunWorkerAsync();
                            }
                            catch { }
                            MensagemChamadosDashBoardLabel.Text = "";
                            this.Refresh();

                        }
                    }
                }
            }
            catch { }
        }

        private void ChamadoAutorizarPanel_Paint(object sender, PaintEventArgs e)
        {
            Rectangle rect = ((Panel)sender).ClientRectangle;
            rect.Width--;
            rect.Height--;
            e.Graphics.DrawRectangle((Publicas._TemaBlack ? Pens.Silver : Pens.Navy), rect);
        }

        private void FeriasAutorizarPanel_Paint(object sender, PaintEventArgs e)
        {
            Rectangle rect = ((Panel)sender).ClientRectangle;
            rect.Width--;
            rect.Height--;
            e.Graphics.DrawRectangle((Publicas._TemaBlack ? Pens.Silver : Pens.Navy), rect);
        }

        private void LembreteChamadosPanel_Paint(object sender, PaintEventArgs e)
        {
            Rectangle rect = ((Panel)sender).ClientRectangle;
            rect.Width--;
            rect.Height--;
            e.Graphics.DrawRectangle((Publicas._TemaBlack ? Pens.Silver : Pens.Navy), rect);
        }

        private void chamadosFinalizadosPanel_Paint(object sender, PaintEventArgs e)
        {
            Rectangle rect = ((Panel)sender).ClientRectangle;
            rect.Width--;
            rect.Height--;
            e.Graphics.DrawRectangle((Publicas._TemaBlack ? Pens.Silver : Pens.Navy), rect);
        }

        private void TipoAgendaComboBox_SelectedIndexChanged(object sender, EventArgs e)
        {
            if (Publicas._usuario == null)
                return;

            dataSchedule.MasterList = new SimpleScheduleAppointmentList();

            // buscar as agendas cadastradas para o tipo selecionado.
            Publicas.TipoAgenda _tipo;

            switch (TipoAgendaComboBox.SelectedIndex)
            {
                case 0:
                    _tipo = Publicas.TipoAgenda.SalaDeReuniao;
                    break;
                case 1:
                    _tipo = Publicas.TipoAgenda.Carro;
                    break;
                case 2:
                    _tipo = Publicas.TipoAgenda.Visita;
                    break;
                case 3:
                    _tipo = Publicas.TipoAgenda.TreinamentoExterno;
                    break;
                case 4:
                    _tipo = Publicas.TipoAgenda.TreinamentoInterno;
                    break;
                case 5:
                    _tipo = Publicas.TipoAgenda.Particular;
                    break;
                default:
                    _tipo = Publicas.TipoAgenda.Todos;
                    break;
            }

            //_listaAgenda = new AgendaBO().Listar(Publicas._usuario.Id, _tipo);

            List<Classes.Agenda> _agenda = new List<Classes.Agenda>();

            #region Cores 
            if (Publicas._TemaBlack)
            {
                try
                {
                    AgendaScheduleControl.GetScheduleHost().Schedule.Appearance.VisualStyle = GridVisualStyles.Office2016Black;
                }
                catch { }

                // parte dos calendários
                AgendaScheduleControl.Appearance.NavigationCalendarBackColor = Publicas._fundo;
                AgendaScheduleControl.Appearance.NavigationCalendarTextColor = Publicas._fonte;
                AgendaScheduleControl.Appearance.NavigationCalendarSelectionColor = Publicas._botaoFocado;
                AgendaScheduleControl.Appearance.NavigationCalendarHeaderColor = Publicas._botaoFocado;
                AgendaScheduleControl.Appearance.NavigationCalendarWeekNumberColor = Color.DarkGray;
                AgendaScheduleControl.Appearance.NavigationCalendarArrowColor = Color.DarkGray;
                AgendaScheduleControl.Appearance.ClickItemBorderColor = Publicas._panelTitulo;
                AgendaScheduleControl.Appearance.NavigationCalendarTodayColor = Color.LightGray;

                // parte dos horários
                AgendaScheduleControl.Appearance.TimeBackColor = Publicas._fundo;
                AgendaScheduleControl.Appearance.TimeTextColor = Publicas._fonte;

                AgendaScheduleControl.Appearance.AllDayBackColor = Publicas._botaoFocado;
                AgendaScheduleControl.Appearance.MonthWeekHeaderBackColor = Publicas._botaoFocado;
                AgendaScheduleControl.Appearance.MonthWeekHeaderForeColor = Publicas._fonte;
                AgendaScheduleControl.Appearance.WorkWeekHeaderBackColor = Publicas._botaoFocado;
                AgendaScheduleControl.Appearance.WorkWeekHeaderForeColor = Publicas._fonte;

                // Fundo das celulas
                AgendaScheduleControl.Appearance.PrimeTimeCellColor = Publicas._panelTitulo;
                AgendaScheduleControl.Appearance.NonPrimeTimeCellColor = Publicas._botaoFocado;

                AgendaScheduleControl.BackColor = Publicas._fundo;
                AgendaScheduleControl.Appearance.CaptionBackColor = Publicas._fundo;
                AgendaScheduleControl.Appearance.TextColor = Publicas._fonte;
            }
            else
            {
                try
                {
                    AgendaScheduleControl.GetScheduleHost().Schedule.Appearance.VisualStyle = GridVisualStyles.Office2016Colorful;
                }
                catch (NullReferenceException excessao)
                {
                    Console.WriteLine(excessao.StackTrace);
                }

                // parte dos calendários
                AgendaScheduleControl.Appearance.NavigationCalendarBackColor = Publicas._panelTitulo;
                AgendaScheduleControl.Appearance.NavigationCalendarTextColor = Color.WhiteSmoke;
                AgendaScheduleControl.Appearance.NavigationCalendarSelectionColor = System.Drawing.Color.FromArgb(100, 151, 178);
                AgendaScheduleControl.Appearance.NavigationCalendarHeaderColor = System.Drawing.Color.FromArgb(100, 151, 178);
                AgendaScheduleControl.Appearance.NavigationCalendarWeekNumberColor = System.Drawing.Color.FromArgb(100, 151, 178);
                AgendaScheduleControl.Appearance.NavigationCalendarArrowColor = System.Drawing.Color.FromArgb(2, 91, 149);
                AgendaScheduleControl.Appearance.ClickItemBorderColor = Color.LightGray;
                AgendaScheduleControl.Appearance.NavigationCalendarTodayColor = Color.LightGray;

                // parte dos horários
                AgendaScheduleControl.Appearance.TimeBackColor = Publicas._panelTitulo;
                AgendaScheduleControl.Appearance.TimeTextColor = Color.WhiteSmoke;

                // Fundo das celulas
                AgendaScheduleControl.Appearance.PrimeTimeCellColor = Color.LightGray;
                AgendaScheduleControl.Appearance.NonPrimeTimeCellColor = Color.DarkGray;

                AgendaScheduleControl.Appearance.AllDayBackColor = System.Drawing.Color.FromArgb(2, 91, 149);
                AgendaScheduleControl.Appearance.MonthWeekHeaderBackColor = System.Drawing.Color.FromArgb(2, 91, 149);
                AgendaScheduleControl.Appearance.MonthWeekHeaderForeColor = Color.WhiteSmoke;
                AgendaScheduleControl.Appearance.WorkWeekHeaderBackColor = System.Drawing.Color.FromArgb(2, 91, 149);
                AgendaScheduleControl.Appearance.WorkWeekHeaderForeColor = Color.WhiteSmoke;

                AgendaScheduleControl.BackColor = Publicas._panelTitulo;
                AgendaScheduleControl.Appearance.CaptionBackColor = System.Drawing.Color.FromArgb(2, 91, 149);
                AgendaScheduleControl.Appearance.TextColor = Publicas._panelTitulo; // Color.WhiteSmoke;
            }
            #endregion

            if (_listaAgenda == null)
                return;

            if (_tipo == Publicas.TipoAgenda.Todos)
                _agenda.AddRange(_listaAgenda);
            else
                _agenda.AddRange(_listaAgenda.Where(w => w.TipoAgenda == _tipo).ToList());

            foreach (var item in _agenda.OrderBy(o => o.Data))
            {
                ScheduleAppointment itemS = dataSchedule.NewScheduleAppointment() as ScheduleAppointment;

                itemS.StartTime = item.Data;
                itemS.EndTime = item.DataFim;
                itemS.Subject =  item.DescricaoTipoAgenda + " " + Environment.NewLine +
                    (item.IdUsuario == Publicas._usuario.Id ? "" :  item.Nome + " " ) + 
                    (item.Texto == "" ? "" : item.Texto);

                List<ParticipanteDaAgenda> _lista = new AgendaBO().Listar(item.IdAgenda);

                string assunto = (string.IsNullOrEmpty(item.Descricao) ? "" : item.Descricao + Environment.NewLine) +
                    (item.NomeAbreviado == "" ? "" : Environment.NewLine + item.NomeAbreviado) + 
                    (item.Placa == "" ? "" : Environment.NewLine + item.Placa) + 
                    Environment.NewLine + item.Nome + Environment.NewLine;

                if (_lista.Count() != 0)
                    assunto = assunto + Environment.NewLine + "Convidados:";

                foreach (var itemP in _lista)
                {
                    assunto = assunto + Environment.NewLine + itemP.Nome + " " + 
                        (!itemP.Avisado ? (itemP.ConviteAceito ? "Aceito" : "Não Aceito") : "");
                }

                itemS.Content = assunto;

                itemS.UniqueID = item.IdAgenda;
                itemS.ReminderValue = item.Lembrar;
                itemS.Reminder = item.Lembrar > 1;
                
                switch (item.TipoAgenda)
                {
                    case Publicas.TipoAgenda.Carro:
                        itemS.LabelValue = 2;
                        itemS.ForeColor = (Publicas._TemaBlack ? Color.WhiteSmoke : Color.Black);
                        itemS.MarkerValue = 2;
                        break;
                    case Publicas.TipoAgenda.Particular:
                        itemS.LabelValue = 3;
                        itemS.ForeColor = (Publicas._TemaBlack ? Color.WhiteSmoke : Color.Black);
                        itemS.MarkerValue = 3;
                        break;
                    case Publicas.TipoAgenda.SalaDeReuniao:
                        itemS.LabelValue = 1;
                        itemS.ForeColor = (Publicas._TemaBlack ? Color.WhiteSmoke : Color.Black);
                        itemS.MarkerValue = 2;
                        break;
                    case Publicas.TipoAgenda.Visita:
                        itemS.LabelValue = 4;
                        itemS.ForeColor = (Publicas._TemaBlack ? Color.WhiteSmoke : Color.Black);
                        itemS.MarkerValue = 3;
                        break;
                    case Publicas.TipoAgenda.TreinamentoExterno:
                        itemS.LabelValue = 5;
                        itemS.ForeColor = (Publicas._TemaBlack ? Color.WhiteSmoke : Color.Black);
                        itemS.MarkerValue = 3;
                        break;
                    case Publicas.TipoAgenda.TreinamentoInterno:
                        itemS.LabelValue = 6;
                        itemS.ForeColor = (Publicas._TemaBlack ? Color.WhiteSmoke : Color.Black);
                        itemS.MarkerValue = 2;
                        break;
                    case Publicas.TipoAgenda.Ferias:
                        itemS.LabelValue = 7;
                        itemS.ForeColor = (Publicas._TemaBlack ? Color.WhiteSmoke : Color.Black);
                        itemS.MarkerValue = 3;
                        break;
                    case Publicas.TipoAgenda.AtestadoMedico:
                        itemS.LabelValue = 8;
                        itemS.ForeColor = (Publicas._TemaBlack ? Color.WhiteSmoke : Color.Black);
                        itemS.MarkerValue = 3;
                        break;
                }

                itemS.IgnoreChanges = true;
                itemS.Dirty = false;

                dataSchedule.MasterList.Add(itemS);
            }

            AgendaScheduleControl.Visible = false;
            AgendaScheduleControl.DataSource = new SimpleScheduleDataProvider();
            AgendaScheduleControl.DataSource = dataSchedule;
            AgendaScheduleControl.Visible = true;
            AgendaScheduleControl.DataSource.SaveOnCloseBehaviorAction = SaveOnCloseBehavior.DoNotSave;
            AgendaScheduleControl.NavigationPanelFillWithCalendar = true;

            AgendaScheduleControl.ScheduleType = Syncfusion.Windows.Forms.Schedule.ScheduleViewType.Month;
            AgendaScheduleControl.ContextMenuStrip = AgendaContextMenuStrip;
            
            AgendaScheduleControl.Refresh();
        }

        private void AgendaScheduleControl_ScheduleAppointmentClick(object sender, ScheduleAppointmentClickEventArgs e)
        {
            try
            {
                AgendaScheduleControl.GetScheduleHost().ContextMenuStrip = AgendaContextMenuStrip;
                AgendaScheduleControl.GetScheduleHost().ContextMenu = null;
            }
            catch { }
            //AgendaScheduleControl.per
            AgendaScheduleControl.ContextMenuStrip = AgendaContextMenuStrip;
            AgendaScheduleControl.Refresh();
        }

        private void AgendaDiariaToolStripMenuItem_Click(object sender, EventArgs e)
        {
            AgendaScheduleControl.PerformSwitchToScheduleViewTypeClick(ScheduleViewType.Day);

            AgendaScheduleControl.Refresh();
        }

        private void AgendaSemanalToolStripMenuItem_Click(object sender, EventArgs e)
        {
            AgendaScheduleControl.PerformSwitchToScheduleViewTypeClick(ScheduleViewType.WorkWeek);
            AgendaScheduleControl.Refresh();
        }

        private void AgendaMensalToolStripMenuItem_Click(object sender, EventArgs e)
        {
            AgendaScheduleControl.PerformSwitchToScheduleViewTypeClick(ScheduleViewType.Month);
            AgendaScheduleControl.Refresh();
        }

        private void NovoHorarioAgendaToolStripMenuItem_Click(object sender, EventArgs e)
        {
            MensagemSistema();
            Cadastros.Agenda _tela = new Cadastros.Agenda();
            _tela.ShowDialog();

            AgendaScheduleControl.Enabled = false;
            TipoAgendaComboBox_SelectedIndexChanged(sender, e);
            AgendaScheduleControl.Enabled = true;
        }

        private void AlterarHorarioAgendaToolStripMenuItem_Click(object sender, EventArgs e)
        {
            MensagemSistema();
            Cadastros.Agenda _tela = new Cadastros.Agenda();

            foreach (IScheduleAppointment appointment in this.AgendaScheduleControl.GetScheduleHost().SelectedAppointments)
            {
                foreach (var item in _listaAgenda.Where(w => w.IdAgenda == appointment.UniqueID))
                {
                    _tela._agenda = item;
                }
                _tela.dataDateTimePicker.Value = appointment.StartTime.Date;
                _tela.dataFimDateTimePicker.Value = appointment.EndTime.Date;
                _tela.horaInicioDateTimePicker.Value = appointment.StartTime;
                _tela.horaFimDateTimePicker.Value = appointment.EndTime;
                
            }

            _tela.ShowDialog();

            AgendaScheduleControl.Enabled = false;
            TipoAgendaComboBox_SelectedIndexChanged(sender, e);
            AgendaScheduleControl.Enabled = true;
        }

        private void AgendaScheduleControl_ShowingAppointmentForm(object sender, ShowingAppointFormEventArgs e)
        {
            e.Cancel = true;
        }

        private void AgendaScheduleControl_SetupContextMenu(object sender, CancelEventArgs e)
        {
            e.Cancel = true;
        }

        private void AgendaBackgroundWorker_DoWork(object sender, DoWorkEventArgs e)
        {
            _agendaEmPesquisa = true;
            _listaAgenda = new AgendaBO().Listar(Publicas._usuario.Id, Publicas.TipoAgenda.Todos);
        }

        private void AgendaBackgroundWorker_RunWorkerCompleted(object sender, RunWorkerCompletedEventArgs e)
        {
            
            StringCollection StatusNF = new StringCollection();
            Adiar = new StringCollection();

            for (int i = 0; i < 4; i++)
            {
                if (i == 0)
                    Adiar.Add(i.ToString() + " minutos");
                else
                    Adiar.Add((i * 5).ToString() + " minutos");
            }
            Adiar.Add("30 minutos");

            for (int i = 1; i < 13; i++)
                Adiar.Add(i.ToString() + " horas");

            Adiar.Add("18 horas");

            if (Publicas._usuario.AgendaLiberaCarros)
                StatusNF.AddRange(new string[] { "Ativo", "Cancelado", "Reservado" });
            else
                StatusNF.AddRange(new string[] { "Ativo", "Cancelado", "Finalizado" });

            TipoAgendaComboBox_SelectedIndexChanged(sender, new EventArgs());
            mensagemLabel.Text = "";
            _agendaEmPesquisa = false;
            AgendaTimer.Start();

            _listaLembrete = new List<Classes.Agenda>();

            foreach (var item in _listaAgenda.Where(w => w.Lembrar != 0 && w.Data.Date == DateTime.Now.Date && w.DataLembrete != DateTime.MinValue))
            {

                if (item.DataLembrete <= DateTime.Now )//&& DateTime.Now <= item.Data)
                {
                    _listaLembrete.Add(item);
                   // AgendaLembretePanel.Visible = true;

                    if (Publicas._TemaBlack)
                    {
                        AgendaGridGroupingControl.GridOfficeScrollBars = OfficeScrollBars.Office2010;
                        AgendaGridGroupingControl.ColorStyles = ColorStyles.Office2010Black;
                        AgendaGridGroupingControl.GridVisualStyles = GridVisualStyles.Office2016Black;
                        AgendaGridGroupingControl.BackColor = Publicas._panelTitulo;
                    }
                    else
                    {
                        AgendaGridGroupingControl.SetMetroStyle(metroColor);
                        AgendaGridGroupingControl.TableOptions.SelectionBackColor = Publicas._bordaEntrada;
                        AgendaGridGroupingControl.TableOptions.SelectionTextColor = Color.WhiteSmoke;
                        AgendaGridGroupingControl.BackColor = backGroundOriginal;
                    }
                }
            }

            AgendaGridGroupingControl.TableDescriptor.Columns["Status"].Appearance.AnyRecordFieldCell.CellType = GridCellTypeName.ComboBox;
            AgendaGridGroupingControl.TableDescriptor.Columns["Status"].Appearance.AnyRecordFieldCell.ChoiceList = StatusNF;

            AgendaGridGroupingControl.TableDescriptor.Columns["Adiar"].Appearance.AnyRecordFieldCell.CellType = GridCellTypeName.ComboBox;
            AgendaGridGroupingControl.TableDescriptor.Columns["Adiar"].Appearance.AnyRecordFieldCell.ChoiceList = Adiar;

            AgendaGridGroupingControl.DataSource = _listaLembrete;

            AgendaGridGroupingControl.TableOptions.ListBoxSelectionCurrentCellOptions = GridListBoxSelectionCurrentCellOptions.None;
            AgendaGridGroupingControl.TableOptions.ListBoxSelectionColorOptions = GridListBoxSelectionColorOptions.ApplySelectionColor;

        }

        private void AgendaTimer_Tick(object sender, EventArgs e)
        {
            AgendaTimer.Stop();

            if (!AgendaTabPage.TabVisible)
                return;

            this.Refresh();

            try
            {
                if (!_agendaEmPesquisa)
                {
                    mensagemLabel.Text = "Atualizando agenda, aguarde... ";
                    AgendaBackgroundWorker.RunWorkerAsync();
                    return; 
                }

                AgendaTimer.Start();
                
            }
            catch { }

        }

        private void label36_Click(object sender, EventArgs e)
        { // fechar agenda
            AgendaLembretePanel.Visible = false;
        }

        private void AgendaGridGroupingControl_TableControlCurrentCellValidating(object sender, GridTableControlCancelEventArgs e)
        {
           
        }

        private void AgendaGridGroupingControl_TableControlCurrentCellCloseDropDown(object sender, GridTableControlPopupClosedEventArgs e)
        {
            cc = AgendaGridGroupingControl.TableControl.CurrentCell;
            cr = cc.Renderer as GridComboBoxCellRenderer;
            int id = 0;

            if (cr != null)
            {
                indexComboBox = cr.ListBoxPart.SelectedIndex;

                GridRecordRow rec = this.AgendaGridGroupingControl.Table.DisplayElements[AgendaGridGroupingControl.TableControl.CurrentCell.RowIndex] as GridRecordRow;

                if (rec != null)
                {
                    Record dr = rec.GetRecord() as Record;
                    if (dr != null)
                    {
                        id = (int)dr["IdAgenda"];
                    }
                }

                foreach (var item in _listaLembrete.Where(w => w.IdAgenda == id))
                {
                    item.Adiar = Adiar[indexComboBox];

                    if (item.Data >= DateTime.Now)
                    {
                        if (item.Adiar.Contains("minuto"))
                            item.DataLembrete = item.DataLembrete.AddMinutes(Convert.ToDouble(Publicas.OnlyNumbers(item.Adiar)));
                        else
                            item.DataLembrete = item.DataLembrete.AddHours(Convert.ToDouble(Publicas.OnlyNumbers(item.Adiar)));
                    }
                    else
                    {
                        if (item.Adiar.Contains("minuto"))
                            item.DataLembrete = DateTime.Now.AddMinutes(Convert.ToDouble(Publicas.OnlyNumbers(item.Adiar)));
                        else
                            item.DataLembrete = DateTime.Now.AddHours(Convert.ToDouble(Publicas.OnlyNumbers(item.Adiar)));
                    }

                    new AgendaBO().Gravar(item, new List<ParticipanteDaAgenda>());
                }

                AgendaLembretePanel.Visible = false;
            }
        }

        private void reabrirChamadoToolStripMenuItem_Click(object sender, EventArgs e)
        {
            try
            {
                GridRecordRow rec = this.ChamadosDashBoardGrid.Table.DisplayElements[ChamadosDashBoardGrid.TableControl.CurrentCell.RowIndex] as GridRecordRow;

                if (rec != null)
                {
                    Record dr = rec.GetRecord() as Record;

                    if (dr != null)
                    {
                        Publicas._idChamado = (int)dr["IdChamado"];
                        Publicas._sla = (DateTime)dr["SLA"];

                        Classes.Chamado _chamadoAux = new ChamadoBO().Consulta(Publicas._idChamado);
                        _chamadoAux.Status = Publicas.StatusChamado.Reaberto;

                        if (!new ChamadoBO().Gravar(_chamadoAux))
                        {
                            new Notificacoes.Mensagem("Problemas durante a gravação." + Environment.NewLine + Publicas.mensagemDeErro, Publicas.TipoMensagem.Erro).ShowDialog();
                            return;
                        }

                        Classes.HistoricoDoChamado _histo = new HistoricoDoChamado();
                        _histo.IdChamado = _chamadoAux.IdChamado;
                        _histo.IdUsuario = Publicas._usuario.Id;
                        _histo.Descricao = "Reaberto pelo atendente";
                        _histo.Status = Publicas.StatusChamado.Reaberto;
                        _histo.Usuario = "A";

                        if (!new ChamadoBO().GravarHistorico(_histo, new List<AnexoDoHistorico>(), Publicas._sla))
                        {
                            new Notificacoes.Mensagem("Problemas durante a gravação." + Environment.NewLine + Publicas.mensagemDeErro, Publicas.TipoMensagem.Erro).ShowDialog();
                            return;
                        }


                        Log _log = new Log();
                        _log.IdUsuario = Publicas._usuario.Id;
                        _log.Descricao = "Reabriu o chamado " + _chamadoAux.Numero + " pelo atalho ";
                        _log.Tela = "Tramites - Chamado";

                        try
                        {
                            new LogBO().Gravar(_log);
                        }
                        catch { }
                    }

                    if (Publicas._usuario != null && !_chamadosEmPesquisa)
                    {
                        MensagemChamadosDashBoardLabel.Text = "Aguarde... Pesquisando os chamados.";
                        this.Refresh();
                        try
                        {
                            chamadosBackgroundWorker.RunWorkerAsync();
                        }
                        catch { }
                        MensagemChamadosDashBoardLabel.Text = "";
                        this.Refresh();

                    }

                    new Notificacoes.Mensagem("Reaberto com Sucesso." , Publicas.TipoMensagem.Sucesso).ShowDialog();
                }

            }
            catch { }
        }

        private void PesquisarChamadoPictureBox_Click(object sender, EventArgs e)
        {
            if (string.IsNullOrEmpty(numeroTextBoxExt.Text.Trim()))
            {
                if (_listaChamados.Count() != 0)
                {
                    ChamadosDashBoardGrid.DataSource = new List<Classes.Chamado>();
                    ChamadosDashBoardGrid.DataSource = _listaChamados.Where(w => w.Exibir)
                                                                      // .OrderBy(o => o.Data)
                                                                     .OrderBy(o => o.Ordem).ToList();
                }
                return;
            }
            _pesquisouChamados = true;
            chamadoTimer.Enabled = false;
            chamadoTimer.Stop();

            List<Classes.Chamado> _chamadosPesquisados = new ChamadoBO().Pesquisar(numeroTextBoxExt.Text);
            
            if (_chamadosPesquisados.Count() == 0)
            {
                _pesquisouChamados = false;
                chamadoTimer.Enabled = true;
                chamadoTimer.Start();
                new Notificacoes.Mensagem("Nenhum chamado encontrado com esse texto.", Publicas.TipoMensagem.Alerta).ShowDialog();
                return;
            }

            ChamadosDashBoardGrid.DataSource = new List<Classes.Chamado>();
            numeroTextBoxExt.Text = string.Empty;
            ChamadosDashBoardGrid.DataSource = _chamadosPesquisados;
            chamadoTimer.Start();
            chamadoTimer.Enabled = true;

            try
            {
                _listaChamadosPesquisas.AddRange(_chamadosPesquisados);
            }
            catch { }
        }

        private void numeroTextBoxExt_Enter(object sender, EventArgs e)
        {
            numeroTextBoxExt.FocusBorderColor = Publicas._bordaSaida;
            _entrouNaPesquisaChamados = true;
        }

        private void numeroTextBoxExt_Validating(object sender, CancelEventArgs e)
        {
            numeroTextBoxExt.FocusBorderColor = Publicas._bordaEntrada;

            if (!string.IsNullOrEmpty(numeroTextBoxExt.Text.Trim()))
                PesquisarChamadoPictureBox_Click(sender, new EventArgs());

            _entrouNaPesquisaChamados = false;
        }

        private void numeroTextBoxExt_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.Enter || e.KeyCode == Keys.Return)
                SelectNextControl(ActiveControl, true, true, true, true);
            Publicas._escTeclado = false;
            Publicas._setaParaBaixo = false;
            if (e.KeyCode == Keys.Escape)
            {
                Publicas._escTeclado = true;
                SelectNextControl(ActiveControl, false, true, true, true);
            }
        }

        private void AtrasoChamadosMaisTardeLabel_Click(object sender, EventArgs e)
        {
            ChamadosAtrasadosComSolicitantePanel.Visible = false;
            _atrasadosMaisTarde = true;
            _timeInicioAtrasadosMaisTarde = DateTime.Now;
        }

        private void AtrasoChamadosLabel_Click(object sender, EventArgs e)
        {
            ChamadosAtrasadosComSolicitantePanel.Visible = false;
            Publicas._idChamado = Convert.ToInt32(((Label)sender).Tag);
            FecharDashBoard();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaChamado;

            Chamados.Tramites _tela = new Chamados.Tramites();

            if (_tela.Width > this.Width)
                _tela.Size = new Size(this.Width - 5, this.Height - (tituloPanel.Height + panel2.Height + 2));

            _tela.ShowDialog();

            _chamadosEmPesquisa = false;
            NomePadrao();

            if (Publicas._usuario != null && !_chamadosEmPesquisa)
            {
                MensagemChamadosDashBoardLabel.Text = "Aguarde... Pesquisando os chamados.";

                try
                {
                    chamadosBackgroundWorker.RunWorkerAsync();
                }
                catch { }
                MensagemChamadosDashBoardLabel.Text = "";
                this.Refresh();

            }
        }

        private void finalizarChamadoToolStripMenuItem_Click(object sender, EventArgs e)
        {
            try
            {
                GridRecordRow rec = this.ChamadosDashBoardGrid.Table.DisplayElements[ChamadosDashBoardGrid.TableControl.CurrentCell.RowIndex] as GridRecordRow;

                if (rec != null)
                {
                    Record dr = rec.GetRecord() as Record;

                    if (dr != null)
                    {
                        Publicas._idChamado = (int)dr["IdChamado"];

                        if ((bool)dr["TemporizadorEmAndamento"])
                        {
                            new ChamadoBO().PausarTemporizador((int)dr["IdTemporizador"], (DateTime)dr["InicioTemporizador"]);

                            foreach (var item in _listaChamados.Where(w => w.IdChamado == Publicas._idChamado))
                            {
                                item.FimTemporizador = DateTime.Now;
                                item.TemporizadorEmAndamento = false;
                            }

                            ChamadosDashBoardGrid.DataSource = new List<Classes.Chamado>();
                            ChamadosDashBoardGrid.DataSource = _listaChamados.Where(w => w.Exibir)
                                                                              // .OrderBy(o => o.Data)
                                                                             .OrderBy(o => o.Ordem).ToList();
                        }

                        Publicas._sla = (DateTime)dr["SLA"];

                        Classes.Chamado _chamadoAux = new ChamadoBO().Consulta(Publicas._idChamado);

                        if (_chamadoAux.Status != Publicas.StatusChamado.Novo && _chamadoAux.Status != Publicas.StatusChamado.Reaberto &&
                            _chamadoAux.Status != Publicas.StatusChamado.Finalizado && _chamadoAux.Status != Publicas.StatusChamado.AguardandoCronograma &&
                            _chamadoAux.Status != Publicas.StatusChamado.Cancelado)
                        {
                            if (new Notificacoes.Mensagem("Confirma a conclusão deste chamado ?", Publicas.TipoMensagem.Confirmacao).ShowDialog() == DialogResult.No)
                                return;

                            _chamadoAux.Status = Publicas.StatusChamado.Finalizado;

                            if (!new ChamadoBO().Gravar(_chamadoAux))
                            {
                                new Notificacoes.Mensagem("Problemas durante a gravação." + Environment.NewLine + Publicas.mensagemDeErro, Publicas.TipoMensagem.Erro).ShowDialog();
                                return;
                            }

                            Classes.HistoricoDoChamado _histo = new HistoricoDoChamado();
                            _histo.IdChamado = _chamadoAux.IdChamado;
                            _histo.IdUsuario = Publicas._usuario.Id;
                            _histo.Descricao = (DateTime.Now.Hour < 12 ? "Bom dia" :
                                               (DateTime.Now.Hour > 12 && DateTime.Now.Hour < 18 ? "Boa tarde" : "Boa noite")) +
                                               Environment.NewLine +
                                               Environment.NewLine +
                                               (Publicas._usuario.Tipo == Publicas.TipoUsuario.Socilitante ||
                                                (Publicas._usuario.Tipo == Publicas.TipoUsuario.Atendente && _chamadoAux.IdUsuario == Publicas._usuario.Id)
                                                ? "Finalizado, Obrigado." 
                                                : "Chamado finalizado." + Environment.NewLine + "Se surgir a necessidade de alterações, este chamado poderá ser reaberto em 2 dias. Caso o prazo tenha se esgotado deve ser aberto um novo chamado."
                                               );

                            _histo.Status = Publicas.StatusChamado.Finalizado;
                            _histo.Usuario = (_chamadoAux.IdUsuario == Publicas._usuario.Id ? "S" : "A");

                            if (!new ChamadoBO().GravarHistorico(_histo, new List<AnexoDoHistorico>(), Publicas._sla))
                            {
                                new Notificacoes.Mensagem("Problemas durante a gravação." + Environment.NewLine + Publicas.mensagemDeErro, Publicas.TipoMensagem.Erro).ShowDialog();
                                return;
                            }

                            Log _log = new Log();
                            _log.IdUsuario = Publicas._usuario.Id;
                            _log.Descricao = "Concluiu o chamado " + _chamadoAux.Numero + " pelo atalho ";
                            _log.Tela = "Tramites - Chamado";

                            try
                            {
                                new LogBO().Gravar(_log);
                            }
                            catch { }
                        }
                    }

                    if (Publicas._usuario != null && !_chamadosEmPesquisa)
                    {
                        MensagemChamadosDashBoardLabel.Text = "Aguarde... Pesquisando os chamados.";
                        this.Refresh();
                        try
                        {
                            chamadosBackgroundWorker.RunWorkerAsync();
                        }
                        catch { }
                        MensagemChamadosDashBoardLabel.Text = "";
                        this.Refresh();

                    }
                }

            }
            catch { }

        }

        private void trocarSolicitanteToolStripMenuItem_Click(object sender, EventArgs e)
        {
            try
            {
                GridRecordRow rec = this.ChamadosDashBoardGrid.Table.DisplayElements[ChamadosDashBoardGrid.TableControl.CurrentCell.RowIndex] as GridRecordRow;
                if (rec != null)
                {
                    Record dr = rec.GetRecord() as Record;
                    Publicas._idEmpresa = (int)dr["IdEmpresaSolicitante"];
                }

                Publicas._usuarioAcesso = "";
                new Pesquisas.Usuarios().ShowDialog();

                if (Publicas._usuarioAcesso != "")
                {
                    Classes.Usuario _usu = new UsuarioBO().Consultar(Publicas._usuarioAcesso);

                    if (rec != null)
                    {
                        Record dr = rec.GetRecord() as Record;

                        if (dr != null)
                        {
                            Publicas._idChamado = (int)dr["IdChamado"];

                            Classes.Chamado _chamadoAux = new ChamadoBO().Consulta(Publicas._idChamado);
                            _chamadoAux.IdUsuario = _usu.Id;

                            if (!new ChamadoBO().Gravar(_chamadoAux))
                            {
                                new Notificacoes.Mensagem("Problemas durante a gravação." + Environment.NewLine + Publicas.mensagemDeErro, Publicas.TipoMensagem.Erro).ShowDialog();
                                return;
                            }
                            
                            Log _log = new Log();
                            _log.IdUsuario = Publicas._usuario.Id;

                            _log.Descricao = "Alterou o Solicitante do chamado " + _chamadoAux.Numero + " Solicitante de " + _chamadoAux.NomeSolicitante + 
                                " para " + _usu.Nome;
                            _log.Tela = "Tramites - Chamado";

                            try
                            {
                                new LogBO().Gravar(_log);
                            }
                            catch { }
                        }

                        if (Publicas._usuario != null && !_chamadosEmPesquisa)
                        {
                            MensagemChamadosDashBoardLabel.Text = "Aguarde... Pesquisando os chamados.";
                            this.Refresh();
                            try
                            {
                                chamadosBackgroundWorker.RunWorkerAsync();
                            }
                            catch { }
                            MensagemChamadosDashBoardLabel.Text = "";
                            this.Refresh();

                        }
                    }
                }
            }
            catch { }
        }
        
        private void cancelaChamadoToolStripMenuItem_Click(object sender, EventArgs e)
        {
            try
            {
                GridRecordRow rec = this.ChamadosDashBoardGrid.Table.DisplayElements[ChamadosDashBoardGrid.TableControl.CurrentCell.RowIndex] as GridRecordRow;

                if (rec != null)
                {
                    Record dr = rec.GetRecord() as Record;

                    if (dr != null)
                    {
                        Publicas._idChamado = (int)dr["IdChamado"];
                        Publicas._sla = (DateTime)dr["SLA"];

                        if ((bool)dr["TemporizadorEmAndamento"])
                        {
                            new ChamadoBO().PausarTemporizador((int)dr["IdTemporizador"], (DateTime)dr["InicioTemporizador"]);
                            foreach (var item in _listaChamados.Where(w => w.IdChamado == Publicas._idChamado))
                            {
                                item.FimTemporizador = DateTime.Now;
                                item.TemporizadorEmAndamento = false;
                            }

                            ChamadosDashBoardGrid.DataSource = new List<Classes.Chamado>();
                            ChamadosDashBoardGrid.DataSource = _listaChamados.Where(w => w.Exibir)
                                                                              // .OrderBy(o => o.Data)
                                                                             .OrderBy(o => o.Ordem).ToList();
                        }

                        Classes.Chamado _chamadoAux = new ChamadoBO().Consulta(Publicas._idChamado);

                        if (_chamadoAux.Status != Publicas.StatusChamado.Novo && _chamadoAux.Status != Publicas.StatusChamado.Reaberto &&
                            _chamadoAux.Status != Publicas.StatusChamado.Finalizado && _chamadoAux.Status != Publicas.StatusChamado.AguardandoCronograma &&
                            _chamadoAux.Status != Publicas.StatusChamado.Cancelado)
                        {
                            if (new Notificacoes.Mensagem("Confirma o cancelamento deste chamado ?", Publicas.TipoMensagem.Confirmacao).ShowDialog() == DialogResult.No)
                                return;

                            _chamadoAux.Status = Publicas.StatusChamado.Cancelado;

                            if (!new ChamadoBO().Gravar(_chamadoAux))
                            {
                                new Notificacoes.Mensagem("Problemas durante a gravação." + Environment.NewLine + Publicas.mensagemDeErro, Publicas.TipoMensagem.Erro).ShowDialog();
                                return;
                            }

                            Classes.HistoricoDoChamado _histo = new HistoricoDoChamado();
                            _histo.IdChamado = _chamadoAux.IdChamado;
                            _histo.IdUsuario = Publicas._usuario.Id;
                            _histo.Descricao = (DateTime.Now.Hour < 12 ? "Bom dia" :
                                               (DateTime.Now.Hour > 12 && DateTime.Now.Hour < 18 ? "Boa tarde" : "Boa noite")) +
                                               Environment.NewLine +
                                               Environment.NewLine +
                                               "Cancelado pelo atendente." + Environment.NewLine + "Após solicitante pedir o cancelamento.";

                            _histo.Status = Publicas.StatusChamado.Cancelado;
                            _histo.Usuario = "A";

                            if (!new ChamadoBO().GravarHistorico(_histo, new List<AnexoDoHistorico>(), Publicas._sla))
                            {
                                new Notificacoes.Mensagem("Problemas durante a gravação." + Environment.NewLine + Publicas.mensagemDeErro, Publicas.TipoMensagem.Erro).ShowDialog();
                                return;
                            }

                            Log _log = new Log();
                            _log.IdUsuario = Publicas._usuario.Id;
                            _log.Descricao = "Cancelou o chamado " + _chamadoAux.Numero + " pelo atalho ";
                            _log.Tela = "Tramites - Chamado";

                            try
                            {
                                new LogBO().Gravar(_log);
                            }
                            catch { }
                        }
                    }

                    if (Publicas._usuario != null && !_chamadosEmPesquisa)
                    {
                        MensagemChamadosDashBoardLabel.Text = "Aguarde... Pesquisando os chamados.";
                        this.Refresh();
                        try
                        {
                            chamadosBackgroundWorker.RunWorkerAsync();
                        }
                        catch { }
                        MensagemChamadosDashBoardLabel.Text = "";
                        this.Refresh();

                    }
                }

            }
            catch { }

        }

        private void label37_Click(object sender, EventArgs e)
        {
            _integrarFeriasMaisTarde = true;
            FeriasIntegrarPanel.Visible = false;
        }

        private void FeriasIntegrar1Label_Click(object sender, EventArgs e)
        {
            FechaMenuUsuario();
            FechaMenuSistema();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaDepartamentoPessoal;
            DepartamentoPessoal.ProgramacaoDeFerias _tela = new DepartamentoPessoal.ProgramacaoDeFerias();
            _tela.Size = new Size(this.Width - 5, this.Height - (tituloPanel.Height + panel2.Height + 2));
            _tela.ShowDialog();
            NomePadrao();
        }

        private void FeriasTimer_Tick(object sender, EventArgs e)
        {
            FeriasTimer.Stop();

            Publicas._mensagemSistema = "Aguarde... Pesquisando programações de férias.";
            this.Refresh();
            try
            {
                if (!_feriasEmPesquisa)
                    FeriasBackgroundWorker.RunWorkerAsync();
                else
                    FeriasTimer.Start();

            }
            catch { }

            Publicas._mensagemSistema = "";
            this.Refresh();
        }

        private void FeriasBackgroundWorker_DoWork(object sender, DoWorkEventArgs e)
        {
            if (!_feriasEmPesquisa)
            {
                _feriasEmPesquisa = true;

                try
                {
                    if (Publicas._usuario.Diretor || Publicas._usuario.Gerente || Publicas._usuario.Coordenador || Publicas._usuario.Desenvolvedor)
                        _listaProgramacao = new ProgramacaoFeriasBO().Listar();

                    if (Publicas._usuario.PodeIntegrarProgramacaoFerias)
                        _listaProgramacaoGestorDP = new ProgramacaoFeriasBO().Listar(Publicas._usuario.IdEmpresa, DateTime.Now.Date, DateTime.Now.AddMonths(2).Date, true);

                    _listaProgramacaoAprovadas = new ProgramacaoFeriasBO().Listar((int)Publicas._usuario.CodigoInternoFuncionarioGlobus);
                }
                catch
                {
                }
            }
        }

        private void FeriasBackgroundWorker_RunWorkerCompleted(object sender, RunWorkerCompletedEventArgs e)
        {
            int n = 1;
            #region Verifica se tem férias para autorizar

            if (!_autorizarFeriasMaisTarde)
            {
                n = 1;
                Ferias02label.Visible = false;
                Ferias03label.Visible = false;
                Ferias04label.Visible = false;

                if (_listaProgramacao != null && Publicas._usuario != null)
                {
                    foreach (var item in _listaProgramacao.OrderBy(o => o.DataInicio))
                    {
                        ToolTipInfo _tool = new ToolTipInfo();
                        switch (n)
                        {
                            case 1:
                                Ferias01label.Text = item.Funcionario + " - " + item.DataInicio.ToShortDateString() + " até " + item.DataFim.ToShortDateString();
                                Ferias01label.Tag = item.Id;
                                break;
                            case 2:
                                Ferias02label.Text = item.Funcionario + " - " + item.DataInicio.ToShortDateString() + " até " + item.DataFim.ToShortDateString();
                                Ferias02label.Tag = item.Id;
                                Ferias02label.Visible = true;
                                break;
                            case 3:
                                Ferias03label.Text = item.Funcionario + " - " + item.DataInicio.ToShortDateString() + " até " + item.DataFim.ToShortDateString();
                                Ferias03label.Tag = item.Id;
                                Ferias03label.Visible = true;
                                break;
                            case 4:
                                Ferias04label.Text = item.Funcionario + " - " + item.DataInicio.ToShortDateString() + " até " + item.DataFim.ToShortDateString();
                                Ferias04label.Tag = item.Id;
                                Ferias04label.Visible = true;
                                break;
                        }
                        n++;
                    }

                    FeriasAutorizarPanel.BringToFront();
                    FeriasAutorizarPanel.Left = (this.Width / 2) - FeriasAutorizarPanel.Width / 2;
                    FeriasAutorizarPanel.Top = (this.Height / 2) - FeriasAutorizarPanel.Height / 2;

                    //if (Publicas._usuario.Administrador || Publicas._usuario.IdEmpresa == 1  || Publicas._usuario.IdEmpresa == 19|| Publicas._usuario.IdEmpresa == 2 || Publicas._usuario.IdEmpresa == 10)
                    FeriasAutorizarPanel.Visible = _listaProgramacao.Count() != 0;
                }
            }
            #endregion

            #region Verifica se tem férias autorizadas para integrar

            if (!_integrarFeriasMaisTarde && Publicas._usuario.PodeIntegrarProgramacaoFerias)
            {
                n = 1;
                FeriasIntegrar2Label.Visible = false;
                FeriasIntegrar3Label.Visible = false;
                FeriasIntegrar4Label.Visible = false;
                FeriasIntegrar5Label.Visible = false;
                FeriasIntegrar6Label.Visible = false;
                FeriasIntegrar7Label.Visible = false;
                FeriasIntegrar8Label.Visible = false;

                if (_listaProgramacaoGestorDP != null && Publicas._usuario != null)
                {
                    foreach (var item in _listaProgramacaoGestorDP.OrderBy(o => o.DataInicio))
                    {
                        ToolTipInfo _tool = new ToolTipInfo();
                        switch (n)
                        {
                            case 1:
                                FeriasIntegrar1Label.Text = item.Funcionario + " - " + item.DataInicio.ToShortDateString() + " até " + item.DataFim.ToShortDateString();
                                FeriasIntegrar1Label.Tag = item.Id;
                                break;
                            case 2:
                                FeriasIntegrar2Label.Text = item.Funcionario + " - " + item.DataInicio.ToShortDateString() + " até " + item.DataFim.ToShortDateString();
                                FeriasIntegrar2Label.Tag = item.Id;
                                FeriasIntegrar2Label.Visible = true;
                                break;
                            case 3:
                                FeriasIntegrar3Label.Text = item.Funcionario + " - " + item.DataInicio.ToShortDateString() + " até " + item.DataFim.ToShortDateString();
                                FeriasIntegrar3Label.Tag = item.Id;
                                FeriasIntegrar3Label.Visible = true;
                                break;
                            case 4:
                                FeriasIntegrar4Label.Text = item.Funcionario + " - " + item.DataInicio.ToShortDateString() + " até " + item.DataFim.ToShortDateString();
                                FeriasIntegrar4Label.Tag = item.Id;
                                FeriasIntegrar4Label.Visible = true;
                                break;
                            case 5:
                                FeriasIntegrar5Label.Text = item.Funcionario + " - " + item.DataInicio.ToShortDateString() + " até " + item.DataFim.ToShortDateString();
                                FeriasIntegrar5Label.Tag = item.Id;
                                FeriasIntegrar5Label.Visible = true;
                                break;
                            case 6:
                                FeriasIntegrar6Label.Text = item.Funcionario + " - " + item.DataInicio.ToShortDateString() + " até " + item.DataFim.ToShortDateString();
                                FeriasIntegrar6Label.Tag = item.Id;
                                FeriasIntegrar6Label.Visible = true;
                                break;
                            case 7:
                                FeriasIntegrar7Label.Text = item.Funcionario + " - " + item.DataInicio.ToShortDateString() + " até " + item.DataFim.ToShortDateString();
                                FeriasIntegrar7Label.Tag = item.Id;
                                FeriasIntegrar7Label.Visible = true;
                                break;
                            case 8:
                                FeriasIntegrar8Label.Text = item.Funcionario + " - " + item.DataInicio.ToShortDateString() + " até " + item.DataFim.ToShortDateString();
                                FeriasIntegrar8Label.Tag = item.Id;
                                FeriasIntegrar8Label.Visible = true;
                                break;
                        }
                        n++;
                    }

                    FeriasIntegrarPanel.BringToFront();
                    FeriasIntegrarPanel.Left = (this.Width / 2) - FeriasIntegrarPanel.Width / 2;
                    FeriasIntegrarPanel.Top = (this.Height / 2) - FeriasIntegrarPanel.Height / 2;

                    FeriasIntegrarPanel.Visible = _listaProgramacaoGestorDP.Count() != 0;
                }
            }
            #endregion

            _feriasEmPesquisa = false;
            FeriasTimer.Start();

            if (Publicas._mensagemSistema != null)
                Publicas._mensagemSistema = "";

            this.Refresh();

        }

        private void aguardandoDesenvolvimentoToolStripMenuItem_Click(object sender, EventArgs e)
        {
            try
            {
                GridRecordRow rec = this.ChamadosDashBoardGrid.Table.DisplayElements[ChamadosDashBoardGrid.TableControl.CurrentCell.RowIndex] as GridRecordRow;

                if (rec != null)
                {
                    Record dr = rec.GetRecord() as Record;

                    if (dr != null)
                    {
                        Publicas._idChamado = (int)dr["IdChamado"];

                        Classes.Chamado _chamadoAux = new ChamadoBO().Consulta(Publicas._idChamado);
                        _chamadoAux.Status = Publicas.StatusChamado.EmDesenvolvimento;
                        _chamadoAux.PrazoDesenvolvimento = 10;

                        if (!new ChamadoBO().Gravar(_chamadoAux))
                        {
                            new Notificacoes.Mensagem("Problemas durante a gravação." + Environment.NewLine + Publicas.mensagemDeErro, Publicas.TipoMensagem.Erro).ShowDialog();
                            return;
                        }
                        
                        Classes.HistoricoDoChamado _histo = new HistoricoDoChamado();
                        _histo.IdChamado = _chamadoAux.IdChamado;
                        _histo.IdUsuario = Publicas._usuario.Id;
                        _histo.Descricao = (DateTime.Now.Hour < 12 ? "Bom dia" :
                                           (DateTime.Now.Hour > 12 && DateTime.Now.Hour < 18 ? "Boa tarde" : "Boa noite")) +
                                           Environment.NewLine +
                                           Environment.NewLine +
                                           "Em desenvolvimento." ;

                        _histo.Status = Publicas.StatusChamado.EmDesenvolvimento;
                        _histo.Usuario = "A";
                        _histo.Prazo = 10;

                        if (!new ChamadoBO().GravarHistorico(_histo, new List<AnexoDoHistorico>(), Publicas._sla))
                        {
                            new Notificacoes.Mensagem("Problemas durante a gravação." + Environment.NewLine + Publicas.mensagemDeErro, Publicas.TipoMensagem.Erro).ShowDialog();
                            return;
                        }

                        Log _log = new Log();
                        _log.IdUsuario = Publicas._usuario.Id;
                        _log.Descricao = "Alterou status para Em Desenvolvimento do chamado " + _chamadoAux.Numero + " pelo atalho ";
                        _log.Tela = "Tramites - Chamado";

                        try
                        {
                            new LogBO().Gravar(_log);
                        }
                        catch { }
                    }

                    if (Publicas._usuario != null && !_chamadosEmPesquisa)
                    {
                        MensagemChamadosDashBoardLabel.Text = "Aguarde... Pesquisando os chamados.";
                        this.Refresh();
                        try
                        {
                            chamadosBackgroundWorker.RunWorkerAsync();
                        }
                        catch { }
                        MensagemChamadosDashBoardLabel.Text = "";
                        this.Refresh();

                    }
                }
            }
            catch { }
        }

        private void aguardandoCronogramaToolStripMenuItem_Click(object sender, EventArgs e)
        {
            try
            {
                GridRecordRow rec = this.ChamadosDashBoardGrid.Table.DisplayElements[ChamadosDashBoardGrid.TableControl.CurrentCell.RowIndex] as GridRecordRow;

                if (rec != null)
                {
                    Record dr = rec.GetRecord() as Record;

                    if (dr != null)
                    {
                        Publicas._idChamado = (int)dr["IdChamado"];

                        Classes.Chamado _chamadoAux = new ChamadoBO().Consulta(Publicas._idChamado);
                        _chamadoAux.Status = Publicas.StatusChamado.AguardandoCronograma;
                        _chamadoAux.PrazoDesenvolvimento = 30;

                        if (!new ChamadoBO().Gravar(_chamadoAux))
                        {
                            new Notificacoes.Mensagem("Problemas durante a gravação." + Environment.NewLine + Publicas.mensagemDeErro, Publicas.TipoMensagem.Erro).ShowDialog();
                            return;
                        }

                        Classes.HistoricoDoChamado _histo = new HistoricoDoChamado();
                        _histo.IdChamado = _chamadoAux.IdChamado;
                        _histo.IdUsuario = Publicas._usuario.Id;
                        _histo.Descricao = (DateTime.Now.Hour < 12 ? "Bom dia" :
                                           (DateTime.Now.Hour > 12 && DateTime.Now.Hour < 18 ? "Boa tarde" : "Boa noite")) +
                                           Environment.NewLine +
                                           Environment.NewLine +
                                           "Na lista aguardando Cronograma.";

                        _histo.Status = Publicas.StatusChamado.AguardandoCronograma;
                        _histo.Usuario = "A";
                        _histo.Prazo = 30;

                        if (!new ChamadoBO().GravarHistorico(_histo, new List<AnexoDoHistorico>(), Publicas._sla))
                        {
                            new Notificacoes.Mensagem("Problemas durante a gravação." + Environment.NewLine + Publicas.mensagemDeErro, Publicas.TipoMensagem.Erro).ShowDialog();
                            return;
                        }

                        Log _log = new Log();
                        _log.IdUsuario = Publicas._usuario.Id;
                        _log.Descricao = "Alterou status para Aguardando cronograma do chamado " + _chamadoAux.Numero + " pelo atalho ";
                        _log.Tela = "Tramites - Chamado";

                        try
                        {
                            new LogBO().Gravar(_log);
                        }
                        catch { }
                    }

                    if (Publicas._usuario != null && !_chamadosEmPesquisa)
                    {
                        MensagemChamadosDashBoardLabel.Text = "Aguarde... Pesquisando os chamados.";
                        this.Refresh();
                        try
                        {
                            chamadosBackgroundWorker.RunWorkerAsync();
                        }
                        catch { }
                        MensagemChamadosDashBoardLabel.Text = "";
                        this.Refresh();

                    }
                }
            }
            catch { }
        }

        private void AutorizadosNumero1Label_Click(object sender, EventArgs e)
        {
            AutorizadosPanel.Visible = false;
            Publicas._idChamado = Convert.ToInt32(((Label)sender).Tag);
            FecharDashBoard();
            MensagemSistema();

            tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaChamado;
            Chamados.Tramites _tela = new Chamados.Tramites();

            if (_tela.Width > this.Width)
                _tela.Size = new Size(this.Width - 5, this.Height - (tituloPanel.Height + panel2.Height + 2));

            _tela.ShowDialog();

            _chamadosEmPesquisa = false;
            NomePadrao();

            if (Publicas._usuario != null && !_chamadosEmPesquisa)
            {
                MensagemChamadosDashBoardLabel.Text = "Aguarde... Pesquisando os chamados.";
                this.Refresh();
                try
                {
                    chamadosBackgroundWorker.RunWorkerAsync();
                }
                catch { }
                MensagemChamadosDashBoardLabel.Text = "";
                this.Refresh();

            }
        }

        private void VerMaisTardeAutorizadoslabel_Click(object sender, EventArgs e)
        {
            AutorizadosPanel.Visible = false;
            _verAutorizadosMaisTarde = true;
            _timeInicioAutorizadosMaisTarde = DateTime.Now;
        }

        private void VerMaisTardeReabertoLabel_Click(object sender, EventArgs e)
        {
            ReabertoPanel.Visible = false;
            _verMaisTardeReaberto = true;
            _timeInicioReabertoMaisTarde = DateTime.Now;
        }

        private void PesquisaRamalTextBox_TextChanged(object sender, EventArgs e)
        {
            RamaisGrid.DataSource = _ramais.Where(w => w.Nome.ToUpper().Contains(PesquisaRamalTextBox.Text.ToUpper())).ToList();
        }

        private void iniciarTemporizadorToolStripMenuItem_Click(object sender, EventArgs e)
        {
            try
            {
                GridRecordRow rec = this.ChamadosDashBoardGrid.Table.DisplayElements[ChamadosDashBoardGrid.TableControl.CurrentCell.RowIndex] as GridRecordRow;

                if (rec != null)
                {
                    Record dr = rec.GetRecord() as Record;
                    if (dr != null)
                    {
                        Publicas._idChamado = (int)dr["IdChamado"];
                        new ChamadoBO().IniciarTemporizador(Publicas._idChamado);

                        foreach (var item in _listaChamados.Where(w => w.IdChamado == Publicas._idChamado))
                        {
                            item.InicioTemporizador = DateTime.Now;
                            item.TemporizadorEmAndamento = true;
                        }

                        ChamadosDashBoardGrid.DataSource = new List<Classes.Chamado>();
                        ChamadosDashBoardGrid.DataSource = _listaChamados.Where(w => w.Exibir)
                                                                          // .OrderBy(o => o.Data)
                                                                         .OrderBy(o => o.Ordem).ToList();
                    }
                }
            }
            catch (Exception)
            { }

            if (Publicas._usuario != null && !_chamadosEmPesquisa)
            {
                MensagemChamadosDashBoardLabel.Text = "Aguarde... Pesquisando os chamados.";
                this.Refresh();

                try
                {
                    chamadosBackgroundWorker.RunWorkerAsync();
                }
                catch { }
                MensagemChamadosDashBoardLabel.Text = "";
                this.Refresh();
            }
            
        }

        private void pausarTemporizadorToolStripMenuItem_Click(object sender, EventArgs e)
        {
            try
            {
                GridRecordRow rec = this.ChamadosDashBoardGrid.Table.DisplayElements[ChamadosDashBoardGrid.TableControl.CurrentCell.RowIndex] as GridRecordRow;

                if (rec != null)
                {
                    Record dr = rec.GetRecord() as Record;
                    if (dr != null)
                    {
                        Publicas._idChamado = (int)dr["IdChamado"];
                        new ChamadoBO().PausarTemporizador((int)dr["IdTemporizador"], (DateTime)dr["InicioTemporizador"]);
                        foreach (var item in _listaChamados.Where(w => w.IdChamado == Publicas._idChamado))
                        {
                            item.FimTemporizador = DateTime.Now;
                            item.TemporizadorEmAndamento = false;
                        }

                        ChamadosDashBoardGrid.DataSource = new List<Classes.Chamado>();
                        ChamadosDashBoardGrid.DataSource = _listaChamados.Where(w => w.Exibir)
                                                                          // .OrderBy(o => o.Data)
                                                                         .OrderBy(o => o.Ordem).ToList();
                    }
                }
            }
            catch (Exception)
            { }

            if (Publicas._usuario != null && !_chamadosEmPesquisa)
            {
                MensagemChamadosDashBoardLabel.Text = "Aguarde... Pesquisando os chamados.";
                this.Refresh();

                try
                {
                    chamadosBackgroundWorker.RunWorkerAsync();
                }
                catch { }
                MensagemChamadosDashBoardLabel.Text = "";
                this.Refresh();
            }
        }


        private void estimarHorasToolStripMenuItem_Click(object sender, EventArgs e)
        {
            // chamar a tela nova
            try
            {
                GridRecordRow rec = this.ChamadosDashBoardGrid.Table.DisplayElements[ChamadosDashBoardGrid.TableControl.CurrentCell.RowIndex] as GridRecordRow;

                if (rec != null)
                {
                    Record dr = rec.GetRecord() as Record;
                    if (dr != null)
                    {
                        Publicas._idChamado = (int)dr["IdChamado"];
                        Publicas._sla = (DateTime)dr["SLA"];
                        Publicas._idTemporizador = (int)dr["IdTemporizador"];
                        FecharDashBoard();
                        MensagemSistema();

                        tituloSistemaLabel.Text = Publicas._nomeDoSistema + " - " + Publicas._nomeSubSistemaChamado;
                        Chamados.EstimarHoras _tela = new Chamados.EstimarHoras();

                        if (_tela.Width > this.Width)
                            _tela.Size = new Size(this.Width - 5, this.Height - (tituloPanel.Height + panel2.Height + 2));

                        _tela.ShowDialog();
                        _chamadosEmPesquisa = false;
                        NomePadrao();

                        if (Publicas._usuario != null && !_chamadosEmPesquisa)
                        {
                            MensagemChamadosDashBoardLabel.Text = "Aguarde... Pesquisando os chamados.";
                            this.Refresh();
                            try
                            {
                                chamadosBackgroundWorker.RunWorkerAsync();
                            }
                            catch { }
                            MensagemChamadosDashBoardLabel.Text = "";
                            this.Refresh();
                        }
                    }
                }
            }
            catch (Exception)
            { }

        }

        private void aguardandoTerceiroToolStripMenuItem_Click(object sender, EventArgs e)
        {
            try
            {
                GridRecordRow rec = this.ChamadosDashBoardGrid.Table.DisplayElements[ChamadosDashBoardGrid.TableControl.CurrentCell.RowIndex] as GridRecordRow;

                if (rec != null)
                {
                    Record dr = rec.GetRecord() as Record;

                    if (dr != null)
                    {
                        Publicas._idChamado = (int)dr["IdChamado"];

                        Classes.Chamado _chamadoAux = new ChamadoBO().Consulta(Publicas._idChamado);
                        _chamadoAux.Status = Publicas.StatusChamado.Adequacao;
                        _chamadoAux.PrazoDesenvolvimento = 15;

                        if (!new ChamadoBO().Gravar(_chamadoAux))
                        {
                            new Notificacoes.Mensagem("Problemas durante a gravação." + Environment.NewLine + Publicas.mensagemDeErro, Publicas.TipoMensagem.Erro).ShowDialog();
                            return;
                        }


                        Log _log = new Log();
                        _log.IdUsuario = Publicas._usuario.Id;
                        _log.Descricao = "Alterou status para Aguardando Terceiros do chamado " + _chamadoAux.Numero + " pelo atalho ";
                        _log.Tela = "Tramites - Chamado";

                        try
                        {
                            new LogBO().Gravar(_log);
                        }
                        catch { }
                    }

                    if (Publicas._usuario != null && !_chamadosEmPesquisa)
                    {
                        MensagemChamadosDashBoardLabel.Text = "Aguarde... Pesquisando os chamados.";
                        this.Refresh();
                        try
                        {
                            chamadosBackgroundWorker.RunWorkerAsync();
                        }
                        catch { }
                        MensagemChamadosDashBoardLabel.Text = "";
                        this.Refresh();

                    }
                }
            }
            catch { }
        }

        private void ordernaçãoDefaultToolStripMenuItem_Click(object sender, EventArgs e)
        {
            try
            {
                ChamadosDashBoardGrid.TableDescriptor.SortedColumns.Clear();
                ChamadosDashBoardGrid.TableDescriptor.SortedColumns.Add("DataOrdenacao", ListSortDirection.Ascending);
                ChamadosDashBoardGrid.TableDescriptor.SortedColumns.Add("SLA", ListSortDirection.Ascending);
                ChamadosDashBoardGrid.TableDescriptor.VisibleColumns.Remove("DataOrdenacao");
            }
            catch { }
        }

        private void StatusChamadosDashBoardComboBox_Enter(object sender, EventArgs e)
        {
            _entrouNaPesquisaChamados = true;
        }

        private void StatusChamadosDashBoardComboBox_Validating(object sender, CancelEventArgs e)
        {
            _entrouNaPesquisaChamados = false;
        }
    }


}
